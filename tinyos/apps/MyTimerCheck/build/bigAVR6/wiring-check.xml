<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="12:MyTimerAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b9bd58319f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b9bd582e220"/></to>
    </wire>
    <wire loc="72:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b9bd582e220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b9bd59de198"/></to>
    </wire>
    <wire loc="19:MyTimerAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b9bd59f05c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9bd59fa420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b9bd59fa420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b9bd59f4e30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9bd582d620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9bd5a00768"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b9bd59de7d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b9bd5740600"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b9bd5740600"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b9bd57ed448"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b9bd59dd1d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9bd5830620"/></to>
    </wire>
    <wire loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9bd5830620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9bd583f600"/></to>
    </wire>
    <wire loc="71:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9bd59dd898"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b9bd582d620"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b9bd5833618"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b9bd59c08f0"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b9bd583e398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9bd59c02c0"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b9bd583fca0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b9bd5838b98"/></to>
    </wire>
    <wire loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b9bd5838b98"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b9bd5842698"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b9bd5845360"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b9bd5839380"/></to>
    </wire>
    <wire loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b9bd5841b08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b9bd5845360"/></to>
    </wire>
    <wire loc="191:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b9bd588aaf0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5975970"/></to>
    </wire>
    <wire loc="165:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b9bd586c658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9bd590a020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9bd590a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5d22480"/></to>
    </wire>
    <wire loc="176:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b9bd587d658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b9bd5919d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b9bd5919d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5d80480"/></to>
    </wire>
    <wire loc="185:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b9bd5882348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b9bd592d5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b9bd592d5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5dee480"/></to>
    </wire>
    <wire loc="143:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b9bd5858348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9bd58e1740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9bd58e1740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5c00480"/></to>
    </wire>
    <wire loc="183:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b9bd5884020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9bd591d2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9bd591d2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5df5480"/></to>
    </wire>
    <wire loc="146:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b9bd5856658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9bd58e9930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9bd58e9930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5c5b3e0"/></to>
    </wire>
    <wire loc="157:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b9bd58677e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9bd58f8740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9bd58f8740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5cc4480"/></to>
    </wire>
    <wire loc="168:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b9bd5877af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9bd5906430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9bd5906430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5d3a480"/></to>
    </wire>
    <wire loc="179:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b9bd587aaf0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9bd5915120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9bd5915120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5d99480"/></to>
    </wire>
    <wire loc="138:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b9bd5850af0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9bd58d6020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9bd58d6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5bf3480"/></to>
    </wire>
    <wire loc="149:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b9bd5861af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b9bd58e6d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b9bd58e6d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5c51480"/></to>
    </wire>
    <wire loc="160:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b9bd5864c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b9bd58f5bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b9bd58f5bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5cbb480"/></to>
    </wire>
    <wire loc="171:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b9bd5873020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b9bd59138c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b9bd59138c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5d31480"/></to>
    </wire>
    <wire loc="188:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b9bd588d7e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9bd592aa50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9bd592aa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5e09480"/></to>
    </wire>
    <wire loc="194:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b9bd58947e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5978020"/></to>
    </wire>
    <wire loc="174:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b9bd587f348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9bd591ba50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9bd591ba50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5d87480"/></to>
    </wire>
    <wire loc="141:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b9bd585a020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9bd58e3430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9bd58e3430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5bea480"/></to>
    </wire>
    <wire loc="152:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b9bd585d1a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9bd58f2120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9bd58f2120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5c66480"/></to>
    </wire>
    <wire loc="192:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b9bd58884d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5970ab0"/></to>
    </wire>
    <wire loc="155:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b9bd58694d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9bd58fa500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9bd58fa500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5cab3e0"/></to>
    </wire>
    <wire loc="166:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b9bd586b7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9bd5909120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9bd5909120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5d1e480"/></to>
    </wire>
    <wire loc="177:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b9bd587c7e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9bd5918e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9bd5918e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5d9f480"/></to>
    </wire>
    <wire loc="186:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b9bd58814d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9bd592c740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9bd592c740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5deb480"/></to>
    </wire>
    <wire loc="144:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b9bd58574d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b9bd58e08c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b9bd58e08c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5bfd480"/></to>
    </wire>
    <wire loc="147:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b9bd58637e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9bd58e8a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9bd58e8a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5c57480"/></to>
    </wire>
    <wire loc="158:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b9bd5866968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b9bd58f78c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b9bd58f78c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5cc1480"/></to>
    </wire>
    <wire loc="169:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b9bd5876c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b9bd59055b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b9bd59055b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5d37480"/></to>
    </wire>
    <wire loc="180:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b9bd5879c78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b9bd59142a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b9bd59142a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5d96480"/></to>
    </wire>
    <wire loc="139:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b9bd584fc78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9bd58d5120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9bd58d5120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5bf0480"/></to>
    </wire>
    <wire loc="150:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b9bd5860c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9bd58e5e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9bd58e5e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5c6c480"/></to>
    </wire>
    <wire loc="161:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b9bd5871e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9bd5903d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9bd5903d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5cd8480"/></to>
    </wire>
    <wire loc="189:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b9bd588b968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b9bd5929bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b9bd5929bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5e06480"/></to>
    </wire>
    <wire loc="164:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b9bd586d1a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9bd58fce40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9bd58fce40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5d253e0"/></to>
    </wire>
    <wire loc="175:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b9bd587e4d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9bd591abd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9bd591abd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5d83480"/></to>
    </wire>
    <wire loc="184:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b9bd58831a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9bd591c430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9bd591c430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5df2480"/></to>
    </wire>
    <wire loc="195:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b9bd5893968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5985180"/></to>
    </wire>
    <wire loc="142:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b9bd58591a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b9bd58e25b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b9bd58e25b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5c03480"/></to>
    </wire>
    <wire loc="153:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b9bd586a348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b9bd58f12a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b9bd58f12a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5c63480"/></to>
    </wire>
    <wire loc="182:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b9bd5886e00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9bd591e1e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9bd591e1e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5df83e0"/></to>
    </wire>
    <wire loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b9bd5868658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9bd58f95b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9bd58f95b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5cc7480"/></to>
    </wire>
    <wire loc="167:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b9bd5878968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b9bd59072a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b9bd59072a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5d1b480"/></to>
    </wire>
    <wire loc="178:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b9bd587b968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b9bd5916020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b9bd5916020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5d9c480"/></to>
    </wire>
    <wire loc="187:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b9bd5880658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b9bd592b8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b9bd592b8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5e0c480"/></to>
    </wire>
    <wire loc="137:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b9bd5843878"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9bd58d8dc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9bd58d8dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5bf64e0"/></to>
    </wire>
    <wire loc="148:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b9bd5862968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9bd58e7bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9bd58e7bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5c54480"/></to>
    </wire>
    <wire loc="159:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b9bd5865af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9bd58f6a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9bd58f6a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5cbe480"/></to>
    </wire>
    <wire loc="170:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b9bd5875e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9bd5904740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9bd5904740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5d34480"/></to>
    </wire>
    <wire loc="193:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b9bd5887658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd597ec38"/></to>
    </wire>
    <wire loc="173:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b9bd58721a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9bd590c930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9bd590c930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5d8a3e0"/></to>
    </wire>
    <wire loc="162:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b9bd586e020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b9bd5902e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b9bd5902e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5cd5480"/></to>
    </wire>
    <wire loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b9bd585ce00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b9bd58d42a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b9bd58d42a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5bed480"/></to>
    </wire>
    <wire loc="151:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b9bd585e020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b9bd58f3020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b9bd58f3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9bd5c69480"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b9bd57391c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9bd57f82b0"/></to>
    </wire>
    <wire loc="55:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b9bd57f5758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b9bd580c660"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b9bd58122b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b9bd5abfdb0"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b9bd59f4e30"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b9bd5a104a0"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b9bd5a104a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9bd5b92020"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9bd5a00768"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9bd5a18020"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b9bd5a08980"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b9bd5b9fc38"/></to>
    </wire>
    <wire loc="43:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9bd5a18020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9bd5b23cb8"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b9bd5ba7208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9bd5b43ab0"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9bd5b58c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b9bd5a25838"/></to>
    </wire>
    <wire loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b9bd5a25838"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9bd5b224f8"/></to>
    </wire>
    <wire loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9bd5bb1e48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b9bd5a1ee40"/></to>
    </wire>
    <wire loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b9bd5a1ee40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9bd5b1e738"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b9bd5b1e738"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9bd5ebda90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b9bd5b23cb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9bd5ec10e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9bd5b224f8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9bd5ec1888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b9bd5ebbb98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9bd5aabe00"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9bd5aabe00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9bd5ab1c60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b9bd5edfb60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b9bd5aa3020"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b9bd5aa3020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b9bd5aacc80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2b9bd5edeb58"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9bd5aa2020"/></to>
    </wire>
    <wire loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b9bd5aa2020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9bd5ac3c90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b9bd5edbbb0"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b9bd5ab6218"/></to>
    </wire>
    <wire loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b9bd5ab6218"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b9bd5abe510"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2b9bd5b54cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9bd57391c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b9bd5ba2478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9bd57391c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc" safe="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc" safe="">
      <documentation loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MyTimerC" loc="1:MyTimerC.nc">
      <module/>
    </component>
    <component qname="MyTimerAppC.Timer0" loc="44(MyTimerAppC.Timer0):/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="33:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9bd57b2530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9bd57b2888"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b9bd5a1cc68"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0SyncC" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0SyncP" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in SYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in SYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in SYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;--> CHANGED TO SYNC-Mode(CPL_CLK)&#9;hglanzer&#10;--> AS0=0 in ASSR&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9bd57b2530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9bd57b2888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9bd57b2530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9bd57b2888"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9bd57b2530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9bd57b2888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b9bd5890ba0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b9bd589a020" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b9bd589a368" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b9bd589e610" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b9bd589e978" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b9bd589ece0" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b9bd58ab060" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b9bd5932020" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b9bd5932388" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b9bd59326f0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b9bd5932a20" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncC" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc" abstract="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b9bd5a1cc68" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b9bd5a1cc68"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b9bd5a2f020" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncP" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b9bd5a3a410" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b9bd5a3a410"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b9bd5a3a700" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9bd5a19c40" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9bd5a19c40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9bd5b52cd0" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9bd5b52cd0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b9bd5b4e020" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9bd5b9d510" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9bd5b9d510"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b9bd582d620" loc="58:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b9bd582d620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9bd582d970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b9bd582e220" loc="57:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b9bd582e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b9bd582e570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b9bd5839380" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b9bd5839380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9bd58396d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9bd5830620" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9bd5830620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9bd5830970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b9bd5833618" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b9bd5833618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b9bd5833968"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b9bd5833af0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b9bd5833c78"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b9bd5833e00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b9bd5839020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b9bd583fca0" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b9bd583fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9bd583e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9bd583f600" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9bd583f600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9bd583f950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b9bd583e398" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b9bd583e398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9bd583e6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b9bd5845360" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b9bd5845360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9bd58456b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b9bd5838b98" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b9bd5838b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9bd5845020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b9bd5841b08" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b9bd5841b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9bd5841e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b9bd58498d8" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b9bd58498d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5849c28"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5849db0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5841020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58411a8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5841330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58414b8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5841640"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58417c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b9bd5842698" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b9bd5842698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9bd58429e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b9bd588aaf0" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b9bd588aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58895e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5889770"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58898f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5889a80"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5889c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5889d90"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5888020"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b9bd586c658" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b9bd586c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd586c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd586cb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd586ccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd586ce40"/>
        <function-ref name="get" scoped="" ref="0x2b9bd586b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd586b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd586b330"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd586b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b9bd587d658" loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b9bd587d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd587d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd587db30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd587dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd587de40"/>
        <function-ref name="get" scoped="" ref="0x2b9bd587c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd587c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd587c330"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd587c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b9bd5882348" loc="94:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b9bd5882348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5882698"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5882820"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58829a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5882b30"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5882cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5882e40"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5881020"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58811a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b9bd5858348" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b9bd5858348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5858698"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5858820"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58589a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5858b30"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5858cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5858e40"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5857020"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58571a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b9bd5884020" loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b9bd5884020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5884370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58844f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5884680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5884808"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5884990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5884b18"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5884ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5884e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b9bd5856658" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b9bd5856658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58569a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5856b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5856cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5856e40"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5863020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58631a8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5863330"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58634b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b9bd58677e0" loc="66:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b9bd58677e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5867b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5867cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5867e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5866020"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58661a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5866330"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58664b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5866640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b9bd5877af0" loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b9bd5877af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5877e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5876020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58761a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5876330"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58764b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5876640"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58767c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5876950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b9bd587aaf0" loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b9bd587aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd587ae40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5879020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58791a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5879330"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58794b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5879640"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58797c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5879950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b9bd5850af0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b9bd5850af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5850e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd584f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd584f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd584f330"/>
        <function-ref name="get" scoped="" ref="0x2b9bd584f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd584f640"/>
        <function-ref name="set" scoped="" ref="0x2b9bd584f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd584f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b9bd5861af0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b9bd5861af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5861e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5860020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58601a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5860330"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58604b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5860640"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58607c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5860950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b9bd5864c78" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b9bd5864c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5871020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58711a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5871330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58714b8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5871640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58717c8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5871950"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5871ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b9bd5873020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b9bd5873020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5873370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58734f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5873680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5873808"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5873990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5873b18"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5873ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5873e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b9bd588d7e0" loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b9bd588d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd588db30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd588dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd588de40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd588b020"/>
        <function-ref name="get" scoped="" ref="0x2b9bd588b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd588b330"/>
        <function-ref name="set" scoped="" ref="0x2b9bd588b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd588b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b9bd58947e0" loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b9bd58947e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5894b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5894cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5894e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5893020"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58931a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5893330"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58934b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5893640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b9bd587f348" loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b9bd587f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd587f698"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd587f820"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd587f9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd587fb30"/>
        <function-ref name="get" scoped="" ref="0x2b9bd587fcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd587fe40"/>
        <function-ref name="set" scoped="" ref="0x2b9bd587e020"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd587e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b9bd585a020" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b9bd585a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd585a370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd585a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd585a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd585a808"/>
        <function-ref name="get" scoped="" ref="0x2b9bd585a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd585ab18"/>
        <function-ref name="set" scoped="" ref="0x2b9bd585aca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd585ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b9bd585d1a0" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b9bd585d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd585d4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd585d678"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd585d800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd585d988"/>
        <function-ref name="get" scoped="" ref="0x2b9bd585db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd585dc98"/>
        <function-ref name="set" scoped="" ref="0x2b9bd585de20"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd586a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b9bd58884d0" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b9bd58884d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5888820"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58889a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5888b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5888cb8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5888e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5887020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58871a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5887330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b9bd58694d0" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b9bd58694d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5869820"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58699a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5869b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5869cb8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5869e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5868020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58681a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5868330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b9bd586b7e0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b9bd586b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd586bb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd586bcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd586be40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5878020"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58781a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5878330"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58784b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5878640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b9bd587c7e0" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b9bd587c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd587cb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd587ccb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd587ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd587b020"/>
        <function-ref name="get" scoped="" ref="0x2b9bd587b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd587b330"/>
        <function-ref name="set" scoped="" ref="0x2b9bd587b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd587b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b9bd58814d0" loc="95:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b9bd58814d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5881820"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58819a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5881b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5881cb8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5881e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5880020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58801a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5880330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b9bd58574d0" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b9bd58574d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5857820"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58579a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5857b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5857cb8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5857e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5856020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58561a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5856330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b9bd58637e0" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b9bd58637e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5863b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5863cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5863e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5862020"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58621a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5862330"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58624b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5862640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b9bd5866968" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b9bd5866968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5866cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5866e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5865020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58651a8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5865330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58654b8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5865640"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58657c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b9bd5876c78" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b9bd5876c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5875020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58751a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5875330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58754b8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5875640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58757c8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5875950"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5875ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b9bd5879c78" loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b9bd5879c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5886020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58861a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5886330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58864b8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5886640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58867c8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5886950"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5886ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b9bd584fc78" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b9bd584fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd585c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd585c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd585c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd585c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd585c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd585c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd585c950"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd585cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b9bd5860c78" loc="59:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b9bd5860c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd585f0f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd585f278"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd585f400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd585f588"/>
        <function-ref name="get" scoped="" ref="0x2b9bd585f710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd585f898"/>
        <function-ref name="set" scoped="" ref="0x2b9bd585fa20"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd585fba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b9bd5871e00" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b9bd5871e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58701a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5870330"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58704b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5870640"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58707c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5870950"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5870ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5870c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b9bd588b968" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b9bd588b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd588bcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd588be40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd588a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd588a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd588a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd588a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd588a640"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd588a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b9bd586d1a0" loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b9bd586d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd586d6f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd586d878"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd586da00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd586db88"/>
        <function-ref name="get" scoped="" ref="0x2b9bd586dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd586c020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd586c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd586c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b9bd587e4d0" loc="84:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b9bd587e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd587e820"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd587e9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd587eb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd587ecb8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd587ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd587d020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd587d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd587d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b9bd58831a0" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b9bd58831a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58834f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5883678"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5883800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5883988"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5883b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5883c98"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5883e20"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5882020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b9bd5893968" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b9bd5893968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5893cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5893e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5892020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58921a8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5892330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58924b8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5892640"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58927c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b9bd58591a0" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b9bd58591a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58594f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5859678"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5859800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5859988"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5859b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5859c98"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5859e20"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5858020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b9bd586a348" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b9bd586a348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd586a698"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd586a820"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd586a9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd586ab30"/>
        <function-ref name="get" scoped="" ref="0x2b9bd586acb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd586ae40"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5869020"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58691a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b9bd5886e00" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b9bd5886e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58851a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5885330"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58854b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5885640"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58857c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5885950"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5885ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5885c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b9bd5868658" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b9bd5868658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58689a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5868b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5868cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5868e40"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5867020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58671a8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5867330"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58674b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b9bd5878968" loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b9bd5878968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5878cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5878e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5877020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58771a8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5877330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58774b8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5877640"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58777c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b9bd587b968" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b9bd587b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd587bcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd587be40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd587a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd587a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd587a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd587a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd587a640"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd587a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b9bd5880658" loc="96:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b9bd5880658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58809a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5880b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5880cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5880e40"/>
        <function-ref name="get" scoped="" ref="0x2b9bd588d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd588d1a8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd588d330"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd588d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b9bd5843878" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b9bd5843878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5843bc8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5843d50"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5850020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58501a8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5850330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58504b8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5850640"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58507c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b9bd5862968" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b9bd5862968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5862cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5862e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5861020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58611a8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5861330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58614b8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5861640"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58617c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b9bd5865af0" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b9bd5865af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5865e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5864020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58641a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5864330"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58644b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5864640"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58647c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5864950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b9bd5875e00" loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b9bd5875e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58741a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5874330"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58744b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5874640"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58747c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5874950"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5874ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5874c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b9bd5887658" loc="102:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b9bd5887658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58879a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5887b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5887cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5887e40"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5894020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58941a8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5894330"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58944b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b9bd58721a0" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b9bd58721a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58724f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5872678"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5872800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5872988"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5872b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5872c98"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5872e20"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd587f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b9bd586e020" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b9bd586e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd586e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd586e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd586e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd586e808"/>
        <function-ref name="get" scoped="" ref="0x2b9bd586e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd586eb18"/>
        <function-ref name="set" scoped="" ref="0x2b9bd586eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd586ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b9bd585ce00" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b9bd585ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd585b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd585b330"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd585b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd585b640"/>
        <function-ref name="get" scoped="" ref="0x2b9bd585b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd585b950"/>
        <function-ref name="set" scoped="" ref="0x2b9bd585bad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd585bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b9bd585e020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b9bd585e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd585e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd585e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd585e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd585e808"/>
        <function-ref name="get" scoped="" ref="0x2b9bd585e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd585eb18"/>
        <function-ref name="set" scoped="" ref="0x2b9bd585eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd585ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9bd58d5120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9bd58d5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58d5470"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58d55f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58d5780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58d5908"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58d5a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58d5c18"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58d5da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b9bd58e25b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b9bd58e25b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58e2908"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58e2a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58e2c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58e2da0"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58e1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58e11a8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58e1330"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58e14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9bd58d8dc0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9bd58d8dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58d7170"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58d72f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58d7480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58d7608"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58d7790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58d7918"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58d7aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58d7c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b9bd58d42a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b9bd58d42a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58d45f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58d4780"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58d4908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58d4a90"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58d4c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58d4da0"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58e3020"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58e31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9bd58e1740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9bd58e1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58e1a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58e1c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58e1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58e0020"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58e01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58e0330"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58e04b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58e0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9bd58d6020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9bd58d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58d6370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58d64f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58d6680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58d6808"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58d6990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58d6b18"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58d6ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58d6e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9bd58e3430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9bd58e3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58e3780"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58e3908"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58e3a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58e3c18"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58e3da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58e2020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58e21a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58e2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b9bd58e08c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b9bd58e08c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58e0c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58e0da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58df020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58df1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58df330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58df4b8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58df640"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58df7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5bf64e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5bf64e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5bf6830"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5bf69b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5bf6b40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5bf6cc8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5bf6e50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5bf5020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5bf51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5bf5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5bf3480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5bf3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5bf37d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5bf3958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5bf3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5bf3c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5bf3df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5bf2020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5bf21a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5bf2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5bf0480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5bf0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5bf07d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5bf0958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5bf0ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5bf0c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5bf0df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5bef020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5bef1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5bef330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5bed480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5bed480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5bed7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5bed958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5bedae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5bedc68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5beddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5bec020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5bec1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5bec330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5bea480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5bea480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5bea7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5bea958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5beaae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5beac68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5beadf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5c05020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5c051a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5c05330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5c03480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5c03480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5c037d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5c03958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5c03ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5c03c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5c03df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5c02020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5c021a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5c02330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5c00480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5c00480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5c007d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5c00958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5c00ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5c00c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5c00df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5bff020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5bff1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5bff330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5bfd480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5bfd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5bfd7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5bfd958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5bfdae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5bfdc68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5bfddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5bfc020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5bfc1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5bfc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9bd58e7bd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9bd58e7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58e6020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58e61a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58e6330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58e64b8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58e6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58e67c8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58e6950"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58e6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b9bd58f3020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b9bd58f3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58f3370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58f34f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58f3680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58f3808"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58f3990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58f3b18"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58f3ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58f3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9bd58e9930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9bd58e9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58e9c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58e9e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58e8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58e81a8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58e8330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58e84b8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58e8640"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58e87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b9bd58e6d60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b9bd58e6d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58e50d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58e5260"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58e53e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58e5570"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58e56f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58e5880"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58e5a08"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58e5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9bd58f2120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9bd58f2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58f2470"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58f25f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58f2780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58f2908"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58f2a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58f2c18"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58f2da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9bd58e8a50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9bd58e8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58e8da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58e7020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58e71a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58e7330"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58e74b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58e7640"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58e77c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58e7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9bd58e5e18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9bd58e5e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58e41a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58e4330"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58e44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58e4640"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58e47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58e4950"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58e4ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58e4c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b9bd58f12a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b9bd58f12a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58f15f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58f1780"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58f1908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58f1a90"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58f1c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58f1da0"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58f0020"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58f01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5c5b3e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5c5b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5c5b730"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5c5b8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5c5ba40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5c5bbc8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5c5bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5c59020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5c591a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5c59330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5c57480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5c57480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5c577d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5c57958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5c57ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5c57c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5c57df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5c56020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5c561a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5c56330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5c54480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5c54480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5c547d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5c54958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5c54ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5c54c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5c54df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5c53020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5c531a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5c53330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5c51480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5c51480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5c517d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5c51958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5c51ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5c51c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5c51df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5c50020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5c501a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5c50330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5c6c480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5c6c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5c6c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5c6c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5c6cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5c6cc68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5c6cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5c6b020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5c6b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5c6b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5c69480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5c69480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5c697d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5c69958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5c69ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5c69c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5c69df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5c68020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5c681a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5c68330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5c66480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5c66480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5c667d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5c66958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5c66ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5c66c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5c66df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5c65020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5c651a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5c65330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5c63480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5c63480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5c637d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5c63958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5c63ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5c63c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5c63df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5c62020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5c621a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5c62330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9bd58f8740" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9bd58f8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58f8a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58f8c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58f8da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58f7020"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58f71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58f7330"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58f74b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58f7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b9bd58f5bd8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b9bd58f5bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5903020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd59031a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5903330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd59034b8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5903640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd59037c8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5903950"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5903ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9bd58fa500" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9bd58fa500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58fa850"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58fa9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58fab60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58face8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58fae70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58f9020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58f91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58f9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b9bd58f78c8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b9bd58f78c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58f7c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58f7da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58f6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58f61a8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58f6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58f64b8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58f6640"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58f67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9bd5903d60" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9bd5903d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd59020d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5902260"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd59023e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5902570"/>
        <function-ref name="get" scoped="" ref="0x2b9bd59026f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5902880"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5902a08"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5902b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9bd58f95b8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9bd58f95b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58f9908"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58f9a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58f9c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58f9da0"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58f8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58f81a8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58f8330"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58f84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9bd58f6a50" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9bd58f6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd58f6da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd58f5020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd58f51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd58f5330"/>
        <function-ref name="get" scoped="" ref="0x2b9bd58f54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd58f5640"/>
        <function-ref name="set" scoped="" ref="0x2b9bd58f57c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd58f5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b9bd5902e18" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b9bd5902e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd59011a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5901330"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd59014b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5901640"/>
        <function-ref name="get" scoped="" ref="0x2b9bd59017c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5901950"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5901ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5901c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5cab3e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5cab3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5cab730"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5cab8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5caba40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5cabbc8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5cabd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5cc9020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5cc91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5cc9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5cc7480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5cc7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5cc77d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5cc7958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5cc7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5cc7c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5cc7df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5cc6020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5cc61a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5cc6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5cc4480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5cc4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5cc47d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5cc4958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5cc4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5cc4c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5cc4df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5cc3020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5cc31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5cc3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5cc1480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5cc1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5cc17d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5cc1958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5cc1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5cc1c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5cc1df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5cc0020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5cc01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5cc0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5cbe480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5cbe480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5cbe7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5cbe958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5cbeae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5cbec68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5cbedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5cbd020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5cbd1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5cbd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5cbb480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5cbb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5cbb7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5cbb958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5cbbae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5cbbc68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5cbbdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5cba020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5cba1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5cba330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5cd8480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5cd8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5cd87d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5cd8958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5cd8ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5cd8c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5cd8df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5cd7020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5cd71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5cd7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5cd5480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5cd5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5cd57d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5cd5958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5cd5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5cd5c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5cd5df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5cd4020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5cd41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5cd4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9bd5909120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9bd5909120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5909470"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd59095f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5909780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5909908"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5909a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5909c18"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5909da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5907020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b9bd59055b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b9bd59055b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5905908"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5905a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5905c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5905da0"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5904020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd59041a8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5904330"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd59044b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9bd58fce40" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9bd58fce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd590b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd590b348"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd590b4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd590b658"/>
        <function-ref name="get" scoped="" ref="0x2b9bd590b7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd590b968"/>
        <function-ref name="set" scoped="" ref="0x2b9bd590baf0"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd590bc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b9bd59072a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b9bd59072a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd59075f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5907780"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5907908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5907a90"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5907c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5907da0"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5906020"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd59061a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9bd5904740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9bd5904740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5904a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5904c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5904da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5913020"/>
        <function-ref name="get" scoped="" ref="0x2b9bd59131a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5913330"/>
        <function-ref name="set" scoped="" ref="0x2b9bd59134b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5913640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9bd590a020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9bd590a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd590a370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd590a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd590a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd590a808"/>
        <function-ref name="get" scoped="" ref="0x2b9bd590a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd590ab18"/>
        <function-ref name="set" scoped="" ref="0x2b9bd590aca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd590ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9bd5906430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9bd5906430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5906780"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5906908"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5906a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5906c18"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5906da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5905020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd59051a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5905330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b9bd59138c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b9bd59138c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5913c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5913da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5912020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd59121a8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5912330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd59124b8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5912640"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd59127c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5d253e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5d253e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5d25730"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5d258b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5d25a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5d25bc8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5d25d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5d24020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5d241a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5d24330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5d22480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5d22480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5d227d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5d22958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5d22ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5d22c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5d22df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5d20020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5d201a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5d20330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5d1e480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5d1e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5d1e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5d1e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5d1eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5d1ec68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5d1edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5d1d020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5d1d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5d1d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5d1b480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5d1b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5d1b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5d1b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5d1bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5d1bc68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5d1bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5d1a020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5d1a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5d1a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5d3a480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5d3a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5d3a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5d3a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5d3aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5d3ac68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5d3adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5d39020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5d391a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5d39330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5d37480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5d37480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5d377d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5d37958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5d37ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5d37c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5d37df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5d36020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5d361a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5d36330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5d34480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5d34480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5d347d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5d34958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5d34ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5d34c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5d34df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5d33020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5d331a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5d33330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5d31480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5d31480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5d317d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5d31958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5d31ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5d31c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5d31df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5d30020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5d301a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5d30330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9bd591abd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9bd591abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5919020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd59191a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5919330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd59194b8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5919640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd59197c8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5919950"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5919ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b9bd5916020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b9bd5916020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5916370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd59164f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5916680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5916808"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5916990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5916b18"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5916ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5916e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9bd590c930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9bd590c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd590cc80"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd590ce08"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd591b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd591b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd591b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd591b4b8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd591b640"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd591b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b9bd5919d60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b9bd5919d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd59180d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5918260"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd59183e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5918570"/>
        <function-ref name="get" scoped="" ref="0x2b9bd59186f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5918880"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5918a08"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5918b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9bd5915120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9bd5915120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5915470"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd59155f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5915780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5915908"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5915a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5915c18"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5915da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5914020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9bd591ba50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9bd591ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd591bda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd591a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd591a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd591a330"/>
        <function-ref name="get" scoped="" ref="0x2b9bd591a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd591a640"/>
        <function-ref name="set" scoped="" ref="0x2b9bd591a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd591a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9bd5918e18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9bd5918e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd59171a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5917330"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd59174b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5917640"/>
        <function-ref name="get" scoped="" ref="0x2b9bd59177c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5917950"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5917ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5917c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b9bd59142a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b9bd59142a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd59145f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5914780"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5914908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5914a90"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5914c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5914da0"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5924020"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd59241a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5d8a3e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5d8a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5d8a730"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5d8a8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5d8aa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5d8abc8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5d8ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5d89020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5d891a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5d89330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5d87480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5d87480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5d877d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5d87958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5d87ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5d87c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5d87df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5d85020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5d851a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5d85330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5d83480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5d83480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5d837d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5d83958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5d83ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5d83c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5d83df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5d82020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5d821a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5d82330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5d80480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5d80480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5d807d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5d80958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5d80ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5d80c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5d80df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5da1020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5da11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5da1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5d9f480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5d9f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5d9f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5d9f958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5d9fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5d9fc68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5d9fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5d9e020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5d9e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5d9e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5d9c480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5d9c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5d9c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5d9c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5d9cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5d9cc68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5d9cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5d9b020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5d9b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5d9b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5d99480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5d99480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5d997d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5d99958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5d99ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5d99c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5d99df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5d98020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5d981a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5d98330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5d96480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5d96480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5d967d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5d96958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5d96ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5d96c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5d96df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5d95020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5d951a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5d95330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9bd591c430" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9bd591c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd591c780"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd591c908"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd591ca90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd591cc18"/>
        <function-ref name="get" scoped="" ref="0x2b9bd591cda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd592d020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd592d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd592d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b9bd592b8c8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b9bd592b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd592bc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd592bda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd592a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd592a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd592a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd592a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd592a640"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd592a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9bd591e1e8" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9bd591e1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd591e538"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd591e6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd591e848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd591e9d0"/>
        <function-ref name="get" scoped="" ref="0x2b9bd591eb58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd591ece0"/>
        <function-ref name="set" scoped="" ref="0x2b9bd591ee68"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd591d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b9bd592d5b8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b9bd592d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd592d908"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd592da90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd592dc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd592dda0"/>
        <function-ref name="get" scoped="" ref="0x2b9bd592c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd592c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd592c330"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd592c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9bd592aa50" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9bd592aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd592ada0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5929020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd59291a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5929330"/>
        <function-ref name="get" scoped="" ref="0x2b9bd59294b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5929640"/>
        <function-ref name="set" scoped="" ref="0x2b9bd59297c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5929950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9bd591d2a8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9bd591d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd591d5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd591d780"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd591d908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd591da90"/>
        <function-ref name="get" scoped="" ref="0x2b9bd591dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd591dda0"/>
        <function-ref name="set" scoped="" ref="0x2b9bd591c020"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd591c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9bd592c740" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9bd592c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd592ca90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd592cc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd592cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd592b020"/>
        <function-ref name="get" scoped="" ref="0x2b9bd592b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd592b330"/>
        <function-ref name="set" scoped="" ref="0x2b9bd592b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd592b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b9bd5929bd8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b9bd5929bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5927020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd59271a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5927330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd59274b8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5927640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd59277c8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5927950"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5927ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5df83e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5df83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5df8730"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5df88b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5df8a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5df8bc8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5df8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5df7020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5df71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5df7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5df5480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5df5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5df57d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5df5958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5df5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5df5c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5df5df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5df4020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5df41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5df4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5df2480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5df2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5df27d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5df2958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5df2ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5df2c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5df2df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5df0020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5df01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5df0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5dee480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5dee480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5dee7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5dee958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5deeae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5deec68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5deedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5ded020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5ded1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5ded330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5deb480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5deb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5deb7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5deb958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5debae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5debc68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5debdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5dea020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5dea1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5dea330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5e0c480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5e0c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5e0c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5e0c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5e0cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5e0cc68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5e0cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5e0b020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5e0b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5e0b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5e09480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5e09480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5e097d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5e09958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5e09ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5e09c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5e09df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5e08020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5e081a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5e08330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5e06480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5e06480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5e067d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5e06958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5e06ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5e06c68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5e06df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5e05020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5e051a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5e05330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5933ac0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5933ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5933e10"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5941020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd59411a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5941330"/>
        <function-ref name="get" scoped="" ref="0x2b9bd59414b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5941640"/>
        <function-ref name="set" scoped="" ref="0x2b9bd59417c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5941950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5950db8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5950db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd594f170"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd594f2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd594f480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd594f608"/>
        <function-ref name="get" scoped="" ref="0x2b9bd594f790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd594f918"/>
        <function-ref name="set" scoped="" ref="0x2b9bd594faa0"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd594fc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd594a3e0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd594a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd594a730"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd594a8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd594aa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd594abc8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd594ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5949020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd59491a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5949330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd59577e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd59577e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5957b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5957cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5957e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5956020"/>
        <function-ref name="get" scoped="" ref="0x2b9bd59561a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5956330"/>
        <function-ref name="set" scoped="" ref="0x2b9bd59564b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5956640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5953c38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5953c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5952020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd59521a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5952330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd59524b8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5952640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd59527c8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5952950"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5952ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd595f020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd595f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd595f370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd595f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd595f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd595f808"/>
        <function-ref name="get" scoped="" ref="0x2b9bd595f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd595fb18"/>
        <function-ref name="set" scoped="" ref="0x2b9bd595fca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd595fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd596c480" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd596c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd596c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd596c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd596cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd596cc68"/>
        <function-ref name="get" scoped="" ref="0x2b9bd596cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd596b020"/>
        <function-ref name="set" scoped="" ref="0x2b9bd596b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd596b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd59687e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd59687e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5968b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5968cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5968e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5967020"/>
        <function-ref name="get" scoped="" ref="0x2b9bd59671a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5967330"/>
        <function-ref name="set" scoped="" ref="0x2b9bd59674b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5967640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5975970" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5975970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5975cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5975e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5974020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd59741a8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5974330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd59744b8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5974640"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd59747c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5970ab0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5970ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5970e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd596f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd596f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd596f330"/>
        <function-ref name="get" scoped="" ref="0x2b9bd596f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd596f640"/>
        <function-ref name="set" scoped="" ref="0x2b9bd596f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd596f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd597ec38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd597ec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd597d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd597d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd597d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd597d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd597d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd597d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b9bd597d950"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd597dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5978020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5978020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd5978370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd59784f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd5978680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5978808"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5978990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5978b18"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5978ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5978e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9bd5985180" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9bd5985180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9bd59854d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9bd5985658"/>
        <function-ref name="toggle" scoped="" ref="0x2b9bd59857e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9bd5985968"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5985af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9bd5985c78"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5985e00"/>
        <function-ref name="clr" scoped="" ref="0x2b9bd5984020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9bd59c02c0" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9bd59c02c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b9bd573b128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b9bd573b128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9bd59c0610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b9bd59c08f0" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b9bd59c08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b9bd59c0c40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b9bd59c0dc8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b9bd59bf020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b9bd59bf1a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b9bd59bf330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b9bd59dd898" loc="60:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b9bd59dd898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9bd59ddbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b9bd59de198" loc="57:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b9bd59de198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b9bd59de4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b9bd59dd1d0" loc="59:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b9bd59dd1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9bd59dd520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b9bd59de7d0" loc="58:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b9bd59de7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9bd59deb20"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b9bd59deca8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b9bd59dee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b9bd57391c8" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b9bd57391c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9bd5739518"/>
        <function-ref name="runTask" scoped="" ref="0x2b9bd57396a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b9bd5740600" loc="47:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b9bd5740600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9bd5740950"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b9bd5740ad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b9bd5740c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b9bd57f82b0" loc="56:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b9bd57f82b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9bd57f8600"/>
        <function-ref name="runTask" scoped="" ref="0x2b9bd57f8788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b9bd57f5758" loc="57:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b9bd57f5758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b9bd57f5aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b9bd57ed448" loc="55:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b9bd57ed448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9bd57ed798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b9bd57ed920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b9bd57edaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b9bd58122b0" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b9bd58122b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b9bd5812600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b9bd580c660" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b9bd580c660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b9bd580c9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b9bd5815a80" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b9bd5815a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b9bd5815dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b9bd59f05c8" loc="10:MyTimerC.nc">
      <component-ref qname="MyTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b9bd59f05c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9bd57b2530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9bd57b2888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9bd59ee8f0"/>
        <function-ref name="fired" scoped="" ref="0x2b9bd59ef020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9bd59efd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9bd59ef8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9bd59ed1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b9bd59eed40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9bd59ef470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9bd59e5158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9bd59ee320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9bd59e55f8"/>
        <function-ref name="stop" scoped="" ref="0x2b9bd59e5a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b9bd58319f0" loc="3:MyTimerC.nc">
      <component-ref qname="MyTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b9bd58319f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b9bd5831d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9bd59fa420" loc="45:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="MyTimerAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9bd59fa420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9bd57b2530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9bd57b2888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9bd5bc26c8"/>
        <function-ref name="fired" scoped="" ref="0x2b9bd5ba9db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9bd5ba8ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9bd5ba8688"/>
        <function-ref name="getdt" scoped="" ref="0x2b9bd5bc1020"/>
        <function-ref name="gett0" scoped="" ref="0x2b9bd5bc2b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9bd5ba8238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9bd5ba9020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9bd5bc20f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9bd5ba94c0"/>
        <function-ref name="stop" scoped="" ref="0x2b9bd5ba9960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b9bd59f4e30" loc="49:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b9bd59f4e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9bd57b2530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9bd57b2888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9bd5a010c0"/>
        <function-ref name="fired" scoped="" ref="0x2b9bd5a04798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9bd5a034d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9bd5a03088"/>
        <function-ref name="getdt" scoped="" ref="0x2b9bd5a01960"/>
        <function-ref name="gett0" scoped="" ref="0x2b9bd5a01510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9bd5a04be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9bd5a059e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9bd5a03aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9bd5a05e80"/>
        <function-ref name="stop" scoped="" ref="0x2b9bd5a04348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b9bd5a104a0" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b9bd5a104a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9bd57b2530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9bd57b2888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9bd5a0d6c8"/>
        <function-ref name="fired" scoped="" ref="0x2b9bd5a0fdb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9bd5a0ead8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9bd5a0e688"/>
        <function-ref name="getdt" scoped="" ref="0x2b9bd5a0c020"/>
        <function-ref name="gett0" scoped="" ref="0x2b9bd5a0db18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9bd5a0e238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9bd5a0f020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9bd5a0d0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9bd5a0f4c0"/>
        <function-ref name="stop" scoped="" ref="0x2b9bd5a0f960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b9bd5a08980" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b9bd5a08980"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9bd57b2530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9bd57b2888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9bd5a0a560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9bd5a00768" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9bd5a00768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9bd5a00ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b9bd5a1ee40" loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b9bd5a1ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9bd57b2530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9bd57b2888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9bd5a21be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9bd5a1d548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9bd5a1d0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9bd5a1d9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9bd5a18020" loc="35:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9bd5a18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9bd5a18370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b9bd5a25838" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b9bd5a25838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9bd57b2530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9bd57b2888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9bd5a23020"/>
        <function-ref name="fired" scoped="" ref="0x2b9bd5a16020"/>
        <function-ref name="startAt" scoped="" ref="0x2b9bd5a16930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9bd5a164a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9bd5a234a8"/>
        <function-ref name="start" scoped="" ref="0x2b9bd5a175e0"/>
        <function-ref name="stop" scoped="" ref="0x2b9bd5a17ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9bd5b224f8" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b9bd5b224f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9bd57b2530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9bd57b2888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9bd5b1fc88"/>
        <function-ref name="fired" scoped="" ref="0x2b9bd5b21d08"/>
        <function-ref name="startAt" scoped="" ref="0x2b9bd5b1f680"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9bd5b1f1f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9bd5b1e150"/>
        <function-ref name="start" scoped="" ref="0x2b9bd5b213a8"/>
        <function-ref name="stop" scoped="" ref="0x2b9bd5b21880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9bd5b23cb8" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9bd5b23cb8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b9bd5732d88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b9bd5732d88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9bd5b220a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9bd5b1e738" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b9bd5b1e738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9bd57b2530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9bd57b2888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9bd5b1d578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9bd5b1c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9bd5b1da00"/>
        <function-ref name="overflow" scoped="" ref="0x2b9bd5b1c4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b9bd5edfb60" loc="38:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b9bd5edfb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b9bd5ede020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b9bd5ede1a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b9bd5ede330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b9bd5ede4b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b9bd5ede640"/>
        <function-ref name="setControl" scoped="" ref="0x2b9bd5ede7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9bd5ec1888" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b9bd5ec1888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9bd57b2530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9bd57b2888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9bd5ebd020"/>
        <function-ref name="fired" scoped="" ref="0x2b9bd5ebe020"/>
        <function-ref name="startAt" scoped="" ref="0x2b9bd5ebe930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9bd5ebe4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9bd5ebd4a8"/>
        <function-ref name="start" scoped="" ref="0x2b9bd5ec0660"/>
        <function-ref name="stop" scoped="" ref="0x2b9bd5ec0b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9bd5ec10e0" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9bd5ec10e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9bd5ec1430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9bd5ebda90" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b9bd5ebda90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9bd57b2530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9bd57b2888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9bd5ebc828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9bd5ebb190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9bd5ebccb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9bd5ebb618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x2b9bd5edbbb0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b9bd5edbbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b9bd5ed97c8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b9bd5ed91a8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b9bd5ed9330"/>
        <function-ref name="countBusy" scoped="" ref="0x2b9bd5ed94b8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b9bd5ed9640"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b9bd5ed9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b9bd5edeb58" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b9bd5edeb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b9bd5edb310"/>
        <function-ref name="fired" scoped="" ref="0x2b9bd5edc0c0"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5edd728"/>
        <function-ref name="reset" scoped="" ref="0x2b9bd5edc548"/>
        <function-ref name="isOn" scoped="" ref="0x2b9bd5edb798"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5eddbb0"/>
        <function-ref name="start" scoped="" ref="0x2b9bd5edc9d0"/>
        <function-ref name="stop" scoped="" ref="0x2b9bd5edce58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9bd5ebbb98" loc="37:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9bd5ebbb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b9bd5ee1db8"/>
        <function-ref name="test" scoped="" ref="0x2b9bd5ee14a8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5eb9760"/>
        <function-ref name="setScale" scoped="" ref="0x2b9bd5edf270"/>
        <function-ref name="getScale" scoped="" ref="0x2b9bd5edf748"/>
        <function-ref name="reset" scoped="" ref="0x2b9bd5ee2580"/>
        <function-ref name="overflow" scoped="" ref="0x2b9bd5ee20f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b9bd5ee1930"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5eb9be8"/>
        <function-ref name="start" scoped="" ref="0x2b9bd5ee2a08"/>
        <function-ref name="stop" scoped="" ref="0x2b9bd5ee1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b9bd5aa3020" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b9bd5aa3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b9bd5aa3370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b9bd5aa34f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b9bd5aa3680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b9bd5aa3808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b9bd5aa3990"/>
        <function-ref name="setControl" scoped="" ref="0x2b9bd5aa3b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b9bd5ab6218" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b9bd5ab6218"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b9bd5ab6d10"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b9bd5ab66f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b9bd5ab6878"/>
        <function-ref name="countBusy" scoped="" ref="0x2b9bd5ab6a00"/>
        <function-ref name="getAssr" scoped="" ref="0x2b9bd5ab6b88"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b9bd5ab6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9bd5aa2020" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b9bd5aa2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b9bd5aa07a8"/>
        <function-ref name="fired" scoped="" ref="0x2b9bd5aa1560"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5aa2ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b9bd5aa19e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b9bd5aa0c30"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5aa1088"/>
        <function-ref name="start" scoped="" ref="0x2b9bd5aa1e70"/>
        <function-ref name="stop" scoped="" ref="0x2b9bd5aa0320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9bd5aabe00" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9bd5aabe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b9bd5aa50f8"/>
        <function-ref name="test" scoped="" ref="0x2b9bd5aa6798"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5aa8a18"/>
        <function-ref name="setScale" scoped="" ref="0x2b9bd5aa5580"/>
        <function-ref name="getScale" scoped="" ref="0x2b9bd5aa5a58"/>
        <function-ref name="reset" scoped="" ref="0x2b9bd5aa7980"/>
        <function-ref name="overflow" scoped="" ref="0x2b9bd5aa74f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b9bd5aa6c20"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5aa7020"/>
        <function-ref name="start" scoped="" ref="0x2b9bd5aa7e08"/>
        <function-ref name="stop" scoped="" ref="0x2b9bd5aa6310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b9bd5aacc80" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b9bd5aacc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b9bd5ac3020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b9bd5ac31a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b9bd5ac3330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b9bd5ac34b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b9bd5ac3640"/>
        <function-ref name="setControl" scoped="" ref="0x2b9bd5ac37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b9bd5abfdb0" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b9bd5abfdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b9bd5abe170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b9bd5abe510" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b9bd5abe510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b9bd5abd030"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b9bd5abe9e8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b9bd5abeb70"/>
        <function-ref name="countBusy" scoped="" ref="0x2b9bd5abecf8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b9bd5abee80"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b9bd5abe860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9bd5ac3c90" loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b9bd5ac3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b9bd5abf4a8"/>
        <function-ref name="fired" scoped="" ref="0x2b9bd5ac1238"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5ac2858"/>
        <function-ref name="reset" scoped="" ref="0x2b9bd5ac16c0"/>
        <function-ref name="isOn" scoped="" ref="0x2b9bd5abf930"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5ac2ce0"/>
        <function-ref name="start" scoped="" ref="0x2b9bd5ac1b48"/>
        <function-ref name="stop" scoped="" ref="0x2b9bd5abf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9bd5ab1c60" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9bd5ab1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b9bd5aaedb8"/>
        <function-ref name="test" scoped="" ref="0x2b9bd5aae4a8"/>
        <function-ref name="get" scoped="" ref="0x2b9bd5ab0820"/>
        <function-ref name="setScale" scoped="" ref="0x2b9bd5aac270"/>
        <function-ref name="getScale" scoped="" ref="0x2b9bd5aac748"/>
        <function-ref name="reset" scoped="" ref="0x2b9bd5aaf658"/>
        <function-ref name="overflow" scoped="" ref="0x2b9bd5aaf1d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b9bd5aae930"/>
        <function-ref name="set" scoped="" ref="0x2b9bd5ab0ca8"/>
        <function-ref name="start" scoped="" ref="0x2b9bd5aafae0"/>
        <function-ref name="stop" scoped="" ref="0x2b9bd5aae020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b9bd5b54cf0" loc="74:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b9bd5b54cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9bd5b530a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b9bd5b53228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b9bd5b58c70" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b9bd5b58c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9bd57b2530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9bd57b2888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9bd5b54410"/>
        <function-ref name="fired" scoped="" ref="0x2b9bd5b554a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b9bd5b55db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9bd5b55930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9bd5b54898"/>
        <function-ref name="start" scoped="" ref="0x2b9bd5b569f0"/>
        <function-ref name="stop" scoped="" ref="0x2b9bd5b55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9bd5b43ab0" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9bd5b43ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9bd57b2530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9bd57b2888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9bd5b3fd60"/>
        <function-ref name="fired" scoped="" ref="0x2b9bd5b40470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9bd5b3f1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9bd5b40d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b9bd5b58648"/>
        <function-ref name="gett0" scoped="" ref="0x2b9bd5b581f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9bd5b408c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9bd5b42620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9bd5b3f790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9bd5b42ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b9bd5b40020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b9bd5ba2478" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b9bd5ba2478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9bd5ba27c8"/>
        <function-ref name="runTask" scoped="" ref="0x2b9bd5ba2950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b9bd5ba7208" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b9bd5ba7208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9bd57b2530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9bd57b2888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9bd5ba35f0"/>
        <function-ref name="fired" scoped="" ref="0x2b9bd5ba5b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9bd5ba48c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9bd5ba4470"/>
        <function-ref name="getdt" scoped="" ref="0x2b9bd5ba2020"/>
        <function-ref name="gett0" scoped="" ref="0x2b9bd5ba3a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9bd5ba4020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9bd5ba7d50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9bd5ba3020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9bd5ba5238"/>
        <function-ref name="stop" scoped="" ref="0x2b9bd5ba56d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9bd5b92020" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9bd5b92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9bd57b2530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9bd57b2888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9bd5b8d358"/>
        <function-ref name="fired" scoped="" ref="0x2b9bd5b909b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9bd5b8f748"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9bd5b8f2d8"/>
        <function-ref name="getdt" scoped="" ref="0x2b9bd5b8dc38"/>
        <function-ref name="gett0" scoped="" ref="0x2b9bd5b8d7c8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9bd5b90e28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9bd5b92b88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9bd5b8fd38"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9bd5b90088"/>
        <function-ref name="stop" scoped="" ref="0x2b9bd5b90548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b9bd5b9fc38" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b9bd5b9fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9bd57b2530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9bd57b2888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9bd5bb1820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b9bd5bb1e48" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b9bd5bb1e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9bd57b2530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9bd57b2888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9bd5bb0be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9bd5baf548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9bd5baf0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9bd5baf9d0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b9bd582d178" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9bd573cae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b9bd5825e08" loc="60:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b9bd5833290" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b9bd5536378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b9bd5833020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b9bd5837940" loc="31:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="27:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b9bd5536378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b9bd5836378" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b9bd5836108" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b9bd5836e00" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b9bd5836b90" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b9bd5835698" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b9bd584a0d8" loc="44:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b9bd584a7a0" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9bd57334c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b9bd584b328" loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b9bd5849570" loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9bd57334c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b9bd584b9c8" loc="43:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9bd57334c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b9bd584ae58" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9bd584d5a8" loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b9bd584dc18" loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b9bd57383a0" loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b9bd5740290" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b9bd5738ab8" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9bd57334c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b9bd5742070" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9bd573cae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b9bd5742860" loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b9bd57f5450" loc="76:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b9bd580bd28" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b9bd57911a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b9bd58156d8" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9bd59e67e8" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9bd59e67e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b9bd59f1110" loc="136:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b9bd59e2ca0" loc="83:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b9bd59f38d0" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b9bd59f3338" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b9bd59f3650" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b9bd59e1bd8" loc="98:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9bd57334c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b9bd59f0070" loc="151:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b9bd59f1830" loc="144:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b9bd59e1440" loc="92:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9bd57334c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b9bd59e3338" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b9bd59e30c8" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b9bd59f27c8" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b9bd59f2230" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b9bd59f2548" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b9bd59e3d78" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b9bd59e3b08" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9bd59e2600" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9bd5a0cbf0" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9bd5a0cbf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b9bd5a084c8" loc="61:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9bd5536db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9bd5a203f8" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9bd5a203f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b9bd5a20628" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9bd5a20628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b9bd5a1f020" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9bd5a20628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b9bd5a1e070" loc="76:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b9bd5a1f838" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9bd57334c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b9bd5a1e760" loc="82:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9bd5a18e18" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9bd5a18e18"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b9bd5a15068" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9bd5a15068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b9bd5a26958" loc="109:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9bd5a15068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b9bd5a14a78" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b9bd5a26020" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9bd5a15068"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9bd5a15068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b9bd5a13a08" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9bd5a15068"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b9bd5a13d28" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9bd5a15068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b9bd5a13258" loc="88:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9bd57334c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b9bd5a25110" loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9bd5a15068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b9bd5a15b28" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9bd5a15068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b9bd5a158b8" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9bd5a15068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9bd5a14328" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b9bd5a50a58" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9bd57bea08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b9bd57bee10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b9bd5a4be18" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9bd57cb100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b9bd57cb508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b9bd5a4cc70" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9bd57ce980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b9bd57ced88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b9bd5a4b678" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9bd57ce980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b9bd57ced88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b9bd5a4b408" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9bd57ce980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b9bd57ced88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b9bd5a4a828" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9bd57cb100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b9bd57cb508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b9bd5a4a5b8" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9bd57cb100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b9bd57cb508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b9bd5a4c4c8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9bd57bea08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b9bd57bee10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b9bd5a4c258" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9bd57bea08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b9bd57bee10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerSync" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer0Synchronous" ref="0x2b9bd5a68328" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBusy" ref="0x2b9bd5a68a30" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b9bd5a67258" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b9bd5a67a08" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b9bd5a53110" loc="28:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="24:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9bd57c5118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b9bd57c5520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b9bd5a53ac0" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9bd57c5118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b9bd57c5520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9bd5a53850" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9bd57c5118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b9bd57c5520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b9bd5a5d068" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9bd5a5d068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b9bd5a5a738" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9bd57334c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b9bd5a5c9d0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b9bd5a5d920" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9bd5a5d068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b9bd5a5b110" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b9bd5a58020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9bd57334c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9bd5a5c290" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9bd5a5d068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b9bd5a5c020" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9bd5a5d068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b9bd5a5b808" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9bd5a5a020" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b9bd5a45418" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b9bd5a45418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b9bd5a40900" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b9bd5a41a40" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9bd57334c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b9bd5a45cb8" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b9bd5a45418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b9bd5a3f290" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b9bd5a3f020" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b9bd5a3fa10" loc="110:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="106:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9bd5534910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b9bd5a434c0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b9bd5a44d50" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b9bd5a401d8" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9bd57334c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9bd5a44630" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b9bd5a45418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b9bd5a443c0" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b9bd5a45418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b9bd5a43bb8" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9bd5a41328" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
