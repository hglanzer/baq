<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="13:MyTimerAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b7e018799f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b7e01876220"/></to>
    </wire>
    <wire loc="72:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b7e01876220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b7e01a26198"/></to>
    </wire>
    <wire loc="15:MyTimerAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b7e01a38578"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b7e01a4e420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b7e01a4e420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b7e01a46b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:MyTimerAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x2b7e01a357d8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b7e01c00a60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b7e01c00a60"/></from>
      <to><interface-ref name="TimerMicro" scoped="" ref="0x2b7e01c149a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:MyTimerAppC.nc">
      <from><interface-ref name="Out0" scoped="" ref="0x2b7e01a447d0"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x2b7e018b0658"/></to>
    </wire>
    <wire loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b7e018b0658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b7e019415b8"/></to>
    </wire>
    <wire loc="18:MyTimerAppC.nc">
      <from><interface-ref name="Out1" scoped="" ref="0x2b7e01a42998"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x2b7e018acc78"/></to>
    </wire>
    <wire loc="160:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b7e018acc78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b7e0193dbd8"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TimerMicroP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b7e01875620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7e01c0b310"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b7e01875620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7e01a544d8"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b7e01a267d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b7e0177e600"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b7e0177e600"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b7e01835448"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b7e01a251d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7e01878620"/></to>
    </wire>
    <wire loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b7e01878620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7e01887600"/></to>
    </wire>
    <wire loc="71:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b7e01a25898"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b7e01875620"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b7e0187b618"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b7e01a088f0"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b7e01886398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7e01a082c0"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b7e01887ca0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b7e01880b98"/></to>
    </wire>
    <wire loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b7e01880b98"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b7e0188a698"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b7e0188d360"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b7e01873380"/></to>
    </wire>
    <wire loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b7e01889b08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b7e0188d360"/></to>
    </wire>
    <wire loc="191:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b7e018d2af0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e019ab970"/></to>
    </wire>
    <wire loc="165:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b7e018b4658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b7e01952020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b7e01952020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01dd3480"/></to>
    </wire>
    <wire loc="176:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b7e018c5658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b7e01961d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b7e01961d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01e3b480"/></to>
    </wire>
    <wire loc="185:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b7e018ca348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b7e019635b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b7e019635b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01e8d480"/></to>
    </wire>
    <wire loc="143:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b7e018a0348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b7e01929740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b7e01929740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01cb3480"/></to>
    </wire>
    <wire loc="183:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b7e018cc020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b7e019652a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b7e019652a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01e93480"/></to>
    </wire>
    <wire loc="146:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b7e0189e658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b7e01931930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b7e01931930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01cf73e0"/></to>
    </wire>
    <wire loc="157:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b7e018af7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b7e01940740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b7e01940740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01d6b480"/></to>
    </wire>
    <wire loc="168:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b7e018bfaf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b7e0194e430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b7e0194e430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01dca480"/></to>
    </wire>
    <wire loc="179:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b7e018c2af0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b7e0195d120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b7e0195d120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01e32480"/></to>
    </wire>
    <wire loc="138:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b7e01898af0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b7e0191e020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b7e0191e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01ca4480"/></to>
    </wire>
    <wire loc="149:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b7e018a9af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b7e0192ed60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b7e0192ed60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01d0e480"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b7e0193dbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01d62480"/></to>
    </wire>
    <wire loc="171:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b7e018bb020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b7e0194b8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b7e0194b8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01de3480"/></to>
    </wire>
    <wire loc="188:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b7e018c77e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b7e01972a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b7e01972a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01eaa480"/></to>
    </wire>
    <wire loc="194:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b7e018ce7e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e019c0020"/></to>
    </wire>
    <wire loc="174:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b7e018b9348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b7e01953a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b7e01953a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01e41480"/></to>
    </wire>
    <wire loc="141:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b7e018a2020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b7e0191b430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b7e0191b430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01c9b480"/></to>
    </wire>
    <wire loc="152:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b7e018a51a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b7e0193a120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b7e0193a120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01d05480"/></to>
    </wire>
    <wire loc="192:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b7e018d04d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e019b8ab0"/></to>
    </wire>
    <wire loc="155:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b7e018b14d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b7e01942500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b7e01942500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01d713e0"/></to>
    </wire>
    <wire loc="166:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b7e018b37e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b7e01951120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b7e01951120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01dd0480"/></to>
    </wire>
    <wire loc="177:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b7e018c47e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b7e01960e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b7e01960e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01e38480"/></to>
    </wire>
    <wire loc="186:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b7e018c94d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b7e01974740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b7e01974740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01eb0480"/></to>
    </wire>
    <wire loc="144:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b7e0189f4d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b7e019288c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b7e019288c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01caf480"/></to>
    </wire>
    <wire loc="147:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b7e0189d7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b7e01930a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b7e01930a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01cf4480"/></to>
    </wire>
    <wire loc="158:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b7e018ae968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b7e0193f8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b7e0193f8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01d68480"/></to>
    </wire>
    <wire loc="169:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b7e018bec78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b7e0194d5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b7e0194d5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01dc7480"/></to>
    </wire>
    <wire loc="180:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b7e018c1c78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b7e0195c2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b7e0195c2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01e53480"/></to>
    </wire>
    <wire loc="139:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b7e01897c78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b7e0191d120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b7e0191d120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01ca1480"/></to>
    </wire>
    <wire loc="150:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b7e018a8c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b7e0192de18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b7e0192de18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01d0b480"/></to>
    </wire>
    <wire loc="161:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b7e018abe00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b7e0193bd60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b7e0193bd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01d81480"/></to>
    </wire>
    <wire loc="189:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b7e018d3968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b7e01971bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b7e01971bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01ea7480"/></to>
    </wire>
    <wire loc="164:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b7e018b51a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b7e01944e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b7e01944e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01dd63e0"/></to>
    </wire>
    <wire loc="175:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b7e018c64d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b7e01962bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b7e01962bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01e3e480"/></to>
    </wire>
    <wire loc="184:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b7e018cb1a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b7e01964430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b7e01964430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01e90480"/></to>
    </wire>
    <wire loc="195:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b7e018db968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e019cd180"/></to>
    </wire>
    <wire loc="142:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b7e018a11a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b7e0192a5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b7e0192a5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01c98480"/></to>
    </wire>
    <wire loc="153:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b7e018a4348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b7e019392a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b7e019392a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01d01480"/></to>
    </wire>
    <wire loc="182:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b7e018c0e00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b7e019661e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b7e019661e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01e963e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b7e019415b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01d6e480"/></to>
    </wire>
    <wire loc="167:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b7e018b2968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b7e0194f2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b7e0194f2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01dcd480"/></to>
    </wire>
    <wire loc="178:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b7e018c3968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b7e0195e020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b7e0195e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01e35480"/></to>
    </wire>
    <wire loc="187:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b7e018c8658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b7e019738c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b7e019738c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01ead480"/></to>
    </wire>
    <wire loc="137:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b7e0188b878"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b7e01920dc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b7e01920dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01c89448"/></to>
    </wire>
    <wire loc="148:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b7e018aa968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b7e0192fbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b7e0192fbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01cf1480"/></to>
    </wire>
    <wire loc="159:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b7e018adaf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b7e0193ea50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b7e0193ea50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01d65480"/></to>
    </wire>
    <wire loc="170:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b7e018bde00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b7e0194c740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b7e0194c740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01de6480"/></to>
    </wire>
    <wire loc="193:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b7e018cf658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e019b4c38"/></to>
    </wire>
    <wire loc="173:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b7e018ba1a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b7e01954930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b7e01954930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01e203e0"/></to>
    </wire>
    <wire loc="162:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b7e018b6020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b7e0194ae18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b7e0194ae18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01d7e480"/></to>
    </wire>
    <wire loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b7e01896e00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b7e0191c2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b7e0191c2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01c9e480"/></to>
    </wire>
    <wire loc="151:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b7e018a6020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b7e0192b020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b7e0192b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b7e01d08480"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b7e017811c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b7e018342b0"/></to>
    </wire>
    <wire loc="55:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b7e0183d758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b7e01854660"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b7e0185a2b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b7e01b00268"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b7e01a46b18"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b7e01a51208"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b7e01a51208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b7e01bd4020"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b7e01a544d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7e01a6d020"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b7e01a5c980"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b7e01be1c38"/></to>
    </wire>
    <wire loc="35:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b7e01a6d020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7e01b64190"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b7e01be9208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b7e01b9fab0"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b7e01b9ac70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b7e01a65838"/></to>
    </wire>
    <wire loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b7e01a65838"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b7e01b64938"/></to>
    </wire>
    <wire loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b7e01bf3e48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b7e01a74e40"/></to>
    </wire>
    <wire loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b7e01a74e40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7e01b60a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b7e01b60a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7e01f6ea90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b7e01b64190"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7e01f710e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b7e01b64938"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b7e01f71888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b7e01f6bb98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b7e01aebe00"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b7e01aebe00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b7e01b0a180"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b7e01f66b60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b7e01afb020"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b7e01afb020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b7e01b05160"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2b7e01f8fb58"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b7e01afa020"/></to>
    </wire>
    <wire loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b7e01afa020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b7e01b04190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b7e01f8bbb0"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b7e01af6218"/></to>
    </wire>
    <wire loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b7e01af6218"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b7e01b00958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2b7e01b96cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b7e017811c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b7e01be4478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b7e017811c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TimerMicroP.nc">
      <from><interface-ref name="TimerMicro" scoped="" ref="0x2b7e01c149a8"/></from>
      <to><interface-ref name="TimerMicro" scoped="" ref="0x2b7e01c26030"/></to>
    </wire>
    <wire loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
      <from><interface-ref name="TimerMicro" scoped="" ref="0x2b7e01c26030"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b7e01c375e0"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b7e01c0b310"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7e01c1e738"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b7e01c21150"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b7e01c45e18"/></to>
    </wire>
    <wire loc="38:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMicroP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b7e01c1e738"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7e01c309a0"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b7e01c4d858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b7e01c1cac0"/></to>
    </wire>
    <wire loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b7e01c3ec70"/></from>
      <to><interface-ref name="AlarmMicro32" scoped="" ref="0x2b7e01c1b0e0"/></to>
    </wire>
    <wire loc="39:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMicroP.nc">
      <from><interface-ref name="AlarmMicro32" scoped="" ref="0x2b7e01c1b0e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b7e01c2f1a8"/></to>
    </wire>
    <wire loc="69:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b7e01c430a0"/></from>
      <to><interface-ref name="CounterMicro32" scoped="" ref="0x2b7e01c333b8"/></to>
    </wire>
    <wire loc="40:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMicroP.nc">
      <from><interface-ref name="CounterMicro32" scoped="" ref="0x2b7e01c333b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7e01c2b3d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b7e01c2b3d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b7e02001160"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b7e01c2f1a8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b7e01fd90a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b7e01c309a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b7e01fdb8b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b7e01ffe368"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b7e01aebe00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b7e01ff9438"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b7e01afb020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2b7e01ff83b0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b7e01afa020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b7e01ff4510"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b7e01af6218"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2b7e01c3acf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b7e017811c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b7e01c48930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b7e017811c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc" safe="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc" safe="">
      <documentation loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MyTimerC" loc="1:MyTimerC.nc">
      <module/>
    </component>
    <component qname="MyTimerAppC.Timer0" loc="44(MyTimerAppC.Timer0):/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e017fa530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7e017fa888"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b7e01a72c68"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0SyncC" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0SyncP" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in SYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in SYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in SYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;--> CHANGED TO SYNC-Mode(CPL_CLK)&#9;hglanzer&#10;--> AS0=0 in ASSR&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e017fa530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7e017fa888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e017fa530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7e017fa888"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e017fa530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7e017fa888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MyTimerAppC.Timer1" loc="47(MyTimerAppC.Timer1):/homes/mhartmann/baq/tinyos/tos/system/TimerMicroC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMicroC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10; &#10; CHANGED_BY_ME&#10; &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMicroC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMicroP" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TimerMicroP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TimerMicroP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMicroC" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; &#10; CHANGED_BY_ME&#10; &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMicroP" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMicroP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMicroP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; &#10; CHANGED_BY_ME&#10; &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMicroP.Atm128AlarmSyncC" loc="30(AlarmCounterMicroP.Atm128AlarmSyncC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e01803430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7e01803788"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMicroP.Atm128AlarmSyncC.Atm128AlarmSyncP" loc="30(AlarmCounterMicroP.Atm128AlarmSyncC.Atm128AlarmSyncP):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b7e01a72c68"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMicroC.AlarmToTimerC" loc="46(HilTimerMicroC.AlarmToTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e01803430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7e01803788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMicroC.VirtualizeTimerC" loc="46(HilTimerMicroC.VirtualizeTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e01803430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7e01803788"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMicroC.CounterToLocalTimeC" loc="46(HilTimerMicroC.CounterToLocalTimeC):/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e01803430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7e01803788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b7e018d8ba0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b7e018e2020" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b7e018e2368" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b7e018e6610" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b7e018e6978" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b7e018e6ce0" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b7e018e3060" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b7e0197a020" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b7e0197a388" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b7e0197a6f0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b7e0197aa20" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncC" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc" abstract="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b7e01a72c68" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b7e01a72c68"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b7e01a6f020" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncP" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b7e01a7a410" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b7e01a7a410"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b7e01a7a700" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b7e01a59c68" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7e01a59c68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b7e01b94cd0" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7e01b94cd0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b7e01bab020" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b7e01bfb510" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7e01bfb510"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMicroC" loc="47:/homes/mhartmann/baq/tinyos/tos/system/TimerMicroC.nc" abstract="">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMicroC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10; &#10; CHANGED_BY_ME&#10; &#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b7e01875620" loc="58:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b7e01875620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e01875970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b7e01876220" loc="57:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b7e01876220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b7e01876570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b7e01873380" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b7e01873380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e018736d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7e01878620" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7e01878620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e01878970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b7e0187b618" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b7e0187b618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b7e0187b968"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b7e0187baf0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b7e0187bc78"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b7e0187be00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b7e01873020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b7e01887ca0" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b7e01887ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e01886020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7e01887600" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7e01887600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e01887950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b7e01886398" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b7e01886398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e018866e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b7e0188d360" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b7e0188d360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e0188d6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b7e01880b98" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b7e01880b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e0188d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b7e01889b08" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b7e01889b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e01889e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b7e018918d8" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b7e018918d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01891c28"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01891db0"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01889020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018891a8"/>
        <function-ref name="get" scoped="" ref="0x2b7e01889330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018894b8"/>
        <function-ref name="set" scoped="" ref="0x2b7e01889640"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018897c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b7e0188a698" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b7e0188a698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e0188a9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b7e018d2af0" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b7e018d2af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018d15e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018d1770"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018d18f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018d1a80"/>
        <function-ref name="get" scoped="" ref="0x2b7e018d1c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018d1d90"/>
        <function-ref name="set" scoped="" ref="0x2b7e018d0020"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018d01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b7e018b4658" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b7e018b4658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018b49a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018b4b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018b4cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018b4e40"/>
        <function-ref name="get" scoped="" ref="0x2b7e018b3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018b31a8"/>
        <function-ref name="set" scoped="" ref="0x2b7e018b3330"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018b34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b7e018c5658" loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b7e018c5658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018c59a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018c5b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018c5cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018c5e40"/>
        <function-ref name="get" scoped="" ref="0x2b7e018c4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018c41a8"/>
        <function-ref name="set" scoped="" ref="0x2b7e018c4330"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018c44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b7e018ca348" loc="94:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b7e018ca348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018ca698"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018ca820"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018ca9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018cab30"/>
        <function-ref name="get" scoped="" ref="0x2b7e018cacb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018cae40"/>
        <function-ref name="set" scoped="" ref="0x2b7e018c9020"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018c91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b7e018a0348" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b7e018a0348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018a0698"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018a0820"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018a09a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018a0b30"/>
        <function-ref name="get" scoped="" ref="0x2b7e018a0cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018a0e40"/>
        <function-ref name="set" scoped="" ref="0x2b7e0189f020"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0189f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b7e018cc020" loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b7e018cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018cc370"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018cc4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018cc680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018cc808"/>
        <function-ref name="get" scoped="" ref="0x2b7e018cc990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018ccb18"/>
        <function-ref name="set" scoped="" ref="0x2b7e018ccca0"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018cce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b7e0189e658" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b7e0189e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0189e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0189eb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0189ecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0189ee40"/>
        <function-ref name="get" scoped="" ref="0x2b7e0189d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0189d1a8"/>
        <function-ref name="set" scoped="" ref="0x2b7e0189d330"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0189d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b7e018af7e0" loc="66:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b7e018af7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018afb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018afcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018afe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018ae020"/>
        <function-ref name="get" scoped="" ref="0x2b7e018ae1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018ae330"/>
        <function-ref name="set" scoped="" ref="0x2b7e018ae4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018ae640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b7e018bfaf0" loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b7e018bfaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018bfe40"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018be020"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018be1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018be330"/>
        <function-ref name="get" scoped="" ref="0x2b7e018be4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018be640"/>
        <function-ref name="set" scoped="" ref="0x2b7e018be7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018be950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b7e018c2af0" loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b7e018c2af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018c2e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018c1020"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018c11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018c1330"/>
        <function-ref name="get" scoped="" ref="0x2b7e018c14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018c1640"/>
        <function-ref name="set" scoped="" ref="0x2b7e018c17c8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018c1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b7e01898af0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b7e01898af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01898e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01897020"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018971a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01897330"/>
        <function-ref name="get" scoped="" ref="0x2b7e018974b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01897640"/>
        <function-ref name="set" scoped="" ref="0x2b7e018977c8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01897950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b7e018a9af0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b7e018a9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018a9e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018a8020"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018a81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018a8330"/>
        <function-ref name="get" scoped="" ref="0x2b7e018a84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018a8640"/>
        <function-ref name="set" scoped="" ref="0x2b7e018a87c8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018a8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b7e018acc78" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b7e018acc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018ab020"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018ab1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018ab330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018ab4b8"/>
        <function-ref name="get" scoped="" ref="0x2b7e018ab640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018ab7c8"/>
        <function-ref name="set" scoped="" ref="0x2b7e018ab950"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018abad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b7e018bb020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b7e018bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018bb370"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018bb4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018bb680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018bb808"/>
        <function-ref name="get" scoped="" ref="0x2b7e018bb990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018bbb18"/>
        <function-ref name="set" scoped="" ref="0x2b7e018bbca0"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018bbe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b7e018c77e0" loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b7e018c77e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018c7b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018c7cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018c7e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018d3020"/>
        <function-ref name="get" scoped="" ref="0x2b7e018d31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018d3330"/>
        <function-ref name="set" scoped="" ref="0x2b7e018d34b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018d3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b7e018ce7e0" loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b7e018ce7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018ceb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018cecb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018cee40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018db020"/>
        <function-ref name="get" scoped="" ref="0x2b7e018db1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018db330"/>
        <function-ref name="set" scoped="" ref="0x2b7e018db4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018db640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b7e018b9348" loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b7e018b9348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018b9698"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018b9820"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018b99a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018b9b30"/>
        <function-ref name="get" scoped="" ref="0x2b7e018b9cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018b9e40"/>
        <function-ref name="set" scoped="" ref="0x2b7e018c6020"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018c61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b7e018a2020" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b7e018a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018a2370"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018a24f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018a2680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018a2808"/>
        <function-ref name="get" scoped="" ref="0x2b7e018a2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018a2b18"/>
        <function-ref name="set" scoped="" ref="0x2b7e018a2ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018a2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b7e018a51a0" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b7e018a51a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018a54f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018a5678"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018a5800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018a5988"/>
        <function-ref name="get" scoped="" ref="0x2b7e018a5b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018a5c98"/>
        <function-ref name="set" scoped="" ref="0x2b7e018a5e20"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b7e018d04d0" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b7e018d04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018d0820"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018d09a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018d0b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018d0cb8"/>
        <function-ref name="get" scoped="" ref="0x2b7e018d0e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018cf020"/>
        <function-ref name="set" scoped="" ref="0x2b7e018cf1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018cf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b7e018b14d0" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b7e018b14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018b1820"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018b19a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018b1b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018b1cb8"/>
        <function-ref name="get" scoped="" ref="0x2b7e018b1e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018b0020"/>
        <function-ref name="set" scoped="" ref="0x2b7e018b01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018b0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b7e018b37e0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b7e018b37e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018b3b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018b3cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018b3e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018b2020"/>
        <function-ref name="get" scoped="" ref="0x2b7e018b21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018b2330"/>
        <function-ref name="set" scoped="" ref="0x2b7e018b24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018b2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b7e018c47e0" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b7e018c47e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018c4b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018c4cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018c4e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018c3020"/>
        <function-ref name="get" scoped="" ref="0x2b7e018c31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018c3330"/>
        <function-ref name="set" scoped="" ref="0x2b7e018c34b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018c3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b7e018c94d0" loc="95:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b7e018c94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018c9820"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018c99a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018c9b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018c9cb8"/>
        <function-ref name="get" scoped="" ref="0x2b7e018c9e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018c8020"/>
        <function-ref name="set" scoped="" ref="0x2b7e018c81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018c8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b7e0189f4d0" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b7e0189f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0189f820"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0189f9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0189fb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0189fcb8"/>
        <function-ref name="get" scoped="" ref="0x2b7e0189fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0189e020"/>
        <function-ref name="set" scoped="" ref="0x2b7e0189e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0189e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b7e0189d7e0" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b7e0189d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0189db30"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0189dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0189de40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018aa020"/>
        <function-ref name="get" scoped="" ref="0x2b7e018aa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018aa330"/>
        <function-ref name="set" scoped="" ref="0x2b7e018aa4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018aa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b7e018ae968" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b7e018ae968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018aecb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018aee40"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018ad020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018ad1a8"/>
        <function-ref name="get" scoped="" ref="0x2b7e018ad330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018ad4b8"/>
        <function-ref name="set" scoped="" ref="0x2b7e018ad640"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018ad7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b7e018bec78" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b7e018bec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018bd020"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018bd1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018bd330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018bd4b8"/>
        <function-ref name="get" scoped="" ref="0x2b7e018bd640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018bd7c8"/>
        <function-ref name="set" scoped="" ref="0x2b7e018bd950"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018bdad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b7e018c1c78" loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b7e018c1c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018c0020"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018c01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018c0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018c04b8"/>
        <function-ref name="get" scoped="" ref="0x2b7e018c0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018c07c8"/>
        <function-ref name="set" scoped="" ref="0x2b7e018c0950"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018c0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b7e01897c78" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b7e01897c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01896020"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018961a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01896330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018964b8"/>
        <function-ref name="get" scoped="" ref="0x2b7e01896640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018967c8"/>
        <function-ref name="set" scoped="" ref="0x2b7e01896950"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01896ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b7e018a8c78" loc="59:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b7e018a8c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018a70f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018a7278"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018a7400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018a7588"/>
        <function-ref name="get" scoped="" ref="0x2b7e018a7710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018a7898"/>
        <function-ref name="set" scoped="" ref="0x2b7e018a7a20"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018a7ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b7e018abe00" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b7e018abe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018b81a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018b8330"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018b84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018b8640"/>
        <function-ref name="get" scoped="" ref="0x2b7e018b87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018b8950"/>
        <function-ref name="set" scoped="" ref="0x2b7e018b8ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018b8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b7e018d3968" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b7e018d3968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018d3cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018d3e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018d2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018d21a8"/>
        <function-ref name="get" scoped="" ref="0x2b7e018d2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018d24b8"/>
        <function-ref name="set" scoped="" ref="0x2b7e018d2640"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018d27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b7e018b51a0" loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b7e018b51a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018b56f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018b5878"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018b5a00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018b5b88"/>
        <function-ref name="get" scoped="" ref="0x2b7e018b5d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018b4020"/>
        <function-ref name="set" scoped="" ref="0x2b7e018b41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018b4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b7e018c64d0" loc="84:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b7e018c64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018c6820"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018c69a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018c6b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018c6cb8"/>
        <function-ref name="get" scoped="" ref="0x2b7e018c6e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018c5020"/>
        <function-ref name="set" scoped="" ref="0x2b7e018c51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018c5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b7e018cb1a0" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b7e018cb1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018cb4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018cb678"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018cb800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018cb988"/>
        <function-ref name="get" scoped="" ref="0x2b7e018cbb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018cbc98"/>
        <function-ref name="set" scoped="" ref="0x2b7e018cbe20"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b7e018db968" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b7e018db968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018dbcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018dbe40"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018da020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018da1a8"/>
        <function-ref name="get" scoped="" ref="0x2b7e018da330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018da4b8"/>
        <function-ref name="set" scoped="" ref="0x2b7e018da640"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018da7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b7e018a11a0" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b7e018a11a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018a14f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018a1678"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018a1800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018a1988"/>
        <function-ref name="get" scoped="" ref="0x2b7e018a1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018a1c98"/>
        <function-ref name="set" scoped="" ref="0x2b7e018a1e20"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b7e018a4348" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b7e018a4348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018a4698"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018a4820"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018a49a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018a4b30"/>
        <function-ref name="get" scoped="" ref="0x2b7e018a4cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018a4e40"/>
        <function-ref name="set" scoped="" ref="0x2b7e018b1020"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018b11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b7e018c0e00" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b7e018c0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018cd1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018cd330"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018cd4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018cd640"/>
        <function-ref name="get" scoped="" ref="0x2b7e018cd7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018cd950"/>
        <function-ref name="set" scoped="" ref="0x2b7e018cdad8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018cdc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b7e018b0658" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b7e018b0658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018b09a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018b0b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018b0cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018b0e40"/>
        <function-ref name="get" scoped="" ref="0x2b7e018af020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018af1a8"/>
        <function-ref name="set" scoped="" ref="0x2b7e018af330"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018af4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b7e018b2968" loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b7e018b2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018b2cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018b2e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018bf020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018bf1a8"/>
        <function-ref name="get" scoped="" ref="0x2b7e018bf330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018bf4b8"/>
        <function-ref name="set" scoped="" ref="0x2b7e018bf640"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018bf7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b7e018c3968" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b7e018c3968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018c3cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018c3e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018c2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018c21a8"/>
        <function-ref name="get" scoped="" ref="0x2b7e018c2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018c24b8"/>
        <function-ref name="set" scoped="" ref="0x2b7e018c2640"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018c27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b7e018c8658" loc="96:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b7e018c8658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018c89a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018c8b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018c8cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018c8e40"/>
        <function-ref name="get" scoped="" ref="0x2b7e018c7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018c71a8"/>
        <function-ref name="set" scoped="" ref="0x2b7e018c7330"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018c74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b7e0188b878" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b7e0188b878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0188bbc8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0188bd50"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01898020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018981a8"/>
        <function-ref name="get" scoped="" ref="0x2b7e01898330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018984b8"/>
        <function-ref name="set" scoped="" ref="0x2b7e01898640"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018987c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b7e018aa968" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b7e018aa968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018aacb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018aae40"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018a9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018a91a8"/>
        <function-ref name="get" scoped="" ref="0x2b7e018a9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018a94b8"/>
        <function-ref name="set" scoped="" ref="0x2b7e018a9640"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018a97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b7e018adaf0" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b7e018adaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018ade40"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018ac020"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018ac1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018ac330"/>
        <function-ref name="get" scoped="" ref="0x2b7e018ac4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018ac640"/>
        <function-ref name="set" scoped="" ref="0x2b7e018ac7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018ac950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b7e018bde00" loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b7e018bde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018bc1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018bc330"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018bc4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018bc640"/>
        <function-ref name="get" scoped="" ref="0x2b7e018bc7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018bc950"/>
        <function-ref name="set" scoped="" ref="0x2b7e018bcad8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018bcc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b7e018cf658" loc="102:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b7e018cf658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018cf9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018cfb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018cfcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018cfe40"/>
        <function-ref name="get" scoped="" ref="0x2b7e018ce020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018ce1a8"/>
        <function-ref name="set" scoped="" ref="0x2b7e018ce330"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018ce4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b7e018ba1a0" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b7e018ba1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018ba4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018ba678"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018ba800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018ba988"/>
        <function-ref name="get" scoped="" ref="0x2b7e018bab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018bac98"/>
        <function-ref name="set" scoped="" ref="0x2b7e018bae20"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b7e018b6020" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b7e018b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018b6370"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018b64f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018b6680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018b6808"/>
        <function-ref name="get" scoped="" ref="0x2b7e018b6990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018b6b18"/>
        <function-ref name="set" scoped="" ref="0x2b7e018b6ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018b6e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b7e01896e00" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b7e01896e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018a31a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018a3330"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018a34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018a3640"/>
        <function-ref name="get" scoped="" ref="0x2b7e018a37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018a3950"/>
        <function-ref name="set" scoped="" ref="0x2b7e018a3ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018a3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b7e018a6020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b7e018a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e018a6370"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e018a64f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e018a6680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e018a6808"/>
        <function-ref name="get" scoped="" ref="0x2b7e018a6990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e018a6b18"/>
        <function-ref name="set" scoped="" ref="0x2b7e018a6ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b7e018a6e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b7e0191d120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b7e0191d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0191d470"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0191d5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0191d780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0191d908"/>
        <function-ref name="get" scoped="" ref="0x2b7e0191da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0191dc18"/>
        <function-ref name="set" scoped="" ref="0x2b7e0191dda0"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0191c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b7e0192a5b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b7e0192a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0192a908"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0192aa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0192ac18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0192ada0"/>
        <function-ref name="get" scoped="" ref="0x2b7e01929020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e019291a8"/>
        <function-ref name="set" scoped="" ref="0x2b7e01929330"/>
        <function-ref name="clr" scoped="" ref="0x2b7e019294b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b7e01920dc0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b7e01920dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0191f170"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0191f2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0191f480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0191f608"/>
        <function-ref name="get" scoped="" ref="0x2b7e0191f790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0191f918"/>
        <function-ref name="set" scoped="" ref="0x2b7e0191faa0"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0191fc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b7e0191c2a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b7e0191c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0191c5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0191c780"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0191c908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0191ca90"/>
        <function-ref name="get" scoped="" ref="0x2b7e0191cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0191cda0"/>
        <function-ref name="set" scoped="" ref="0x2b7e0191b020"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0191b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b7e01929740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b7e01929740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01929a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01929c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01929da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01928020"/>
        <function-ref name="get" scoped="" ref="0x2b7e019281a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01928330"/>
        <function-ref name="set" scoped="" ref="0x2b7e019284b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01928640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b7e0191e020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b7e0191e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0191e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0191e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0191e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0191e808"/>
        <function-ref name="get" scoped="" ref="0x2b7e0191e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0191eb18"/>
        <function-ref name="set" scoped="" ref="0x2b7e0191eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0191ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b7e0191b430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b7e0191b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0191b780"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0191b908"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0191ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0191bc18"/>
        <function-ref name="get" scoped="" ref="0x2b7e0191bda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0192a020"/>
        <function-ref name="set" scoped="" ref="0x2b7e0192a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0192a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b7e019288c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b7e019288c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01928c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01928da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01927020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e019271a8"/>
        <function-ref name="get" scoped="" ref="0x2b7e01927330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e019274b8"/>
        <function-ref name="set" scoped="" ref="0x2b7e01927640"/>
        <function-ref name="clr" scoped="" ref="0x2b7e019277c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01c89448" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01c89448"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01c89798"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01c89920"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01c89aa8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01c89c30"/>
        <function-ref name="get" scoped="" ref="0x2b7e01c89db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01c88020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01c881a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01c88330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01ca4480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01ca4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01ca47d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01ca4958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01ca4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01ca4c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01ca4df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01ca3020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01ca31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01ca3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01ca1480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01ca1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01ca17d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01ca1958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01ca1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01ca1c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01ca1df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01ca0020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01ca01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01ca0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01c9e480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01c9e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01c9e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01c9e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01c9eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01c9ec68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01c9edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01c9d020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01c9d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01c9d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01c9b480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01c9b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01c9b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01c9b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01c9bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01c9bc68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01c9bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01c9a020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01c9a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01c9a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01c98480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01c98480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01c987d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01c98958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01c98ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01c98c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01c98df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01c97020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01c971a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01c97330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01cb3480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01cb3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01cb37d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01cb3958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01cb3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01cb3c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01cb3df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01cb1020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01cb11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01cb1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01caf480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01caf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01caf7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01caf958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01cafae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01cafc68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01cafdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01cae020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01cae1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01cae330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b7e0192fbd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b7e0192fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0192e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0192e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0192e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0192e4b8"/>
        <function-ref name="get" scoped="" ref="0x2b7e0192e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0192e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b7e0192e950"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0192ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b7e0192b020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b7e0192b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0192b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0192b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0192b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0192b808"/>
        <function-ref name="get" scoped="" ref="0x2b7e0192b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0192bb18"/>
        <function-ref name="set" scoped="" ref="0x2b7e0192bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0192be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b7e01931930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b7e01931930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01931c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01931e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01930020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e019301a8"/>
        <function-ref name="get" scoped="" ref="0x2b7e01930330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e019304b8"/>
        <function-ref name="set" scoped="" ref="0x2b7e01930640"/>
        <function-ref name="clr" scoped="" ref="0x2b7e019307c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b7e0192ed60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b7e0192ed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0192d0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0192d260"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0192d3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0192d570"/>
        <function-ref name="get" scoped="" ref="0x2b7e0192d6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0192d880"/>
        <function-ref name="set" scoped="" ref="0x2b7e0192da08"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0192db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b7e0193a120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b7e0193a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0193a470"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0193a5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0193a780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0193a908"/>
        <function-ref name="get" scoped="" ref="0x2b7e0193aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0193ac18"/>
        <function-ref name="set" scoped="" ref="0x2b7e0193ada0"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01939020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b7e01930a50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b7e01930a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01930da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0192f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0192f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0192f330"/>
        <function-ref name="get" scoped="" ref="0x2b7e0192f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0192f640"/>
        <function-ref name="set" scoped="" ref="0x2b7e0192f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0192f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b7e0192de18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b7e0192de18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0192c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0192c330"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0192c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0192c640"/>
        <function-ref name="get" scoped="" ref="0x2b7e0192c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0192c950"/>
        <function-ref name="set" scoped="" ref="0x2b7e0192cad8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0192cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b7e019392a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b7e019392a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e019395f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01939780"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01939908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01939a90"/>
        <function-ref name="get" scoped="" ref="0x2b7e01939c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01939da0"/>
        <function-ref name="set" scoped="" ref="0x2b7e01938020"/>
        <function-ref name="clr" scoped="" ref="0x2b7e019381a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01cf73e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01cf73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01cf7730"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01cf78b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01cf7a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01cf7bc8"/>
        <function-ref name="get" scoped="" ref="0x2b7e01cf7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01cf6020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01cf61a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01cf6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01cf4480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01cf4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01cf47d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01cf4958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01cf4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01cf4c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01cf4df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01cf3020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01cf31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01cf3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01cf1480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01cf1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01cf17d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01cf1958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01cf1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01cf1c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01cf1df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01d10020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01d101a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01d10330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01d0e480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01d0e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01d0e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01d0e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01d0eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01d0ec68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01d0edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01d0d020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01d0d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01d0d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01d0b480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01d0b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01d0b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01d0b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01d0bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01d0bc68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01d0bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01d0a020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01d0a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01d0a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01d08480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01d08480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01d087d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01d08958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01d08ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01d08c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01d08df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01d07020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01d071a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01d07330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01d05480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01d05480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01d057d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01d05958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01d05ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01d05c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01d05df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01d03020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01d031a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01d03330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01d01480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01d01480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01d017d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01d01958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01d01ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01d01c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01d01df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01d20020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01d201a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01d20330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b7e01940740" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b7e01940740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01940a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01940c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01940da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0193f020"/>
        <function-ref name="get" scoped="" ref="0x2b7e0193f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0193f330"/>
        <function-ref name="set" scoped="" ref="0x2b7e0193f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0193f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b7e0193dbd8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b7e0193dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0193b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0193b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0193b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0193b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b7e0193b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0193b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b7e0193b950"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0193bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b7e01942500" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b7e01942500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01942850"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e019429d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01942b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01942ce8"/>
        <function-ref name="get" scoped="" ref="0x2b7e01942e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01941020"/>
        <function-ref name="set" scoped="" ref="0x2b7e019411a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01941330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b7e0193f8c8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b7e0193f8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0193fc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0193fda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0193e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0193e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b7e0193e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0193e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b7e0193e640"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0193e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b7e0193bd60" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b7e0193bd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0194a0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0194a260"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0194a3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0194a570"/>
        <function-ref name="get" scoped="" ref="0x2b7e0194a6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0194a880"/>
        <function-ref name="set" scoped="" ref="0x2b7e0194aa08"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0194ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b7e019415b8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b7e019415b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01941908"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01941a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01941c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01941da0"/>
        <function-ref name="get" scoped="" ref="0x2b7e01940020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e019401a8"/>
        <function-ref name="set" scoped="" ref="0x2b7e01940330"/>
        <function-ref name="clr" scoped="" ref="0x2b7e019404b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b7e0193ea50" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b7e0193ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0193eda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0193d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0193d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0193d330"/>
        <function-ref name="get" scoped="" ref="0x2b7e0193d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0193d640"/>
        <function-ref name="set" scoped="" ref="0x2b7e0193d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0193d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b7e0194ae18" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b7e0194ae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e019491a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01949330"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e019494b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01949640"/>
        <function-ref name="get" scoped="" ref="0x2b7e019497c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01949950"/>
        <function-ref name="set" scoped="" ref="0x2b7e01949ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01949c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01d713e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01d713e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01d71730"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01d718b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01d71a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01d71bc8"/>
        <function-ref name="get" scoped="" ref="0x2b7e01d71d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01d70020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01d701a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01d70330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01d6e480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01d6e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01d6e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01d6e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01d6eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01d6ec68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01d6edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01d6d020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01d6d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01d6d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01d6b480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01d6b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01d6b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01d6b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01d6bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01d6bc68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01d6bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01d6a020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01d6a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01d6a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01d68480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01d68480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01d687d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01d68958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01d68ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01d68c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01d68df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01d67020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01d671a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01d67330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01d65480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01d65480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01d657d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01d65958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01d65ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01d65c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01d65df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01d64020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01d641a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01d64330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01d62480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01d62480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01d627d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01d62958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01d62ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01d62c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01d62df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01d61020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01d611a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01d61330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01d81480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01d81480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01d817d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01d81958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01d81ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01d81c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01d81df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01d80020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01d801a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01d80330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01d7e480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01d7e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01d7e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01d7e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01d7eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01d7ec68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01d7edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01d7c020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01d7c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01d7c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b7e01951120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b7e01951120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01951470"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e019515f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01951780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01951908"/>
        <function-ref name="get" scoped="" ref="0x2b7e01951a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01951c18"/>
        <function-ref name="set" scoped="" ref="0x2b7e01951da0"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0194f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b7e0194d5b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b7e0194d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0194d908"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0194da90"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0194dc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0194dda0"/>
        <function-ref name="get" scoped="" ref="0x2b7e0194c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0194c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b7e0194c330"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0194c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b7e01944e40" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b7e01944e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e019431c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01943348"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e019434d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01943658"/>
        <function-ref name="get" scoped="" ref="0x2b7e019437e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01943968"/>
        <function-ref name="set" scoped="" ref="0x2b7e01943af0"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01943c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b7e0194f2a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b7e0194f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0194f5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0194f780"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0194f908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0194fa90"/>
        <function-ref name="get" scoped="" ref="0x2b7e0194fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0194fda0"/>
        <function-ref name="set" scoped="" ref="0x2b7e0194e020"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0194e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b7e0194c740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b7e0194c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0194ca90"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0194cc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0194cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0194b020"/>
        <function-ref name="get" scoped="" ref="0x2b7e0194b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0194b330"/>
        <function-ref name="set" scoped="" ref="0x2b7e0194b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0194b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b7e01952020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b7e01952020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01952370"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e019524f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01952680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01952808"/>
        <function-ref name="get" scoped="" ref="0x2b7e01952990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01952b18"/>
        <function-ref name="set" scoped="" ref="0x2b7e01952ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01952e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b7e0194e430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b7e0194e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0194e780"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0194e908"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0194ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0194ec18"/>
        <function-ref name="get" scoped="" ref="0x2b7e0194eda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0194d020"/>
        <function-ref name="set" scoped="" ref="0x2b7e0194d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0194d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b7e0194b8c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b7e0194b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0194bc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0194bda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0195a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0195a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b7e0195a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0195a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b7e0195a640"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0195a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01dd63e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01dd63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01dd6730"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01dd68b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01dd6a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01dd6bc8"/>
        <function-ref name="get" scoped="" ref="0x2b7e01dd6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01dd5020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01dd51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01dd5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01dd3480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01dd3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01dd37d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01dd3958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01dd3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01dd3c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01dd3df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01dd2020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01dd21a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01dd2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01dd0480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01dd0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01dd07d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01dd0958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01dd0ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01dd0c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01dd0df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01dcf020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01dcf1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01dcf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01dcd480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01dcd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01dcd7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01dcd958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01dcdae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01dcdc68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01dcddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01dcc020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01dcc1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01dcc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01dca480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01dca480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01dca7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01dca958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01dcaae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01dcac68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01dcadf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01dc9020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01dc91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01dc9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01dc7480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01dc7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01dc77d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01dc7958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01dc7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01dc7c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01dc7df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01de8020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01de81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01de8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01de6480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01de6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01de67d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01de6958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01de6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01de6c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01de6df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01de5020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01de51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01de5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01de3480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01de3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01de37d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01de3958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01de3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01de3c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01de3df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01de1020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01de11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01de1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b7e01962bd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b7e01962bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01961020"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e019611a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01961330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e019614b8"/>
        <function-ref name="get" scoped="" ref="0x2b7e01961640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e019617c8"/>
        <function-ref name="set" scoped="" ref="0x2b7e01961950"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01961ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b7e0195e020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b7e0195e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0195e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0195e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0195e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0195e808"/>
        <function-ref name="get" scoped="" ref="0x2b7e0195e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0195eb18"/>
        <function-ref name="set" scoped="" ref="0x2b7e0195eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0195ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b7e01954930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b7e01954930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01954c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01954e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01953020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e019531a8"/>
        <function-ref name="get" scoped="" ref="0x2b7e01953330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e019534b8"/>
        <function-ref name="set" scoped="" ref="0x2b7e01953640"/>
        <function-ref name="clr" scoped="" ref="0x2b7e019537c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b7e01961d60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b7e01961d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e019600d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01960260"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e019603e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01960570"/>
        <function-ref name="get" scoped="" ref="0x2b7e019606f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01960880"/>
        <function-ref name="set" scoped="" ref="0x2b7e01960a08"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01960b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b7e0195d120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b7e0195d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0195d470"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0195d5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0195d780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0195d908"/>
        <function-ref name="get" scoped="" ref="0x2b7e0195da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0195dc18"/>
        <function-ref name="set" scoped="" ref="0x2b7e0195dda0"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0195c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b7e01953a50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b7e01953a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01953da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01962020"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e019621a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01962330"/>
        <function-ref name="get" scoped="" ref="0x2b7e019624b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01962640"/>
        <function-ref name="set" scoped="" ref="0x2b7e019627c8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01962950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b7e01960e18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b7e01960e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0195f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0195f330"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0195f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0195f640"/>
        <function-ref name="get" scoped="" ref="0x2b7e0195f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0195f950"/>
        <function-ref name="set" scoped="" ref="0x2b7e0195fad8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0195fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b7e0195c2a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b7e0195c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0195c5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0195c780"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0195c908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0195ca90"/>
        <function-ref name="get" scoped="" ref="0x2b7e0195cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0195cda0"/>
        <function-ref name="set" scoped="" ref="0x2b7e0195b020"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0195b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01e203e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01e203e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01e20730"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01e208b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01e20a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01e20bc8"/>
        <function-ref name="get" scoped="" ref="0x2b7e01e20d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01e1f020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01e1f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01e1f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01e41480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01e41480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01e417d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01e41958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01e41ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01e41c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01e41df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01e40020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01e401a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01e40330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01e3e480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01e3e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01e3e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01e3e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01e3eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01e3ec68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01e3edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01e3d020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01e3d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01e3d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01e3b480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01e3b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01e3b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01e3b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01e3bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01e3bc68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01e3bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01e3a020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01e3a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01e3a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01e38480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01e38480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01e387d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01e38958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01e38ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01e38c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01e38df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01e37020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01e371a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01e37330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01e35480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01e35480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01e357d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01e35958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01e35ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01e35c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01e35df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01e34020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01e341a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01e34330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01e32480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01e32480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01e327d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01e32958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01e32ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01e32c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01e32df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01e31020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01e311a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01e31330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01e53480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01e53480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01e537d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01e53958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01e53ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01e53c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01e53df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01e52020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01e521a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01e52330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b7e01964430" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b7e01964430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01964780"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01964908"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01964a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01964c18"/>
        <function-ref name="get" scoped="" ref="0x2b7e01964da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01963020"/>
        <function-ref name="set" scoped="" ref="0x2b7e019631a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01963330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b7e019738c8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b7e019738c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01973c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01973da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01972020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e019721a8"/>
        <function-ref name="get" scoped="" ref="0x2b7e01972330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e019724b8"/>
        <function-ref name="set" scoped="" ref="0x2b7e01972640"/>
        <function-ref name="clr" scoped="" ref="0x2b7e019727c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b7e019661e8" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b7e019661e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01966538"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e019666c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01966848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e019669d0"/>
        <function-ref name="get" scoped="" ref="0x2b7e01966b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01966ce0"/>
        <function-ref name="set" scoped="" ref="0x2b7e01966e68"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01965020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b7e019635b8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b7e019635b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01963908"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01963a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01963c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01963da0"/>
        <function-ref name="get" scoped="" ref="0x2b7e01974020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e019741a8"/>
        <function-ref name="set" scoped="" ref="0x2b7e01974330"/>
        <function-ref name="clr" scoped="" ref="0x2b7e019744b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b7e01972a50" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b7e01972a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01972da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01971020"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e019711a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01971330"/>
        <function-ref name="get" scoped="" ref="0x2b7e019714b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01971640"/>
        <function-ref name="set" scoped="" ref="0x2b7e019717c8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01971950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b7e019652a8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b7e019652a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e019655f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01965780"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01965908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01965a90"/>
        <function-ref name="get" scoped="" ref="0x2b7e01965c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01965da0"/>
        <function-ref name="set" scoped="" ref="0x2b7e01964020"/>
        <function-ref name="clr" scoped="" ref="0x2b7e019641a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b7e01974740" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b7e01974740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01974a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01974c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01974da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01973020"/>
        <function-ref name="get" scoped="" ref="0x2b7e019731a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01973330"/>
        <function-ref name="set" scoped="" ref="0x2b7e019734b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01973640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b7e01971bd8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b7e01971bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0196f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0196f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0196f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0196f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b7e0196f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0196f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b7e0196f950"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0196fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01e963e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01e963e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01e96730"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01e968b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01e96a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01e96bc8"/>
        <function-ref name="get" scoped="" ref="0x2b7e01e96d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01e95020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01e951a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01e95330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01e93480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01e93480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01e937d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01e93958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01e93ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01e93c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01e93df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01e92020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01e921a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01e92330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01e90480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01e90480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01e907d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01e90958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01e90ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01e90c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01e90df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01e8f020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01e8f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01e8f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01e8d480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01e8d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01e8d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01e8d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01e8dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01e8dc68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01e8ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01eb2020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01eb21a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01eb2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01eb0480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01eb0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01eb07d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01eb0958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01eb0ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01eb0c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01eb0df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01eaf020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01eaf1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01eaf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01ead480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01ead480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01ead7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01ead958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01eadae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01eadc68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01eaddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01eac020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01eac1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01eac330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01eaa480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01eaa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01eaa7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01eaa958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01eaaae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01eaac68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01eaadf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01ea9020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01ea91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01ea9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01ea7480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01ea7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01ea77d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01ea7958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01ea7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01ea7c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e01ea7df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01ea6020"/>
        <function-ref name="set" scoped="" ref="0x2b7e01ea61a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01ea6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e0197bac0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e0197bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0197be10"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01989020"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e019891a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01989330"/>
        <function-ref name="get" scoped="" ref="0x2b7e019894b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01989640"/>
        <function-ref name="set" scoped="" ref="0x2b7e019897c8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01989950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e01998db8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e01998db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01997170"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e019972f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01997480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01997608"/>
        <function-ref name="get" scoped="" ref="0x2b7e01997790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01997918"/>
        <function-ref name="set" scoped="" ref="0x2b7e01997aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01997c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e019923e0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e019923e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01992730"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e019928b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01992a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01992bc8"/>
        <function-ref name="get" scoped="" ref="0x2b7e01992d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01991020"/>
        <function-ref name="set" scoped="" ref="0x2b7e019911a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01991330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e0199f7e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e0199f7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0199fb38"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0199fcc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0199fe48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0199e020"/>
        <function-ref name="get" scoped="" ref="0x2b7e0199e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0199e330"/>
        <function-ref name="set" scoped="" ref="0x2b7e0199e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0199e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e0199bc38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e0199bc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e0199a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e0199a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e0199a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e0199a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b7e0199a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e0199a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b7e0199a950"/>
        <function-ref name="clr" scoped="" ref="0x2b7e0199aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e019a7020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e019a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e019a7370"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e019a74f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e019a7680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e019a7808"/>
        <function-ref name="get" scoped="" ref="0x2b7e019a7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e019a7b18"/>
        <function-ref name="set" scoped="" ref="0x2b7e019a7ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b7e019a7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e019a2480" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e019a2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e019a27d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e019a2958"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e019a2ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e019a2c68"/>
        <function-ref name="get" scoped="" ref="0x2b7e019a2df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e019b3020"/>
        <function-ref name="set" scoped="" ref="0x2b7e019b31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e019b3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e019b07e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e019b07e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e019b0b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e019b0cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e019b0e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e019af020"/>
        <function-ref name="get" scoped="" ref="0x2b7e019af1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e019af330"/>
        <function-ref name="set" scoped="" ref="0x2b7e019af4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e019af640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e019ab970" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e019ab970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e019abcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e019abe48"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e019bc020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e019bc1a8"/>
        <function-ref name="get" scoped="" ref="0x2b7e019bc330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e019bc4b8"/>
        <function-ref name="set" scoped="" ref="0x2b7e019bc640"/>
        <function-ref name="clr" scoped="" ref="0x2b7e019bc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e019b8ab0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e019b8ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e019b8e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e019b7020"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e019b71a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e019b7330"/>
        <function-ref name="get" scoped="" ref="0x2b7e019b74b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e019b7640"/>
        <function-ref name="set" scoped="" ref="0x2b7e019b77c8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e019b7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e019b4c38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e019b4c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e019c5020"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e019c51a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e019c5330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e019c54b8"/>
        <function-ref name="get" scoped="" ref="0x2b7e019c5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e019c57c8"/>
        <function-ref name="set" scoped="" ref="0x2b7e019c5950"/>
        <function-ref name="clr" scoped="" ref="0x2b7e019c5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e019c0020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e019c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e019c0370"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e019c04f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e019c0680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e019c0808"/>
        <function-ref name="get" scoped="" ref="0x2b7e019c0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e019c0b18"/>
        <function-ref name="set" scoped="" ref="0x2b7e019c0ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b7e019c0e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b7e019cd180" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b7e019cd180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e019cd4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e019cd658"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e019cd7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e019cd968"/>
        <function-ref name="get" scoped="" ref="0x2b7e019cdaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e019cdc78"/>
        <function-ref name="set" scoped="" ref="0x2b7e019cde00"/>
        <function-ref name="clr" scoped="" ref="0x2b7e019cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7e01a082c0" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7e01a082c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b7e01779128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b7e01779128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e01a08610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b7e01a088f0" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b7e01a088f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b7e01a08c40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b7e01a08dc8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b7e01a07020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b7e01a071a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b7e01a07330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b7e01a25898" loc="60:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b7e01a25898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e01a25be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b7e01a26198" loc="57:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b7e01a26198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b7e01a264e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b7e01a251d0" loc="59:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b7e01a251d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e01a25520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b7e01a267d0" loc="58:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b7e01a267d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e01a26b20"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b7e01a26ca8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b7e01a26e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b7e017811c8" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b7e017811c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7e01781518"/>
        <function-ref name="runTask" scoped="" ref="0x2b7e017816a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b7e0177e600" loc="47:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b7e0177e600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e0177e950"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b7e0177ead8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b7e0177ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b7e018342b0" loc="56:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b7e018342b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7e01834600"/>
        <function-ref name="runTask" scoped="" ref="0x2b7e01834788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b7e0183d758" loc="57:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b7e0183d758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b7e0183daa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b7e01835448" loc="55:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b7e01835448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e01835798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b7e01835920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b7e01835aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b7e0185a2b0" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b7e0185a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b7e0185a600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b7e01854660" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b7e01854660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b7e018549b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b7e0185da80" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b7e0185da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b7e0185ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b7e01a38578" loc="5:MyTimerC.nc">
      <component-ref qname="MyTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b7e01a38578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e017fa530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7e017fa888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e01a368f0"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01a37020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b7e01a37d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7e01a378c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b7e01a351c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b7e01a36d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01a37470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7e01a2d0f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b7e01a36320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7e01a2d598"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01a2da38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Out1" ref="0x2b7e01a42998" loc="8:MyTimerC.nc">
      <component-ref qname="MyTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Out1" scoped="" ref="0x2b7e01a42998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01a42ce8"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01a42e70"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01a41020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01a411a8"/>
        <function-ref name="get" scoped="" ref="0x2b7e01a41330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01a414b8"/>
        <function-ref name="set" scoped="" ref="0x2b7e01a41640"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01a417c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b7e018799f0" loc="3:MyTimerC.nc">
      <component-ref qname="MyTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b7e018799f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b7e01879d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x2b7e01a357d8" loc="6:MyTimerC.nc">
      <component-ref qname="MyTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x2b7e01a357d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e01803430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7e01803788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e01a31a18"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01a32158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b7e01a32e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7e01a329f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b7e01a442e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b7e01a31e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01a325a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7e01a34370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b7e01a31448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7e01a34810"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01a34cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Out0" ref="0x2b7e01a447d0" loc="7:MyTimerC.nc">
      <component-ref qname="MyTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Out0" scoped="" ref="0x2b7e01a447d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b7e01a44b20"/>
        <function-ref name="isInput" scoped="" ref="0x2b7e01a44ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2b7e01a44e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b7e01a42020"/>
        <function-ref name="get" scoped="" ref="0x2b7e01a421a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b7e01a42330"/>
        <function-ref name="set" scoped="" ref="0x2b7e01a424b8"/>
        <function-ref name="clr" scoped="" ref="0x2b7e01a42640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b7e01a4e420" loc="45:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="MyTimerAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7e01a4e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e017fa530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7e017fa888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e01c046c8"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01c07db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b7e01c06ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7e01c06688"/>
        <function-ref name="getdt" scoped="" ref="0x2b7e01c03020"/>
        <function-ref name="gett0" scoped="" ref="0x2b7e01c04b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01c06238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7e01c07020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b7e01c040f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7e01c074c0"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01c07960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b7e01a46b18" loc="49:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b7e01a46b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e017fa530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7e017fa888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e01a57d98"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01a584d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b7e01a571f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7e01a58d78"/>
        <function-ref name="getdt" scoped="" ref="0x2b7e01a55688"/>
        <function-ref name="gett0" scoped="" ref="0x2b7e01a55238"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01a58928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7e01a456f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b7e01a577c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7e01a45b90"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01a58088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b7e01a51208" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b7e01a51208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e017fa530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7e017fa888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e01a615f0"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01a4fb28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b7e01a628c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7e01a62470"/>
        <function-ref name="getdt" scoped="" ref="0x2b7e01a60020"/>
        <function-ref name="gett0" scoped="" ref="0x2b7e01a61a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01a62020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7e01a51d50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b7e01a61020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7e01a4f238"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01a4f6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b7e01a5c980" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b7e01a5c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e017fa530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7e017fa888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7e01a5e560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7e01a544d8" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7e01a544d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e01a54828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b7e01a74e40" loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b7e01a74e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e017fa530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7e017fa888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7e01a78be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7e01a73548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7e01a730c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b7e01a739d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7e01a6d020" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7e01a6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e01a6d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b7e01a65838" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b7e01a65838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e017fa530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7e017fa888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e01a64020"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01a6b020"/>
        <function-ref name="startAt" scoped="" ref="0x2b7e01a6b930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01a6b4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7e01a644a8"/>
        <function-ref name="start" scoped="" ref="0x2b7e01a6c5e0"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01a6cab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b7e01b64938" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b7e01b64938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e017fa530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7e017fa888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e01b60020"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01b61088"/>
        <function-ref name="startAt" scoped="" ref="0x2b7e01b61998"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01b61510"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7e01b604a8"/>
        <function-ref name="start" scoped="" ref="0x2b7e01b636b0"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01b63b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7e01b64190" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7e01b64190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b7e0177ad88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b7e0177ad88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e01b644e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b7e01b60a90" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7e01b60a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e017fa530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7e017fa888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7e01b5f828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7e01b78190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7e01b5fcb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b7e01b78618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b7e01f66b60" loc="38:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b7e01f66b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b7e01f8f020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b7e01f8f1a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b7e01f8f330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b7e01f8f4b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b7e01f8f640"/>
        <function-ref name="setControl" scoped="" ref="0x2b7e01f8f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b7e01f71888" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b7e01f71888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e017fa530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7e017fa888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e01f6e020"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01f6f020"/>
        <function-ref name="startAt" scoped="" ref="0x2b7e01f6f930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01f6f4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7e01f6e4a8"/>
        <function-ref name="start" scoped="" ref="0x2b7e01f70660"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01f70b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7e01f710e0" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7e01f710e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e01f71430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b7e01f6ea90" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7e01f6ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e017fa530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7e017fa888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7e01f6c828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7e01f6b190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7e01f6ccb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b7e01f6b618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x2b7e01f8bbb0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b7e01f8bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b7e01f8a7c8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b7e01f8a1a8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b7e01f8a330"/>
        <function-ref name="countBusy" scoped="" ref="0x2b7e01f8a4b8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b7e01f8a640"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b7e01f8a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b7e01f8fb58" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b7e01f8fb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b7e01f8b310"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01f8d0c0"/>
        <function-ref name="get" scoped="" ref="0x2b7e01f8e728"/>
        <function-ref name="reset" scoped="" ref="0x2b7e01f8d548"/>
        <function-ref name="isOn" scoped="" ref="0x2b7e01f8b798"/>
        <function-ref name="set" scoped="" ref="0x2b7e01f8ebb0"/>
        <function-ref name="start" scoped="" ref="0x2b7e01f8d9d0"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01f8de58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b7e01f6bb98" loc="37:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7e01f6bb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b7e01f67db8"/>
        <function-ref name="test" scoped="" ref="0x2b7e01f674a8"/>
        <function-ref name="get" scoped="" ref="0x2b7e01f6a760"/>
        <function-ref name="setScale" scoped="" ref="0x2b7e01f66270"/>
        <function-ref name="getScale" scoped="" ref="0x2b7e01f66748"/>
        <function-ref name="reset" scoped="" ref="0x2b7e01f69580"/>
        <function-ref name="overflow" scoped="" ref="0x2b7e01f690f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b7e01f67930"/>
        <function-ref name="set" scoped="" ref="0x2b7e01f6abe8"/>
        <function-ref name="start" scoped="" ref="0x2b7e01f69a08"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01f67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b7e01afb020" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b7e01afb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b7e01afb370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b7e01afb4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b7e01afb680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b7e01afb808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b7e01afb990"/>
        <function-ref name="setControl" scoped="" ref="0x2b7e01afbb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b7e01af6218" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b7e01af6218"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b7e01af6d10"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b7e01af66f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b7e01af6878"/>
        <function-ref name="countBusy" scoped="" ref="0x2b7e01af6a00"/>
        <function-ref name="getAssr" scoped="" ref="0x2b7e01af6b88"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b7e01af6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b7e01afa020" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b7e01afa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b7e01af87a8"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01af9560"/>
        <function-ref name="get" scoped="" ref="0x2b7e01afaba0"/>
        <function-ref name="reset" scoped="" ref="0x2b7e01af99e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b7e01af8c30"/>
        <function-ref name="set" scoped="" ref="0x2b7e01af9088"/>
        <function-ref name="start" scoped="" ref="0x2b7e01af9e70"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01af8320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b7e01aebe00" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7e01aebe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b7e01afd0f8"/>
        <function-ref name="test" scoped="" ref="0x2b7e01afe798"/>
        <function-ref name="get" scoped="" ref="0x2b7e01ae8a18"/>
        <function-ref name="setScale" scoped="" ref="0x2b7e01afd580"/>
        <function-ref name="getScale" scoped="" ref="0x2b7e01afda58"/>
        <function-ref name="reset" scoped="" ref="0x2b7e01ae7980"/>
        <function-ref name="overflow" scoped="" ref="0x2b7e01ae74f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b7e01afec20"/>
        <function-ref name="set" scoped="" ref="0x2b7e01ae7020"/>
        <function-ref name="start" scoped="" ref="0x2b7e01ae7e08"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01afe310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b7e01b05160" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b7e01b05160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b7e01b054b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b7e01b05638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b7e01b057c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b7e01b05948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b7e01b05ad0"/>
        <function-ref name="setControl" scoped="" ref="0x2b7e01b05c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b7e01b00268" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b7e01b00268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b7e01b005b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b7e01b00958" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b7e01b00958"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b7e01aff4b8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b7e01b00e30"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b7e01aff020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b7e01aff1a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b7e01aff330"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b7e01b00ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b7e01b04190" loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b7e01b04190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b7e01b01930"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01b036d0"/>
        <function-ref name="get" scoped="" ref="0x2b7e01b04d10"/>
        <function-ref name="reset" scoped="" ref="0x2b7e01b03b58"/>
        <function-ref name="isOn" scoped="" ref="0x2b7e01b01db8"/>
        <function-ref name="set" scoped="" ref="0x2b7e01b031f8"/>
        <function-ref name="start" scoped="" ref="0x2b7e01b01020"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01b014a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b7e01b0a180" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7e01b0a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b7e01b06270"/>
        <function-ref name="test" scoped="" ref="0x2b7e01b08930"/>
        <function-ref name="get" scoped="" ref="0x2b7e01b0ad00"/>
        <function-ref name="setScale" scoped="" ref="0x2b7e01b066f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b7e01b06bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b7e01b09b58"/>
        <function-ref name="overflow" scoped="" ref="0x2b7e01b096d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b7e01b08db8"/>
        <function-ref name="set" scoped="" ref="0x2b7e01b091f8"/>
        <function-ref name="start" scoped="" ref="0x2b7e01b08020"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01b084a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b7e01b96cf0" loc="74:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b7e01b96cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7e01b950a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b7e01b95228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b7e01b9ac70" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b7e01b9ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e017fa530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7e017fa888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e01b96410"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01b974a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b7e01b97db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01b97930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7e01b96898"/>
        <function-ref name="start" scoped="" ref="0x2b7e01b989f0"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01b97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b7e01b9fab0" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7e01b9fab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e017fa530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7e017fa888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e01b9bd60"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01b9c470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b7e01b9b1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7e01b9cd10"/>
        <function-ref name="getdt" scoped="" ref="0x2b7e01b9a648"/>
        <function-ref name="gett0" scoped="" ref="0x2b7e01b9a1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01b9c8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7e01b9e620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b7e01b9b790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7e01b9eac0"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01b9c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b7e01be4478" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b7e01be4478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7e01be47c8"/>
        <function-ref name="runTask" scoped="" ref="0x2b7e01be4950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b7e01be9208" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b7e01be9208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e017fa530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7e017fa888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e01be55f0"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01be7b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b7e01be68c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7e01be6470"/>
        <function-ref name="getdt" scoped="" ref="0x2b7e01be4020"/>
        <function-ref name="gett0" scoped="" ref="0x2b7e01be5a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01be6020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7e01be9d50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b7e01be5020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7e01be7238"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01be76d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b7e01bd4020" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7e01bd4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e017fa530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7e017fa888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e01bea358"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01bed9b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b7e01bec748"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7e01bec2d8"/>
        <function-ref name="getdt" scoped="" ref="0x2b7e01beac38"/>
        <function-ref name="gett0" scoped="" ref="0x2b7e01bea7c8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01bede28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7e01bd4b88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b7e01becd38"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7e01bed088"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01bed548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b7e01be1c38" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b7e01be1c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e017fa530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7e017fa888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7e01bf3820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b7e01bf3e48" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7e01bf3e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e017fa530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b7e017fa888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7e01bf2be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7e01bf1548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7e01bf10c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b7e01bf19d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b7e01c00a60" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TimerMicroC.nc">
      <component-ref qname="MyTimerAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7e01c00a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e01803430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7e01803788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e01c55d60"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01c56470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b7e01c551c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7e01c56d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b7e01c54648"/>
        <function-ref name="gett0" scoped="" ref="0x2b7e01c541f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01c568c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7e01c58620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b7e01c55790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7e01c58ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01c56020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMicro" ref="0x2b7e01c149a8" loc="49:/homes/mhartmann/baq/tinyos/tos/system/TimerMicroP.nc">
      <component-ref qname="TimerMicroP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMicro" scoped="" ref="0x2b7e01c149a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e01803430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7e01803788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e01c10bc0"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01c122e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b7e01c10020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7e01c12b88"/>
        <function-ref name="getdt" scoped="" ref="0x2b7e01c0f4d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b7e01c0f088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01c12738"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7e01c13528"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b7e01c105f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7e01c139c8"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01c13e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b7e01c21150" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
      <component-ref qname="HilTimerMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b7e01c21150"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e01803430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7e01803788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7e01c21cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMicro" ref="0x2b7e01c26030" loc="49:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
      <component-ref qname="HilTimerMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMicro" scoped="" ref="0x2b7e01c26030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e01803430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7e01803788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e01c232b8"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01c25978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b7e01c246c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7e01c24278"/>
        <function-ref name="getdt" scoped="" ref="0x2b7e01c23b58"/>
        <function-ref name="gett0" scoped="" ref="0x2b7e01c23708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01c25dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7e01c26b78"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b7e01c24c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7e01c25088"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01c25528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7e01c0b310" loc="48:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
      <component-ref qname="HilTimerMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7e01c0b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e01c0b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMicro32" ref="0x2b7e01c333b8" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMicroP.nc">
      <component-ref qname="AlarmCounterMicroP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMicro32" scoped="" ref="0x2b7e01c333b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e01803430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7e01803788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7e01c32130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7e01c32a40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7e01c325b8"/>
        <function-ref name="overflow" scoped="" ref="0x2b7e01c31020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMicro32" ref="0x2b7e01c1b0e0" loc="31:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMicroP.nc">
      <component-ref qname="AlarmCounterMicroP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMicro32" scoped="" ref="0x2b7e01c1b0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e01803430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7e01803788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e01c19738"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01c1a7d8"/>
        <function-ref name="startAt" scoped="" ref="0x2b7e01c19130"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01c1ac60"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7e01c19bc0"/>
        <function-ref name="start" scoped="" ref="0x2b7e01c1be30"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01c1a350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7e01c1e738" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMicroP.nc">
      <component-ref qname="AlarmCounterMicroP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7e01c1e738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e01c1ea88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b7e01c2f1a8" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMicroP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b7e01c2f1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e01803430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7e01803788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e01c2c918"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01c2d980"/>
        <function-ref name="startAt" scoped="" ref="0x2b7e01c2c310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01c2de08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7e01c2cda0"/>
        <function-ref name="start" scoped="" ref="0x2b7e01c2d020"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01c2d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7e01c309a0" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMicroP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7e01c309a0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b7e0177ad88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b7e0177ad88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e01c30cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b7e01c2b3d0" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMicroP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7e01c2b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e01803430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7e01803788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7e01c29150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7e01c29a60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7e01c295d8"/>
        <function-ref name="overflow" scoped="" ref="0x2b7e01c28020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b7e01ff9438" loc="38:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMicroP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b7e01ff9438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b7e01ff9788"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b7e01ff9910"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b7e01ff9a98"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b7e01ff9c20"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b7e01ff9da8"/>
        <function-ref name="setControl" scoped="" ref="0x2b7e01ff8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b7e01fd90a0" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMicroP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b7e01fd90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e01803430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7e01803788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e020026c8"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01fd8778"/>
        <function-ref name="startAt" scoped="" ref="0x2b7e020020c0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01fd8c00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7e02002b50"/>
        <function-ref name="start" scoped="" ref="0x2b7e01fd9df0"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01fd82f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b7e01fdb8b0" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMicroP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b7e01fdb8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b7e01fdbc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b7e02001160" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMicroP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7e02001160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e01803430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7e01803788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7e01fff020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7e01fff930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7e01fff4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b7e01fffdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x2b7e01ff4510" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMicroP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b7e01ff4510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b7e01ff3030"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b7e01ff49e8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b7e01ff4b70"/>
        <function-ref name="countBusy" scoped="" ref="0x2b7e01ff4cf8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b7e01ff4e80"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b7e01ff4860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b7e01ff83b0" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMicroP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b7e01ff83b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b7e01ff5c20"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01ff7980"/>
        <function-ref name="get" scoped="" ref="0x2b7e01ff7020"/>
        <function-ref name="reset" scoped="" ref="0x2b7e01ff7e08"/>
        <function-ref name="isOn" scoped="" ref="0x2b7e01ff40f8"/>
        <function-ref name="set" scoped="" ref="0x2b7e01ff74a8"/>
        <function-ref name="start" scoped="" ref="0x2b7e01ff5310"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01ff5798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b7e01ffe368" loc="37:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMicroP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7e01ffe368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b7e01ffa580"/>
        <function-ref name="test" scoped="" ref="0x2b7e01ffcc20"/>
        <function-ref name="get" scoped="" ref="0x2b7e01ffd020"/>
        <function-ref name="setScale" scoped="" ref="0x2b7e01ffaa08"/>
        <function-ref name="getScale" scoped="" ref="0x2b7e01ff9020"/>
        <function-ref name="reset" scoped="" ref="0x2b7e01ffde08"/>
        <function-ref name="overflow" scoped="" ref="0x2b7e01ffd980"/>
        <function-ref name="isOn" scoped="" ref="0x2b7e01ffa0f8"/>
        <function-ref name="set" scoped="" ref="0x2b7e01ffd4a8"/>
        <function-ref name="start" scoped="" ref="0x2b7e01ffc310"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01ffc798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b7e01c3acf0" loc="74:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMicroC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b7e01c3acf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7e01c390a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b7e01c39228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b7e01c3ec70" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMicroC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b7e01c3ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e01803430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7e01803788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e01c3a410"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01c3b4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b7e01c3bdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01c3b930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b7e01c3a898"/>
        <function-ref name="start" scoped="" ref="0x2b7e01c3d9f0"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01c3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b7e01c1cac0" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMicroC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7e01c1cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e01803430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7e01803788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e01c3fd60"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01c41470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b7e01c3f1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7e01c41d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b7e01c3e648"/>
        <function-ref name="gett0" scoped="" ref="0x2b7e01c3e1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01c418c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7e01c42658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b7e01c3f790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7e01c42af8"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01c41020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b7e01c48930" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMicroC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b7e01c48930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b7e01c48c80"/>
        <function-ref name="runTask" scoped="" ref="0x2b7e01c48e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b7e01c4d858" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMicroC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b7e01c4d858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e01803430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7e01803788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e01c49bc0"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01c4a1c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b7e01c49020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7e01c4aa60"/>
        <function-ref name="getdt" scoped="" ref="0x2b7e01c484d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b7e01c48088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01c4a610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7e01c4b3d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b7e01c495f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7e01c4b878"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01c4bd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b7e01c375e0" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMicroC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b7e01c375e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e01803430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7e01803788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b7e01c4e988"/>
        <function-ref name="fired" scoped="" ref="0x2b7e01c50020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b7e01c50d70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b7e01c50900"/>
        <function-ref name="getdt" scoped="" ref="0x2b7e01c4d2d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b7e01c4edf8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b7e01c50490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b7e01c36198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b7e01c4e398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b7e01c36658"/>
        <function-ref name="stop" scoped="" ref="0x2b7e01c36b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b7e01c45e18" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b7e01c45e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e01803430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7e01803788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7e01c44a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b7e01c430a0" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b7e01c430a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b7e01803430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b7e01803788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b7e01c43df0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b7e01c5e738"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b7e01c5e2b0"/>
        <function-ref name="overflow" scoped="" ref="0x2b7e01c5ebc0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b7e01875178" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7e01784ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b7e0186de08" loc="60:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b7e0187b290" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7e0157c378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b7e0187b020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b7e0187f940" loc="31:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="27:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b7e0157c378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b7e0187e378" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b7e0187e108" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b7e0187ee00" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b7e0187eb90" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b7e0187d698" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b7e018920d8" loc="44:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b7e018927a0" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7e0177b4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b7e01893328" loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b7e01891570" loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7e0177b4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b7e018939c8" loc="43:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7e0177b4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b7e01892e58" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b7e018955a8" loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b7e01895c18" loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b7e017803a0" loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b7e0177e290" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b7e01780ab8" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7e0177b4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b7e0178a070" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b7e01784ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b7e0178a860" loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b7e0183d450" loc="76:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b7e01853d28" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b7e017d91a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b7e0185d6d8" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b7e01a2e7a8" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7e01a2e7a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b7e01a39020" loc="136:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b7e01a2aba0" loc="83:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b7e01a27800" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b7e01a27268" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b7e01a27580" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b7e01a29af8" loc="98:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7e0177b4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b7e01a38020" loc="151:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b7e01a39740" loc="144:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b7e01a29360" loc="92:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7e0177b4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b7e01a2b2d0" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b7e01a2b060" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b7e01a3a6f0" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b7e01a3a158" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b7e01a3a470" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b7e01a2bd10" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b7e01a2baa0" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b7e01a2a500" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b7e01a60bf0" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7e01a60bf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b7e01a5c4c8" loc="61:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b7e0157cdb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b7e01a763f8" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7e01a763f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b7e01a76628" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7e01a76628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b7e01a75020" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7e01a76628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b7e01a74070" loc="76:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b7e01a75838" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7e0177b4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b7e01a74760" loc="82:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b7e01a6de18" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b7e01a6de18"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b7e01a6a068" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7e01a6a068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b7e01a67958" loc="109:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7e01a6a068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b7e01a69a78" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b7e01a67020" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7e01a6a068"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7e01a6a068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b7e01a68a08" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7e01a6a068"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b7e01a68d28" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7e01a6a068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b7e01a68258" loc="88:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7e0177b4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b7e01a65110" loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7e01a6a068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b7e01a6ab28" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7e01a6a068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b7e01a6a8b8" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7e01a6a068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b7e01a69328" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b7e01a90a58" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b7e01806a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b7e01806e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b7e01aa1e18" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b7e01813100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b7e01813508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b7e01aa2c70" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b7e0180a980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b7e0180ad88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b7e01aa1678" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b7e0180a980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b7e0180ad88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b7e01aa1408" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b7e0180a980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b7e0180ad88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b7e01aa0828" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b7e01813100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b7e01813508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b7e01aa05b8" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b7e01813100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b7e01813508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b7e01aa24c8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b7e01806a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b7e01806e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b7e01aa2258" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b7e01806a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b7e01806e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerSync" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer0Synchronous" ref="0x2b7e01aa8328" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBusy" ref="0x2b7e01aa8a30" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b7e01aa7258" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b7e01aa7a08" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b7e01aa9110" loc="28:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="24:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b7e0180d118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b7e0180d520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b7e01aa9ac0" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b7e0180d118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b7e0180d520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b7e01aa9850" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b7e0180d118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b7e0180d520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b7e01a9d068" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7e01a9d068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b7e01a9a738" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7e0177b4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b7e01a9c9d0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b7e01a9d920" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7e01a9d068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b7e01a9b110" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b7e01aae020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7e0177b4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b7e01a9c290" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7e01a9d068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b7e01a9c020" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b7e01a9d068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b7e01a9b808" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b7e01a9a020" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b7e01a85418" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b7e01a85418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b7e01a96900" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b7e01a97a40" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7e0177b4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b7e01a85cb8" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b7e01a85418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b7e01a95290" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b7e01a95020" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b7e01a95a10" loc="110:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="106:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b7e0157a910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b7e01a994c0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b7e01a84d50" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b7e01a961d8" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b7e0177b4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b7e01a84630" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b7e01a85418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b7e01a843c0" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b7e01a85418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b7e01a99bb8" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b7e01a97328" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
