<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:SpeedTestAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b47bd82fa10"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b47bd82c220"/></to>
    </wire>
    <wire loc="72:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b47bd82c220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b47bd9dc198"/></to>
    </wire>
    <wire loc="10:SpeedTestAppC.nc">
      <from><interface-ref name="LCD2x16" scoped="" ref="0x2b47bd9e0d40"/></from>
      <to><interface-ref name="Lcd2x16" scoped="" ref="0x2b47bd9e54a8"/></to>
    </wire>
    <wire loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16C.nc">
      <from><interface-ref name="Lcd2x16" scoped="" ref="0x2b47bd9e54a8"/></from>
      <to><interface-ref name="LCD2x16" scoped="" ref="0x2b47bda0d7a0"/></to>
    </wire>
    <wire loc="11:SpeedTestAppC.nc">
      <from><interface-ref name="Measure0" scoped="" ref="0x2b47bd9e38f0"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x2b47bd85c020"/></to>
    </wire>
    <wire loc="151:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b47bd85c020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b47bd8e1020"/></to>
    </wire>
    <wire loc="12:SpeedTestAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b47bd9e8578"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b47bda2a420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b47bda2a420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b47bda387d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b47bd82b620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b47bda2f0f0"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b47bd9dc7d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b47bd734600"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b47bd734600"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b47bd7eb448"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b47bd9db1d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b47bd82e620"/></to>
    </wire>
    <wire loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b47bd82e620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b47bd83d600"/></to>
    </wire>
    <wire loc="71:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b47bd9db898"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b47bd82b620"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b47bd831618"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b47bd9be8f0"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b47bd83c398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b47bd9be2c0"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b47bd83dca0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b47bd836b98"/></to>
    </wire>
    <wire loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b47bd836b98"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b47bd840698"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b47bd843360"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b47bd829380"/></to>
    </wire>
    <wire loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b47bd83fb08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b47bd843360"/></to>
    </wire>
    <wire loc="191:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b47bd888af0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bd961970"/></to>
    </wire>
    <wire loc="165:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b47bd86a658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b47bd908020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b47bd908020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdd50480"/></to>
    </wire>
    <wire loc="176:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b47bd87b658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b47bd917d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b47bd917d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bddb2480"/></to>
    </wire>
    <wire loc="185:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b47bd880348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b47bd9195b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b47bd9195b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bde24480"/></to>
    </wire>
    <wire loc="143:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b47bd856348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b47bd8df740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b47bd8df740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdc3c480"/></to>
    </wire>
    <wire loc="183:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b47bd882020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b47bd91b2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b47bd91b2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bde2a480"/></to>
    </wire>
    <wire loc="146:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b47bd854658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b47bd8e7930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b47bd8e7930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdc7d3e0"/></to>
    </wire>
    <wire loc="157:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b47bd8657e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b47bd8f6740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b47bd8f6740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdced480"/></to>
    </wire>
    <wire loc="168:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b47bd875af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b47bd904430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b47bd904430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdd69480"/></to>
    </wire>
    <wire loc="179:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b47bd878af0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b47bd913120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b47bd913120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bddcd480"/></to>
    </wire>
    <wire loc="138:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b47bd84eaf0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b47bd8d4020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b47bd8d4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdc2d480"/></to>
    </wire>
    <wire loc="149:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b47bd85faf0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b47bd8e4d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b47bd8e4d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdc92480"/></to>
    </wire>
    <wire loc="160:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b47bd862c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b47bd8f3bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b47bd8f3bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdd04480"/></to>
    </wire>
    <wire loc="171:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b47bd871020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b47bd9018c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b47bd9018c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdd60480"/></to>
    </wire>
    <wire loc="188:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b47bd87d7e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b47bd928a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b47bd928a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bde41480"/></to>
    </wire>
    <wire loc="194:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b47bd8847e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bd976020"/></to>
    </wire>
    <wire loc="174:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b47bd86f348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b47bd909a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b47bd909a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bddb8480"/></to>
    </wire>
    <wire loc="141:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b47bd858020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b47bd8d1430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b47bd8d1430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdc24480"/></to>
    </wire>
    <wire loc="152:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b47bd85b1a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b47bd8f0120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b47bd8f0120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdc89480"/></to>
    </wire>
    <wire loc="192:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b47bd8864d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bd96eab0"/></to>
    </wire>
    <wire loc="155:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b47bd8674d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b47bd8f8500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b47bd8f8500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdcf33e0"/></to>
    </wire>
    <wire loc="166:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b47bd8697e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b47bd907120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b47bd907120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdd4d480"/></to>
    </wire>
    <wire loc="177:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b47bd87a7e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b47bd916e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b47bd916e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bddd3480"/></to>
    </wire>
    <wire loc="186:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b47bd87f4d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b47bd92a740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b47bd92a740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bde21480"/></to>
    </wire>
    <wire loc="144:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b47bd8554d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b47bd8de8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b47bd8de8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdc38480"/></to>
    </wire>
    <wire loc="147:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b47bd8537e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b47bd8e6a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b47bd8e6a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdc7a480"/></to>
    </wire>
    <wire loc="158:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b47bd864968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b47bd8f58c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b47bd8f58c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdcea480"/></to>
    </wire>
    <wire loc="169:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b47bd874c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b47bd9035b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b47bd9035b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdd66480"/></to>
    </wire>
    <wire loc="180:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b47bd877c78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b47bd9122a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b47bd9122a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bddca480"/></to>
    </wire>
    <wire loc="139:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b47bd84dc78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b47bd8d3120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b47bd8d3120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdc2a480"/></to>
    </wire>
    <wire loc="150:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b47bd85ec78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b47bd8e3e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b47bd8e3e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdc8f480"/></to>
    </wire>
    <wire loc="161:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b47bd861e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b47bd8f1d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b47bd8f1d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdd01480"/></to>
    </wire>
    <wire loc="189:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b47bd889968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b47bd927bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b47bd927bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bde3e480"/></to>
    </wire>
    <wire loc="164:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b47bd86b1a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b47bd8fae40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b47bd8fae40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdd533e0"/></to>
    </wire>
    <wire loc="175:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b47bd87c4d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b47bd918bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b47bd918bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bddb5480"/></to>
    </wire>
    <wire loc="184:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b47bd8811a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b47bd91a430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b47bd91a430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bde27480"/></to>
    </wire>
    <wire loc="195:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b47bd891968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bd983180"/></to>
    </wire>
    <wire loc="142:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b47bd8571a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b47bd8e05b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b47bd8e05b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdc21480"/></to>
    </wire>
    <wire loc="153:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b47bd85a348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b47bd8ef2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b47bd8ef2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdca5480"/></to>
    </wire>
    <wire loc="182:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b47bd876e00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b47bd91c1e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b47bd91c1e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bde2d3e0"/></to>
    </wire>
    <wire loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b47bd866658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b47bd8f75b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b47bd8f75b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdcf0480"/></to>
    </wire>
    <wire loc="167:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b47bd868968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b47bd9052a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b47bd9052a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdd4a480"/></to>
    </wire>
    <wire loc="178:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b47bd879968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b47bd914020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b47bd914020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bddd0480"/></to>
    </wire>
    <wire loc="187:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b47bd87e658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b47bd9298c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b47bd9298c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bde1e480"/></to>
    </wire>
    <wire loc="137:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b47bd841878"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b47bd8d6dc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b47bd8d6dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdc133e0"/></to>
    </wire>
    <wire loc="148:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b47bd860968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b47bd8e5bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b47bd8e5bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdc95480"/></to>
    </wire>
    <wire loc="159:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b47bd863af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b47bd8f4a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b47bd8f4a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdce7480"/></to>
    </wire>
    <wire loc="170:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b47bd873e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b47bd902740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b47bd902740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdd63480"/></to>
    </wire>
    <wire loc="193:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b47bd885658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bd96ac38"/></to>
    </wire>
    <wire loc="173:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b47bd8701a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b47bd90a930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b47bd90a930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bddbb3e0"/></to>
    </wire>
    <wire loc="162:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b47bd86c020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b47bd900e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b47bd900e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdcfe480"/></to>
    </wire>
    <wire loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b47bd84ce00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b47bd8d22a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b47bd8d22a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdc27480"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b47bd8e1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b47bdc8c480"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b47bd7371c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b47bd7ea2b0"/></to>
    </wire>
    <wire loc="55:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b47bd7f3758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b47bd80a660"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b47bd8102b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b47bdae9268"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b47bda387d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b47bda2fde8"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b47bda2fde8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b47bdbcb020"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b47bda2f0f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b47bda3db90"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b47bda3b338"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b47bdbdac38"/></to>
    </wire>
    <wire loc="43:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b47bda3db90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b47bdb54190"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b47bdbc5208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b47bdb75ab0"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b47bdb70c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b47bda45748"/></to>
    </wire>
    <wire loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b47bda45748"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b47bdb54938"/></to>
    </wire>
    <wire loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b47bdbd9e48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b47bda53e40"/></to>
    </wire>
    <wire loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b47bda53e40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b47bdb51a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b47bdb51a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b47bdf00ce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b47bdb54190"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b47bdf03438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b47bdb54938"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b47bdf03be0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b47bdefc020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b47bdad4e00"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b47bdad4e00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b47bdadb180"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b47bdef8e70"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b47bdae4020"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b47bdae4020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b47bdaee160"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2b47bdef7d20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b47bdae3020"/></to>
    </wire>
    <wire loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b47bdae3020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b47bdaed190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b47bdf1bdb0"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b47bdadf218"/></to>
    </wire>
    <wire loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b47bdadf218"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b47bdae9958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2b47bdb87cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b47bd7371c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b47bdbdc478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b47bd7371c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc" safe="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc" safe="">
      <documentation loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SpeedTestC" loc="3:SpeedTestC.nc">
      <module/>
    </component>
    <component qname="LCD2x16C" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16C.nc">
      <configuration/>
    </component>
    <component qname="LCD2x16P" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16P.nc">
      <module/>
    </component>
    <component qname="SpeedTestAppC.Timer0" loc="44(SpeedTestAppC.Timer0):/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="33:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b47bd7b0530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b47bd7b0888"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b47bda52c68"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0SyncC" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0SyncP" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in SYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in SYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in SYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;--> CHANGED TO SYNC-Mode(CPL_CLK)&#9;hglanzer&#10;--> AS0=0 in ASSR&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b47bd7b0530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b47bd7b0888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b47bd7b0530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b47bd7b0888"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b47bd7b0530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b47bd7b0888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b47bd88eba0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b47bd898020" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b47bd898368" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b47bd89c610" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b47bd89c978" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b47bd89cce0" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b47bd899060" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b47bd930020" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b47bd930388" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b47bd9306f0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b47bd930a20" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncC" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc" abstract="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b47bda52c68" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b47bda52c68"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b47bda64020" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncP" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b47bda70410" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b47bda70410"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b47bda70700" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b47bda4fc68" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b47bda4fc68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b47bdb84cd0" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b47bdb84cd0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b47bdb81020" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b47bdbd8510" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b47bdbd8510"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b47bd82b620" loc="58:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b47bd82b620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b47bd82b970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b47bd82c220" loc="57:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b47bd82c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b47bd82c570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b47bd829380" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b47bd829380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b47bd8296d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b47bd82e620" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b47bd82e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b47bd82e970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b47bd831618" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b47bd831618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b47bd831968"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b47bd831af0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b47bd831c78"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b47bd831e00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b47bd829020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b47bd83dca0" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b47bd83dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b47bd83c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b47bd83d600" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b47bd83d600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b47bd83d950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b47bd83c398" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b47bd83c398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b47bd83c6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b47bd843360" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b47bd843360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b47bd8436b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b47bd836b98" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b47bd836b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b47bd843020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b47bd83fb08" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b47bd83fb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b47bd83fe58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b47bd8478d8" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b47bd8478d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd847c28"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd847db0"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd83f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd83f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd83f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd83f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd83f640"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd83f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b47bd840698" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b47bd840698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b47bd8409e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b47bd888af0" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b47bd888af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8875e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd887770"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8878f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd887a80"/>
        <function-ref name="get" scoped="" ref="0x2b47bd887c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd887d90"/>
        <function-ref name="set" scoped="" ref="0x2b47bd886020"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8861a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b47bd86a658" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b47bd86a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd86a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd86ab30"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd86acb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd86ae40"/>
        <function-ref name="get" scoped="" ref="0x2b47bd869020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8691a8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd869330"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8694b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b47bd87b658" loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b47bd87b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd87b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd87bb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd87bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd87be40"/>
        <function-ref name="get" scoped="" ref="0x2b47bd87a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd87a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd87a330"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd87a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b47bd880348" loc="94:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b47bd880348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd880698"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd880820"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8809a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd880b30"/>
        <function-ref name="get" scoped="" ref="0x2b47bd880cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd880e40"/>
        <function-ref name="set" scoped="" ref="0x2b47bd87f020"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd87f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b47bd856348" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b47bd856348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd856698"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd856820"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8569a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd856b30"/>
        <function-ref name="get" scoped="" ref="0x2b47bd856cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd856e40"/>
        <function-ref name="set" scoped="" ref="0x2b47bd855020"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8551a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b47bd882020" loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b47bd882020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd882370"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8824f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd882680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd882808"/>
        <function-ref name="get" scoped="" ref="0x2b47bd882990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd882b18"/>
        <function-ref name="set" scoped="" ref="0x2b47bd882ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd882e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b47bd854658" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b47bd854658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8549a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd854b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd854cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd854e40"/>
        <function-ref name="get" scoped="" ref="0x2b47bd853020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8531a8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd853330"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8534b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b47bd8657e0" loc="66:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b47bd8657e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd865b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd865cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd865e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd864020"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8641a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd864330"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8644b8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd864640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b47bd875af0" loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b47bd875af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd875e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd874020"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8741a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd874330"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8744b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd874640"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8747c8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd874950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b47bd878af0" loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b47bd878af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd878e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd877020"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8771a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd877330"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8774b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd877640"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8777c8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd877950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b47bd84eaf0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b47bd84eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd84ee40"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd84d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd84d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd84d330"/>
        <function-ref name="get" scoped="" ref="0x2b47bd84d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd84d640"/>
        <function-ref name="set" scoped="" ref="0x2b47bd84d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd84d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b47bd85faf0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b47bd85faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd85fe40"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd85e020"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd85e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd85e330"/>
        <function-ref name="get" scoped="" ref="0x2b47bd85e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd85e640"/>
        <function-ref name="set" scoped="" ref="0x2b47bd85e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd85e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b47bd862c78" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b47bd862c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd861020"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8611a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd861330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8614b8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd861640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8617c8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd861950"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd861ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b47bd871020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b47bd871020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd871370"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8714f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd871680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd871808"/>
        <function-ref name="get" scoped="" ref="0x2b47bd871990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd871b18"/>
        <function-ref name="set" scoped="" ref="0x2b47bd871ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd871e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b47bd87d7e0" loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b47bd87d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd87db30"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd87dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd87de40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd889020"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8891a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd889330"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8894b8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd889640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b47bd8847e0" loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b47bd8847e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd884b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd884cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd884e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd891020"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8911a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd891330"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8914b8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd891640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b47bd86f348" loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b47bd86f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd86f698"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd86f820"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd86f9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd86fb30"/>
        <function-ref name="get" scoped="" ref="0x2b47bd86fcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd86fe40"/>
        <function-ref name="set" scoped="" ref="0x2b47bd87c020"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd87c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b47bd858020" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b47bd858020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd858370"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8584f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd858680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd858808"/>
        <function-ref name="get" scoped="" ref="0x2b47bd858990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd858b18"/>
        <function-ref name="set" scoped="" ref="0x2b47bd858ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd858e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b47bd85b1a0" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b47bd85b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd85b4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd85b678"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd85b800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd85b988"/>
        <function-ref name="get" scoped="" ref="0x2b47bd85bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd85bc98"/>
        <function-ref name="set" scoped="" ref="0x2b47bd85be20"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd85a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b47bd8864d0" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b47bd8864d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd886820"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8869a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd886b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd886cb8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd886e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd885020"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8851a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd885330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b47bd8674d0" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b47bd8674d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd867820"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8679a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd867b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd867cb8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd867e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd866020"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8661a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd866330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b47bd8697e0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b47bd8697e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd869b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd869cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd869e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd868020"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8681a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd868330"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8684b8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd868640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b47bd87a7e0" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b47bd87a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd87ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd87acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd87ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd879020"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8791a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd879330"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8794b8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd879640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b47bd87f4d0" loc="95:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b47bd87f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd87f820"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd87f9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd87fb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd87fcb8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd87fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd87e020"/>
        <function-ref name="set" scoped="" ref="0x2b47bd87e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd87e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b47bd8554d0" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b47bd8554d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd855820"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8559a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd855b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd855cb8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd855e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd854020"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8541a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd854330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b47bd8537e0" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b47bd8537e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd853b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd853cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd853e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd860020"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8601a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd860330"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8604b8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd860640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b47bd864968" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b47bd864968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd864cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd864e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd863020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8631a8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd863330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8634b8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd863640"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8637c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b47bd874c78" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b47bd874c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd873020"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8731a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd873330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8734b8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd873640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8737c8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd873950"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd873ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b47bd877c78" loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b47bd877c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd876020"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8761a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd876330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8764b8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd876640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8767c8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd876950"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd876ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b47bd84dc78" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b47bd84dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd84c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd84c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd84c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd84c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd84c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd84c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd84c950"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd84cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b47bd85ec78" loc="59:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b47bd85ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd85d0f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd85d278"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd85d400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd85d588"/>
        <function-ref name="get" scoped="" ref="0x2b47bd85d710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd85d898"/>
        <function-ref name="set" scoped="" ref="0x2b47bd85da20"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd85dba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b47bd861e00" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b47bd861e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd86e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd86e330"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd86e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd86e640"/>
        <function-ref name="get" scoped="" ref="0x2b47bd86e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd86e950"/>
        <function-ref name="set" scoped="" ref="0x2b47bd86ead8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd86ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b47bd889968" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b47bd889968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd889cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd889e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd888020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8881a8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd888330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8884b8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd888640"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8887c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b47bd86b1a0" loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b47bd86b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd86b6f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd86b878"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd86ba00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd86bb88"/>
        <function-ref name="get" scoped="" ref="0x2b47bd86bd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd86a020"/>
        <function-ref name="set" scoped="" ref="0x2b47bd86a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd86a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b47bd87c4d0" loc="84:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b47bd87c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd87c820"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd87c9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd87cb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd87ccb8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd87ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd87b020"/>
        <function-ref name="set" scoped="" ref="0x2b47bd87b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd87b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b47bd8811a0" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b47bd8811a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8814f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd881678"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd881800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd881988"/>
        <function-ref name="get" scoped="" ref="0x2b47bd881b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd881c98"/>
        <function-ref name="set" scoped="" ref="0x2b47bd881e20"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd880020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b47bd891968" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b47bd891968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd891cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd891e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd890020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8901a8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd890330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8904b8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd890640"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8907c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b47bd8571a0" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b47bd8571a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8574f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd857678"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd857800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd857988"/>
        <function-ref name="get" scoped="" ref="0x2b47bd857b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd857c98"/>
        <function-ref name="set" scoped="" ref="0x2b47bd857e20"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd856020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b47bd85a348" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b47bd85a348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd85a698"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd85a820"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd85a9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd85ab30"/>
        <function-ref name="get" scoped="" ref="0x2b47bd85acb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd85ae40"/>
        <function-ref name="set" scoped="" ref="0x2b47bd867020"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b47bd876e00" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b47bd876e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8831a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd883330"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8834b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd883640"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8837c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd883950"/>
        <function-ref name="set" scoped="" ref="0x2b47bd883ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd883c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b47bd866658" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b47bd866658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8669a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd866b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd866cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd866e40"/>
        <function-ref name="get" scoped="" ref="0x2b47bd865020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8651a8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd865330"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8654b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b47bd868968" loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b47bd868968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd868cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd868e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd875020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8751a8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd875330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8754b8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd875640"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8757c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b47bd879968" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b47bd879968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd879cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd879e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd878020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8781a8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd878330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8784b8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd878640"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8787c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b47bd87e658" loc="96:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b47bd87e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd87e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd87eb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd87ecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd87ee40"/>
        <function-ref name="get" scoped="" ref="0x2b47bd87d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd87d1a8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd87d330"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd87d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b47bd841878" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b47bd841878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd841bc8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd841d50"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd84e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd84e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd84e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd84e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd84e640"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd84e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b47bd860968" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b47bd860968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd860cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd860e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd85f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd85f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd85f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd85f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd85f640"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd85f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b47bd863af0" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b47bd863af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd863e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd862020"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8621a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd862330"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8624b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd862640"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8627c8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd862950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b47bd873e00" loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b47bd873e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8721a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd872330"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8724b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd872640"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8727c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd872950"/>
        <function-ref name="set" scoped="" ref="0x2b47bd872ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd872c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b47bd885658" loc="102:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b47bd885658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8859a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd885b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd885cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd885e40"/>
        <function-ref name="get" scoped="" ref="0x2b47bd884020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8841a8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd884330"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8844b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b47bd8701a0" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b47bd8701a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8704f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd870678"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd870800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd870988"/>
        <function-ref name="get" scoped="" ref="0x2b47bd870b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd870c98"/>
        <function-ref name="set" scoped="" ref="0x2b47bd870e20"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd86f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b47bd86c020" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b47bd86c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd86c370"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd86c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd86c680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd86c808"/>
        <function-ref name="get" scoped="" ref="0x2b47bd86c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd86cb18"/>
        <function-ref name="set" scoped="" ref="0x2b47bd86cca0"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd86ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b47bd84ce00" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b47bd84ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8591a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd859330"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8594b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd859640"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8597c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd859950"/>
        <function-ref name="set" scoped="" ref="0x2b47bd859ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd859c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b47bd85c020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b47bd85c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd85c370"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd85c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd85c680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd85c808"/>
        <function-ref name="get" scoped="" ref="0x2b47bd85c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd85cb18"/>
        <function-ref name="set" scoped="" ref="0x2b47bd85cca0"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd85ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b47bd8d3120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b47bd8d3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8d3470"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8d35f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8d3780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8d3908"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8d3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8d3c18"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8d3da0"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b47bd8e05b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b47bd8e05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8e0908"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8e0a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8e0c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8e0da0"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8df020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8df1a8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8df330"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8df4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b47bd8d6dc0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b47bd8d6dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8d5170"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8d52f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8d5480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8d5608"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8d5790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8d5918"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8d5aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8d5c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b47bd8d22a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b47bd8d22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8d25f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8d2780"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8d2908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8d2a90"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8d2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8d2da0"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8d1020"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8d11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b47bd8df740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b47bd8df740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8dfa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8dfc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8dfda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8de020"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8de1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8de330"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8de4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8de640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b47bd8d4020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b47bd8d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8d4370"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8d44f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8d4680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8d4808"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8d4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8d4b18"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8d4ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8d4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b47bd8d1430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b47bd8d1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8d1780"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8d1908"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8d1a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8d1c18"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8d1da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8e0020"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8e01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8e0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b47bd8de8c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b47bd8de8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8dec18"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8deda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8dd020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8dd1a8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8dd330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8dd4b8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8dd640"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8dd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdc133e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdc133e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdc13730"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdc138b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdc13a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdc13bc8"/>
        <function-ref name="get" scoped="" ref="0x2b47bdc13d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdc12020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdc121a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdc12330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdc2d480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdc2d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdc2d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdc2d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdc2dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdc2dc68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdc2ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdc2c020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdc2c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdc2c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdc2a480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdc2a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdc2a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdc2a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdc2aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdc2ac68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdc2adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdc29020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdc291a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdc29330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdc27480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdc27480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdc277d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdc27958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdc27ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdc27c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdc27df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdc26020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdc261a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdc26330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdc24480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdc24480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdc247d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdc24958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdc24ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdc24c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdc24df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdc23020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdc231a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdc23330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdc21480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdc21480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdc217d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdc21958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdc21ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdc21c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdc21df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdc20020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdc201a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdc20330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdc3c480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdc3c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdc3c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdc3c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdc3cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdc3cc68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdc3cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdc3a020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdc3a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdc3a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdc38480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdc38480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdc387d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdc38958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdc38ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdc38c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdc38df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdc37020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdc371a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdc37330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b47bd8e5bd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b47bd8e5bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8e4020"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8e41a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8e4330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8e44b8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8e4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8e47c8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8e4950"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8e4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b47bd8e1020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b47bd8e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8e1370"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8e14f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8e1680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8e1808"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8e1990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8e1b18"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8e1ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8e1e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b47bd8e7930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b47bd8e7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8e7c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8e7e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8e6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8e61a8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8e6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8e64b8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8e6640"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8e67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b47bd8e4d60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b47bd8e4d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8e30d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8e3260"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8e33e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8e3570"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8e36f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8e3880"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8e3a08"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8e3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b47bd8f0120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b47bd8f0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8f0470"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8f05f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8f0780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8f0908"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8f0a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8f0c18"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8f0da0"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b47bd8e6a50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b47bd8e6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8e6da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8e5020"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8e51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8e5330"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8e54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8e5640"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8e57c8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8e5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b47bd8e3e18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b47bd8e3e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8e21a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8e2330"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8e24b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8e2640"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8e27c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8e2950"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8e2ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8e2c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b47bd8ef2a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b47bd8ef2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8ef5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8ef780"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8ef908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8efa90"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8efc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8efda0"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8ee020"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8ee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdc7d3e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdc7d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdc7d730"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdc7d8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdc7da40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdc7dbc8"/>
        <function-ref name="get" scoped="" ref="0x2b47bdc7dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdc7c020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdc7c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdc7c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdc7a480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdc7a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdc7a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdc7a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdc7aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdc7ac68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdc7adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdc79020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdc791a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdc79330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdc95480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdc95480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdc957d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdc95958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdc95ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdc95c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdc95df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdc94020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdc941a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdc94330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdc92480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdc92480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdc927d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdc92958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdc92ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdc92c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdc92df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdc91020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdc911a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdc91330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdc8f480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdc8f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdc8f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdc8f958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdc8fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdc8fc68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdc8fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdc8e020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdc8e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdc8e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdc8c480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdc8c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdc8c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdc8c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdc8cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdc8cc68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdc8cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdc8b020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdc8b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdc8b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdc89480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdc89480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdc897d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdc89958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdc89ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdc89c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdc89df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdc88020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdc881a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdc88330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdca5480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdca5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdca57d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdca5958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdca5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdca5c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdca5df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdca3020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdca31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdca3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b47bd8f6740" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b47bd8f6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8f6a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8f6c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8f6da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8f5020"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8f51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8f5330"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8f54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8f5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b47bd8f3bd8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b47bd8f3bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8f1020"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8f11a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8f1330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8f14b8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8f1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8f17c8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8f1950"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8f1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b47bd8f8500" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b47bd8f8500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8f8850"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8f89d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8f8b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8f8ce8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8f8e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8f7020"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8f71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8f7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b47bd8f58c8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b47bd8f58c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8f5c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8f5da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8f4020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8f41a8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8f4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8f44b8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8f4640"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8f47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b47bd8f1d60" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b47bd8f1d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd9000d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd900260"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd9003e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd900570"/>
        <function-ref name="get" scoped="" ref="0x2b47bd9006f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd900880"/>
        <function-ref name="set" scoped="" ref="0x2b47bd900a08"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd900b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b47bd8f75b8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b47bd8f75b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8f7908"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8f7a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8f7c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8f7da0"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8f6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8f61a8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8f6330"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8f64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b47bd8f4a50" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b47bd8f4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8f4da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8f3020"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8f31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8f3330"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8f34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8f3640"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8f37c8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8f3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b47bd900e18" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b47bd900e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8ff1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8ff330"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8ff4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8ff640"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8ff7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8ff950"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8ffad8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8ffc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdcf33e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdcf33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdcf3730"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdcf38b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdcf3a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdcf3bc8"/>
        <function-ref name="get" scoped="" ref="0x2b47bdcf3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdcf2020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdcf21a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdcf2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdcf0480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdcf0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdcf07d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdcf0958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdcf0ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdcf0c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdcf0df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdcef020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdcef1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdcef330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdced480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdced480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdced7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdced958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdcedae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdcedc68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdceddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdcec020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdcec1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdcec330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdcea480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdcea480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdcea7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdcea958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdceaae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdceac68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdceadf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdce9020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdce91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdce9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdce7480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdce7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdce77d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdce7958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdce7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdce7c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdce7df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdd06020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdd061a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdd06330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdd04480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdd04480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdd047d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdd04958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdd04ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdd04c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdd04df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdd03020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdd031a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdd03330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdd01480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdd01480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdd017d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdd01958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdd01ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdd01c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdd01df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdd00020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdd001a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdd00330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdcfe480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdcfe480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdcfe7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdcfe958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdcfeae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdcfec68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdcfedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdcfc020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdcfc1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdcfc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b47bd907120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b47bd907120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd907470"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd9075f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd907780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd907908"/>
        <function-ref name="get" scoped="" ref="0x2b47bd907a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd907c18"/>
        <function-ref name="set" scoped="" ref="0x2b47bd907da0"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd905020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b47bd9035b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b47bd9035b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd903908"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd903a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd903c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd903da0"/>
        <function-ref name="get" scoped="" ref="0x2b47bd902020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd9021a8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd902330"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd9024b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b47bd8fae40" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b47bd8fae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd8f91c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd8f9348"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd8f94d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd8f9658"/>
        <function-ref name="get" scoped="" ref="0x2b47bd8f97e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd8f9968"/>
        <function-ref name="set" scoped="" ref="0x2b47bd8f9af0"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd8f9c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b47bd9052a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b47bd9052a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd9055f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd905780"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd905908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd905a90"/>
        <function-ref name="get" scoped="" ref="0x2b47bd905c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd905da0"/>
        <function-ref name="set" scoped="" ref="0x2b47bd904020"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd9041a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b47bd902740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b47bd902740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd902a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd902c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd902da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd901020"/>
        <function-ref name="get" scoped="" ref="0x2b47bd9011a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd901330"/>
        <function-ref name="set" scoped="" ref="0x2b47bd9014b8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd901640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b47bd908020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b47bd908020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd908370"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd9084f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd908680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd908808"/>
        <function-ref name="get" scoped="" ref="0x2b47bd908990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd908b18"/>
        <function-ref name="set" scoped="" ref="0x2b47bd908ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd908e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b47bd904430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b47bd904430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd904780"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd904908"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd904a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd904c18"/>
        <function-ref name="get" scoped="" ref="0x2b47bd904da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd903020"/>
        <function-ref name="set" scoped="" ref="0x2b47bd9031a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd903330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b47bd9018c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b47bd9018c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd901c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd901da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd910020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd9101a8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd910330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd9104b8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd910640"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd9107c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdd533e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdd533e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdd53730"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdd538b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdd53a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdd53bc8"/>
        <function-ref name="get" scoped="" ref="0x2b47bdd53d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdd52020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdd521a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdd52330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdd50480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdd50480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdd507d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdd50958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdd50ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdd50c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdd50df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdd4f020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdd4f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdd4f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdd4d480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdd4d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdd4d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdd4d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdd4dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdd4dc68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdd4ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdd4c020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdd4c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdd4c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdd4a480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdd4a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdd4a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdd4a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdd4aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdd4ac68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdd4adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdd6b020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdd6b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdd6b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdd69480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdd69480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdd697d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdd69958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdd69ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdd69c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdd69df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdd68020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdd681a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdd68330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdd66480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdd66480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdd667d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdd66958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdd66ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdd66c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdd66df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdd65020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdd651a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdd65330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdd63480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdd63480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdd637d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdd63958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdd63ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdd63c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdd63df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdd62020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdd621a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdd62330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bdd60480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bdd60480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bdd607d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bdd60958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bdd60ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bdd60c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bdd60df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bdd5f020"/>
        <function-ref name="set" scoped="" ref="0x2b47bdd5f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bdd5f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b47bd918bd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b47bd918bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd917020"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd9171a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd917330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd9174b8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd917640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd9177c8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd917950"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd917ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b47bd914020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b47bd914020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd914370"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd9144f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd914680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd914808"/>
        <function-ref name="get" scoped="" ref="0x2b47bd914990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd914b18"/>
        <function-ref name="set" scoped="" ref="0x2b47bd914ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd914e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b47bd90a930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b47bd90a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd90ac80"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd90ae08"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd909020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd9091a8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd909330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd9094b8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd909640"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd9097c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b47bd917d60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b47bd917d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd9160d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd916260"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd9163e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd916570"/>
        <function-ref name="get" scoped="" ref="0x2b47bd9166f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd916880"/>
        <function-ref name="set" scoped="" ref="0x2b47bd916a08"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd916b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b47bd913120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b47bd913120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd913470"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd9135f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd913780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd913908"/>
        <function-ref name="get" scoped="" ref="0x2b47bd913a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd913c18"/>
        <function-ref name="set" scoped="" ref="0x2b47bd913da0"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd912020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b47bd909a50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b47bd909a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd909da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd918020"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd9181a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd918330"/>
        <function-ref name="get" scoped="" ref="0x2b47bd9184b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd918640"/>
        <function-ref name="set" scoped="" ref="0x2b47bd9187c8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd918950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b47bd916e18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b47bd916e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd9151a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd915330"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd9154b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd915640"/>
        <function-ref name="get" scoped="" ref="0x2b47bd9157c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd915950"/>
        <function-ref name="set" scoped="" ref="0x2b47bd915ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd915c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b47bd9122a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b47bd9122a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd9125f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd912780"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd912908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd912a90"/>
        <function-ref name="get" scoped="" ref="0x2b47bd912c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd912da0"/>
        <function-ref name="set" scoped="" ref="0x2b47bd911020"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd9111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bddbb3e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bddbb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bddbb730"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bddbb8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bddbba40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bddbbbc8"/>
        <function-ref name="get" scoped="" ref="0x2b47bddbbd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bddba020"/>
        <function-ref name="set" scoped="" ref="0x2b47bddba1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bddba330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bddb8480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bddb8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bddb87d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bddb8958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bddb8ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bddb8c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bddb8df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bddb7020"/>
        <function-ref name="set" scoped="" ref="0x2b47bddb71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bddb7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bddb5480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bddb5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bddb57d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bddb5958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bddb5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bddb5c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bddb5df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bddb4020"/>
        <function-ref name="set" scoped="" ref="0x2b47bddb41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bddb4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bddb2480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bddb2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bddb27d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bddb2958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bddb2ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bddb2c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bddb2df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bddb1020"/>
        <function-ref name="set" scoped="" ref="0x2b47bddb11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bddb1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bddd3480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bddd3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bddd37d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bddd3958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bddd3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bddd3c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bddd3df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bddd2020"/>
        <function-ref name="set" scoped="" ref="0x2b47bddd21a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bddd2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bddd0480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bddd0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bddd07d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bddd0958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bddd0ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bddd0c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bddd0df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bddcf020"/>
        <function-ref name="set" scoped="" ref="0x2b47bddcf1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bddcf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bddcd480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bddcd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bddcd7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bddcd958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bddcdae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bddcdc68"/>
        <function-ref name="get" scoped="" ref="0x2b47bddcddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bddcc020"/>
        <function-ref name="set" scoped="" ref="0x2b47bddcc1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bddcc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bddca480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bddca480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bddca7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bddca958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bddcaae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bddcac68"/>
        <function-ref name="get" scoped="" ref="0x2b47bddcadf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bddc9020"/>
        <function-ref name="set" scoped="" ref="0x2b47bddc91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bddc9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b47bd91a430" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b47bd91a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd91a780"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd91a908"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd91aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd91ac18"/>
        <function-ref name="get" scoped="" ref="0x2b47bd91ada0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd919020"/>
        <function-ref name="set" scoped="" ref="0x2b47bd9191a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd919330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b47bd9298c8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b47bd9298c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd929c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd929da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd928020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd9281a8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd928330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd9284b8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd928640"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd9287c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b47bd91c1e8" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b47bd91c1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd91c538"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd91c6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd91c848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd91c9d0"/>
        <function-ref name="get" scoped="" ref="0x2b47bd91cb58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd91cce0"/>
        <function-ref name="set" scoped="" ref="0x2b47bd91ce68"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd91b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b47bd9195b8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b47bd9195b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd919908"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd919a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd919c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd919da0"/>
        <function-ref name="get" scoped="" ref="0x2b47bd92a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd92a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd92a330"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd92a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b47bd928a50" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b47bd928a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd928da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd927020"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd9271a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd927330"/>
        <function-ref name="get" scoped="" ref="0x2b47bd9274b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd927640"/>
        <function-ref name="set" scoped="" ref="0x2b47bd9277c8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd927950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b47bd91b2a8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b47bd91b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd91b5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd91b780"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd91b908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd91ba90"/>
        <function-ref name="get" scoped="" ref="0x2b47bd91bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd91bda0"/>
        <function-ref name="set" scoped="" ref="0x2b47bd91a020"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd91a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b47bd92a740" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b47bd92a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd92aa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd92ac18"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd92ada0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd929020"/>
        <function-ref name="get" scoped="" ref="0x2b47bd9291a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd929330"/>
        <function-ref name="set" scoped="" ref="0x2b47bd9294b8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd929640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b47bd927bd8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b47bd927bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd925020"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd9251a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd925330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd9254b8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd925640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd9257c8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd925950"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd925ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bde2d3e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bde2d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bde2d730"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bde2d8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bde2da40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bde2dbc8"/>
        <function-ref name="get" scoped="" ref="0x2b47bde2dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bde2c020"/>
        <function-ref name="set" scoped="" ref="0x2b47bde2c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bde2c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bde2a480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bde2a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bde2a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bde2a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bde2aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bde2ac68"/>
        <function-ref name="get" scoped="" ref="0x2b47bde2adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bde29020"/>
        <function-ref name="set" scoped="" ref="0x2b47bde291a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bde29330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bde27480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bde27480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bde277d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bde27958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bde27ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bde27c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bde27df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bde26020"/>
        <function-ref name="set" scoped="" ref="0x2b47bde261a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bde26330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bde24480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bde24480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bde247d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bde24958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bde24ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bde24c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bde24df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bde23020"/>
        <function-ref name="set" scoped="" ref="0x2b47bde231a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bde23330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bde21480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bde21480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bde217d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bde21958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bde21ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bde21c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bde21df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bde20020"/>
        <function-ref name="set" scoped="" ref="0x2b47bde201a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bde20330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bde1e480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bde1e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bde1e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bde1e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bde1eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bde1ec68"/>
        <function-ref name="get" scoped="" ref="0x2b47bde1edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bde1d020"/>
        <function-ref name="set" scoped="" ref="0x2b47bde1d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bde1d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bde41480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bde41480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bde417d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bde41958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bde41ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bde41c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bde41df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bde40020"/>
        <function-ref name="set" scoped="" ref="0x2b47bde401a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bde40330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bde3e480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bde3e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bde3e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bde3e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bde3eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bde3ec68"/>
        <function-ref name="get" scoped="" ref="0x2b47bde3edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bde3d020"/>
        <function-ref name="set" scoped="" ref="0x2b47bde3d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bde3d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bd931ac0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bd931ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd931e10"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd93f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd93f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd93f330"/>
        <function-ref name="get" scoped="" ref="0x2b47bd93f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd93f640"/>
        <function-ref name="set" scoped="" ref="0x2b47bd93f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd93f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bd94edb8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bd94edb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd94d170"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd94d2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd94d480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd94d608"/>
        <function-ref name="get" scoped="" ref="0x2b47bd94d790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd94d918"/>
        <function-ref name="set" scoped="" ref="0x2b47bd94daa0"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd94dc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bd9483e0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bd9483e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd948730"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd9488b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd948a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd948bc8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd948d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd947020"/>
        <function-ref name="set" scoped="" ref="0x2b47bd9471a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd947330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bd9557e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bd9557e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd955b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd955cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd955e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd954020"/>
        <function-ref name="get" scoped="" ref="0x2b47bd9541a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd954330"/>
        <function-ref name="set" scoped="" ref="0x2b47bd9544b8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd954640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bd951c38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bd951c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd950020"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd9501a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd950330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd9504b8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd950640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd9507c8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd950950"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd950ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bd95d020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bd95d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd95d370"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd95d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd95d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd95d808"/>
        <function-ref name="get" scoped="" ref="0x2b47bd95d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd95db18"/>
        <function-ref name="set" scoped="" ref="0x2b47bd95dca0"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd95de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bd958480" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bd958480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd9587d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd958958"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd958ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd958c68"/>
        <function-ref name="get" scoped="" ref="0x2b47bd958df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd969020"/>
        <function-ref name="set" scoped="" ref="0x2b47bd9691a8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd969330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bd9667e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bd9667e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd966b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd966cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd966e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd965020"/>
        <function-ref name="get" scoped="" ref="0x2b47bd9651a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd965330"/>
        <function-ref name="set" scoped="" ref="0x2b47bd9654b8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd965640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bd961970" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bd961970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd961cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd961e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd972020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd9721a8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd972330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd9724b8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd972640"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd9727c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bd96eab0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bd96eab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd96ee00"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd96d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd96d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd96d330"/>
        <function-ref name="get" scoped="" ref="0x2b47bd96d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd96d640"/>
        <function-ref name="set" scoped="" ref="0x2b47bd96d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd96d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bd96ac38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bd96ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd97b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd97b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd97b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd97b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd97b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd97b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd97b950"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd97bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bd976020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bd976020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd976370"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd9764f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd976680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd976808"/>
        <function-ref name="get" scoped="" ref="0x2b47bd976990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd976b18"/>
        <function-ref name="set" scoped="" ref="0x2b47bd976ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd976e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b47bd983180" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b47bd983180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd9834d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd983658"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd9837e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd983968"/>
        <function-ref name="get" scoped="" ref="0x2b47bd983af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd983c78"/>
        <function-ref name="set" scoped="" ref="0x2b47bd983e00"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd982020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b47bd9be2c0" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b47bd9be2c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b47bd72f128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b47bd72f128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b47bd9be610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b47bd9be8f0" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b47bd9be8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b47bd9bec40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b47bd9bedc8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b47bd9bd020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b47bd9bd1a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b47bd9bd330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b47bd9db898" loc="60:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b47bd9db898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b47bd9dbbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b47bd9dc198" loc="57:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b47bd9dc198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b47bd9dc4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b47bd9db1d0" loc="59:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b47bd9db1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b47bd9db520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b47bd9dc7d0" loc="58:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b47bd9dc7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b47bd9dcb20"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b47bd9dcca8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b47bd9dce30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b47bd7371c8" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b47bd7371c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b47bd737518"/>
        <function-ref name="runTask" scoped="" ref="0x2b47bd7376a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b47bd734600" loc="47:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b47bd734600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b47bd734950"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b47bd734ad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b47bd734c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b47bd7ea2b0" loc="56:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b47bd7ea2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b47bd7ea600"/>
        <function-ref name="runTask" scoped="" ref="0x2b47bd7ea788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b47bd7f3758" loc="57:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b47bd7f3758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b47bd7f3aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b47bd7eb448" loc="55:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b47bd7eb448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b47bd7eb798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b47bd7eb920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b47bd7ebaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b47bd8102b0" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b47bd8102b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b47bd810600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b47bd80a660" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b47bd80a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b47bd80a9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b47bd813a80" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b47bd813a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b47bd813dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b47bd9e8578" loc="7:SpeedTestC.nc">
      <component-ref qname="SpeedTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b47bd9e8578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b47bd7b0530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b47bd7b0888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b47bd9fa8f0"/>
        <function-ref name="fired" scoped="" ref="0x2b47bd9e7020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b47bd9e7d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b47bd9e78c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b47bd9f91c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b47bd9fad40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b47bd9e7470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b47bd9de0f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b47bd9fa320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b47bd9de598"/>
        <function-ref name="stop" scoped="" ref="0x2b47bd9dea38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b47bd82fa10" loc="4:SpeedTestC.nc">
      <component-ref qname="SpeedTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b47bd82fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b47bd82fd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LCD2x16" ref="0x2b47bd9e0d40" loc="5:SpeedTestC.nc">
      <component-ref qname="SpeedTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD2x16" scoped="" ref="0x2b47bd9e0d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD2x16"/>
      </instance>
      <interface-functions>
        <function-ref name="clearDisplay" scoped="" ref="0x2b47bd9e30d8"/>
        <function-ref name="init" scoped="" ref="0x2b47bd9e3260"/>
        <function-ref name="LcdInitDone" scoped="" ref="0x2b47bd9e33e8"/>
        <function-ref name="sendString" scoped="" ref="0x2b47bd9e3570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Measure0" ref="0x2b47bd9e38f0" loc="6:SpeedTestC.nc">
      <component-ref qname="SpeedTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Measure0" scoped="" ref="0x2b47bd9e38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b47bd9e3c40"/>
        <function-ref name="isInput" scoped="" ref="0x2b47bd9e3dc8"/>
        <function-ref name="toggle" scoped="" ref="0x2b47bd9df020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b47bd9df1a8"/>
        <function-ref name="get" scoped="" ref="0x2b47bd9df330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b47bd9df4b8"/>
        <function-ref name="set" scoped="" ref="0x2b47bd9df640"/>
        <function-ref name="clr" scoped="" ref="0x2b47bd9df7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Lcd2x16" ref="0x2b47bd9e54a8" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16C.nc">
      <component-ref qname="LCD2x16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lcd2x16" scoped="" ref="0x2b47bd9e54a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD2x16"/>
      </instance>
      <interface-functions>
        <function-ref name="clearDisplay" scoped="" ref="0x2b47bd9e57f8"/>
        <function-ref name="init" scoped="" ref="0x2b47bd9e5980"/>
        <function-ref name="LcdInitDone" scoped="" ref="0x2b47bd9e5b08"/>
        <function-ref name="sendString" scoped="" ref="0x2b47bd9e5c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCD2x16" ref="0x2b47bda0d7a0" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16P.nc">
      <component-ref qname="LCD2x16P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD2x16" scoped="" ref="0x2b47bda0d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD2x16"/>
      </instance>
      <interface-functions>
        <function-ref name="clearDisplay" scoped="" ref="0x2b47bda0daf0"/>
        <function-ref name="init" scoped="" ref="0x2b47bda0dc78"/>
        <function-ref name="LcdInitDone" scoped="" ref="0x2b47bda0de00"/>
        <function-ref name="sendString" scoped="" ref="0x2b47bda0a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b47bda2a420" loc="45:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="SpeedTestAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b47bda2a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b47bd7b0530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b47bd7b0888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b47bdbe16c8"/>
        <function-ref name="fired" scoped="" ref="0x2b47bdbe4db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b47bdbe2ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b47bdbe2688"/>
        <function-ref name="getdt" scoped="" ref="0x2b47bdbe0020"/>
        <function-ref name="gett0" scoped="" ref="0x2b47bdbe1b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b47bdbe2238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b47bdbe4020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b47bdbe10f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b47bdbe44c0"/>
        <function-ref name="stop" scoped="" ref="0x2b47bdbe4960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b47bda387d8" loc="49:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b47bda387d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b47bd7b0530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b47bd7b0888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b47bda34a18"/>
        <function-ref name="fired" scoped="" ref="0x2b47bda35158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b47bda35e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b47bda359f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b47bda332e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b47bda34e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b47bda355a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b47bda37370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b47bda34448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b47bda37810"/>
        <function-ref name="stop" scoped="" ref="0x2b47bda37cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b47bda2fde8" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b47bda2fde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b47bd7b0530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b47bd7b0888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b47bda400c0"/>
        <function-ref name="fired" scoped="" ref="0x2b47bda43798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b47bda424d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b47bda42088"/>
        <function-ref name="getdt" scoped="" ref="0x2b47bda40960"/>
        <function-ref name="gett0" scoped="" ref="0x2b47bda40510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b47bda43be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b47bda449e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b47bda42aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b47bda44e80"/>
        <function-ref name="stop" scoped="" ref="0x2b47bda43348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b47bda3b338" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b47bda3b338"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b47bd7b0530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b47bd7b0888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b47bda3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b47bda2f0f0" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b47bda2f0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b47bda2f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b47bda53e40" loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b47bda53e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b47bd7b0530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b47bd7b0888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b47bda58be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b47bda57548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b47bda570c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b47bda579d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b47bda3db90" loc="35:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b47bda3db90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b47bda4d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b47bda45748" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b47bda45748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b47bd7b0530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b47bd7b0888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b47bda59020"/>
        <function-ref name="fired" scoped="" ref="0x2b47bda5a020"/>
        <function-ref name="startAt" scoped="" ref="0x2b47bda5a930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b47bda5a4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b47bda594a8"/>
        <function-ref name="start" scoped="" ref="0x2b47bda4c578"/>
        <function-ref name="stop" scoped="" ref="0x2b47bda4ca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b47bdb54938" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b47bdb54938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b47bd7b0530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b47bd7b0888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b47bdb51020"/>
        <function-ref name="fired" scoped="" ref="0x2b47bdb52088"/>
        <function-ref name="startAt" scoped="" ref="0x2b47bdb52998"/>
        <function-ref name="isRunning" scoped="" ref="0x2b47bdb52510"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b47bdb514a8"/>
        <function-ref name="start" scoped="" ref="0x2b47bdb536b0"/>
        <function-ref name="stop" scoped="" ref="0x2b47bdb53b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b47bdb54190" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b47bdb54190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b47bd730d88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b47bd730d88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b47bdb544e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b47bdb51a90" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b47bdb51a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b47bd7b0530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b47bd7b0888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b47bdb4f828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b47bdb4e190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b47bdb4fcb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b47bdb4e618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b47bdef8e70" loc="38:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b47bdef8e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b47bdef71e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b47bdef7370"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b47bdef74f8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b47bdef7680"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b47bdef7808"/>
        <function-ref name="setControl" scoped="" ref="0x2b47bdef7990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b47bdf03be0" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b47bdf03be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b47bd7b0530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b47bd7b0888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b47bdf00270"/>
        <function-ref name="fired" scoped="" ref="0x2b47bdf01310"/>
        <function-ref name="startAt" scoped="" ref="0x2b47bdf01c20"/>
        <function-ref name="isRunning" scoped="" ref="0x2b47bdf01798"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b47bdf006f8"/>
        <function-ref name="start" scoped="" ref="0x2b47bdf02970"/>
        <function-ref name="stop" scoped="" ref="0x2b47bdf02e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b47bdf03438" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b47bdf03438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b47bdf03788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b47bdf00ce0" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b47bdf00ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b47bd7b0530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b47bd7b0888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b47bdefeac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b47bdefd4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b47bdefd020"/>
        <function-ref name="overflow" scoped="" ref="0x2b47bdefd930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x2b47bdf1bdb0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b47bdf1bdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b47bdf1a918"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b47bdf1a2f8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b47bdf1a480"/>
        <function-ref name="countBusy" scoped="" ref="0x2b47bdf1a608"/>
        <function-ref name="getAssr" scoped="" ref="0x2b47bdf1a790"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b47bdf1a170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b47bdef7d20" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b47bdef7d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b47bdf1b510"/>
        <function-ref name="fired" scoped="" ref="0x2b47bdef52b0"/>
        <function-ref name="get" scoped="" ref="0x2b47bdef68f0"/>
        <function-ref name="reset" scoped="" ref="0x2b47bdef5738"/>
        <function-ref name="isOn" scoped="" ref="0x2b47bdf1b998"/>
        <function-ref name="set" scoped="" ref="0x2b47bdef6d78"/>
        <function-ref name="start" scoped="" ref="0x2b47bdef5bc0"/>
        <function-ref name="stop" scoped="" ref="0x2b47bdf1b088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b47bdefc020" loc="37:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b47bdefc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b47bdef80f8"/>
        <function-ref name="test" scoped="" ref="0x2b47bdefa7a8"/>
        <function-ref name="get" scoped="" ref="0x2b47bdefcba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b47bdef8580"/>
        <function-ref name="getScale" scoped="" ref="0x2b47bdef8a58"/>
        <function-ref name="reset" scoped="" ref="0x2b47bdefb9e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b47bdefb560"/>
        <function-ref name="isOn" scoped="" ref="0x2b47bdefac30"/>
        <function-ref name="set" scoped="" ref="0x2b47bdefb088"/>
        <function-ref name="start" scoped="" ref="0x2b47bdefbe70"/>
        <function-ref name="stop" scoped="" ref="0x2b47bdefa320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b47bdae4020" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b47bdae4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b47bdae4370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b47bdae44f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b47bdae4680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b47bdae4808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b47bdae4990"/>
        <function-ref name="setControl" scoped="" ref="0x2b47bdae4b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b47bdadf218" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b47bdadf218"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b47bdadfd10"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b47bdadf6f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b47bdadf878"/>
        <function-ref name="countBusy" scoped="" ref="0x2b47bdadfa00"/>
        <function-ref name="getAssr" scoped="" ref="0x2b47bdadfb88"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b47bdadf568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b47bdae3020" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b47bdae3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b47bdae07a8"/>
        <function-ref name="fired" scoped="" ref="0x2b47bdae2560"/>
        <function-ref name="get" scoped="" ref="0x2b47bdae3ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b47bdae29e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b47bdae0c30"/>
        <function-ref name="set" scoped="" ref="0x2b47bdae2088"/>
        <function-ref name="start" scoped="" ref="0x2b47bdae2e70"/>
        <function-ref name="stop" scoped="" ref="0x2b47bdae0320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b47bdad4e00" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b47bdad4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b47bdacd0f8"/>
        <function-ref name="test" scoped="" ref="0x2b47bdace798"/>
        <function-ref name="get" scoped="" ref="0x2b47bdad1a18"/>
        <function-ref name="setScale" scoped="" ref="0x2b47bdacd580"/>
        <function-ref name="getScale" scoped="" ref="0x2b47bdacda58"/>
        <function-ref name="reset" scoped="" ref="0x2b47bdad0980"/>
        <function-ref name="overflow" scoped="" ref="0x2b47bdad04f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b47bdacec20"/>
        <function-ref name="set" scoped="" ref="0x2b47bdad0020"/>
        <function-ref name="start" scoped="" ref="0x2b47bdad0e08"/>
        <function-ref name="stop" scoped="" ref="0x2b47bdace310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b47bdaee160" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b47bdaee160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b47bdaee4b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b47bdaee638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b47bdaee7c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b47bdaee948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b47bdaeead0"/>
        <function-ref name="setControl" scoped="" ref="0x2b47bdaeec58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b47bdae9268" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b47bdae9268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b47bdae95b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b47bdae9958" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b47bdae9958"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b47bdae84b8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b47bdae9e30"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b47bdae8020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b47bdae81a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b47bdae8330"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b47bdae9ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b47bdaed190" loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b47bdaed190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b47bdaea930"/>
        <function-ref name="fired" scoped="" ref="0x2b47bdaeb6d0"/>
        <function-ref name="get" scoped="" ref="0x2b47bdaedd10"/>
        <function-ref name="reset" scoped="" ref="0x2b47bdaebb58"/>
        <function-ref name="isOn" scoped="" ref="0x2b47bdaeadb8"/>
        <function-ref name="set" scoped="" ref="0x2b47bdaeb1f8"/>
        <function-ref name="start" scoped="" ref="0x2b47bdaea020"/>
        <function-ref name="stop" scoped="" ref="0x2b47bdaea4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b47bdadb180" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b47bdadb180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b47bdaef270"/>
        <function-ref name="test" scoped="" ref="0x2b47bdaf0930"/>
        <function-ref name="get" scoped="" ref="0x2b47bdadbd00"/>
        <function-ref name="setScale" scoped="" ref="0x2b47bdaef6f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b47bdaefbd0"/>
        <function-ref name="reset" scoped="" ref="0x2b47bdadab58"/>
        <function-ref name="overflow" scoped="" ref="0x2b47bdada6d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b47bdaf0db8"/>
        <function-ref name="set" scoped="" ref="0x2b47bdada1f8"/>
        <function-ref name="start" scoped="" ref="0x2b47bdaf0020"/>
        <function-ref name="stop" scoped="" ref="0x2b47bdaf04a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b47bdb87cf0" loc="74:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b47bdb87cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b47bdb850a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b47bdb85228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b47bdb70c70" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b47bdb70c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b47bd7b0530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b47bd7b0888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b47bdb87410"/>
        <function-ref name="fired" scoped="" ref="0x2b47bdb884a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b47bdb88db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b47bdb88930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b47bdb87898"/>
        <function-ref name="start" scoped="" ref="0x2b47bdb899f0"/>
        <function-ref name="stop" scoped="" ref="0x2b47bdb88020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b47bdb75ab0" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b47bdb75ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b47bd7b0530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b47bd7b0888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b47bdb72d60"/>
        <function-ref name="fired" scoped="" ref="0x2b47bdb73470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b47bdb721c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b47bdb73d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b47bdb70648"/>
        <function-ref name="gett0" scoped="" ref="0x2b47bdb701f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b47bdb738c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b47bdb74620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b47bdb72790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b47bdb74ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b47bdb73020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b47bdbdc478" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b47bdbdc478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b47bdbdc7c8"/>
        <function-ref name="runTask" scoped="" ref="0x2b47bdbdc950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b47bdbc5208" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b47bdbc5208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b47bd7b0530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b47bd7b0888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b47bdbc15f0"/>
        <function-ref name="fired" scoped="" ref="0x2b47bdbc4b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b47bdbc38c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b47bdbc3470"/>
        <function-ref name="getdt" scoped="" ref="0x2b47bdbdc020"/>
        <function-ref name="gett0" scoped="" ref="0x2b47bdbc1a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b47bdbc3020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b47bdbc5d50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b47bdbc1020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b47bdbc4238"/>
        <function-ref name="stop" scoped="" ref="0x2b47bdbc46d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b47bdbcb020" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b47bdbcb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b47bd7b0530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b47bd7b0888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b47bdbc7358"/>
        <function-ref name="fired" scoped="" ref="0x2b47bdbca9b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b47bdbc8748"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b47bdbc82d8"/>
        <function-ref name="getdt" scoped="" ref="0x2b47bdbc7c38"/>
        <function-ref name="gett0" scoped="" ref="0x2b47bdbc77c8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b47bdbcae28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b47bdbcbb88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b47bdbc8d38"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b47bdbca088"/>
        <function-ref name="stop" scoped="" ref="0x2b47bdbca548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b47bdbdac38" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b47bdbdac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b47bd7b0530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b47bd7b0888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b47bdbd9820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b47bdbd9e48" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b47bdbd9e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b47bd7b0530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b47bd7b0888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b47bdbcfbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b47bdbea548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b47bdbea0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b47bdbea9d0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b47bd82b178" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b47bd73aae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b47bd823e08" loc="60:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b47bd831290" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b47bd532378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b47bd831020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b47bd835940" loc="31:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="27:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b47bd532378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b47bd834378" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b47bd834108" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b47bd834e00" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b47bd834b90" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b47bd833698" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b47bd8480d8" loc="44:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b47bd8487a0" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b47bd7314c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b47bd849328" loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b47bd847570" loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b47bd7314c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b47bd8499c8" loc="43:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b47bd7314c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b47bd848e58" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b47bd84b5a8" loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b47bd84bc18" loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b47bd7363a0" loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b47bd734290" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b47bd736ab8" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b47bd7314c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b47bd740070" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b47bd73aae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b47bd740860" loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b47bd7f3450" loc="76:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b47bd809d28" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b47bd78f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b47bd8136d8" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b47bd9f0338" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b47bd9f0338"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b47bd9e9020" loc="136:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b47bd9ee710" loc="83:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b47bd9eb5b8" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b47bd9eb020" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b47bd9eb338" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b47bd9ed7b8" loc="98:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b47bd7314c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b47bd9e8020" loc="151:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b47bd9e9740" loc="144:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b47bd9ed020" loc="92:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b47bd7314c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b47bd9f0e08" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b47bd9f0b98" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b47bd9ea5b8" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b47bd9ea020" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b47bd9ea338" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b47bd9ef8a0" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b47bd9ef630" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b47bd9ee070" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LCD2x16" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16.nc">
      <function command="" provided="0" name="clearDisplay" ref="0x2b47bd9e03e0" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16.nc">
        <interfacedef-ref qname="LCD2x16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b47bd9e4aa8" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16.nc">
        <interfacedef-ref qname="LCD2x16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2b47bd9e4838" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="LcdInitDone" ref="0x2b47bd9e0a68" loc="20:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16.nc">
        <interfacedef-ref qname="LCD2x16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendString" ref="0x2b47bd9e1d20" loc="16:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16.nc">
        <interfacedef-ref qname="LCD2x16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="str" ref="0x2b47bd9e1140" loc="16:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b47bd9e1450" loc="16:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </variable>
          <variable name="line" ref="0x2b47bd9e1770" loc="16:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </variable>
          <variable name="row" ref="0x2b47bd9e1a80" loc="16:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b47bda3f560" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b47bda3f560"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b47bda3fdf0" loc="61:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b47bd532db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b47bda563f8" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b47bda563f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b47bda56628" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b47bda56628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b47bda55020" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b47bda56628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b47bda53070" loc="76:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b47bda55838" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b47bd7314c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b47bda53760" loc="82:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b47bda4dac8" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b47bda4dac8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b47bda4dcf8" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b47bda4dcf8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b47bda467a0" loc="109:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b47bda4dcf8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b47bda49770" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b47bda47d70" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b47bda4dcf8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b47bda4dcf8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b47bda477d0" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b47bda4dcf8"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b47bda47af0" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b47bda4dcf8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b47bda47020" loc="88:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b47bd7314c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b47bda45020" loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b47bda4dcf8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b47bda4a810" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b47bda4dcf8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b47bda4a5a0" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b47bda4dcf8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b47bda49020" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b47bda86a58" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b47bd7bca08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b47bd7bce10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b47bda82e18" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b47bd7c9100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b47bd7c9508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b47bda83c70" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b47bd7c0980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b47bd7c0d88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b47bda82678" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b47bd7c0980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b47bd7c0d88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b47bda82408" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b47bd7c0980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b47bd7c0d88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b47bda80828" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b47bd7c9100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b47bd7c9508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b47bda805b8" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b47bd7c9100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b47bd7c9508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b47bda834c8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b47bd7bca08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b47bd7bce10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b47bda83258" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b47bd7bca08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b47bd7bce10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerSync" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer0Synchronous" ref="0x2b47bda89328" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBusy" ref="0x2b47bda89a30" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b47bda87258" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b47bda87a08" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b47bda8a110" loc="28:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="24:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b47bd7c3118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b47bd7c3520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b47bda8aac0" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b47bd7c3118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b47bd7c3520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b47bda8a850" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b47bd7c3118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b47bd7c3520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b47bda7e068" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b47bda7e068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b47bda90738" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b47bd7314c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b47bda7d9d0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b47bda7e920" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b47bda7e068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b47bda7c110" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b47bda8f020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b47bd7314c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b47bda7d290" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b47bda7e068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b47bda7d020" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b47bda7e068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b47bda7c808" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b47bda90020" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b47bda7b418" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b47bda7b418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b47bda76900" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b47bda77a40" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b47bd7314c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b47bda7bcb8" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b47bda7b418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b47bda74290" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b47bda74020" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b47bda74a10" loc="110:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="106:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b47bd530910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b47bda784c0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b47bda7ad50" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b47bda761d8" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b47bd7314c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b47bda7a630" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b47bda7b418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b47bda7a3c0" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b47bda7b418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b47bda78bb8" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b47bda77328" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
