<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:SpeedTestAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2af3de2f9a10"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2af3de2f6220"/></to>
    </wire>
    <wire loc="72:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2af3de2f6220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2af3de4a6198"/></to>
    </wire>
    <wire loc="10:SpeedTestAppC.nc">
      <from><interface-ref name="LCD2x16" scoped="" ref="0x2af3de4ad020"/></from>
      <to><interface-ref name="Lcd2x16" scoped="" ref="0x2af3de4c51d0"/></to>
    </wire>
    <wire loc="13:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16C.nc">
      <from><interface-ref name="Lcd2x16" scoped="" ref="0x2af3de4c51d0"/></from>
      <to><interface-ref name="LCD2x16" scoped="" ref="0x2af3de4d59f8"/></to>
    </wire>
    <wire loc="11:SpeedTestAppC.nc">
      <from><interface-ref name="Measure0" scoped="" ref="0x2af3de4adb88"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x2af3de326020"/></to>
    </wire>
    <wire loc="151:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2af3de326020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2af3de3ab020"/></to>
    </wire>
    <wire loc="12:SpeedTestAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2af3de4b2578"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af3de4ee420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2af3de4ee420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2af3de4fa1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af3de2f5620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af3de50bde0"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2af3de4a67d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2af3de1fe600"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2af3de1fe600"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2af3de2b5448"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2af3de4a51d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af3de2f8620"/></to>
    </wire>
    <wire loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af3de2f8620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af3de307600"/></to>
    </wire>
    <wire loc="71:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2af3de4a5898"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2af3de2f5620"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2af3de2fb618"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2af3de4888f0"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2af3de306398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af3de4882c0"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2af3de307ca0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2af3de300b98"/></to>
    </wire>
    <wire loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2af3de300b98"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2af3de30a698"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2af3de30d360"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2af3de2f3380"/></to>
    </wire>
    <wire loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2af3de309b08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2af3de30d360"/></to>
    </wire>
    <wire loc="191:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2af3de352af0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de42b970"/></to>
    </wire>
    <wire loc="165:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2af3de334658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2af3de3d2020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2af3de3d2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de814480"/></to>
    </wire>
    <wire loc="176:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2af3de345658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2af3de3e1d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2af3de3e1d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de89a480"/></to>
    </wire>
    <wire loc="185:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2af3de34a348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2af3de3e35b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2af3de3e35b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de8e8480"/></to>
    </wire>
    <wire loc="143:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2af3de320348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2af3de3a9740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2af3de3a9740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de6ff480"/></to>
    </wire>
    <wire loc="183:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2af3de34c020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2af3de3e52a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2af3de3e52a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de8ee480"/></to>
    </wire>
    <wire loc="146:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2af3de31e658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2af3de3b1930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2af3de3b1930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de75f3e0"/></to>
    </wire>
    <wire loc="157:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2af3de32f7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2af3de3c0740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2af3de3c0740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de7b1480"/></to>
    </wire>
    <wire loc="168:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2af3de33faf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2af3de3ce430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2af3de3ce430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de82d480"/></to>
    </wire>
    <wire loc="179:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2af3de342af0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2af3de3dd120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2af3de3dd120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de890480"/></to>
    </wire>
    <wire loc="138:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2af3de318af0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2af3de39e020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2af3de39e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de6f1480"/></to>
    </wire>
    <wire loc="149:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2af3de329af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2af3de3aed60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2af3de3aed60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de756480"/></to>
    </wire>
    <wire loc="160:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2af3de32cc78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2af3de3bdbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2af3de3bdbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de7c7480"/></to>
    </wire>
    <wire loc="171:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2af3de33b020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2af3de3cb8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2af3de3cb8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de845480"/></to>
    </wire>
    <wire loc="188:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2af3de3477e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2af3de3f2a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2af3de3f2a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de904480"/></to>
    </wire>
    <wire loc="194:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2af3de34e7e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de440020"/></to>
    </wire>
    <wire loc="174:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2af3de339348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2af3de3d3a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2af3de3d3a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de87c480"/></to>
    </wire>
    <wire loc="141:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2af3de322020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2af3de39b430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2af3de39b430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de705480"/></to>
    </wire>
    <wire loc="152:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2af3de3251a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2af3de3ba120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2af3de3ba120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de76b480"/></to>
    </wire>
    <wire loc="192:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2af3de3504d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de438ab0"/></to>
    </wire>
    <wire loc="155:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2af3de3314d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2af3de3c2500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2af3de3c2500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de7b73e0"/></to>
    </wire>
    <wire loc="166:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2af3de3337e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2af3de3d1120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2af3de3d1120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de833480"/></to>
    </wire>
    <wire loc="177:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2af3de3447e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2af3de3e0e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2af3de3e0e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de897480"/></to>
    </wire>
    <wire loc="186:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2af3de3494d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2af3de3f4740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2af3de3f4740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de90b480"/></to>
    </wire>
    <wire loc="144:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2af3de31f4d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2af3de3a88c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2af3de3a88c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de6fc480"/></to>
    </wire>
    <wire loc="147:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2af3de31d7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2af3de3b0a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2af3de3b0a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de75c480"/></to>
    </wire>
    <wire loc="158:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2af3de32e968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2af3de3bf8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2af3de3bf8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de7ce480"/></to>
    </wire>
    <wire loc="169:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2af3de33ec78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2af3de3cd5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2af3de3cd5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de829480"/></to>
    </wire>
    <wire loc="180:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2af3de341c78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2af3de3dc2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2af3de3dc2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de88d480"/></to>
    </wire>
    <wire loc="139:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2af3de317c78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2af3de39d120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2af3de39d120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de6ee480"/></to>
    </wire>
    <wire loc="150:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2af3de328c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2af3de3ade18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2af3de3ade18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de752480"/></to>
    </wire>
    <wire loc="161:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2af3de32be00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2af3de3bbd60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2af3de3bbd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de7c4480"/></to>
    </wire>
    <wire loc="189:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2af3de353968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2af3de3f1bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2af3de3f1bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de901480"/></to>
    </wire>
    <wire loc="164:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2af3de3351a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2af3de3c4e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2af3de3c4e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de8173e0"/></to>
    </wire>
    <wire loc="175:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2af3de3464d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2af3de3e2bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2af3de3e2bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de89d480"/></to>
    </wire>
    <wire loc="184:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2af3de34b1a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2af3de3e4430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2af3de3e4430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de8eb480"/></to>
    </wire>
    <wire loc="195:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2af3de35b968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de44d180"/></to>
    </wire>
    <wire loc="142:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2af3de3211a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2af3de3aa5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2af3de3aa5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de702480"/></to>
    </wire>
    <wire loc="153:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2af3de324348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2af3de3b92a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2af3de3b92a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de768480"/></to>
    </wire>
    <wire loc="182:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2af3de340e00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2af3de3e61e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2af3de3e61e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de8f13e0"/></to>
    </wire>
    <wire loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2af3de330658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2af3de3c15b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2af3de3c15b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de7b4480"/></to>
    </wire>
    <wire loc="167:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2af3de332968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2af3de3cf2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2af3de3cf2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de830480"/></to>
    </wire>
    <wire loc="178:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2af3de343968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2af3de3de020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2af3de3de020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de893480"/></to>
    </wire>
    <wire loc="187:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2af3de348658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2af3de3f38c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2af3de3f38c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de908480"/></to>
    </wire>
    <wire loc="137:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2af3de30b878"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2af3de3a0dc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2af3de3a0dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de6f43e0"/></to>
    </wire>
    <wire loc="148:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2af3de32a968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2af3de3afbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2af3de3afbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de759480"/></to>
    </wire>
    <wire loc="159:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2af3de32daf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2af3de3bea50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2af3de3bea50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de7ca480"/></to>
    </wire>
    <wire loc="170:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2af3de33de00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2af3de3cc740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2af3de3cc740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de826480"/></to>
    </wire>
    <wire loc="193:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2af3de34f658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de434c38"/></to>
    </wire>
    <wire loc="173:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2af3de33a1a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2af3de3d4930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2af3de3d4930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de87f3e0"/></to>
    </wire>
    <wire loc="162:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2af3de336020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2af3de3cae18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2af3de3cae18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de7c1480"/></to>
    </wire>
    <wire loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2af3de316e00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2af3de39c2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2af3de39c2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de6ea480"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2af3de3ab020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2af3de76e480"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2af3de2011c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af3de2b42b0"/></to>
    </wire>
    <wire loc="55:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2af3de2bd758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2af3de2d4660"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2af3de2da2b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2af3de5c4268"/></to>
    </wire>
    <wire loc="84:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16P.nc">
      <from><interface-ref name="sendData" scoped="" ref="0x2af3de4e9df0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af3de2011c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2af3de4fa1c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2af3de508b18"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2af3de508b18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af3de68f020"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af3de50bde0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af3de5146f0"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2af3de517108"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2af3de69ec38"/></to>
    </wire>
    <wire loc="43:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2af3de5146f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af3de618190"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2af3de6a5208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af3de653ab0"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2af3de64ec70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2af3de510020"/></to>
    </wire>
    <wire loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2af3de510020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af3de618938"/></to>
    </wire>
    <wire loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2af3de69de48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2af3de51a150"/></to>
    </wire>
    <wire loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2af3de51a150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af3de614a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2af3de614a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2af3de9c0128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2af3de618190"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2af3de9c5720"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2af3de618938"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2af3de9c4020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2af3de9be228"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af3de598e00"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2af3de598e00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2af3de5b6180"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2af3de9e30c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2af3de5a7020"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2af3de5a7020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2af3de5b1160"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2af3de9e1020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af3de5a6020"/></to>
    </wire>
    <wire loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2af3de5a6020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2af3de5b0190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerSync" scoped="" ref="0x2af3de9de0a0"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2af3de5a3218"/></to>
    </wire>
    <wire loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x2af3de5a3218"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2af3de5c4958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2af3de64acf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af3de2011c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2af3de6a0478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2af3de2011c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc" safe="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc" safe="">
      <documentation loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SpeedTestC" loc="3:SpeedTestC.nc">
      <module/>
    </component>
    <component qname="LCD2x16C" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16C.nc">
      <configuration/>
    </component>
    <component qname="LCD2x16P" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16P.nc">
      <module/>
    </component>
    <component qname="SpeedTestAppC.Timer0" loc="44(SpeedTestAppC.Timer0):/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="33:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af3de27a530"/>
            <typename><typedef-ref name="TMilli" ref="0x2af3de27a888"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2af3de528068"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0SyncC" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0SyncP" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in SYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in SYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in SYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;--> CHANGED TO SYNC-Mode(CPL_CLK)&#9;hglanzer&#10;--> AS0=0 in ASSR&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af3de27a530"/>
            <typename><typedef-ref name="TMilli" ref="0x2af3de27a888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af3de27a530"/>
            <typename><typedef-ref name="TMilli" ref="0x2af3de27a888"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af3de27a530"/>
            <typename><typedef-ref name="TMilli" ref="0x2af3de27a888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2af3de358ba0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2af3de362020" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2af3de362368" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2af3de366610" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2af3de366978" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2af3de366ce0" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2af3de363060" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2af3de3fa020" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2af3de3fa388" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2af3de3fa6f0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2af3de3faa20" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncC" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc" abstract="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2af3de528068" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2af3de528068"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2af3de528358" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncP" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2af3de535748" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2af3de535748"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2af3de535a38" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af3de511c68" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af3de511c68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af3de648cd0" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af3de648cd0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2af3de65f020" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af3de69c510" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af3de69c510"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2af3de2f5620" loc="58:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2af3de2f5620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af3de2f5970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2af3de2f6220" loc="57:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2af3de2f6220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2af3de2f6570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2af3de2f3380" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2af3de2f3380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af3de2f36d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af3de2f8620" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2af3de2f8620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af3de2f8970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2af3de2fb618" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2af3de2fb618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2af3de2fb968"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2af3de2fbaf0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2af3de2fbc78"/>
        <function-ref name="actualMicro" scoped="" ref="0x2af3de2fbe00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2af3de2f3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2af3de307ca0" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2af3de307ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af3de306020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af3de307600" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2af3de307600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af3de307950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2af3de306398" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2af3de306398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af3de3066e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2af3de30d360" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2af3de30d360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af3de30d6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2af3de300b98" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2af3de300b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af3de30d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2af3de309b08" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2af3de309b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af3de309e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2af3de3118d8" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2af3de3118d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de311c28"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de311db0"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de309020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3091a8"/>
        <function-ref name="get" scoped="" ref="0x2af3de309330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3094b8"/>
        <function-ref name="set" scoped="" ref="0x2af3de309640"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3097c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2af3de30a698" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2af3de30a698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af3de30a9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2af3de352af0" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2af3de352af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3515e8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de351770"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3518f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de351a80"/>
        <function-ref name="get" scoped="" ref="0x2af3de351c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de351d90"/>
        <function-ref name="set" scoped="" ref="0x2af3de350020"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3501a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2af3de334658" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2af3de334658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3349a8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de334b30"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de334cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de334e40"/>
        <function-ref name="get" scoped="" ref="0x2af3de333020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3331a8"/>
        <function-ref name="set" scoped="" ref="0x2af3de333330"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3334b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2af3de345658" loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2af3de345658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3459a8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de345b30"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de345cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de345e40"/>
        <function-ref name="get" scoped="" ref="0x2af3de344020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3441a8"/>
        <function-ref name="set" scoped="" ref="0x2af3de344330"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3444b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2af3de34a348" loc="94:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2af3de34a348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de34a698"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de34a820"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de34a9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de34ab30"/>
        <function-ref name="get" scoped="" ref="0x2af3de34acb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de34ae40"/>
        <function-ref name="set" scoped="" ref="0x2af3de349020"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3491a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2af3de320348" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2af3de320348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de320698"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de320820"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3209a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de320b30"/>
        <function-ref name="get" scoped="" ref="0x2af3de320cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de320e40"/>
        <function-ref name="set" scoped="" ref="0x2af3de31f020"/>
        <function-ref name="clr" scoped="" ref="0x2af3de31f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2af3de34c020" loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2af3de34c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de34c370"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de34c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de34c680"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de34c808"/>
        <function-ref name="get" scoped="" ref="0x2af3de34c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de34cb18"/>
        <function-ref name="set" scoped="" ref="0x2af3de34cca0"/>
        <function-ref name="clr" scoped="" ref="0x2af3de34ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2af3de31e658" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2af3de31e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de31e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de31eb30"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de31ecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de31ee40"/>
        <function-ref name="get" scoped="" ref="0x2af3de31d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de31d1a8"/>
        <function-ref name="set" scoped="" ref="0x2af3de31d330"/>
        <function-ref name="clr" scoped="" ref="0x2af3de31d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2af3de32f7e0" loc="66:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2af3de32f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de32fb30"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de32fcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de32fe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de32e020"/>
        <function-ref name="get" scoped="" ref="0x2af3de32e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de32e330"/>
        <function-ref name="set" scoped="" ref="0x2af3de32e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de32e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2af3de33faf0" loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2af3de33faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de33fe40"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de33e020"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de33e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de33e330"/>
        <function-ref name="get" scoped="" ref="0x2af3de33e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de33e640"/>
        <function-ref name="set" scoped="" ref="0x2af3de33e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de33e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2af3de342af0" loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2af3de342af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de342e40"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de341020"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3411a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de341330"/>
        <function-ref name="get" scoped="" ref="0x2af3de3414b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de341640"/>
        <function-ref name="set" scoped="" ref="0x2af3de3417c8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de341950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2af3de318af0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2af3de318af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de318e40"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de317020"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3171a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de317330"/>
        <function-ref name="get" scoped="" ref="0x2af3de3174b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de317640"/>
        <function-ref name="set" scoped="" ref="0x2af3de3177c8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de317950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2af3de329af0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2af3de329af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de329e40"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de328020"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3281a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de328330"/>
        <function-ref name="get" scoped="" ref="0x2af3de3284b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de328640"/>
        <function-ref name="set" scoped="" ref="0x2af3de3287c8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de328950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2af3de32cc78" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2af3de32cc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de32b020"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de32b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de32b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de32b4b8"/>
        <function-ref name="get" scoped="" ref="0x2af3de32b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de32b7c8"/>
        <function-ref name="set" scoped="" ref="0x2af3de32b950"/>
        <function-ref name="clr" scoped="" ref="0x2af3de32bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2af3de33b020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2af3de33b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de33b370"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de33b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de33b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de33b808"/>
        <function-ref name="get" scoped="" ref="0x2af3de33b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de33bb18"/>
        <function-ref name="set" scoped="" ref="0x2af3de33bca0"/>
        <function-ref name="clr" scoped="" ref="0x2af3de33be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2af3de3477e0" loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2af3de3477e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de347b30"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de347cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de347e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de353020"/>
        <function-ref name="get" scoped="" ref="0x2af3de3531a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de353330"/>
        <function-ref name="set" scoped="" ref="0x2af3de3534b8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de353640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2af3de34e7e0" loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2af3de34e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de34eb30"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de34ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de34ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de35b020"/>
        <function-ref name="get" scoped="" ref="0x2af3de35b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de35b330"/>
        <function-ref name="set" scoped="" ref="0x2af3de35b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de35b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2af3de339348" loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2af3de339348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de339698"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de339820"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3399a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de339b30"/>
        <function-ref name="get" scoped="" ref="0x2af3de339cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de339e40"/>
        <function-ref name="set" scoped="" ref="0x2af3de346020"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3461a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2af3de322020" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2af3de322020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de322370"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3224f8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de322680"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de322808"/>
        <function-ref name="get" scoped="" ref="0x2af3de322990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de322b18"/>
        <function-ref name="set" scoped="" ref="0x2af3de322ca0"/>
        <function-ref name="clr" scoped="" ref="0x2af3de322e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2af3de3251a0" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2af3de3251a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3254f0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de325678"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de325800"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de325988"/>
        <function-ref name="get" scoped="" ref="0x2af3de325b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de325c98"/>
        <function-ref name="set" scoped="" ref="0x2af3de325e20"/>
        <function-ref name="clr" scoped="" ref="0x2af3de324020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2af3de3504d0" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2af3de3504d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de350820"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3509a8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de350b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de350cb8"/>
        <function-ref name="get" scoped="" ref="0x2af3de350e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de34f020"/>
        <function-ref name="set" scoped="" ref="0x2af3de34f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de34f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2af3de3314d0" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2af3de3314d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de331820"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3319a8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de331b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de331cb8"/>
        <function-ref name="get" scoped="" ref="0x2af3de331e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de330020"/>
        <function-ref name="set" scoped="" ref="0x2af3de3301a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de330330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2af3de3337e0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2af3de3337e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de333b30"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de333cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de333e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de332020"/>
        <function-ref name="get" scoped="" ref="0x2af3de3321a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de332330"/>
        <function-ref name="set" scoped="" ref="0x2af3de3324b8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de332640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2af3de3447e0" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2af3de3447e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de344b30"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de344cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de344e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de343020"/>
        <function-ref name="get" scoped="" ref="0x2af3de3431a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de343330"/>
        <function-ref name="set" scoped="" ref="0x2af3de3434b8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de343640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2af3de3494d0" loc="95:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2af3de3494d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de349820"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3499a8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de349b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de349cb8"/>
        <function-ref name="get" scoped="" ref="0x2af3de349e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de348020"/>
        <function-ref name="set" scoped="" ref="0x2af3de3481a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de348330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2af3de31f4d0" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2af3de31f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de31f820"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de31f9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de31fb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de31fcb8"/>
        <function-ref name="get" scoped="" ref="0x2af3de31fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de31e020"/>
        <function-ref name="set" scoped="" ref="0x2af3de31e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de31e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2af3de31d7e0" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2af3de31d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de31db30"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de31dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de31de40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de32a020"/>
        <function-ref name="get" scoped="" ref="0x2af3de32a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de32a330"/>
        <function-ref name="set" scoped="" ref="0x2af3de32a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de32a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2af3de32e968" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2af3de32e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de32ecb8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de32ee40"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de32d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de32d1a8"/>
        <function-ref name="get" scoped="" ref="0x2af3de32d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de32d4b8"/>
        <function-ref name="set" scoped="" ref="0x2af3de32d640"/>
        <function-ref name="clr" scoped="" ref="0x2af3de32d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2af3de33ec78" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2af3de33ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de33d020"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de33d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de33d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de33d4b8"/>
        <function-ref name="get" scoped="" ref="0x2af3de33d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de33d7c8"/>
        <function-ref name="set" scoped="" ref="0x2af3de33d950"/>
        <function-ref name="clr" scoped="" ref="0x2af3de33dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2af3de341c78" loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2af3de341c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de340020"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3401a8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de340330"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3404b8"/>
        <function-ref name="get" scoped="" ref="0x2af3de340640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3407c8"/>
        <function-ref name="set" scoped="" ref="0x2af3de340950"/>
        <function-ref name="clr" scoped="" ref="0x2af3de340ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2af3de317c78" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2af3de317c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de316020"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3161a8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de316330"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3164b8"/>
        <function-ref name="get" scoped="" ref="0x2af3de316640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3167c8"/>
        <function-ref name="set" scoped="" ref="0x2af3de316950"/>
        <function-ref name="clr" scoped="" ref="0x2af3de316ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2af3de328c78" loc="59:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2af3de328c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3270f0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de327278"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de327400"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de327588"/>
        <function-ref name="get" scoped="" ref="0x2af3de327710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de327898"/>
        <function-ref name="set" scoped="" ref="0x2af3de327a20"/>
        <function-ref name="clr" scoped="" ref="0x2af3de327ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2af3de32be00" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2af3de32be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3381a8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de338330"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3384b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de338640"/>
        <function-ref name="get" scoped="" ref="0x2af3de3387c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de338950"/>
        <function-ref name="set" scoped="" ref="0x2af3de338ad8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de338c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2af3de353968" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2af3de353968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de353cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de353e40"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de352020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3521a8"/>
        <function-ref name="get" scoped="" ref="0x2af3de352330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3524b8"/>
        <function-ref name="set" scoped="" ref="0x2af3de352640"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3527c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2af3de3351a0" loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2af3de3351a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3356f0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de335878"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de335a00"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de335b88"/>
        <function-ref name="get" scoped="" ref="0x2af3de335d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de334020"/>
        <function-ref name="set" scoped="" ref="0x2af3de3341a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de334330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2af3de3464d0" loc="84:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2af3de3464d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de346820"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3469a8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de346b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de346cb8"/>
        <function-ref name="get" scoped="" ref="0x2af3de346e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de345020"/>
        <function-ref name="set" scoped="" ref="0x2af3de3451a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de345330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2af3de34b1a0" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2af3de34b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de34b4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de34b678"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de34b800"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de34b988"/>
        <function-ref name="get" scoped="" ref="0x2af3de34bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de34bc98"/>
        <function-ref name="set" scoped="" ref="0x2af3de34be20"/>
        <function-ref name="clr" scoped="" ref="0x2af3de34a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2af3de35b968" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2af3de35b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de35bcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de35be40"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de35a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de35a1a8"/>
        <function-ref name="get" scoped="" ref="0x2af3de35a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de35a4b8"/>
        <function-ref name="set" scoped="" ref="0x2af3de35a640"/>
        <function-ref name="clr" scoped="" ref="0x2af3de35a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2af3de3211a0" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2af3de3211a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3214f0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de321678"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de321800"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de321988"/>
        <function-ref name="get" scoped="" ref="0x2af3de321b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de321c98"/>
        <function-ref name="set" scoped="" ref="0x2af3de321e20"/>
        <function-ref name="clr" scoped="" ref="0x2af3de320020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2af3de324348" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2af3de324348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de324698"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de324820"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3249a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de324b30"/>
        <function-ref name="get" scoped="" ref="0x2af3de324cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de324e40"/>
        <function-ref name="set" scoped="" ref="0x2af3de331020"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3311a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2af3de340e00" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2af3de340e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de34d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de34d330"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de34d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de34d640"/>
        <function-ref name="get" scoped="" ref="0x2af3de34d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de34d950"/>
        <function-ref name="set" scoped="" ref="0x2af3de34dad8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de34dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2af3de330658" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2af3de330658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3309a8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de330b30"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de330cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de330e40"/>
        <function-ref name="get" scoped="" ref="0x2af3de32f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de32f1a8"/>
        <function-ref name="set" scoped="" ref="0x2af3de32f330"/>
        <function-ref name="clr" scoped="" ref="0x2af3de32f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2af3de332968" loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2af3de332968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de332cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de332e40"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de33f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de33f1a8"/>
        <function-ref name="get" scoped="" ref="0x2af3de33f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de33f4b8"/>
        <function-ref name="set" scoped="" ref="0x2af3de33f640"/>
        <function-ref name="clr" scoped="" ref="0x2af3de33f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2af3de343968" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2af3de343968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de343cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de343e40"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de342020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3421a8"/>
        <function-ref name="get" scoped="" ref="0x2af3de342330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3424b8"/>
        <function-ref name="set" scoped="" ref="0x2af3de342640"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3427c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2af3de348658" loc="96:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2af3de348658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3489a8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de348b30"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de348cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de348e40"/>
        <function-ref name="get" scoped="" ref="0x2af3de347020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3471a8"/>
        <function-ref name="set" scoped="" ref="0x2af3de347330"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3474b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2af3de30b878" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2af3de30b878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de30bbc8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de30bd50"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de318020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3181a8"/>
        <function-ref name="get" scoped="" ref="0x2af3de318330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3184b8"/>
        <function-ref name="set" scoped="" ref="0x2af3de318640"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3187c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2af3de32a968" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2af3de32a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de32acb8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de32ae40"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de329020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3291a8"/>
        <function-ref name="get" scoped="" ref="0x2af3de329330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3294b8"/>
        <function-ref name="set" scoped="" ref="0x2af3de329640"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3297c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2af3de32daf0" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2af3de32daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de32de40"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de32c020"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de32c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de32c330"/>
        <function-ref name="get" scoped="" ref="0x2af3de32c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de32c640"/>
        <function-ref name="set" scoped="" ref="0x2af3de32c7c8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de32c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2af3de33de00" loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2af3de33de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de33c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de33c330"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de33c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de33c640"/>
        <function-ref name="get" scoped="" ref="0x2af3de33c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de33c950"/>
        <function-ref name="set" scoped="" ref="0x2af3de33cad8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de33cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2af3de34f658" loc="102:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2af3de34f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de34f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de34fb30"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de34fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de34fe40"/>
        <function-ref name="get" scoped="" ref="0x2af3de34e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de34e1a8"/>
        <function-ref name="set" scoped="" ref="0x2af3de34e330"/>
        <function-ref name="clr" scoped="" ref="0x2af3de34e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2af3de33a1a0" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2af3de33a1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de33a4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de33a678"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de33a800"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de33a988"/>
        <function-ref name="get" scoped="" ref="0x2af3de33ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de33ac98"/>
        <function-ref name="set" scoped="" ref="0x2af3de33ae20"/>
        <function-ref name="clr" scoped="" ref="0x2af3de339020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2af3de336020" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2af3de336020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de336370"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3364f8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de336680"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de336808"/>
        <function-ref name="get" scoped="" ref="0x2af3de336990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de336b18"/>
        <function-ref name="set" scoped="" ref="0x2af3de336ca0"/>
        <function-ref name="clr" scoped="" ref="0x2af3de336e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2af3de316e00" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2af3de316e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3231a8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de323330"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3234b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de323640"/>
        <function-ref name="get" scoped="" ref="0x2af3de3237c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de323950"/>
        <function-ref name="set" scoped="" ref="0x2af3de323ad8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de323c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2af3de326020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2af3de326020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de326370"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3264f8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de326680"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de326808"/>
        <function-ref name="get" scoped="" ref="0x2af3de326990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de326b18"/>
        <function-ref name="set" scoped="" ref="0x2af3de326ca0"/>
        <function-ref name="clr" scoped="" ref="0x2af3de326e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2af3de39d120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2af3de39d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de39d470"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de39d5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de39d780"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de39d908"/>
        <function-ref name="get" scoped="" ref="0x2af3de39da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de39dc18"/>
        <function-ref name="set" scoped="" ref="0x2af3de39dda0"/>
        <function-ref name="clr" scoped="" ref="0x2af3de39c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2af3de3aa5b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2af3de3aa5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3aa908"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3aaa90"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3aac18"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3aada0"/>
        <function-ref name="get" scoped="" ref="0x2af3de3a9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3a91a8"/>
        <function-ref name="set" scoped="" ref="0x2af3de3a9330"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3a94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2af3de3a0dc0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2af3de3a0dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de39f170"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de39f2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de39f480"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de39f608"/>
        <function-ref name="get" scoped="" ref="0x2af3de39f790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de39f918"/>
        <function-ref name="set" scoped="" ref="0x2af3de39faa0"/>
        <function-ref name="clr" scoped="" ref="0x2af3de39fc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2af3de39c2a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2af3de39c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de39c5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de39c780"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de39c908"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de39ca90"/>
        <function-ref name="get" scoped="" ref="0x2af3de39cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de39cda0"/>
        <function-ref name="set" scoped="" ref="0x2af3de39b020"/>
        <function-ref name="clr" scoped="" ref="0x2af3de39b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2af3de3a9740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2af3de3a9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3a9a90"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3a9c18"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3a9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3a8020"/>
        <function-ref name="get" scoped="" ref="0x2af3de3a81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3a8330"/>
        <function-ref name="set" scoped="" ref="0x2af3de3a84b8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3a8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2af3de39e020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2af3de39e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de39e370"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de39e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de39e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de39e808"/>
        <function-ref name="get" scoped="" ref="0x2af3de39e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de39eb18"/>
        <function-ref name="set" scoped="" ref="0x2af3de39eca0"/>
        <function-ref name="clr" scoped="" ref="0x2af3de39ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2af3de39b430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2af3de39b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de39b780"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de39b908"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de39ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de39bc18"/>
        <function-ref name="get" scoped="" ref="0x2af3de39bda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3aa020"/>
        <function-ref name="set" scoped="" ref="0x2af3de3aa1a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3aa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2af3de3a88c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2af3de3a88c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3a8c18"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3a8da0"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3a7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3a71a8"/>
        <function-ref name="get" scoped="" ref="0x2af3de3a7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3a74b8"/>
        <function-ref name="set" scoped="" ref="0x2af3de3a7640"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3a77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de6f43e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de6f43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de6f4730"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de6f48b8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de6f4a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de6f4bc8"/>
        <function-ref name="get" scoped="" ref="0x2af3de6f4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de6f3020"/>
        <function-ref name="set" scoped="" ref="0x2af3de6f31a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de6f3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de6f1480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de6f1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de6f17d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de6f1958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de6f1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de6f1c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de6f1df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de6f0020"/>
        <function-ref name="set" scoped="" ref="0x2af3de6f01a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de6f0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de6ee480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de6ee480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de6ee7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de6ee958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de6eeae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de6eec68"/>
        <function-ref name="get" scoped="" ref="0x2af3de6eedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de6ec020"/>
        <function-ref name="set" scoped="" ref="0x2af3de6ec1a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de6ec330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de6ea480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de6ea480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de6ea7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de6ea958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de6eaae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de6eac68"/>
        <function-ref name="get" scoped="" ref="0x2af3de6eadf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de6e9020"/>
        <function-ref name="set" scoped="" ref="0x2af3de6e91a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de6e9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de705480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de705480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de7057d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de705958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de705ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de705c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de705df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de704020"/>
        <function-ref name="set" scoped="" ref="0x2af3de7041a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de704330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de702480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de702480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de7027d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de702958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de702ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de702c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de702df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de701020"/>
        <function-ref name="set" scoped="" ref="0x2af3de7011a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de701330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de6ff480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de6ff480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de6ff7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de6ff958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de6ffae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de6ffc68"/>
        <function-ref name="get" scoped="" ref="0x2af3de6ffdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de6fe020"/>
        <function-ref name="set" scoped="" ref="0x2af3de6fe1a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de6fe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de6fc480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de6fc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de6fc7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de6fc958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de6fcae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de6fcc68"/>
        <function-ref name="get" scoped="" ref="0x2af3de6fcdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de6fb020"/>
        <function-ref name="set" scoped="" ref="0x2af3de6fb1a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de6fb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2af3de3afbd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2af3de3afbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3ae020"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3ae1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3ae330"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3ae4b8"/>
        <function-ref name="get" scoped="" ref="0x2af3de3ae640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3ae7c8"/>
        <function-ref name="set" scoped="" ref="0x2af3de3ae950"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3aead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2af3de3ab020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2af3de3ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3ab370"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3ab4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3ab680"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3ab808"/>
        <function-ref name="get" scoped="" ref="0x2af3de3ab990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3abb18"/>
        <function-ref name="set" scoped="" ref="0x2af3de3abca0"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3abe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2af3de3b1930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2af3de3b1930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3b1c80"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3b1e08"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3b0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3b01a8"/>
        <function-ref name="get" scoped="" ref="0x2af3de3b0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3b04b8"/>
        <function-ref name="set" scoped="" ref="0x2af3de3b0640"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3b07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2af3de3aed60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2af3de3aed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3ad0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3ad260"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3ad3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3ad570"/>
        <function-ref name="get" scoped="" ref="0x2af3de3ad6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3ad880"/>
        <function-ref name="set" scoped="" ref="0x2af3de3ada08"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3adb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2af3de3ba120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2af3de3ba120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3ba470"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3ba5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3ba780"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3ba908"/>
        <function-ref name="get" scoped="" ref="0x2af3de3baa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3bac18"/>
        <function-ref name="set" scoped="" ref="0x2af3de3bada0"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2af3de3b0a50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2af3de3b0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3b0da0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3af020"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3af1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3af330"/>
        <function-ref name="get" scoped="" ref="0x2af3de3af4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3af640"/>
        <function-ref name="set" scoped="" ref="0x2af3de3af7c8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3af950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2af3de3ade18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2af3de3ade18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3ac1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3ac330"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3ac4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3ac640"/>
        <function-ref name="get" scoped="" ref="0x2af3de3ac7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3ac950"/>
        <function-ref name="set" scoped="" ref="0x2af3de3acad8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3acc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2af3de3b92a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2af3de3b92a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3b95f8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3b9780"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3b9908"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3b9a90"/>
        <function-ref name="get" scoped="" ref="0x2af3de3b9c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3b9da0"/>
        <function-ref name="set" scoped="" ref="0x2af3de3b8020"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3b81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de75f3e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de75f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de75f730"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de75f8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de75fa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de75fbc8"/>
        <function-ref name="get" scoped="" ref="0x2af3de75fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de75e020"/>
        <function-ref name="set" scoped="" ref="0x2af3de75e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de75e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de75c480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de75c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de75c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de75c958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de75cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de75cc68"/>
        <function-ref name="get" scoped="" ref="0x2af3de75cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de75b020"/>
        <function-ref name="set" scoped="" ref="0x2af3de75b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de75b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de759480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de759480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de7597d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de759958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de759ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de759c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de759df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de758020"/>
        <function-ref name="set" scoped="" ref="0x2af3de7581a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de758330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de756480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de756480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de7567d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de756958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de756ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de756c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de756df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de754020"/>
        <function-ref name="set" scoped="" ref="0x2af3de7541a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de754330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de752480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de752480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de7527d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de752958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de752ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de752c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de752df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de770020"/>
        <function-ref name="set" scoped="" ref="0x2af3de7701a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de770330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de76e480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de76e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de76e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de76e958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de76eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de76ec68"/>
        <function-ref name="get" scoped="" ref="0x2af3de76edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de76d020"/>
        <function-ref name="set" scoped="" ref="0x2af3de76d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de76d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de76b480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de76b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de76b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de76b958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de76bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de76bc68"/>
        <function-ref name="get" scoped="" ref="0x2af3de76bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de76a020"/>
        <function-ref name="set" scoped="" ref="0x2af3de76a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de76a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de768480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de768480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de7687d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de768958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de768ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de768c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de768df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de767020"/>
        <function-ref name="set" scoped="" ref="0x2af3de7671a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de767330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2af3de3c0740" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2af3de3c0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3c0a90"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3c0c18"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3c0da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3bf020"/>
        <function-ref name="get" scoped="" ref="0x2af3de3bf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3bf330"/>
        <function-ref name="set" scoped="" ref="0x2af3de3bf4b8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3bf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2af3de3bdbd8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2af3de3bdbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3bb020"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3bb1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3bb330"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3bb4b8"/>
        <function-ref name="get" scoped="" ref="0x2af3de3bb640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3bb7c8"/>
        <function-ref name="set" scoped="" ref="0x2af3de3bb950"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3bbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2af3de3c2500" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2af3de3c2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3c2850"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3c29d8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3c2b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3c2ce8"/>
        <function-ref name="get" scoped="" ref="0x2af3de3c2e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3c1020"/>
        <function-ref name="set" scoped="" ref="0x2af3de3c11a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3c1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2af3de3bf8c8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2af3de3bf8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3bfc18"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3bfda0"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3be020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3be1a8"/>
        <function-ref name="get" scoped="" ref="0x2af3de3be330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3be4b8"/>
        <function-ref name="set" scoped="" ref="0x2af3de3be640"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3be7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2af3de3bbd60" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2af3de3bbd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3ca0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3ca260"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3ca3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3ca570"/>
        <function-ref name="get" scoped="" ref="0x2af3de3ca6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3ca880"/>
        <function-ref name="set" scoped="" ref="0x2af3de3caa08"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3cab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2af3de3c15b8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2af3de3c15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3c1908"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3c1a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3c1c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3c1da0"/>
        <function-ref name="get" scoped="" ref="0x2af3de3c0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3c01a8"/>
        <function-ref name="set" scoped="" ref="0x2af3de3c0330"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3c04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2af3de3bea50" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2af3de3bea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3beda0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3bd020"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3bd1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3bd330"/>
        <function-ref name="get" scoped="" ref="0x2af3de3bd4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3bd640"/>
        <function-ref name="set" scoped="" ref="0x2af3de3bd7c8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3bd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2af3de3cae18" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2af3de3cae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3c91a8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3c9330"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3c94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3c9640"/>
        <function-ref name="get" scoped="" ref="0x2af3de3c97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3c9950"/>
        <function-ref name="set" scoped="" ref="0x2af3de3c9ad8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3c9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de7b73e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de7b73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de7b7730"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de7b78b8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de7b7a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de7b7bc8"/>
        <function-ref name="get" scoped="" ref="0x2af3de7b7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de7b6020"/>
        <function-ref name="set" scoped="" ref="0x2af3de7b61a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de7b6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de7b4480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de7b4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de7b47d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de7b4958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de7b4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de7b4c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de7b4df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de7b3020"/>
        <function-ref name="set" scoped="" ref="0x2af3de7b31a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de7b3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de7b1480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de7b1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de7b17d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de7b1958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de7b1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de7b1c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de7b1df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de7d0020"/>
        <function-ref name="set" scoped="" ref="0x2af3de7d01a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de7d0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de7ce480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de7ce480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de7ce7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de7ce958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de7ceae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de7cec68"/>
        <function-ref name="get" scoped="" ref="0x2af3de7cedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de7cc020"/>
        <function-ref name="set" scoped="" ref="0x2af3de7cc1a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de7cc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de7ca480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de7ca480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de7ca7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de7ca958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de7caae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de7cac68"/>
        <function-ref name="get" scoped="" ref="0x2af3de7cadf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de7c9020"/>
        <function-ref name="set" scoped="" ref="0x2af3de7c91a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de7c9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de7c7480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de7c7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de7c77d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de7c7958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de7c7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de7c7c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de7c7df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de7c6020"/>
        <function-ref name="set" scoped="" ref="0x2af3de7c61a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de7c6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de7c4480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de7c4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de7c47d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de7c4958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de7c4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de7c4c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de7c4df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de7c3020"/>
        <function-ref name="set" scoped="" ref="0x2af3de7c31a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de7c3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de7c1480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de7c1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de7c17d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de7c1958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de7c1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de7c1c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de7c1df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de7e0020"/>
        <function-ref name="set" scoped="" ref="0x2af3de7e01a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de7e0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2af3de3d1120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2af3de3d1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3d1470"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3d15f8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3d1780"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3d1908"/>
        <function-ref name="get" scoped="" ref="0x2af3de3d1a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3d1c18"/>
        <function-ref name="set" scoped="" ref="0x2af3de3d1da0"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2af3de3cd5b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2af3de3cd5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3cd908"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3cda90"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3cdc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3cdda0"/>
        <function-ref name="get" scoped="" ref="0x2af3de3cc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3cc1a8"/>
        <function-ref name="set" scoped="" ref="0x2af3de3cc330"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3cc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2af3de3c4e40" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2af3de3c4e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3c31c0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3c3348"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3c34d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3c3658"/>
        <function-ref name="get" scoped="" ref="0x2af3de3c37e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3c3968"/>
        <function-ref name="set" scoped="" ref="0x2af3de3c3af0"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3c3c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2af3de3cf2a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2af3de3cf2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3cf5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3cf780"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3cf908"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3cfa90"/>
        <function-ref name="get" scoped="" ref="0x2af3de3cfc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3cfda0"/>
        <function-ref name="set" scoped="" ref="0x2af3de3ce020"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3ce1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2af3de3cc740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2af3de3cc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3cca90"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3ccc18"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3ccda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3cb020"/>
        <function-ref name="get" scoped="" ref="0x2af3de3cb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3cb330"/>
        <function-ref name="set" scoped="" ref="0x2af3de3cb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3cb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2af3de3d2020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2af3de3d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3d2370"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3d24f8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3d2680"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3d2808"/>
        <function-ref name="get" scoped="" ref="0x2af3de3d2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3d2b18"/>
        <function-ref name="set" scoped="" ref="0x2af3de3d2ca0"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3d2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2af3de3ce430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2af3de3ce430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3ce780"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3ce908"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3cea90"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3cec18"/>
        <function-ref name="get" scoped="" ref="0x2af3de3ceda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3cd020"/>
        <function-ref name="set" scoped="" ref="0x2af3de3cd1a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3cd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2af3de3cb8c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2af3de3cb8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3cbc18"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3cbda0"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3da020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3da1a8"/>
        <function-ref name="get" scoped="" ref="0x2af3de3da330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3da4b8"/>
        <function-ref name="set" scoped="" ref="0x2af3de3da640"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3da7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de8173e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de8173e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de817730"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de8178b8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de817a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de817bc8"/>
        <function-ref name="get" scoped="" ref="0x2af3de817d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de816020"/>
        <function-ref name="set" scoped="" ref="0x2af3de8161a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de816330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de814480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de814480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de8147d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de814958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de814ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de814c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de814df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de835020"/>
        <function-ref name="set" scoped="" ref="0x2af3de8351a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de835330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de833480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de833480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de8337d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de833958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de833ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de833c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de833df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de832020"/>
        <function-ref name="set" scoped="" ref="0x2af3de8321a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de832330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de830480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de830480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de8307d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de830958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de830ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de830c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de830df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de82f020"/>
        <function-ref name="set" scoped="" ref="0x2af3de82f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de82f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de82d480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de82d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de82d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de82d958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de82dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de82dc68"/>
        <function-ref name="get" scoped="" ref="0x2af3de82ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de82b020"/>
        <function-ref name="set" scoped="" ref="0x2af3de82b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de82b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de829480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de829480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de8297d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de829958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de829ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de829c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de829df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de828020"/>
        <function-ref name="set" scoped="" ref="0x2af3de8281a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de828330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de826480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de826480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de8267d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de826958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de826ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de826c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de826df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de825020"/>
        <function-ref name="set" scoped="" ref="0x2af3de8251a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de825330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de845480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de845480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de8457d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de845958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de845ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de845c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de845df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de844020"/>
        <function-ref name="set" scoped="" ref="0x2af3de8441a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de844330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2af3de3e2bd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2af3de3e2bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3e1020"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3e11a8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3e1330"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3e14b8"/>
        <function-ref name="get" scoped="" ref="0x2af3de3e1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3e17c8"/>
        <function-ref name="set" scoped="" ref="0x2af3de3e1950"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3e1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2af3de3de020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2af3de3de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3de370"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3de4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3de680"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3de808"/>
        <function-ref name="get" scoped="" ref="0x2af3de3de990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3deb18"/>
        <function-ref name="set" scoped="" ref="0x2af3de3deca0"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3dee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2af3de3d4930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2af3de3d4930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3d4c80"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3d4e08"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3d3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3d31a8"/>
        <function-ref name="get" scoped="" ref="0x2af3de3d3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3d34b8"/>
        <function-ref name="set" scoped="" ref="0x2af3de3d3640"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3d37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2af3de3e1d60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2af3de3e1d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3e00d8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3e0260"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3e03e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3e0570"/>
        <function-ref name="get" scoped="" ref="0x2af3de3e06f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3e0880"/>
        <function-ref name="set" scoped="" ref="0x2af3de3e0a08"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3e0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2af3de3dd120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2af3de3dd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3dd470"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3dd5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3dd780"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3dd908"/>
        <function-ref name="get" scoped="" ref="0x2af3de3dda90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3ddc18"/>
        <function-ref name="set" scoped="" ref="0x2af3de3ddda0"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2af3de3d3a50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2af3de3d3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3d3da0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3e2020"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3e21a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3e2330"/>
        <function-ref name="get" scoped="" ref="0x2af3de3e24b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3e2640"/>
        <function-ref name="set" scoped="" ref="0x2af3de3e27c8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3e2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2af3de3e0e18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2af3de3e0e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3df1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3df330"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3df4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3df640"/>
        <function-ref name="get" scoped="" ref="0x2af3de3df7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3df950"/>
        <function-ref name="set" scoped="" ref="0x2af3de3dfad8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3dfc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2af3de3dc2a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2af3de3dc2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3dc5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3dc780"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3dc908"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3dca90"/>
        <function-ref name="get" scoped="" ref="0x2af3de3dcc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3dcda0"/>
        <function-ref name="set" scoped="" ref="0x2af3de3db020"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3db1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de87f3e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de87f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de87f730"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de87f8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de87fa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de87fbc8"/>
        <function-ref name="get" scoped="" ref="0x2af3de87fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de87e020"/>
        <function-ref name="set" scoped="" ref="0x2af3de87e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de87e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de87c480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de87c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de87c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de87c958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de87cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de87cc68"/>
        <function-ref name="get" scoped="" ref="0x2af3de87cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de87b020"/>
        <function-ref name="set" scoped="" ref="0x2af3de87b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de87b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de89d480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de89d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de89d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de89d958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de89dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de89dc68"/>
        <function-ref name="get" scoped="" ref="0x2af3de89ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de89c020"/>
        <function-ref name="set" scoped="" ref="0x2af3de89c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de89c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de89a480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de89a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de89a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de89a958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de89aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de89ac68"/>
        <function-ref name="get" scoped="" ref="0x2af3de89adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de899020"/>
        <function-ref name="set" scoped="" ref="0x2af3de8991a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de899330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de897480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de897480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de8977d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de897958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de897ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de897c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de897df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de895020"/>
        <function-ref name="set" scoped="" ref="0x2af3de8951a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de895330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de893480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de893480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de8937d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de893958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de893ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de893c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de893df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de892020"/>
        <function-ref name="set" scoped="" ref="0x2af3de8921a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de892330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de890480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de890480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de8907d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de890958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de890ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de890c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de890df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de88f020"/>
        <function-ref name="set" scoped="" ref="0x2af3de88f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de88f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de88d480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de88d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de88d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de88d958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de88dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de88dc68"/>
        <function-ref name="get" scoped="" ref="0x2af3de88ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de8b0020"/>
        <function-ref name="set" scoped="" ref="0x2af3de8b01a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de8b0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2af3de3e4430" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2af3de3e4430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3e4780"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3e4908"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3e4a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3e4c18"/>
        <function-ref name="get" scoped="" ref="0x2af3de3e4da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3e3020"/>
        <function-ref name="set" scoped="" ref="0x2af3de3e31a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3e3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2af3de3f38c8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2af3de3f38c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3f3c18"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3f3da0"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3f2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3f21a8"/>
        <function-ref name="get" scoped="" ref="0x2af3de3f2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3f24b8"/>
        <function-ref name="set" scoped="" ref="0x2af3de3f2640"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3f27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2af3de3e61e8" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2af3de3e61e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3e6538"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3e66c0"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3e6848"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3e69d0"/>
        <function-ref name="get" scoped="" ref="0x2af3de3e6b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3e6ce0"/>
        <function-ref name="set" scoped="" ref="0x2af3de3e6e68"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2af3de3e35b8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2af3de3e35b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3e3908"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3e3a90"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3e3c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3e3da0"/>
        <function-ref name="get" scoped="" ref="0x2af3de3f4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3f41a8"/>
        <function-ref name="set" scoped="" ref="0x2af3de3f4330"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3f44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2af3de3f2a50" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2af3de3f2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3f2da0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3f1020"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3f11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3f1330"/>
        <function-ref name="get" scoped="" ref="0x2af3de3f14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3f1640"/>
        <function-ref name="set" scoped="" ref="0x2af3de3f17c8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3f1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2af3de3e52a8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2af3de3e52a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3e55f8"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3e5780"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3e5908"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3e5a90"/>
        <function-ref name="get" scoped="" ref="0x2af3de3e5c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3e5da0"/>
        <function-ref name="set" scoped="" ref="0x2af3de3e4020"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3e41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2af3de3f4740" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2af3de3f4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3f4a90"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3f4c18"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3f4da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3f3020"/>
        <function-ref name="get" scoped="" ref="0x2af3de3f31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3f3330"/>
        <function-ref name="set" scoped="" ref="0x2af3de3f34b8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3f3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2af3de3f1bd8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2af3de3f1bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3ef020"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de3ef1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de3ef330"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de3ef4b8"/>
        <function-ref name="get" scoped="" ref="0x2af3de3ef640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de3ef7c8"/>
        <function-ref name="set" scoped="" ref="0x2af3de3ef950"/>
        <function-ref name="clr" scoped="" ref="0x2af3de3efad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de8f13e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de8f13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de8f1730"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de8f18b8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de8f1a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de8f1bc8"/>
        <function-ref name="get" scoped="" ref="0x2af3de8f1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de8f0020"/>
        <function-ref name="set" scoped="" ref="0x2af3de8f01a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de8f0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de8ee480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de8ee480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de8ee7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de8ee958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de8eeae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de8eec68"/>
        <function-ref name="get" scoped="" ref="0x2af3de8eedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de8ed020"/>
        <function-ref name="set" scoped="" ref="0x2af3de8ed1a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de8ed330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de8eb480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de8eb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de8eb7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de8eb958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de8ebae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de8ebc68"/>
        <function-ref name="get" scoped="" ref="0x2af3de8ebdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de8ea020"/>
        <function-ref name="set" scoped="" ref="0x2af3de8ea1a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de8ea330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de8e8480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de8e8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de8e87d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de8e8958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de8e8ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de8e8c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de8e8df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de8e7020"/>
        <function-ref name="set" scoped="" ref="0x2af3de8e71a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de8e7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de90b480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de90b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de90b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de90b958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de90bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de90bc68"/>
        <function-ref name="get" scoped="" ref="0x2af3de90bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de90a020"/>
        <function-ref name="set" scoped="" ref="0x2af3de90a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de90a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de908480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de908480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de9087d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de908958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de908ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de908c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de908df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de906020"/>
        <function-ref name="set" scoped="" ref="0x2af3de9061a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de906330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de904480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de904480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de9047d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de904958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de904ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de904c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de904df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de903020"/>
        <function-ref name="set" scoped="" ref="0x2af3de9031a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de903330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de901480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de901480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de9017d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de901958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de901ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de901c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de901df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de900020"/>
        <function-ref name="set" scoped="" ref="0x2af3de9001a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de900330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de3fbac0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de3fbac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de3fbe10"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de409020"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de4091a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de409330"/>
        <function-ref name="get" scoped="" ref="0x2af3de4094b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de409640"/>
        <function-ref name="set" scoped="" ref="0x2af3de4097c8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de409950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de418db8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de418db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de417170"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de4172f8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de417480"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de417608"/>
        <function-ref name="get" scoped="" ref="0x2af3de417790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de417918"/>
        <function-ref name="set" scoped="" ref="0x2af3de417aa0"/>
        <function-ref name="clr" scoped="" ref="0x2af3de417c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de4123e0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de4123e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de412730"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de4128b8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de412a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de412bc8"/>
        <function-ref name="get" scoped="" ref="0x2af3de412d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de411020"/>
        <function-ref name="set" scoped="" ref="0x2af3de4111a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de411330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de41f7e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de41f7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de41fb38"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de41fcc0"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de41fe48"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de41e020"/>
        <function-ref name="get" scoped="" ref="0x2af3de41e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de41e330"/>
        <function-ref name="set" scoped="" ref="0x2af3de41e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de41e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de41bc38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de41bc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de41a020"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de41a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de41a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de41a4b8"/>
        <function-ref name="get" scoped="" ref="0x2af3de41a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de41a7c8"/>
        <function-ref name="set" scoped="" ref="0x2af3de41a950"/>
        <function-ref name="clr" scoped="" ref="0x2af3de41aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de427020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de427020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de427370"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de4274f8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de427680"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de427808"/>
        <function-ref name="get" scoped="" ref="0x2af3de427990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de427b18"/>
        <function-ref name="set" scoped="" ref="0x2af3de427ca0"/>
        <function-ref name="clr" scoped="" ref="0x2af3de427e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de422480" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de422480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de4227d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de422958"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de422ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de422c68"/>
        <function-ref name="get" scoped="" ref="0x2af3de422df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de433020"/>
        <function-ref name="set" scoped="" ref="0x2af3de4331a8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de433330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de4307e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de4307e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de430b38"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de430cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de430e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de42f020"/>
        <function-ref name="get" scoped="" ref="0x2af3de42f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de42f330"/>
        <function-ref name="set" scoped="" ref="0x2af3de42f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de42f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de42b970" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de42b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de42bcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de42be48"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de43c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de43c1a8"/>
        <function-ref name="get" scoped="" ref="0x2af3de43c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de43c4b8"/>
        <function-ref name="set" scoped="" ref="0x2af3de43c640"/>
        <function-ref name="clr" scoped="" ref="0x2af3de43c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de438ab0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de438ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de438e00"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de437020"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de4371a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de437330"/>
        <function-ref name="get" scoped="" ref="0x2af3de4374b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de437640"/>
        <function-ref name="set" scoped="" ref="0x2af3de4377c8"/>
        <function-ref name="clr" scoped="" ref="0x2af3de437950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de434c38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de434c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de445020"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de4451a8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de445330"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de4454b8"/>
        <function-ref name="get" scoped="" ref="0x2af3de445640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de4457c8"/>
        <function-ref name="set" scoped="" ref="0x2af3de445950"/>
        <function-ref name="clr" scoped="" ref="0x2af3de445ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de440020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de440020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de440370"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de4404f8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de440680"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de440808"/>
        <function-ref name="get" scoped="" ref="0x2af3de440990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de440b18"/>
        <function-ref name="set" scoped="" ref="0x2af3de440ca0"/>
        <function-ref name="clr" scoped="" ref="0x2af3de440e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2af3de44d180" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2af3de44d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de44d4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de44d658"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de44d7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de44d968"/>
        <function-ref name="get" scoped="" ref="0x2af3de44daf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de44dc78"/>
        <function-ref name="set" scoped="" ref="0x2af3de44de00"/>
        <function-ref name="clr" scoped="" ref="0x2af3de44c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af3de4882c0" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2af3de4882c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2af3de1f9128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2af3de1f9128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af3de488610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2af3de4888f0" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2af3de4888f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2af3de488c40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2af3de488dc8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2af3de487020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2af3de4871a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2af3de487330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2af3de4a5898" loc="60:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2af3de4a5898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af3de4a5be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2af3de4a6198" loc="57:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2af3de4a6198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2af3de4a64e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2af3de4a51d0" loc="59:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2af3de4a51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af3de4a5520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2af3de4a67d0" loc="58:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2af3de4a67d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af3de4a6b20"/>
        <function-ref name="taskLoop" scoped="" ref="0x2af3de4a6ca8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2af3de4a6e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2af3de2011c8" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2af3de2011c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af3de201518"/>
        <function-ref name="runTask" scoped="" ref="0x2af3de2016a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2af3de1fe600" loc="47:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2af3de1fe600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af3de1fe950"/>
        <function-ref name="taskLoop" scoped="" ref="0x2af3de1fead8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2af3de1fec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2af3de2b42b0" loc="56:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2af3de2b42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af3de2b4600"/>
        <function-ref name="runTask" scoped="" ref="0x2af3de2b4788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2af3de2bd758" loc="57:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2af3de2bd758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2af3de2bdaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2af3de2b5448" loc="55:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2af3de2b5448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af3de2b5798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2af3de2b5920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2af3de2b5aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2af3de2da2b0" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2af3de2da2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2af3de2da600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2af3de2d4660" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2af3de2d4660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2af3de2d49b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2af3de2dda80" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2af3de2dda80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2af3de2dddd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2af3de4b2578" loc="7:SpeedTestC.nc">
      <component-ref qname="SpeedTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2af3de4b2578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af3de27a530"/>
            <typename><typedef-ref name="TMilli" ref="0x2af3de27a888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af3de4c48f0"/>
        <function-ref name="fired" scoped="" ref="0x2af3de4b1020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af3de4b1d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af3de4b18c0"/>
        <function-ref name="getdt" scoped="" ref="0x2af3de4c31c0"/>
        <function-ref name="gett0" scoped="" ref="0x2af3de4c4d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2af3de4b1470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af3de4a80f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af3de4c4320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af3de4a8598"/>
        <function-ref name="stop" scoped="" ref="0x2af3de4a8a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2af3de2f9a10" loc="4:SpeedTestC.nc">
      <component-ref qname="SpeedTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2af3de2f9a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2af3de2f9d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LCD2x16" ref="0x2af3de4ad020" loc="5:SpeedTestC.nc">
      <component-ref qname="SpeedTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD2x16" scoped="" ref="0x2af3de4ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD2x16"/>
      </instance>
      <interface-functions>
        <function-ref name="sendString" scoped="" ref="0x2af3de4ad808"/>
        <function-ref name="clearDisplay" scoped="" ref="0x2af3de4ad4f8"/>
        <function-ref name="init" scoped="" ref="0x2af3de4ad680"/>
        <function-ref name="stringWritten" scoped="" ref="0x2af3de4ad370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Measure0" ref="0x2af3de4adb88" loc="6:SpeedTestC.nc">
      <component-ref qname="SpeedTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Measure0" scoped="" ref="0x2af3de4adb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2af3de4a9020"/>
        <function-ref name="isInput" scoped="" ref="0x2af3de4a91a8"/>
        <function-ref name="toggle" scoped="" ref="0x2af3de4a9330"/>
        <function-ref name="isOutput" scoped="" ref="0x2af3de4a94b8"/>
        <function-ref name="get" scoped="" ref="0x2af3de4a9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2af3de4a97c8"/>
        <function-ref name="set" scoped="" ref="0x2af3de4a9950"/>
        <function-ref name="clr" scoped="" ref="0x2af3de4a9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Lcd2x16" ref="0x2af3de4c51d0" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16C.nc">
      <component-ref qname="LCD2x16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lcd2x16" scoped="" ref="0x2af3de4c51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD2x16"/>
      </instance>
      <interface-functions>
        <function-ref name="sendString" scoped="" ref="0x2af3de4c59b8"/>
        <function-ref name="clearDisplay" scoped="" ref="0x2af3de4c56a8"/>
        <function-ref name="init" scoped="" ref="0x2af3de4c5830"/>
        <function-ref name="stringWritten" scoped="" ref="0x2af3de4c5520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCD2x16" ref="0x2af3de4d59f8" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16P.nc">
      <component-ref qname="LCD2x16P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD2x16" scoped="" ref="0x2af3de4d59f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD2x16"/>
      </instance>
      <interface-functions>
        <function-ref name="sendString" scoped="" ref="0x2af3de4d4330"/>
        <function-ref name="clearDisplay" scoped="" ref="0x2af3de4d4020"/>
        <function-ref name="init" scoped="" ref="0x2af3de4d41a8"/>
        <function-ref name="stringWritten" scoped="" ref="0x2af3de4d5d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendData" ref="0x2af3de4e9df0" loc="84:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16P.nc">
      <component-ref qname="LCD2x16P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendData" scoped="" ref="0x2af3de4e9df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af3de4e8170"/>
        <function-ref name="runTask" scoped="" ref="0x2af3de4e82f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af3de4ee420" loc="45:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="SpeedTestAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2af3de4ee420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af3de27a530"/>
            <typename><typedef-ref name="TMilli" ref="0x2af3de27a888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af3de6c16c8"/>
        <function-ref name="fired" scoped="" ref="0x2af3de6a7db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af3de6c2ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af3de6c2688"/>
        <function-ref name="getdt" scoped="" ref="0x2af3de6bf020"/>
        <function-ref name="gett0" scoped="" ref="0x2af3de6c1b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2af3de6c2238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af3de6a7020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af3de6c10f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af3de6a74c0"/>
        <function-ref name="stop" scoped="" ref="0x2af3de6a7960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2af3de4fa1c8" loc="49:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2af3de4fa1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af3de27a530"/>
            <typename><typedef-ref name="TMilli" ref="0x2af3de27a888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af3de50d5f0"/>
        <function-ref name="fired" scoped="" ref="0x2af3de4f9af0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af3de50e8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af3de50e470"/>
        <function-ref name="getdt" scoped="" ref="0x2af3de50b020"/>
        <function-ref name="gett0" scoped="" ref="0x2af3de50da40"/>
        <function-ref name="isRunning" scoped="" ref="0x2af3de50e020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af3de4fad10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af3de50d020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af3de4f9200"/>
        <function-ref name="stop" scoped="" ref="0x2af3de4f96a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2af3de508b18" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2af3de508b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af3de27a530"/>
            <typename><typedef-ref name="TMilli" ref="0x2af3de27a888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af3de504d98"/>
        <function-ref name="fired" scoped="" ref="0x2af3de5054d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af3de5041f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af3de505d78"/>
        <function-ref name="getdt" scoped="" ref="0x2af3de519688"/>
        <function-ref name="gett0" scoped="" ref="0x2af3de519238"/>
        <function-ref name="isRunning" scoped="" ref="0x2af3de505928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af3de5076f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af3de5047c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af3de507b90"/>
        <function-ref name="stop" scoped="" ref="0x2af3de505088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2af3de517108" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2af3de517108"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af3de27a530"/>
            <typename><typedef-ref name="TMilli" ref="0x2af3de27a888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af3de517c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af3de50bde0" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2af3de50bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af3de508170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2af3de51a150" loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2af3de51a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af3de27a530"/>
            <typename><typedef-ref name="TMilli" ref="0x2af3de27a888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af3de52f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af3de52f930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af3de52f4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2af3de52fdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af3de5146f0" loc="35:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2af3de5146f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af3de514a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2af3de510020" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2af3de510020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af3de27a530"/>
            <typename><typedef-ref name="TMilli" ref="0x2af3de27a888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af3de51d690"/>
        <function-ref name="fired" scoped="" ref="0x2af3de50f6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2af3de51d088"/>
        <function-ref name="isRunning" scoped="" ref="0x2af3de50fb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af3de51db18"/>
        <function-ref name="start" scoped="" ref="0x2af3de510d70"/>
        <function-ref name="stop" scoped="" ref="0x2af3de50f270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af3de618938" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2af3de618938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af3de27a530"/>
            <typename><typedef-ref name="TMilli" ref="0x2af3de27a888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af3de614020"/>
        <function-ref name="fired" scoped="" ref="0x2af3de616088"/>
        <function-ref name="startAt" scoped="" ref="0x2af3de616998"/>
        <function-ref name="isRunning" scoped="" ref="0x2af3de616510"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af3de6144a8"/>
        <function-ref name="start" scoped="" ref="0x2af3de6176b0"/>
        <function-ref name="stop" scoped="" ref="0x2af3de617b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af3de618190" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2af3de618190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2af3de1fad88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2af3de1fad88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af3de6184e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af3de614a90" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2af3de614a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af3de27a530"/>
            <typename><typedef-ref name="TMilli" ref="0x2af3de27a888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af3de613828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af3de62c190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af3de613cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2af3de62c618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2af3de9e30c0" loc="38:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2af3de9e30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2af3de9e3410"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2af3de9e3598"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2af3de9e3720"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2af3de9e38a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2af3de9e3a30"/>
        <function-ref name="setControl" scoped="" ref="0x2af3de9e3bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2af3de9c4020" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2af3de9c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af3de27a530"/>
            <typename><typedef-ref name="TMilli" ref="0x2af3de27a888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af3de9c1690"/>
        <function-ref name="fired" scoped="" ref="0x2af3de9c36f8"/>
        <function-ref name="startAt" scoped="" ref="0x2af3de9c1088"/>
        <function-ref name="isRunning" scoped="" ref="0x2af3de9c3b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af3de9c1b18"/>
        <function-ref name="start" scoped="" ref="0x2af3de9c4d70"/>
        <function-ref name="stop" scoped="" ref="0x2af3de9c3270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2af3de9c5720" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2af3de9c5720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2af3de9c5a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2af3de9c0128" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2af3de9c0128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af3de27a530"/>
            <typename><typedef-ref name="TMilli" ref="0x2af3de27a888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af3de9c0e78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af3de9bf7b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af3de9bf330"/>
        <function-ref name="overflow" scoped="" ref="0x2af3de9bfc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x2af3de9de0a0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2af3de9de0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2af3de9deb98"/>
        <function-ref name="controlBusy" scoped="" ref="0x2af3de9de578"/>
        <function-ref name="compareBusy" scoped="" ref="0x2af3de9de700"/>
        <function-ref name="countBusy" scoped="" ref="0x2af3de9de888"/>
        <function-ref name="getAssr" scoped="" ref="0x2af3de9dea10"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2af3de9de3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2af3de9e1020" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2af3de9e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2af3de9df7a8"/>
        <function-ref name="fired" scoped="" ref="0x2af3de9e0560"/>
        <function-ref name="get" scoped="" ref="0x2af3de9e1ba0"/>
        <function-ref name="reset" scoped="" ref="0x2af3de9e09e8"/>
        <function-ref name="isOn" scoped="" ref="0x2af3de9dfc30"/>
        <function-ref name="set" scoped="" ref="0x2af3de9e0088"/>
        <function-ref name="start" scoped="" ref="0x2af3de9e0e70"/>
        <function-ref name="stop" scoped="" ref="0x2af3de9df320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2af3de9be228" loc="37:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2af3de9be228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2af3de9e4310"/>
        <function-ref name="test" scoped="" ref="0x2af3de9e5998"/>
        <function-ref name="get" scoped="" ref="0x2af3de9beda8"/>
        <function-ref name="setScale" scoped="" ref="0x2af3de9e4798"/>
        <function-ref name="getScale" scoped="" ref="0x2af3de9e4c70"/>
        <function-ref name="reset" scoped="" ref="0x2af3de9bcbd0"/>
        <function-ref name="overflow" scoped="" ref="0x2af3de9bc748"/>
        <function-ref name="isOn" scoped="" ref="0x2af3de9e5e20"/>
        <function-ref name="set" scoped="" ref="0x2af3de9bc270"/>
        <function-ref name="start" scoped="" ref="0x2af3de9e5088"/>
        <function-ref name="stop" scoped="" ref="0x2af3de9e5510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2af3de5a7020" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2af3de5a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2af3de5a7370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2af3de5a74f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2af3de5a7680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2af3de5a7808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2af3de5a7990"/>
        <function-ref name="setControl" scoped="" ref="0x2af3de5a7b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2af3de5a3218" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2af3de5a3218"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2af3de5a3d10"/>
        <function-ref name="controlBusy" scoped="" ref="0x2af3de5a36f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2af3de5a3878"/>
        <function-ref name="countBusy" scoped="" ref="0x2af3de5a3a00"/>
        <function-ref name="getAssr" scoped="" ref="0x2af3de5a3b88"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2af3de5a3568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af3de5a6020" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2af3de5a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2af3de5a47a8"/>
        <function-ref name="fired" scoped="" ref="0x2af3de5a5560"/>
        <function-ref name="get" scoped="" ref="0x2af3de5a6ba0"/>
        <function-ref name="reset" scoped="" ref="0x2af3de5a59e8"/>
        <function-ref name="isOn" scoped="" ref="0x2af3de5a4c30"/>
        <function-ref name="set" scoped="" ref="0x2af3de5a5088"/>
        <function-ref name="start" scoped="" ref="0x2af3de5a5e70"/>
        <function-ref name="stop" scoped="" ref="0x2af3de5a4320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af3de598e00" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2af3de598e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2af3de5a90f8"/>
        <function-ref name="test" scoped="" ref="0x2af3de5aa798"/>
        <function-ref name="get" scoped="" ref="0x2af3de5ada18"/>
        <function-ref name="setScale" scoped="" ref="0x2af3de5a9580"/>
        <function-ref name="getScale" scoped="" ref="0x2af3de5a9a58"/>
        <function-ref name="reset" scoped="" ref="0x2af3de5ab980"/>
        <function-ref name="overflow" scoped="" ref="0x2af3de5ab4f8"/>
        <function-ref name="isOn" scoped="" ref="0x2af3de5aac20"/>
        <function-ref name="set" scoped="" ref="0x2af3de5ab020"/>
        <function-ref name="start" scoped="" ref="0x2af3de5abe08"/>
        <function-ref name="stop" scoped="" ref="0x2af3de5aa310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2af3de5b1160" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2af3de5b1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2af3de5b14b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2af3de5b1638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2af3de5b17c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2af3de5b1948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2af3de5b1ad0"/>
        <function-ref name="setControl" scoped="" ref="0x2af3de5b1c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2af3de5c4268" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2af3de5c4268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2af3de5c45b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2af3de5c4958" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2af3de5c4958"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2af3de5c34b8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2af3de5c4e30"/>
        <function-ref name="compareBusy" scoped="" ref="0x2af3de5c3020"/>
        <function-ref name="countBusy" scoped="" ref="0x2af3de5c31a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2af3de5c3330"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2af3de5c4ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2af3de5b0190" loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2af3de5b0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2af3de5c6930"/>
        <function-ref name="fired" scoped="" ref="0x2af3de5af6d0"/>
        <function-ref name="get" scoped="" ref="0x2af3de5b0d10"/>
        <function-ref name="reset" scoped="" ref="0x2af3de5afb58"/>
        <function-ref name="isOn" scoped="" ref="0x2af3de5c6db8"/>
        <function-ref name="set" scoped="" ref="0x2af3de5af1f8"/>
        <function-ref name="start" scoped="" ref="0x2af3de5c6020"/>
        <function-ref name="stop" scoped="" ref="0x2af3de5c64a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af3de5b6180" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2af3de5b6180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2af3de5b3270"/>
        <function-ref name="test" scoped="" ref="0x2af3de5b4930"/>
        <function-ref name="get" scoped="" ref="0x2af3de5b6d00"/>
        <function-ref name="setScale" scoped="" ref="0x2af3de5b36f8"/>
        <function-ref name="getScale" scoped="" ref="0x2af3de5b3bd0"/>
        <function-ref name="reset" scoped="" ref="0x2af3de5b5b58"/>
        <function-ref name="overflow" scoped="" ref="0x2af3de5b56d0"/>
        <function-ref name="isOn" scoped="" ref="0x2af3de5b4db8"/>
        <function-ref name="set" scoped="" ref="0x2af3de5b51f8"/>
        <function-ref name="start" scoped="" ref="0x2af3de5b4020"/>
        <function-ref name="stop" scoped="" ref="0x2af3de5b44a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2af3de64acf0" loc="74:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2af3de64acf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af3de6490a0"/>
        <function-ref name="runTask" scoped="" ref="0x2af3de649228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2af3de64ec70" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2af3de64ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af3de27a530"/>
            <typename><typedef-ref name="TMilli" ref="0x2af3de27a888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af3de64a410"/>
        <function-ref name="fired" scoped="" ref="0x2af3de64c4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2af3de64cdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2af3de64c930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2af3de64a898"/>
        <function-ref name="start" scoped="" ref="0x2af3de64d9f0"/>
        <function-ref name="stop" scoped="" ref="0x2af3de64c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af3de653ab0" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2af3de653ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af3de27a530"/>
            <typename><typedef-ref name="TMilli" ref="0x2af3de27a888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af3de64fd60"/>
        <function-ref name="fired" scoped="" ref="0x2af3de651470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af3de64f1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af3de651d10"/>
        <function-ref name="getdt" scoped="" ref="0x2af3de64e648"/>
        <function-ref name="gett0" scoped="" ref="0x2af3de64e1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2af3de6518c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af3de652620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af3de64f790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af3de652ac0"/>
        <function-ref name="stop" scoped="" ref="0x2af3de651020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2af3de6a0478" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2af3de6a0478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2af3de6a07c8"/>
        <function-ref name="runTask" scoped="" ref="0x2af3de6a0950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2af3de6a5208" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2af3de6a5208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af3de27a530"/>
            <typename><typedef-ref name="TMilli" ref="0x2af3de27a888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af3de6a15f0"/>
        <function-ref name="fired" scoped="" ref="0x2af3de6a4b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af3de6a28c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af3de6a2470"/>
        <function-ref name="getdt" scoped="" ref="0x2af3de6a0020"/>
        <function-ref name="gett0" scoped="" ref="0x2af3de6a1a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2af3de6a2020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af3de6a5d50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af3de6a1020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af3de6a4238"/>
        <function-ref name="stop" scoped="" ref="0x2af3de6a46d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2af3de68f020" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2af3de68f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af3de27a530"/>
            <typename><typedef-ref name="TMilli" ref="0x2af3de27a888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2af3de6a6358"/>
        <function-ref name="fired" scoped="" ref="0x2af3de68e9b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2af3de68c748"/>
        <function-ref name="isOneShot" scoped="" ref="0x2af3de68c2d8"/>
        <function-ref name="getdt" scoped="" ref="0x2af3de6a6c38"/>
        <function-ref name="gett0" scoped="" ref="0x2af3de6a67c8"/>
        <function-ref name="isRunning" scoped="" ref="0x2af3de68ee28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2af3de68fb88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2af3de68cd38"/>
        <function-ref name="startOneShot" scoped="" ref="0x2af3de68e088"/>
        <function-ref name="stop" scoped="" ref="0x2af3de68e548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2af3de69ec38" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2af3de69ec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af3de27a530"/>
            <typename><typedef-ref name="TMilli" ref="0x2af3de27a888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af3de69d820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2af3de69de48" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2af3de69de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2af3de27a530"/>
            <typename><typedef-ref name="TMilli" ref="0x2af3de27a888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2af3de6aebe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2af3de6ad548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2af3de6ad0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2af3de6ad9d0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2af3de2f5178" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af3de204ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2af3de2ede08" loc="60:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2af3de2fb290" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2af3ddffc378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2af3de2fb020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2af3de2ff940" loc="31:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="27:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2af3ddffc378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2af3de2fe378" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2af3de2fe108" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2af3de2fee00" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2af3de2feb90" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2af3de2fd698" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2af3de3120d8" loc="44:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2af3de3127a0" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af3de1fb4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2af3de313328" loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2af3de311570" loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af3de1fb4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2af3de3139c8" loc="43:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af3de1fb4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2af3de312e58" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2af3de3155a8" loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2af3de315c18" loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2af3de2003a0" loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2af3de1fe290" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2af3de200ab8" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af3de1fb4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2af3de20a070" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af3de204ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2af3de20a860" loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2af3de2bd450" loc="76:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2af3de2d3d28" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2af3de2591a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2af3de2dd6d8" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af3de4ba4e8" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af3de4ba4e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2af3de4b3020" loc="136:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2af3de4b88f8" loc="83:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2af3de4b55b8" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2af3de4b5020" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2af3de4b5338" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2af3de4b7870" loc="98:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af3de1fb4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2af3de4b2020" loc="151:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2af3de4b3740" loc="144:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2af3de4b70d8" loc="92:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af3de1fb4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2af3de4b9020" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2af3de4bad48" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2af3de4b45b8" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2af3de4b4020" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2af3de4b4338" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2af3de4b9a60" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2af3de4b97f0" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af3de4b8258" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LCD2x16" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16.nc">
      <function event="" provided="0" name="stringWritten" ref="0x2af3de4aac18" loc="40:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16.nc">
        <interfacedef-ref qname="LCD2x16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDisplay" ref="0x2af3de4aa558" loc="35:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16.nc">
        <interfacedef-ref qname="LCD2x16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af3de204ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2af3de4aeb10" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16.nc">
        <interfacedef-ref qname="LCD2x16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af3de204ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x2af3de4ae8a0" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendString" ref="0x2af3de4abe18" loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16.nc">
        <interfacedef-ref qname="LCD2x16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2af3de204ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="str" ref="0x2af3de4ab218" loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2af3de4ab528" loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </variable>
          <variable name="line" ref="0x2af3de4ab848" loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </variable>
          <variable name="column" ref="0x2af3de4abb78" loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd2x16/LCD2x16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af3de515340" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af3de515340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2af3de515bd0" loc="61:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2af3ddffcdb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af3de51b7b8" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af3de51b7b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af3de51b9e8" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af3de51b9e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2af3de52e2a8" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af3de51b9e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2af3de52d328" loc="76:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2af3de52eac0" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af3de1fb4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2af3de52da18" loc="82:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2af3de524528" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2af3de524528"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2af3de524758" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af3de524758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2af3de51f020" loc="109:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af3de524758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2af3de5211d8" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2af3de5206c0" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af3de524758"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af3de524758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2af3de520120" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af3de524758"/></type-var>
          </variable>
          <variable name="dt" ref="0x2af3de520440" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af3de524758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2af3de521948" loc="88:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af3de1fb4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2af3de51f7a0" loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af3de524758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2af3de522290" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af3de524758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2af3de522020" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af3de524758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af3de522a60" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2af3de547020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2af3de286a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2af3de286e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2af3de55a360" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2af3de293100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2af3de293508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2af3de55b1d8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2af3de28a980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2af3de28ad88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2af3de55bb90" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2af3de28a980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2af3de28ad88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2af3de55b920" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2af3de28a980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2af3de28ad88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2af3de55ad18" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2af3de293100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2af3de293508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2af3de55aaa8" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2af3de293100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2af3de293508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2af3de5479f0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2af3de286a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2af3de286e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2af3de547780" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2af3de286a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2af3de286e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerSync" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer0Synchronous" ref="0x2af3de5624e8" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBusy" ref="0x2af3de562bf0" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2af3de5613e0" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2af3de561b90" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2af3de564328" loc="28:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="24:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2af3de28d118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2af3de28d520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2af3de564cd8" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2af3de28d118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2af3de28d520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2af3de564a68" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2af3de28d118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2af3de28d520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2af3de548420" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af3de548420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2af3de554a40" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af3de1fb4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2af3de557d88" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2af3de548cd8" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af3de548420"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2af3de5554c0" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2af3de5531d8" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af3de1fb4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2af3de557648" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af3de548420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2af3de5573d8" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2af3de548420"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2af3de555bb8" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af3de554328" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2af3de540688" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2af3de540688"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2af3de54fcf0" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2af3de53be20" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af3de1fb4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2af3de53d020" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2af3de540688"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2af3de54e690" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2af3de54e420" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2af3de54ee10" loc="110:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="106:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2af3ddffa910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2af3de53c7f8" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2af3de53c0d8" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2af3de54f5c8" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2af3de1fb4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2af3de53d958" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2af3de540688"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2af3de53d6e8" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2af3de540688"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2af3de53b020" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2af3de53b708" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
