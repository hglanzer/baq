<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="11:OWTestAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b99931be9d0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b99931bb220"/></to>
    </wire>
    <wire loc="72:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b99931bb220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b999336b198"/></to>
    </wire>
    <wire loc="12:OWTestAppC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2b999337d2b8"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2b99933742b8"/></to>
    </wire>
    <wire loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/OneWire/OneWireC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x2b99933742b8"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x2b99933b04d0"/></to>
    </wire>
    <wire loc="13:OWTestAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b9993387578"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b999366e420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b999366e420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b99933b8b60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:OWTestAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x2b99933847d8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9993686a60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b9993686a60"/></from>
      <to><interface-ref name="TimerMicro" scoped="" ref="0x2b999367e9b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:OWTestAppC.nc">
      <from><interface-ref name="bigAVR6UART0" scoped="" ref="0x2b9993372020"/></from>
      <to><interface-ref name="bigAVR6UART0" scoped="" ref="0x2b99933a6da0"/></to>
    </wire>
    <wire loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0C.nc">
      <from><interface-ref name="bigAVR6UART0" scoped="" ref="0x2b99933a6da0"/></from>
      <to><interface-ref name="bigAVR6UART0" scoped="" ref="0x2b9993584410"/></to>
    </wire>
    <wire loc="56:/homes/mhartmann/baq/tinyos/tos/system/TimerMicroP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b99931ba620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9993696310"/></to>
    </wire>
    <wire loc="72:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b99931ba620"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2b9993619e40"/></to>
    </wire>
    <wire loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b99931ba620"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2b9993614ca8"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b99931ba620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b99935ae120"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b99931ba620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b99933c54d8"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b999336b7d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b99930c3600"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b99930c3600"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b999317a448"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b999336a1d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b99931bd620"/></to>
    </wire>
    <wire loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b99931bd620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b99931cc600"/></to>
    </wire>
    <wire loc="71:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b999336a898"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b99931ba620"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b99931c0618"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b999334d8f0"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b99931cb398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b999334d2c0"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b99931ccca0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b99931c5b98"/></to>
    </wire>
    <wire loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b99931c5b98"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b99931cf698"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b99931d2360"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b99931b8380"/></to>
    </wire>
    <wire loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b99931ceb08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b99931d2360"/></to>
    </wire>
    <wire loc="191:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b9993217af0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b99932f0970"/></to>
    </wire>
    <wire loc="165:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b99931f9658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9993297020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9993297020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b999382f100"/></to>
    </wire>
    <wire loc="176:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b999320a658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b99932a6d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b99932a6d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b99938b3100"/></to>
    </wire>
    <wire loc="185:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b999320f348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b99932a85b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b99932a85b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b999391e100"/></to>
    </wire>
    <wire loc="143:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b99931e5348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b999326e740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b999326e740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b999372bc38"/></to>
    </wire>
    <wire loc="183:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b9993211020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b99932aa2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b99932aa2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993924100"/></to>
    </wire>
    <wire loc="146:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b99931e3658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9993276930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9993276930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993764180"/></to>
    </wire>
    <wire loc="157:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b99931f47e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9993285740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9993285740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b99937d4100"/></to>
    </wire>
    <wire loc="168:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b9993204af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9993293430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9993293430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b999384e100"/></to>
    </wire>
    <wire loc="179:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b9993207af0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b99932a2120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b99932a2120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b99938aa100"/></to>
    </wire>
    <wire loc="138:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b99931ddaf0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9993263020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9993263020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993718c38"/></to>
    </wire>
    <wire loc="149:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b99931eeaf0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b9993273d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b9993273d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b999377f100"/></to>
    </wire>
    <wire loc="160:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b99931f1c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b9993282bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b9993282bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b99937f1100"/></to>
    </wire>
    <wire loc="171:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b9993200020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b99932908c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b99932908c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993845100"/></to>
    </wire>
    <wire loc="188:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b999320c7e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b99932b7a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b99932b7a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993915100"/></to>
    </wire>
    <wire loc="194:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b99932137e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993305020"/></to>
    </wire>
    <wire loc="174:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b99931fe348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9993298a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9993298a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b99938b9100"/></to>
    </wire>
    <wire loc="141:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b99931e7020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9993260430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9993260430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b999370fc38"/></to>
    </wire>
    <wire loc="152:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b99931ea1a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b999327f120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b999327f120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993776100"/></to>
    </wire>
    <wire loc="192:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b99932154d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b99932fdab0"/></to>
    </wire>
    <wire loc="155:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b99931f64d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9993287500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9993287500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b99937da180"/></to>
    </wire>
    <wire loc="166:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b99931f87e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9993296120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9993296120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993854100"/></to>
    </wire>
    <wire loc="177:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b99932097e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b99932a5e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b99932a5e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b99938b0100"/></to>
    </wire>
    <wire loc="186:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b999320e4d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b99932b9740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b99932b9740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b999391b100"/></to>
    </wire>
    <wire loc="144:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b99931e44d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b999326d8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b999326d8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993728c38"/></to>
    </wire>
    <wire loc="147:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b99931e27e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9993275a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9993275a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993785100"/></to>
    </wire>
    <wire loc="158:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b99931f3968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b99932848c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b99932848c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b99937d1100"/></to>
    </wire>
    <wire loc="169:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b9993203c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b99932925b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b99932925b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b999384b100"/></to>
    </wire>
    <wire loc="180:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b9993206c78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b99932a12a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b99932a12a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b99938a7100"/></to>
    </wire>
    <wire loc="139:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b99931dcc78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9993262120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9993262120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993715c38"/></to>
    </wire>
    <wire loc="150:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b99931edc78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9993272e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9993272e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b999377c100"/></to>
    </wire>
    <wire loc="161:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b99931f0e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9993280d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9993280d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b99937ee100"/></to>
    </wire>
    <wire loc="189:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b9993218968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b99932b6bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b99932b6bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993912100"/></to>
    </wire>
    <wire loc="164:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b99931fa1a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9993289e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9993289e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993832180"/></to>
    </wire>
    <wire loc="175:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b999320b4d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b99932a7bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b99932a7bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b99938b6100"/></to>
    </wire>
    <wire loc="184:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b99932101a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b99932a9430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b99932a9430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993921100"/></to>
    </wire>
    <wire loc="195:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b9993220968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993312180"/></to>
    </wire>
    <wire loc="142:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b99931e61a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b999326f5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b999326f5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b999370cc38"/></to>
    </wire>
    <wire loc="153:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b99931e9348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b999327e2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b999327e2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993797100"/></to>
    </wire>
    <wire loc="182:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b9993205e00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b99932ab1e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b99932ab1e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b99938fe180"/></to>
    </wire>
    <wire loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b99931f5658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b99932865b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b99932865b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b99937d7100"/></to>
    </wire>
    <wire loc="167:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b99931f7968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b99932942a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b99932942a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993851100"/></to>
    </wire>
    <wire loc="178:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b9993208968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b99932a3020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b99932a3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b99938ad100"/></to>
    </wire>
    <wire loc="187:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b999320d658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b99932b88c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b99932b88c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993918100"/></to>
    </wire>
    <wire loc="137:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b99931d0878"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9993265dc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9993265dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b99936f9c38"/></to>
    </wire>
    <wire loc="148:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b99931ef968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9993274bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9993274bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993782100"/></to>
    </wire>
    <wire loc="159:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b99931f2af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9993283a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9993283a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b99937f4100"/></to>
    </wire>
    <wire loc="170:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b9993202e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9993291740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9993291740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993848100"/></to>
    </wire>
    <wire loc="193:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b9993214658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b99932f9c38"/></to>
    </wire>
    <wire loc="173:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b99931ff1a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9993299930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9993299930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993894180"/></to>
    </wire>
    <wire loc="162:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b99931fb020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b999328fe18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b999328fe18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b99937eb100"/></to>
    </wire>
    <wire loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b99931dbe00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b99932612a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b99932612a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993712c38"/></to>
    </wire>
    <wire loc="151:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b99931eb020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b9993270020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b9993270020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9993779100"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b99930c61c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b99931792b0"/></to>
    </wire>
    <wire loc="55:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b9993182758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b9993199660"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b999319f2b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b999347d268"/></to>
    </wire>
    <wire loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/OneWire/OneWireC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b99933a3378"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b99933a8a60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b99933a8a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b99933b8b60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/OneWire/OneWireC.nc">
      <from><interface-ref name="Bus" scoped="" ref="0x2b999339e4f8"/></from>
      <to><interface-ref name="PortG0" scoped="" ref="0x2b9993217af0"/></to>
    </wire>
    <wire loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/OneWire/OneWireC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b99933b1278"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b9993573cb8"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b99933b8b60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b99933c2208"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b99933c2208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9993543020"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b99933c54d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b99933cc020"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b99933cf980"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b9993550128"/></to>
    </wire>
    <wire loc="35:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b99933cc020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b99934ce190"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b9993559208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9993509ab0"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9993504c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b99933da838"/></to>
    </wire>
    <wire loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b99933da838"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b99934ce938"/></to>
    </wire>
    <wire loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9993563330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b99933e7e40"/></to>
    </wire>
    <wire loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b99933e7e40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b99934cba90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b99934cba90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b99939dca90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b99934ce190"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b99939e0210"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b99934ce938"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b99939e09b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b99939d9b98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9993450e00"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9993450e00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b999346f180"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b9993a0db60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b9993460020"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b9993460020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b9993469160"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2b9993a0cb58"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b999345f020"/></to>
    </wire>
    <wire loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b999345f020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9993468190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b9993a08bb0"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b9993473218"/></to>
    </wire>
    <wire loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b9993473218"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b999347d958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2b9993500cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b99930c61c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b9993554478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b99930c61c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b999358e4c8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b9993598310"/></to>
    </wire>
    <wire loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b9993598310"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b99935e55f8"/></to>
    </wire>
    <wire loc="12:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b999357c540"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b9993599a58"/></to>
    </wire>
    <wire loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b9993599a58"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b99935aee58"/></to>
    </wire>
    <wire loc="13:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b999358cbd8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b99935992a0"/></to>
    </wire>
    <wire loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b99935992a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b99935ae6f8"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b99935e2c60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9993597598"/></to>
    </wire>
    <wire loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2b99935e45f8"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2b99935fee58"/></to>
    </wire>
    <wire loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2b99935fee58"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2b99936133e0"/></to>
    </wire>
    <wire loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2b99935e4d98"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2b999361b6f0"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2b999361b6f0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2b9993613c78"/></to>
    </wire>
    <wire loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2b99935e35c0"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2b999361a020"/></to>
    </wire>
    <wire loc="66:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2b999361a020"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2b9993612550"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2b99935ff860"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b99936156d8"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2b99935ff020"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b9993616e18"/></to>
    </wire>
    <wire loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2b9993600700"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b9993616580"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b9993611ae8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b99931c0618"/></to>
    </wire>
    <wire loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b99936107c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b99931a2a80"/></to>
    </wire>
    <wire loc="57:/homes/mhartmann/baq/tinyos/tos/system/TimerMicroP.nc">
      <from><interface-ref name="TimerMicro" scoped="" ref="0x2b999367e9b8"/></from>
      <to><interface-ref name="TimerMicro" scoped="" ref="0x2b9993695030"/></to>
    </wire>
    <wire loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
      <from><interface-ref name="TimerMicro" scoped="" ref="0x2b9993695030"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b99936ae5e0"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9993696310"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b999368d738"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b999368f150"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b99936c3e18"/></to>
    </wire>
    <wire loc="38:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMicroP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b999368d738"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b99936a29a0"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b99936ca858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b999368bac0"/></to>
    </wire>
    <wire loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b99936b5c70"/></from>
      <to><interface-ref name="AlarmMicro32" scoped="" ref="0x2b99936aa0e0"/></to>
    </wire>
    <wire loc="39:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMicroP.nc">
      <from><interface-ref name="AlarmMicro32" scoped="" ref="0x2b99936aa0e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b99936a11a8"/></to>
    </wire>
    <wire loc="69:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b99936c00a0"/></from>
      <to><interface-ref name="CounterMicro32" scoped="" ref="0x2b99936a63b8"/></to>
    </wire>
    <wire loc="40:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMicroP.nc">
      <from><interface-ref name="CounterMicro32" scoped="" ref="0x2b99936a63b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b999369d3d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b999369d3d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9993a99020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b99936a11a8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9993a9eda8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b99936a29a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9993a9e600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b9993a97168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9993450e00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b9993a92020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b9993460020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2b9993a91020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b999345f020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b9993a8d0a0"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b9993473218"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2b99936b1cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b99930c61c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b99936c5930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b99930c61c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc" safe="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc" safe="">
      <documentation loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OWTestC" loc="1:OWTestC.nc">
      <module/>
    </component>
    <component qname="OneWireC" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/OneWire/OneWireC.nc">
      <configuration/>
    </component>
    <component qname="OneWireP" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/OneWire/OneWireP.nc">
      <module/>
    </component>
    <component qname="OneWireC.Timer0" loc="44(OneWireC.Timer0):/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b99933e5c68"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0SyncC" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0SyncP" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in SYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in SYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in SYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;--> CHANGED TO SYNC-Mode(CPL_CLK)&#9;hglanzer&#10;--> AS0=0 in ASSR&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="bigAVR6UART0C" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0C.nc">
      <configuration/>
    </component>
    <component qname="bigAVR6UART0P" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0P.nc">
      <module/>
    </component>
    <component qname="Atm128Uart1C" loc="38:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <documentation loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-06-16 21:45:58 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart1C.UartP" loc="46(Atm128Uart1C.UartP):/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OWTestAppC.Timer0" loc="44(OWTestAppC.Timer0):/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OWTestAppC.Timer1" loc="47(OWTestAppC.Timer1):/homes/mhartmann/baq/tinyos/tos/system/TimerMicroC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMicroC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10; &#10; CHANGED_BY_ME&#10; &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMicroC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMicroP" loc="51:/homes/mhartmann/baq/tinyos/tos/system/TimerMicroP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TimerMicroP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10; &#10; CHANGED_BY_ME&#10; &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMicroC" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; &#10; CHANGED_BY_ME&#10; &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMicroP" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMicroP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMicroP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; &#10; CHANGED_BY_ME&#10; &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMicroP.Atm128AlarmSyncC" loc="30(AlarmCounterMicroP.Atm128AlarmSyncC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMicroP.Atm128AlarmSyncC.Atm128AlarmSyncP" loc="30(AlarmCounterMicroP.Atm128AlarmSyncC.Atm128AlarmSyncP):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b99933e5c68"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMicroC.AlarmToTimerC" loc="46(HilTimerMicroC.AlarmToTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMicroC.VirtualizeTimerC" loc="46(HilTimerMicroC.VirtualizeTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMicroC.CounterToLocalTimeC" loc="46(HilTimerMicroC.CounterToLocalTimeC):/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b999321dba0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b9993227020" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b9993227368" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b999322b610" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b999322b978" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b999322bce0" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b9993228060" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b99932bf020" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b99932bf388" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b99932bf6f0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b99932bfa20" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncC" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc" abstract="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b99933e5c68" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b99933e5c68"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b99933e2020" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncP" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b99933ed410" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b99933ed410"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b99933ed700" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b99933cdc68" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b99933cdc68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9993518cd0" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9993518cd0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b9993515020" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9993552998" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9993552998"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMicroC" loc="47:/homes/mhartmann/baq/tinyos/tos/system/TimerMicroC.nc" abstract="">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMicroC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10; &#10; CHANGED_BY_ME&#10; &#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b99931ba620" loc="58:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b99931ba620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b99931ba970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b99931bb220" loc="57:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b99931bb220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b99931bb570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b99931b8380" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b99931b8380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b99931b86d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b99931bd620" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b99931bd620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b99931bd970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b99931c0618" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b99931c0618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b99931c0968"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b99931c0af0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b99931c0c78"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b99931c0e00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b99931b8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b99931ccca0" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b99931ccca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b99931cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b99931cc600" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b99931cc600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b99931cc950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b99931cb398" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b99931cb398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b99931cb6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b99931d2360" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b99931d2360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b99931d26b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b99931c5b98" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b99931c5b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b99931d2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b99931ceb08" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b99931ceb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b99931cee58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b99931d68d8" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b99931d68d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931d6c28"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931d6db0"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931ce020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931ce1a8"/>
        <function-ref name="get" scoped="" ref="0x2b99931ce330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931ce4b8"/>
        <function-ref name="set" scoped="" ref="0x2b99931ce640"/>
        <function-ref name="clr" scoped="" ref="0x2b99931ce7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b99931cf698" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b99931cf698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b99931cf9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b9993217af0" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b9993217af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932165e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993216770"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932168f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993216a80"/>
        <function-ref name="get" scoped="" ref="0x2b9993216c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993216d90"/>
        <function-ref name="set" scoped="" ref="0x2b9993215020"/>
        <function-ref name="clr" scoped="" ref="0x2b99932151a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b99931f9658" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b99931f9658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931f99a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931f9b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931f9cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931f9e40"/>
        <function-ref name="get" scoped="" ref="0x2b99931f8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931f81a8"/>
        <function-ref name="set" scoped="" ref="0x2b99931f8330"/>
        <function-ref name="clr" scoped="" ref="0x2b99931f84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b999320a658" loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b999320a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999320a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b999320ab30"/>
        <function-ref name="toggle" scoped="" ref="0x2b999320acb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999320ae40"/>
        <function-ref name="get" scoped="" ref="0x2b9993209020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932091a8"/>
        <function-ref name="set" scoped="" ref="0x2b9993209330"/>
        <function-ref name="clr" scoped="" ref="0x2b99932094b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b999320f348" loc="94:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b999320f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999320f698"/>
        <function-ref name="isInput" scoped="" ref="0x2b999320f820"/>
        <function-ref name="toggle" scoped="" ref="0x2b999320f9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999320fb30"/>
        <function-ref name="get" scoped="" ref="0x2b999320fcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999320fe40"/>
        <function-ref name="set" scoped="" ref="0x2b999320e020"/>
        <function-ref name="clr" scoped="" ref="0x2b999320e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b99931e5348" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b99931e5348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931e5698"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931e5820"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931e59a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931e5b30"/>
        <function-ref name="get" scoped="" ref="0x2b99931e5cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931e5e40"/>
        <function-ref name="set" scoped="" ref="0x2b99931e4020"/>
        <function-ref name="clr" scoped="" ref="0x2b99931e41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b9993211020" loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b9993211020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993211370"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932114f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993211680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993211808"/>
        <function-ref name="get" scoped="" ref="0x2b9993211990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993211b18"/>
        <function-ref name="set" scoped="" ref="0x2b9993211ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9993211e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b99931e3658" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b99931e3658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931e39a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931e3b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931e3cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931e3e40"/>
        <function-ref name="get" scoped="" ref="0x2b99931e2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931e21a8"/>
        <function-ref name="set" scoped="" ref="0x2b99931e2330"/>
        <function-ref name="clr" scoped="" ref="0x2b99931e24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b99931f47e0" loc="66:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b99931f47e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931f4b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931f4cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931f4e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931f3020"/>
        <function-ref name="get" scoped="" ref="0x2b99931f31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931f3330"/>
        <function-ref name="set" scoped="" ref="0x2b99931f34b8"/>
        <function-ref name="clr" scoped="" ref="0x2b99931f3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b9993204af0" loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b9993204af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993204e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993203020"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932031a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993203330"/>
        <function-ref name="get" scoped="" ref="0x2b99932034b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993203640"/>
        <function-ref name="set" scoped="" ref="0x2b99932037c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9993203950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b9993207af0" loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b9993207af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993207e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993206020"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932061a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993206330"/>
        <function-ref name="get" scoped="" ref="0x2b99932064b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993206640"/>
        <function-ref name="set" scoped="" ref="0x2b99932067c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9993206950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b99931ddaf0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b99931ddaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931dde40"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931dc020"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931dc1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931dc330"/>
        <function-ref name="get" scoped="" ref="0x2b99931dc4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931dc640"/>
        <function-ref name="set" scoped="" ref="0x2b99931dc7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b99931dc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b99931eeaf0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b99931eeaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931eee40"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931ed020"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931ed1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931ed330"/>
        <function-ref name="get" scoped="" ref="0x2b99931ed4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931ed640"/>
        <function-ref name="set" scoped="" ref="0x2b99931ed7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b99931ed950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b99931f1c78" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b99931f1c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931f0020"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931f01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931f0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931f04b8"/>
        <function-ref name="get" scoped="" ref="0x2b99931f0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931f07c8"/>
        <function-ref name="set" scoped="" ref="0x2b99931f0950"/>
        <function-ref name="clr" scoped="" ref="0x2b99931f0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b9993200020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b9993200020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993200370"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932004f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993200680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993200808"/>
        <function-ref name="get" scoped="" ref="0x2b9993200990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993200b18"/>
        <function-ref name="set" scoped="" ref="0x2b9993200ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9993200e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b999320c7e0" loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b999320c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999320cb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b999320ccb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b999320ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993218020"/>
        <function-ref name="get" scoped="" ref="0x2b99932181a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993218330"/>
        <function-ref name="set" scoped="" ref="0x2b99932184b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9993218640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b99932137e0" loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b99932137e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993213b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993213cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993213e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993220020"/>
        <function-ref name="get" scoped="" ref="0x2b99932201a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993220330"/>
        <function-ref name="set" scoped="" ref="0x2b99932204b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9993220640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b99931fe348" loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b99931fe348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931fe698"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931fe820"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931fe9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931feb30"/>
        <function-ref name="get" scoped="" ref="0x2b99931fecb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931fee40"/>
        <function-ref name="set" scoped="" ref="0x2b999320b020"/>
        <function-ref name="clr" scoped="" ref="0x2b999320b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b99931e7020" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b99931e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931e7370"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931e74f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931e7680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931e7808"/>
        <function-ref name="get" scoped="" ref="0x2b99931e7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931e7b18"/>
        <function-ref name="set" scoped="" ref="0x2b99931e7ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b99931e7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b99931ea1a0" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b99931ea1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931ea4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931ea678"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931ea800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931ea988"/>
        <function-ref name="get" scoped="" ref="0x2b99931eab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931eac98"/>
        <function-ref name="set" scoped="" ref="0x2b99931eae20"/>
        <function-ref name="clr" scoped="" ref="0x2b99931e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b99932154d0" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b99932154d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993215820"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932159a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993215b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993215cb8"/>
        <function-ref name="get" scoped="" ref="0x2b9993215e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993214020"/>
        <function-ref name="set" scoped="" ref="0x2b99932141a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9993214330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b99931f64d0" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b99931f64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931f6820"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931f69a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931f6b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931f6cb8"/>
        <function-ref name="get" scoped="" ref="0x2b99931f6e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931f5020"/>
        <function-ref name="set" scoped="" ref="0x2b99931f51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b99931f5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b99931f87e0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b99931f87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931f8b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931f8cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931f8e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931f7020"/>
        <function-ref name="get" scoped="" ref="0x2b99931f71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931f7330"/>
        <function-ref name="set" scoped="" ref="0x2b99931f74b8"/>
        <function-ref name="clr" scoped="" ref="0x2b99931f7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b99932097e0" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b99932097e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993209b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993209cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993209e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993208020"/>
        <function-ref name="get" scoped="" ref="0x2b99932081a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993208330"/>
        <function-ref name="set" scoped="" ref="0x2b99932084b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9993208640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b999320e4d0" loc="95:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b999320e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999320e820"/>
        <function-ref name="isInput" scoped="" ref="0x2b999320e9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b999320eb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999320ecb8"/>
        <function-ref name="get" scoped="" ref="0x2b999320ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999320d020"/>
        <function-ref name="set" scoped="" ref="0x2b999320d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b999320d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b99931e44d0" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b99931e44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931e4820"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931e49a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931e4b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931e4cb8"/>
        <function-ref name="get" scoped="" ref="0x2b99931e4e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931e3020"/>
        <function-ref name="set" scoped="" ref="0x2b99931e31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b99931e3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b99931e27e0" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b99931e27e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931e2b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931e2cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931e2e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931ef020"/>
        <function-ref name="get" scoped="" ref="0x2b99931ef1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931ef330"/>
        <function-ref name="set" scoped="" ref="0x2b99931ef4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b99931ef640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b99931f3968" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b99931f3968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931f3cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931f3e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931f2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931f21a8"/>
        <function-ref name="get" scoped="" ref="0x2b99931f2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931f24b8"/>
        <function-ref name="set" scoped="" ref="0x2b99931f2640"/>
        <function-ref name="clr" scoped="" ref="0x2b99931f27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b9993203c78" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b9993203c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993202020"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932021a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993202330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932024b8"/>
        <function-ref name="get" scoped="" ref="0x2b9993202640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932027c8"/>
        <function-ref name="set" scoped="" ref="0x2b9993202950"/>
        <function-ref name="clr" scoped="" ref="0x2b9993202ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b9993206c78" loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b9993206c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993205020"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932051a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993205330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932054b8"/>
        <function-ref name="get" scoped="" ref="0x2b9993205640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932057c8"/>
        <function-ref name="set" scoped="" ref="0x2b9993205950"/>
        <function-ref name="clr" scoped="" ref="0x2b9993205ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b99931dcc78" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b99931dcc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931db020"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931db1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931db330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931db4b8"/>
        <function-ref name="get" scoped="" ref="0x2b99931db640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931db7c8"/>
        <function-ref name="set" scoped="" ref="0x2b99931db950"/>
        <function-ref name="clr" scoped="" ref="0x2b99931dbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b99931edc78" loc="59:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b99931edc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931ec0f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931ec278"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931ec400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931ec588"/>
        <function-ref name="get" scoped="" ref="0x2b99931ec710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931ec898"/>
        <function-ref name="set" scoped="" ref="0x2b99931eca20"/>
        <function-ref name="clr" scoped="" ref="0x2b99931ecba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b99931f0e00" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b99931f0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931fd1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931fd330"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931fd4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931fd640"/>
        <function-ref name="get" scoped="" ref="0x2b99931fd7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931fd950"/>
        <function-ref name="set" scoped="" ref="0x2b99931fdad8"/>
        <function-ref name="clr" scoped="" ref="0x2b99931fdc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b9993218968" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b9993218968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993218cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993218e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993217020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932171a8"/>
        <function-ref name="get" scoped="" ref="0x2b9993217330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932174b8"/>
        <function-ref name="set" scoped="" ref="0x2b9993217640"/>
        <function-ref name="clr" scoped="" ref="0x2b99932177c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b99931fa1a0" loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b99931fa1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931fa6f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931fa878"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931faa00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931fab88"/>
        <function-ref name="get" scoped="" ref="0x2b99931fad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931f9020"/>
        <function-ref name="set" scoped="" ref="0x2b99931f91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b99931f9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b999320b4d0" loc="84:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b999320b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999320b820"/>
        <function-ref name="isInput" scoped="" ref="0x2b999320b9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b999320bb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999320bcb8"/>
        <function-ref name="get" scoped="" ref="0x2b999320be40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999320a020"/>
        <function-ref name="set" scoped="" ref="0x2b999320a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b999320a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b99932101a0" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b99932101a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932104f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993210678"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993210800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993210988"/>
        <function-ref name="get" scoped="" ref="0x2b9993210b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993210c98"/>
        <function-ref name="set" scoped="" ref="0x2b9993210e20"/>
        <function-ref name="clr" scoped="" ref="0x2b999320f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b9993220968" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b9993220968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993220cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993220e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b999321f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999321f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b999321f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999321f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b999321f640"/>
        <function-ref name="clr" scoped="" ref="0x2b999321f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b99931e61a0" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b99931e61a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931e64f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931e6678"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931e6800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931e6988"/>
        <function-ref name="get" scoped="" ref="0x2b99931e6b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931e6c98"/>
        <function-ref name="set" scoped="" ref="0x2b99931e6e20"/>
        <function-ref name="clr" scoped="" ref="0x2b99931e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b99931e9348" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b99931e9348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931e9698"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931e9820"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931e99a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931e9b30"/>
        <function-ref name="get" scoped="" ref="0x2b99931e9cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931e9e40"/>
        <function-ref name="set" scoped="" ref="0x2b99931f6020"/>
        <function-ref name="clr" scoped="" ref="0x2b99931f61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b9993205e00" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b9993205e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932121a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993212330"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932124b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993212640"/>
        <function-ref name="get" scoped="" ref="0x2b99932127c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993212950"/>
        <function-ref name="set" scoped="" ref="0x2b9993212ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9993212c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b99931f5658" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b99931f5658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931f59a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931f5b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931f5cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931f5e40"/>
        <function-ref name="get" scoped="" ref="0x2b99931f4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931f41a8"/>
        <function-ref name="set" scoped="" ref="0x2b99931f4330"/>
        <function-ref name="clr" scoped="" ref="0x2b99931f44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b99931f7968" loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b99931f7968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931f7cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931f7e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993204020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932041a8"/>
        <function-ref name="get" scoped="" ref="0x2b9993204330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932044b8"/>
        <function-ref name="set" scoped="" ref="0x2b9993204640"/>
        <function-ref name="clr" scoped="" ref="0x2b99932047c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b9993208968" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b9993208968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993208cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993208e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993207020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932071a8"/>
        <function-ref name="get" scoped="" ref="0x2b9993207330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932074b8"/>
        <function-ref name="set" scoped="" ref="0x2b9993207640"/>
        <function-ref name="clr" scoped="" ref="0x2b99932077c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b999320d658" loc="96:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b999320d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999320d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b999320db30"/>
        <function-ref name="toggle" scoped="" ref="0x2b999320dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999320de40"/>
        <function-ref name="get" scoped="" ref="0x2b999320c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999320c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b999320c330"/>
        <function-ref name="clr" scoped="" ref="0x2b999320c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b99931d0878" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b99931d0878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931d0bc8"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931d0d50"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931dd020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931dd1a8"/>
        <function-ref name="get" scoped="" ref="0x2b99931dd330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931dd4b8"/>
        <function-ref name="set" scoped="" ref="0x2b99931dd640"/>
        <function-ref name="clr" scoped="" ref="0x2b99931dd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b99931ef968" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b99931ef968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931efcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931efe40"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931ee020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931ee1a8"/>
        <function-ref name="get" scoped="" ref="0x2b99931ee330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931ee4b8"/>
        <function-ref name="set" scoped="" ref="0x2b99931ee640"/>
        <function-ref name="clr" scoped="" ref="0x2b99931ee7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b99931f2af0" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b99931f2af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931f2e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931f1020"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931f11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931f1330"/>
        <function-ref name="get" scoped="" ref="0x2b99931f14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931f1640"/>
        <function-ref name="set" scoped="" ref="0x2b99931f17c8"/>
        <function-ref name="clr" scoped="" ref="0x2b99931f1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b9993202e00" loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b9993202e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932011a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993201330"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932014b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993201640"/>
        <function-ref name="get" scoped="" ref="0x2b99932017c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993201950"/>
        <function-ref name="set" scoped="" ref="0x2b9993201ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9993201c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b9993214658" loc="102:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b9993214658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932149a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993214b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993214cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993214e40"/>
        <function-ref name="get" scoped="" ref="0x2b9993213020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932131a8"/>
        <function-ref name="set" scoped="" ref="0x2b9993213330"/>
        <function-ref name="clr" scoped="" ref="0x2b99932134b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b99931ff1a0" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b99931ff1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931ff4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931ff678"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931ff800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931ff988"/>
        <function-ref name="get" scoped="" ref="0x2b99931ffb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931ffc98"/>
        <function-ref name="set" scoped="" ref="0x2b99931ffe20"/>
        <function-ref name="clr" scoped="" ref="0x2b99931fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b99931fb020" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b99931fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931fb370"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931fb4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931fb680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931fb808"/>
        <function-ref name="get" scoped="" ref="0x2b99931fb990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931fbb18"/>
        <function-ref name="set" scoped="" ref="0x2b99931fbca0"/>
        <function-ref name="clr" scoped="" ref="0x2b99931fbe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b99931dbe00" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b99931dbe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931e81a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931e8330"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931e84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931e8640"/>
        <function-ref name="get" scoped="" ref="0x2b99931e87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931e8950"/>
        <function-ref name="set" scoped="" ref="0x2b99931e8ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b99931e8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b99931eb020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b99931eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99931eb370"/>
        <function-ref name="isInput" scoped="" ref="0x2b99931eb4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99931eb680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99931eb808"/>
        <function-ref name="get" scoped="" ref="0x2b99931eb990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99931ebb18"/>
        <function-ref name="set" scoped="" ref="0x2b99931ebca0"/>
        <function-ref name="clr" scoped="" ref="0x2b99931ebe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9993262120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9993262120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993262470"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932625f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993262780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993262908"/>
        <function-ref name="get" scoped="" ref="0x2b9993262a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993262c18"/>
        <function-ref name="set" scoped="" ref="0x2b9993262da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9993261020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b999326f5b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b999326f5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999326f908"/>
        <function-ref name="isInput" scoped="" ref="0x2b999326fa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b999326fc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999326fda0"/>
        <function-ref name="get" scoped="" ref="0x2b999326e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999326e1a8"/>
        <function-ref name="set" scoped="" ref="0x2b999326e330"/>
        <function-ref name="clr" scoped="" ref="0x2b999326e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9993265dc0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9993265dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993264170"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932642f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993264480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993264608"/>
        <function-ref name="get" scoped="" ref="0x2b9993264790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993264918"/>
        <function-ref name="set" scoped="" ref="0x2b9993264aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b9993264c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b99932612a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b99932612a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932615f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993261780"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993261908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993261a90"/>
        <function-ref name="get" scoped="" ref="0x2b9993261c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993261da0"/>
        <function-ref name="set" scoped="" ref="0x2b9993260020"/>
        <function-ref name="clr" scoped="" ref="0x2b99932601a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b999326e740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b999326e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999326ea90"/>
        <function-ref name="isInput" scoped="" ref="0x2b999326ec18"/>
        <function-ref name="toggle" scoped="" ref="0x2b999326eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999326d020"/>
        <function-ref name="get" scoped="" ref="0x2b999326d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999326d330"/>
        <function-ref name="set" scoped="" ref="0x2b999326d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b999326d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9993263020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9993263020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993263370"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932634f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993263680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993263808"/>
        <function-ref name="get" scoped="" ref="0x2b9993263990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993263b18"/>
        <function-ref name="set" scoped="" ref="0x2b9993263ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9993263e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9993260430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9993260430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993260780"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993260908"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993260a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993260c18"/>
        <function-ref name="get" scoped="" ref="0x2b9993260da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999326f020"/>
        <function-ref name="set" scoped="" ref="0x2b999326f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b999326f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b999326d8c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b999326d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999326dc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b999326dda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b999326c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999326c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b999326c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999326c4b8"/>
        <function-ref name="set" scoped="" ref="0x2b999326c640"/>
        <function-ref name="clr" scoped="" ref="0x2b999326c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99936f9c38" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99936f9c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999371a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b999371a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b999371a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999371a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b999371a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999371a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b999371a950"/>
        <function-ref name="clr" scoped="" ref="0x2b999371aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993718c38" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993718c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993717020"/>
        <function-ref name="isInput" scoped="" ref="0x2b99937171a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993717330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99937174b8"/>
        <function-ref name="get" scoped="" ref="0x2b9993717640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99937177c8"/>
        <function-ref name="set" scoped="" ref="0x2b9993717950"/>
        <function-ref name="clr" scoped="" ref="0x2b9993717ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993715c38" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993715c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993714020"/>
        <function-ref name="isInput" scoped="" ref="0x2b99937141a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993714330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99937144b8"/>
        <function-ref name="get" scoped="" ref="0x2b9993714640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99937147c8"/>
        <function-ref name="set" scoped="" ref="0x2b9993714950"/>
        <function-ref name="clr" scoped="" ref="0x2b9993714ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993712c38" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993712c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993711020"/>
        <function-ref name="isInput" scoped="" ref="0x2b99937111a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993711330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99937114b8"/>
        <function-ref name="get" scoped="" ref="0x2b9993711640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99937117c8"/>
        <function-ref name="set" scoped="" ref="0x2b9993711950"/>
        <function-ref name="clr" scoped="" ref="0x2b9993711ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b999370fc38" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b999370fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999370e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b999370e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b999370e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999370e4b8"/>
        <function-ref name="get" scoped="" ref="0x2b999370e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999370e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b999370e950"/>
        <function-ref name="clr" scoped="" ref="0x2b999370ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b999370cc38" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b999370cc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999370b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b999370b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b999370b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999370b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b999370b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999370b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b999370b950"/>
        <function-ref name="clr" scoped="" ref="0x2b999370bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b999372bc38" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b999372bc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999372a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b999372a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b999372a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999372a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b999372a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999372a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b999372a950"/>
        <function-ref name="clr" scoped="" ref="0x2b999372aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993728c38" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993728c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993727020"/>
        <function-ref name="isInput" scoped="" ref="0x2b99937271a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993727330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99937274b8"/>
        <function-ref name="get" scoped="" ref="0x2b9993727640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99937277c8"/>
        <function-ref name="set" scoped="" ref="0x2b9993727950"/>
        <function-ref name="clr" scoped="" ref="0x2b9993727ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9993274bd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9993274bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993273020"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932731a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993273330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932734b8"/>
        <function-ref name="get" scoped="" ref="0x2b9993273640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932737c8"/>
        <function-ref name="set" scoped="" ref="0x2b9993273950"/>
        <function-ref name="clr" scoped="" ref="0x2b9993273ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b9993270020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b9993270020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993270370"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932704f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993270680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993270808"/>
        <function-ref name="get" scoped="" ref="0x2b9993270990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993270b18"/>
        <function-ref name="set" scoped="" ref="0x2b9993270ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9993270e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9993276930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9993276930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993276c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993276e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993275020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932751a8"/>
        <function-ref name="get" scoped="" ref="0x2b9993275330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932754b8"/>
        <function-ref name="set" scoped="" ref="0x2b9993275640"/>
        <function-ref name="clr" scoped="" ref="0x2b99932757c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b9993273d60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b9993273d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932720d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993272260"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932723e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993272570"/>
        <function-ref name="get" scoped="" ref="0x2b99932726f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993272880"/>
        <function-ref name="set" scoped="" ref="0x2b9993272a08"/>
        <function-ref name="clr" scoped="" ref="0x2b9993272b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b999327f120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b999327f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999327f470"/>
        <function-ref name="isInput" scoped="" ref="0x2b999327f5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b999327f780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999327f908"/>
        <function-ref name="get" scoped="" ref="0x2b999327fa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999327fc18"/>
        <function-ref name="set" scoped="" ref="0x2b999327fda0"/>
        <function-ref name="clr" scoped="" ref="0x2b999327e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9993275a50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9993275a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993275da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993274020"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932741a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993274330"/>
        <function-ref name="get" scoped="" ref="0x2b99932744b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993274640"/>
        <function-ref name="set" scoped="" ref="0x2b99932747c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9993274950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9993272e18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9993272e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932711a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993271330"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932714b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993271640"/>
        <function-ref name="get" scoped="" ref="0x2b99932717c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993271950"/>
        <function-ref name="set" scoped="" ref="0x2b9993271ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9993271c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b999327e2a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b999327e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999327e5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b999327e780"/>
        <function-ref name="toggle" scoped="" ref="0x2b999327e908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999327ea90"/>
        <function-ref name="get" scoped="" ref="0x2b999327ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999327eda0"/>
        <function-ref name="set" scoped="" ref="0x2b999327d020"/>
        <function-ref name="clr" scoped="" ref="0x2b999327d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993764180" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993764180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99937644d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993764658"/>
        <function-ref name="toggle" scoped="" ref="0x2b99937647e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993764968"/>
        <function-ref name="get" scoped="" ref="0x2b9993764af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993764c78"/>
        <function-ref name="set" scoped="" ref="0x2b9993764e00"/>
        <function-ref name="clr" scoped="" ref="0x2b9993763020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993785100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993785100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993785450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99937855d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993785760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99937858e8"/>
        <function-ref name="get" scoped="" ref="0x2b9993785a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993785bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9993785d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9993784020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993782100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993782100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993782450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99937825d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993782760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99937828e8"/>
        <function-ref name="get" scoped="" ref="0x2b9993782a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993782bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9993782d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9993781020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b999377f100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b999377f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999377f450"/>
        <function-ref name="isInput" scoped="" ref="0x2b999377f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b999377f760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999377f8e8"/>
        <function-ref name="get" scoped="" ref="0x2b999377fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999377fbf8"/>
        <function-ref name="set" scoped="" ref="0x2b999377fd80"/>
        <function-ref name="clr" scoped="" ref="0x2b999377e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b999377c100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b999377c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999377c450"/>
        <function-ref name="isInput" scoped="" ref="0x2b999377c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b999377c760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999377c8e8"/>
        <function-ref name="get" scoped="" ref="0x2b999377ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999377cbf8"/>
        <function-ref name="set" scoped="" ref="0x2b999377cd80"/>
        <function-ref name="clr" scoped="" ref="0x2b999377b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993779100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993779100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993779450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99937795d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993779760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99937798e8"/>
        <function-ref name="get" scoped="" ref="0x2b9993779a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993779bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9993779d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9993778020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993776100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993776100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993776450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99937765d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993776760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99937768e8"/>
        <function-ref name="get" scoped="" ref="0x2b9993776a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993776bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9993776d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9993775020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993797100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993797100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993797450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99937975d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993797760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99937978e8"/>
        <function-ref name="get" scoped="" ref="0x2b9993797a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993797bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9993797d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9993796020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9993285740" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9993285740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993285a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993285c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993285da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993284020"/>
        <function-ref name="get" scoped="" ref="0x2b99932841a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993284330"/>
        <function-ref name="set" scoped="" ref="0x2b99932844b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9993284640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b9993282bd8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b9993282bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993280020"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932801a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993280330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932804b8"/>
        <function-ref name="get" scoped="" ref="0x2b9993280640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932807c8"/>
        <function-ref name="set" scoped="" ref="0x2b9993280950"/>
        <function-ref name="clr" scoped="" ref="0x2b9993280ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9993287500" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9993287500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993287850"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932879d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993287b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993287ce8"/>
        <function-ref name="get" scoped="" ref="0x2b9993287e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993286020"/>
        <function-ref name="set" scoped="" ref="0x2b99932861a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9993286330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b99932848c8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b99932848c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993284c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993284da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993283020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932831a8"/>
        <function-ref name="get" scoped="" ref="0x2b9993283330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932834b8"/>
        <function-ref name="set" scoped="" ref="0x2b9993283640"/>
        <function-ref name="clr" scoped="" ref="0x2b99932837c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9993280d60" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9993280d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999328f0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b999328f260"/>
        <function-ref name="toggle" scoped="" ref="0x2b999328f3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999328f570"/>
        <function-ref name="get" scoped="" ref="0x2b999328f6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999328f880"/>
        <function-ref name="set" scoped="" ref="0x2b999328fa08"/>
        <function-ref name="clr" scoped="" ref="0x2b999328fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b99932865b8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b99932865b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993286908"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993286a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993286c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993286da0"/>
        <function-ref name="get" scoped="" ref="0x2b9993285020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932851a8"/>
        <function-ref name="set" scoped="" ref="0x2b9993285330"/>
        <function-ref name="clr" scoped="" ref="0x2b99932854b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9993283a50" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9993283a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993283da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993282020"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932821a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993282330"/>
        <function-ref name="get" scoped="" ref="0x2b99932824b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993282640"/>
        <function-ref name="set" scoped="" ref="0x2b99932827c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9993282950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b999328fe18" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b999328fe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999328e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b999328e330"/>
        <function-ref name="toggle" scoped="" ref="0x2b999328e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999328e640"/>
        <function-ref name="get" scoped="" ref="0x2b999328e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999328e950"/>
        <function-ref name="set" scoped="" ref="0x2b999328ead8"/>
        <function-ref name="clr" scoped="" ref="0x2b999328ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99937da180" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99937da180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99937da4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b99937da658"/>
        <function-ref name="toggle" scoped="" ref="0x2b99937da7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99937da968"/>
        <function-ref name="get" scoped="" ref="0x2b99937daaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99937dac78"/>
        <function-ref name="set" scoped="" ref="0x2b99937dae00"/>
        <function-ref name="clr" scoped="" ref="0x2b99937d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99937d7100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99937d7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99937d7450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99937d75d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99937d7760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99937d78e8"/>
        <function-ref name="get" scoped="" ref="0x2b99937d7a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99937d7bf8"/>
        <function-ref name="set" scoped="" ref="0x2b99937d7d80"/>
        <function-ref name="clr" scoped="" ref="0x2b99937d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99937d4100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99937d4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99937d4450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99937d45d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99937d4760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99937d48e8"/>
        <function-ref name="get" scoped="" ref="0x2b99937d4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99937d4bf8"/>
        <function-ref name="set" scoped="" ref="0x2b99937d4d80"/>
        <function-ref name="clr" scoped="" ref="0x2b99937d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99937d1100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99937d1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99937d1450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99937d15d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99937d1760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99937d18e8"/>
        <function-ref name="get" scoped="" ref="0x2b99937d1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99937d1bf8"/>
        <function-ref name="set" scoped="" ref="0x2b99937d1d80"/>
        <function-ref name="clr" scoped="" ref="0x2b99937d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99937f4100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99937f4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99937f4450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99937f45d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99937f4760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99937f48e8"/>
        <function-ref name="get" scoped="" ref="0x2b99937f4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99937f4bf8"/>
        <function-ref name="set" scoped="" ref="0x2b99937f4d80"/>
        <function-ref name="clr" scoped="" ref="0x2b99937f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99937f1100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99937f1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99937f1450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99937f15d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99937f1760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99937f18e8"/>
        <function-ref name="get" scoped="" ref="0x2b99937f1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99937f1bf8"/>
        <function-ref name="set" scoped="" ref="0x2b99937f1d80"/>
        <function-ref name="clr" scoped="" ref="0x2b99937f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99937ee100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99937ee100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99937ee450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99937ee5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99937ee760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99937ee8e8"/>
        <function-ref name="get" scoped="" ref="0x2b99937eea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99937eebf8"/>
        <function-ref name="set" scoped="" ref="0x2b99937eed80"/>
        <function-ref name="clr" scoped="" ref="0x2b99937ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99937eb100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99937eb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99937eb450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99937eb5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99937eb760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99937eb8e8"/>
        <function-ref name="get" scoped="" ref="0x2b99937eba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99937ebbf8"/>
        <function-ref name="set" scoped="" ref="0x2b99937ebd80"/>
        <function-ref name="clr" scoped="" ref="0x2b99937ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9993296120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9993296120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993296470"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932965f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993296780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993296908"/>
        <function-ref name="get" scoped="" ref="0x2b9993296a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993296c18"/>
        <function-ref name="set" scoped="" ref="0x2b9993296da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9993294020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b99932925b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b99932925b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993292908"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993292a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993292c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993292da0"/>
        <function-ref name="get" scoped="" ref="0x2b9993291020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932911a8"/>
        <function-ref name="set" scoped="" ref="0x2b9993291330"/>
        <function-ref name="clr" scoped="" ref="0x2b99932914b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9993289e40" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9993289e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932881c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993288348"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932884d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993288658"/>
        <function-ref name="get" scoped="" ref="0x2b99932887e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993288968"/>
        <function-ref name="set" scoped="" ref="0x2b9993288af0"/>
        <function-ref name="clr" scoped="" ref="0x2b9993288c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b99932942a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b99932942a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932945f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993294780"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993294908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993294a90"/>
        <function-ref name="get" scoped="" ref="0x2b9993294c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993294da0"/>
        <function-ref name="set" scoped="" ref="0x2b9993293020"/>
        <function-ref name="clr" scoped="" ref="0x2b99932931a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9993291740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9993291740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993291a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993291c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993291da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993290020"/>
        <function-ref name="get" scoped="" ref="0x2b99932901a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993290330"/>
        <function-ref name="set" scoped="" ref="0x2b99932904b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9993290640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9993297020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9993297020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993297370"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932974f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993297680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993297808"/>
        <function-ref name="get" scoped="" ref="0x2b9993297990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993297b18"/>
        <function-ref name="set" scoped="" ref="0x2b9993297ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9993297e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9993293430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9993293430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993293780"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993293908"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993293a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993293c18"/>
        <function-ref name="get" scoped="" ref="0x2b9993293da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993292020"/>
        <function-ref name="set" scoped="" ref="0x2b99932921a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9993292330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b99932908c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b99932908c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993290c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993290da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b999329f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999329f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b999329f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999329f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b999329f640"/>
        <function-ref name="clr" scoped="" ref="0x2b999329f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993832180" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993832180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99938324d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993832658"/>
        <function-ref name="toggle" scoped="" ref="0x2b99938327e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993832968"/>
        <function-ref name="get" scoped="" ref="0x2b9993832af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993832c78"/>
        <function-ref name="set" scoped="" ref="0x2b9993832e00"/>
        <function-ref name="clr" scoped="" ref="0x2b9993831020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b999382f100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b999382f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999382f450"/>
        <function-ref name="isInput" scoped="" ref="0x2b999382f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b999382f760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999382f8e8"/>
        <function-ref name="get" scoped="" ref="0x2b999382fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999382fbf8"/>
        <function-ref name="set" scoped="" ref="0x2b999382fd80"/>
        <function-ref name="clr" scoped="" ref="0x2b9993856020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993854100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993854100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993854450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99938545d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993854760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99938548e8"/>
        <function-ref name="get" scoped="" ref="0x2b9993854a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993854bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9993854d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9993853020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993851100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993851100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993851450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99938515d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993851760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99938518e8"/>
        <function-ref name="get" scoped="" ref="0x2b9993851a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993851bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9993851d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9993850020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b999384e100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b999384e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999384e450"/>
        <function-ref name="isInput" scoped="" ref="0x2b999384e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b999384e760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999384e8e8"/>
        <function-ref name="get" scoped="" ref="0x2b999384ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999384ebf8"/>
        <function-ref name="set" scoped="" ref="0x2b999384ed80"/>
        <function-ref name="clr" scoped="" ref="0x2b999384d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b999384b100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b999384b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999384b450"/>
        <function-ref name="isInput" scoped="" ref="0x2b999384b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b999384b760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999384b8e8"/>
        <function-ref name="get" scoped="" ref="0x2b999384ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999384bbf8"/>
        <function-ref name="set" scoped="" ref="0x2b999384bd80"/>
        <function-ref name="clr" scoped="" ref="0x2b999384a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993848100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993848100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993848450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99938485d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993848760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99938488e8"/>
        <function-ref name="get" scoped="" ref="0x2b9993848a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993848bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9993848d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9993847020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993845100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993845100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993845450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99938455d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993845760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99938458e8"/>
        <function-ref name="get" scoped="" ref="0x2b9993845a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993845bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9993845d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9993844020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b99932a7bd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b99932a7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932a6020"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932a61a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932a6330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932a64b8"/>
        <function-ref name="get" scoped="" ref="0x2b99932a6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932a67c8"/>
        <function-ref name="set" scoped="" ref="0x2b99932a6950"/>
        <function-ref name="clr" scoped="" ref="0x2b99932a6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b99932a3020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b99932a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932a3370"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932a34f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932a3680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932a3808"/>
        <function-ref name="get" scoped="" ref="0x2b99932a3990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932a3b18"/>
        <function-ref name="set" scoped="" ref="0x2b99932a3ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b99932a3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9993299930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9993299930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993299c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993299e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993298020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932981a8"/>
        <function-ref name="get" scoped="" ref="0x2b9993298330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932984b8"/>
        <function-ref name="set" scoped="" ref="0x2b9993298640"/>
        <function-ref name="clr" scoped="" ref="0x2b99932987c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b99932a6d60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b99932a6d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932a50d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932a5260"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932a53e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932a5570"/>
        <function-ref name="get" scoped="" ref="0x2b99932a56f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932a5880"/>
        <function-ref name="set" scoped="" ref="0x2b99932a5a08"/>
        <function-ref name="clr" scoped="" ref="0x2b99932a5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b99932a2120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b99932a2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932a2470"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932a25f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932a2780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932a2908"/>
        <function-ref name="get" scoped="" ref="0x2b99932a2a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932a2c18"/>
        <function-ref name="set" scoped="" ref="0x2b99932a2da0"/>
        <function-ref name="clr" scoped="" ref="0x2b99932a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9993298a50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9993298a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993298da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932a7020"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932a71a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932a7330"/>
        <function-ref name="get" scoped="" ref="0x2b99932a74b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932a7640"/>
        <function-ref name="set" scoped="" ref="0x2b99932a77c8"/>
        <function-ref name="clr" scoped="" ref="0x2b99932a7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b99932a5e18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b99932a5e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932a41a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932a4330"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932a44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932a4640"/>
        <function-ref name="get" scoped="" ref="0x2b99932a47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932a4950"/>
        <function-ref name="set" scoped="" ref="0x2b99932a4ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b99932a4c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b99932a12a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b99932a12a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932a15f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932a1780"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932a1908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932a1a90"/>
        <function-ref name="get" scoped="" ref="0x2b99932a1c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932a1da0"/>
        <function-ref name="set" scoped="" ref="0x2b99932a0020"/>
        <function-ref name="clr" scoped="" ref="0x2b99932a01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993894180" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993894180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99938944d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993894658"/>
        <function-ref name="toggle" scoped="" ref="0x2b99938947e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993894968"/>
        <function-ref name="get" scoped="" ref="0x2b9993894af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993894c78"/>
        <function-ref name="set" scoped="" ref="0x2b9993894e00"/>
        <function-ref name="clr" scoped="" ref="0x2b99938bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99938b9100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99938b9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99938b9450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99938b95d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99938b9760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99938b98e8"/>
        <function-ref name="get" scoped="" ref="0x2b99938b9a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99938b9bf8"/>
        <function-ref name="set" scoped="" ref="0x2b99938b9d80"/>
        <function-ref name="clr" scoped="" ref="0x2b99938b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99938b6100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99938b6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99938b6450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99938b65d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99938b6760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99938b68e8"/>
        <function-ref name="get" scoped="" ref="0x2b99938b6a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99938b6bf8"/>
        <function-ref name="set" scoped="" ref="0x2b99938b6d80"/>
        <function-ref name="clr" scoped="" ref="0x2b99938b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99938b3100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99938b3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99938b3450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99938b35d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99938b3760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99938b38e8"/>
        <function-ref name="get" scoped="" ref="0x2b99938b3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99938b3bf8"/>
        <function-ref name="set" scoped="" ref="0x2b99938b3d80"/>
        <function-ref name="clr" scoped="" ref="0x2b99938b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99938b0100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99938b0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99938b0450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99938b05d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99938b0760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99938b08e8"/>
        <function-ref name="get" scoped="" ref="0x2b99938b0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99938b0bf8"/>
        <function-ref name="set" scoped="" ref="0x2b99938b0d80"/>
        <function-ref name="clr" scoped="" ref="0x2b99938af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99938ad100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99938ad100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99938ad450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99938ad5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99938ad760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99938ad8e8"/>
        <function-ref name="get" scoped="" ref="0x2b99938ada70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99938adbf8"/>
        <function-ref name="set" scoped="" ref="0x2b99938add80"/>
        <function-ref name="clr" scoped="" ref="0x2b99938ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99938aa100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99938aa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99938aa450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99938aa5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99938aa760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99938aa8e8"/>
        <function-ref name="get" scoped="" ref="0x2b99938aaa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99938aabf8"/>
        <function-ref name="set" scoped="" ref="0x2b99938aad80"/>
        <function-ref name="clr" scoped="" ref="0x2b99938a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99938a7100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99938a7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99938a7450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99938a75d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99938a7760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99938a78e8"/>
        <function-ref name="get" scoped="" ref="0x2b99938a7a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99938a7bf8"/>
        <function-ref name="set" scoped="" ref="0x2b99938a7d80"/>
        <function-ref name="clr" scoped="" ref="0x2b99938d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b99932a9430" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b99932a9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932a9780"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932a9908"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932a9a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932a9c18"/>
        <function-ref name="get" scoped="" ref="0x2b99932a9da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932a8020"/>
        <function-ref name="set" scoped="" ref="0x2b99932a81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b99932a8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b99932b88c8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b99932b88c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932b8c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932b8da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932b7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932b71a8"/>
        <function-ref name="get" scoped="" ref="0x2b99932b7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932b74b8"/>
        <function-ref name="set" scoped="" ref="0x2b99932b7640"/>
        <function-ref name="clr" scoped="" ref="0x2b99932b77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b99932ab1e8" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b99932ab1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932ab538"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932ab6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932ab848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932ab9d0"/>
        <function-ref name="get" scoped="" ref="0x2b99932abb58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932abce0"/>
        <function-ref name="set" scoped="" ref="0x2b99932abe68"/>
        <function-ref name="clr" scoped="" ref="0x2b99932aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b99932a85b8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b99932a85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932a8908"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932a8a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932a8c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932a8da0"/>
        <function-ref name="get" scoped="" ref="0x2b99932b9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932b91a8"/>
        <function-ref name="set" scoped="" ref="0x2b99932b9330"/>
        <function-ref name="clr" scoped="" ref="0x2b99932b94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b99932b7a50" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b99932b7a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932b7da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932b6020"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932b61a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932b6330"/>
        <function-ref name="get" scoped="" ref="0x2b99932b64b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932b6640"/>
        <function-ref name="set" scoped="" ref="0x2b99932b67c8"/>
        <function-ref name="clr" scoped="" ref="0x2b99932b6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b99932aa2a8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b99932aa2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932aa5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932aa780"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932aa908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932aaa90"/>
        <function-ref name="get" scoped="" ref="0x2b99932aac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932aada0"/>
        <function-ref name="set" scoped="" ref="0x2b99932a9020"/>
        <function-ref name="clr" scoped="" ref="0x2b99932a91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b99932b9740" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b99932b9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932b9a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932b9c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932b9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932b8020"/>
        <function-ref name="get" scoped="" ref="0x2b99932b81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932b8330"/>
        <function-ref name="set" scoped="" ref="0x2b99932b84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b99932b8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b99932b6bd8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b99932b6bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932b4020"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932b41a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932b4330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932b44b8"/>
        <function-ref name="get" scoped="" ref="0x2b99932b4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932b47c8"/>
        <function-ref name="set" scoped="" ref="0x2b99932b4950"/>
        <function-ref name="clr" scoped="" ref="0x2b99932b4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99938fe180" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99938fe180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99938fe4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b99938fe658"/>
        <function-ref name="toggle" scoped="" ref="0x2b99938fe7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99938fe968"/>
        <function-ref name="get" scoped="" ref="0x2b99938feaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99938fec78"/>
        <function-ref name="set" scoped="" ref="0x2b99938fee00"/>
        <function-ref name="clr" scoped="" ref="0x2b99938fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993924100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993924100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993924450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99939245d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993924760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99939248e8"/>
        <function-ref name="get" scoped="" ref="0x2b9993924a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993924bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9993924d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9993923020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993921100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993921100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993921450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99939215d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993921760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99939218e8"/>
        <function-ref name="get" scoped="" ref="0x2b9993921a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993921bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9993921d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9993920020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b999391e100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b999391e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999391e450"/>
        <function-ref name="isInput" scoped="" ref="0x2b999391e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b999391e760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999391e8e8"/>
        <function-ref name="get" scoped="" ref="0x2b999391ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999391ebf8"/>
        <function-ref name="set" scoped="" ref="0x2b999391ed80"/>
        <function-ref name="clr" scoped="" ref="0x2b999391d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b999391b100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b999391b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999391b450"/>
        <function-ref name="isInput" scoped="" ref="0x2b999391b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b999391b760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999391b8e8"/>
        <function-ref name="get" scoped="" ref="0x2b999391ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999391bbf8"/>
        <function-ref name="set" scoped="" ref="0x2b999391bd80"/>
        <function-ref name="clr" scoped="" ref="0x2b999391a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993918100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993918100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993918450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99939185d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993918760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99939188e8"/>
        <function-ref name="get" scoped="" ref="0x2b9993918a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993918bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9993918d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9993917020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993915100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993915100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993915450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99939155d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993915760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99939158e8"/>
        <function-ref name="get" scoped="" ref="0x2b9993915a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993915bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9993915d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9993914020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993912100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993912100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993912450"/>
        <function-ref name="isInput" scoped="" ref="0x2b99939125d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993912760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99939128e8"/>
        <function-ref name="get" scoped="" ref="0x2b9993912a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993912bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9993912d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9993911020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99932c0ac0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99932c0ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932c0e10"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932ce020"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932ce1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932ce330"/>
        <function-ref name="get" scoped="" ref="0x2b99932ce4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932ce640"/>
        <function-ref name="set" scoped="" ref="0x2b99932ce7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b99932ce950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99932dddb8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99932dddb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932dc170"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932dc2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932dc480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932dc608"/>
        <function-ref name="get" scoped="" ref="0x2b99932dc790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932dc918"/>
        <function-ref name="set" scoped="" ref="0x2b99932dcaa0"/>
        <function-ref name="clr" scoped="" ref="0x2b99932dcc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99932d73e0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99932d73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932d7730"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932d78b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932d7a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932d7bc8"/>
        <function-ref name="get" scoped="" ref="0x2b99932d7d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932d6020"/>
        <function-ref name="set" scoped="" ref="0x2b99932d61a8"/>
        <function-ref name="clr" scoped="" ref="0x2b99932d6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99932e47e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99932e47e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932e4b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932e4cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932e4e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932e3020"/>
        <function-ref name="get" scoped="" ref="0x2b99932e31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932e3330"/>
        <function-ref name="set" scoped="" ref="0x2b99932e34b8"/>
        <function-ref name="clr" scoped="" ref="0x2b99932e3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99932e0c38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99932e0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932df020"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932df1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932df330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932df4b8"/>
        <function-ref name="get" scoped="" ref="0x2b99932df640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932df7c8"/>
        <function-ref name="set" scoped="" ref="0x2b99932df950"/>
        <function-ref name="clr" scoped="" ref="0x2b99932dfad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99932ec020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99932ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932ec370"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932ec4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932ec680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932ec808"/>
        <function-ref name="get" scoped="" ref="0x2b99932ec990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932ecb18"/>
        <function-ref name="set" scoped="" ref="0x2b99932ecca0"/>
        <function-ref name="clr" scoped="" ref="0x2b99932ece28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99932e7480" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99932e7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932e77d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932e7958"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932e7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932e7c68"/>
        <function-ref name="get" scoped="" ref="0x2b99932e7df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932f8020"/>
        <function-ref name="set" scoped="" ref="0x2b99932f81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b99932f8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99932f57e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99932f57e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932f5b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932f5cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932f5e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932f4020"/>
        <function-ref name="get" scoped="" ref="0x2b99932f41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932f4330"/>
        <function-ref name="set" scoped="" ref="0x2b99932f44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b99932f4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99932f0970" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99932f0970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932f0cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932f0e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993301020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99933011a8"/>
        <function-ref name="get" scoped="" ref="0x2b9993301330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99933014b8"/>
        <function-ref name="set" scoped="" ref="0x2b9993301640"/>
        <function-ref name="clr" scoped="" ref="0x2b99933017c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99932fdab0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99932fdab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99932fde00"/>
        <function-ref name="isInput" scoped="" ref="0x2b99932fc020"/>
        <function-ref name="toggle" scoped="" ref="0x2b99932fc1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b99932fc330"/>
        <function-ref name="get" scoped="" ref="0x2b99932fc4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99932fc640"/>
        <function-ref name="set" scoped="" ref="0x2b99932fc7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b99932fc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b99932f9c38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b99932f9c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999330a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b999330a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b999330a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999330a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b999330a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b999330a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b999330a950"/>
        <function-ref name="clr" scoped="" ref="0x2b999330aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993305020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993305020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9993305370"/>
        <function-ref name="isInput" scoped="" ref="0x2b99933054f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9993305680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993305808"/>
        <function-ref name="get" scoped="" ref="0x2b9993305990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993305b18"/>
        <function-ref name="set" scoped="" ref="0x2b9993305ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9993305e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9993312180" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9993312180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b99933124d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9993312658"/>
        <function-ref name="toggle" scoped="" ref="0x2b99933127e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9993312968"/>
        <function-ref name="get" scoped="" ref="0x2b9993312af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9993312c78"/>
        <function-ref name="set" scoped="" ref="0x2b9993312e00"/>
        <function-ref name="clr" scoped="" ref="0x2b9993311020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b999334d2c0" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b999334d2c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b99930be128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b99930be128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b999334d610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b999334d8f0" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b999334d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b999334dc40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b999334ddc8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b999334c020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b999334c1a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b999334c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b999336a898" loc="60:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b999336a898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b999336abe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b999336b198" loc="57:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b999336b198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b999336b4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b999336a1d0" loc="59:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b999336a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b999336a520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b999336b7d0" loc="58:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b999336b7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b999336bb20"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b999336bca8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b999336be30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b99930c61c8" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b99930c61c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b99930c6518"/>
        <function-ref name="runTask" scoped="" ref="0x2b99930c66a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b99930c3600" loc="47:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b99930c3600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b99930c3950"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b99930c3ad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b99930c3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b99931792b0" loc="56:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b99931792b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9993179600"/>
        <function-ref name="runTask" scoped="" ref="0x2b9993179788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b9993182758" loc="57:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b9993182758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b9993182aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b999317a448" loc="55:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b999317a448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b999317a798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b999317a920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b999317aaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b999319f2b0" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b999319f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b999319f600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b9993199660" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b9993199660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b99931999b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b99931a2a80" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b99931a2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b99931a2dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b9993387578" loc="6:OWTestC.nc">
      <component-ref qname="OWTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b9993387578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b99933858f0"/>
        <function-ref name="fired" scoped="" ref="0x2b9993386020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9993386d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b99933868c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b99933841c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b9993385d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9993386470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b999337e0f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9993385320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b999337e598"/>
        <function-ref name="stop" scoped="" ref="0x2b999337ea38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b99931be9d0" loc="3:OWTestC.nc">
      <component-ref qname="OWTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b99931be9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b99931bed20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bigAVR6UART0" ref="0x2b9993372020" loc="4:OWTestC.nc">
      <component-ref qname="OWTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="bigAVR6UART0" scoped="" ref="0x2b9993372020"/></type-interface>
      <instance>
        <interfacedef-ref qname="bigAVR6UART0"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9993372370"/>
        <function-ref name="receive" scoped="" ref="0x2b99933724f8"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b9993372680"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b9993372808"/>
        <function-ref name="sendByte" scoped="" ref="0x2b9993372990"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9993372b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x2b999337d2b8" loc="5:OWTestC.nc">
      <component-ref qname="OWTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OneWire" scoped="" ref="0x2b999337d2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWire"/>
      </instance>
      <interface-functions>
        <function-ref name="initDone" scoped="" ref="0x2b999337d608"/>
        <function-ref name="init" scoped="" ref="0x2b999337d790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x2b99933847d8" loc="7:OWTestC.nc">
      <component-ref qname="OWTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x2b99933847d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9993380a18"/>
        <function-ref name="fired" scoped="" ref="0x2b9993381158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9993381e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b99933819f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b99933932e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b9993380e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b99933815a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9993383370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9993380448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9993383810"/>
        <function-ref name="stop" scoped="" ref="0x2b9993383cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2b99933742b8" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/OneWire/OneWireC.nc">
      <component-ref qname="OneWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OneWire" scoped="" ref="0x2b99933742b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWire"/>
      </instance>
      <interface-functions>
        <function-ref name="initDone" scoped="" ref="0x2b9993374608"/>
        <function-ref name="init" scoped="" ref="0x2b9993374790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b99933a3378" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/OneWire/OneWireP.nc">
      <component-ref qname="OneWireP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b99933a3378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b99933a06c8"/>
        <function-ref name="fired" scoped="" ref="0x2b99933a2db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b99933a1ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b99933a1688"/>
        <function-ref name="getdt" scoped="" ref="0x2b999339e020"/>
        <function-ref name="gett0" scoped="" ref="0x2b99933a0b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b99933a1238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b99933a2020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b99933a00f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b99933a24c0"/>
        <function-ref name="stop" scoped="" ref="0x2b99933a2960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b99933b1278" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/OneWire/OneWireP.nc">
      <component-ref qname="OneWireP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b99933b1278"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b9992ec1378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b99933b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x2b99933b04d0" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/OneWire/OneWireP.nc">
      <component-ref qname="OneWireP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OneWire" scoped="" ref="0x2b99933b04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWire"/>
      </instance>
      <interface-functions>
        <function-ref name="initDone" scoped="" ref="0x2b99933b0820"/>
        <function-ref name="init" scoped="" ref="0x2b99933b09a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Bus" ref="0x2b999339e4f8" loc="4:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/OneWire/OneWireP.nc">
      <component-ref qname="OneWireP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Bus" scoped="" ref="0x2b999339e4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b999339e848"/>
        <function-ref name="isInput" scoped="" ref="0x2b999339e9d0"/>
        <function-ref name="toggle" scoped="" ref="0x2b999339eb58"/>
        <function-ref name="isOutput" scoped="" ref="0x2b999339ece0"/>
        <function-ref name="get" scoped="" ref="0x2b999339ee68"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b99933b2020"/>
        <function-ref name="set" scoped="" ref="0x2b99933b21a8"/>
        <function-ref name="clr" scoped="" ref="0x2b99933b2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b99933a8a60" loc="45:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="OneWireC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b99933a8a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9993575d60"/>
        <function-ref name="fired" scoped="" ref="0x2b9993576470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b99935751c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9993576d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b9993574648"/>
        <function-ref name="gett0" scoped="" ref="0x2b99935741f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b99935768c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9993577620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9993575790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9993577ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b9993576020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b99933b8b60" loc="49:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b99933b8b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b99933c8d98"/>
        <function-ref name="fired" scoped="" ref="0x2b99933b34d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b99933c81f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b99933b3d78"/>
        <function-ref name="getdt" scoped="" ref="0x2b99933c7688"/>
        <function-ref name="gett0" scoped="" ref="0x2b99933c7238"/>
        <function-ref name="isRunning" scoped="" ref="0x2b99933b3928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b99933b56f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b99933c87c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b99933b5b90"/>
        <function-ref name="stop" scoped="" ref="0x2b99933b3088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b99933c2208" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b99933c2208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b99933be5f0"/>
        <function-ref name="fired" scoped="" ref="0x2b99933c1b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b99933bf8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b99933bf470"/>
        <function-ref name="getdt" scoped="" ref="0x2b99933d3020"/>
        <function-ref name="gett0" scoped="" ref="0x2b99933bea40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b99933bf020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b99933c2d50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b99933be020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b99933c1238"/>
        <function-ref name="stop" scoped="" ref="0x2b99933c16d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b99933cf980" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b99933cf980"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b99933d1560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b99933c54d8" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b99933c54d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b99933c5828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b99933e7e40" loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b99933e7e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b99933d7be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b99933d6548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b99933d60c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b99933d69d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b99933cc020" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b99933cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b99933cc370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b99933da838" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b99933da838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b99933d8020"/>
        <function-ref name="fired" scoped="" ref="0x2b99933d9020"/>
        <function-ref name="startAt" scoped="" ref="0x2b99933d9930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b99933d94a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b99933d84a8"/>
        <function-ref name="start" scoped="" ref="0x2b99933cb5e0"/>
        <function-ref name="stop" scoped="" ref="0x2b99933cbab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b99934ce938" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b99934ce938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b99934cb020"/>
        <function-ref name="fired" scoped="" ref="0x2b99934cc088"/>
        <function-ref name="startAt" scoped="" ref="0x2b99934cc998"/>
        <function-ref name="isRunning" scoped="" ref="0x2b99934cc510"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b99934cb4a8"/>
        <function-ref name="start" scoped="" ref="0x2b99934cd6b0"/>
        <function-ref name="stop" scoped="" ref="0x2b99934cdb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b99934ce190" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b99934ce190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b99930bfd88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b99930bfd88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b99934ce4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b99934cba90" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b99934cba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b99934e3828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b99934e2190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b99934e3cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b99934e2618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b9993a0db60" loc="38:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b9993a0db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b9993a0c020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b9993a0c1a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b9993a0c330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b9993a0c4b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b9993a0c640"/>
        <function-ref name="setControl" scoped="" ref="0x2b9993a0c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b99939e09b8" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b99939e09b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b99939dc020"/>
        <function-ref name="fired" scoped="" ref="0x2b99939dd0c0"/>
        <function-ref name="startAt" scoped="" ref="0x2b99939dd9d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b99939dd548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b99939dc4a8"/>
        <function-ref name="start" scoped="" ref="0x2b99939de730"/>
        <function-ref name="stop" scoped="" ref="0x2b99939dec08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b99939e0210" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b99939e0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b99939e0560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b99939dca90" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b99939dca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b99939db828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b99939d9190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b99939dbcb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b99939d9618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x2b9993a08bb0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b9993a08bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b9993a077c8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b9993a071a8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b9993a07330"/>
        <function-ref name="countBusy" scoped="" ref="0x2b9993a074b8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b9993a07640"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b9993a07020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b9993a0cb58" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b9993a0cb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b9993a08310"/>
        <function-ref name="fired" scoped="" ref="0x2b9993a0a0c0"/>
        <function-ref name="get" scoped="" ref="0x2b9993a0b728"/>
        <function-ref name="reset" scoped="" ref="0x2b9993a0a548"/>
        <function-ref name="isOn" scoped="" ref="0x2b9993a08798"/>
        <function-ref name="set" scoped="" ref="0x2b9993a0bbb0"/>
        <function-ref name="start" scoped="" ref="0x2b9993a0a9d0"/>
        <function-ref name="stop" scoped="" ref="0x2b9993a0ae58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b99939d9b98" loc="37:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b99939d9b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b9993a0fdb8"/>
        <function-ref name="test" scoped="" ref="0x2b9993a0f4a8"/>
        <function-ref name="get" scoped="" ref="0x2b99939d8760"/>
        <function-ref name="setScale" scoped="" ref="0x2b9993a0d270"/>
        <function-ref name="getScale" scoped="" ref="0x2b9993a0d748"/>
        <function-ref name="reset" scoped="" ref="0x2b99939d7580"/>
        <function-ref name="overflow" scoped="" ref="0x2b99939d70f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b9993a0f930"/>
        <function-ref name="set" scoped="" ref="0x2b99939d8be8"/>
        <function-ref name="start" scoped="" ref="0x2b99939d7a08"/>
        <function-ref name="stop" scoped="" ref="0x2b9993a0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b9993460020" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b9993460020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b9993460370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b99934604f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b9993460680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b9993460808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b9993460990"/>
        <function-ref name="setControl" scoped="" ref="0x2b9993460b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b9993473218" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b9993473218"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b9993473d10"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b99934736f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b9993473878"/>
        <function-ref name="countBusy" scoped="" ref="0x2b9993473a00"/>
        <function-ref name="getAssr" scoped="" ref="0x2b9993473b88"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b9993473568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b999345f020" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b999345f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b999345c7a8"/>
        <function-ref name="fired" scoped="" ref="0x2b999345d560"/>
        <function-ref name="get" scoped="" ref="0x2b999345fba0"/>
        <function-ref name="reset" scoped="" ref="0x2b999345d9e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b999345cc30"/>
        <function-ref name="set" scoped="" ref="0x2b999345d088"/>
        <function-ref name="start" scoped="" ref="0x2b999345de70"/>
        <function-ref name="stop" scoped="" ref="0x2b999345c320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9993450e00" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9993450e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b99934610f8"/>
        <function-ref name="test" scoped="" ref="0x2b9993462798"/>
        <function-ref name="get" scoped="" ref="0x2b9993465a18"/>
        <function-ref name="setScale" scoped="" ref="0x2b9993461580"/>
        <function-ref name="getScale" scoped="" ref="0x2b9993461a58"/>
        <function-ref name="reset" scoped="" ref="0x2b9993464980"/>
        <function-ref name="overflow" scoped="" ref="0x2b99934644f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b9993462c20"/>
        <function-ref name="set" scoped="" ref="0x2b9993464020"/>
        <function-ref name="start" scoped="" ref="0x2b9993464e08"/>
        <function-ref name="stop" scoped="" ref="0x2b9993462310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b9993469160" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b9993469160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b99934694b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b9993469638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b99934697c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b9993469948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b9993469ad0"/>
        <function-ref name="setControl" scoped="" ref="0x2b9993469c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b999347d268" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b999347d268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b999347d5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b999347d958" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b999347d958"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b999347b4b8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b999347de30"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b999347b020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b999347b1a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b999347b330"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b999347dca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9993468190" loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b9993468190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b999347e930"/>
        <function-ref name="fired" scoped="" ref="0x2b999347f6d0"/>
        <function-ref name="get" scoped="" ref="0x2b9993468d10"/>
        <function-ref name="reset" scoped="" ref="0x2b999347fb58"/>
        <function-ref name="isOn" scoped="" ref="0x2b999347edb8"/>
        <function-ref name="set" scoped="" ref="0x2b999347f1f8"/>
        <function-ref name="start" scoped="" ref="0x2b999347e020"/>
        <function-ref name="stop" scoped="" ref="0x2b999347e4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b999346f180" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b999346f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b999346b270"/>
        <function-ref name="test" scoped="" ref="0x2b999346c930"/>
        <function-ref name="get" scoped="" ref="0x2b999346fd00"/>
        <function-ref name="setScale" scoped="" ref="0x2b999346b6f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b999346bbd0"/>
        <function-ref name="reset" scoped="" ref="0x2b999346db58"/>
        <function-ref name="overflow" scoped="" ref="0x2b999346d6d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b999346cdb8"/>
        <function-ref name="set" scoped="" ref="0x2b999346d1f8"/>
        <function-ref name="start" scoped="" ref="0x2b999346c020"/>
        <function-ref name="stop" scoped="" ref="0x2b999346c4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b9993500cf0" loc="74:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b9993500cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b99934ff0a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b99934ff228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b9993504c70" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b9993504c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9993500410"/>
        <function-ref name="fired" scoped="" ref="0x2b99935024a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b9993502db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9993502930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9993500898"/>
        <function-ref name="start" scoped="" ref="0x2b99935039f0"/>
        <function-ref name="stop" scoped="" ref="0x2b9993502020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9993509ab0" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9993509ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9993505d60"/>
        <function-ref name="fired" scoped="" ref="0x2b9993507470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b99935051c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9993507d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b9993504648"/>
        <function-ref name="gett0" scoped="" ref="0x2b99935041f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b99935078c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9993508620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9993505790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9993508ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b9993507020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b9993554478" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b9993554478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b99935547c8"/>
        <function-ref name="runTask" scoped="" ref="0x2b9993554950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b9993559208" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b9993559208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b99935555f0"/>
        <function-ref name="fired" scoped="" ref="0x2b9993558b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b99935578c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9993557470"/>
        <function-ref name="getdt" scoped="" ref="0x2b9993554020"/>
        <function-ref name="gett0" scoped="" ref="0x2b9993555a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9993557020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9993559d50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9993555020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9993558238"/>
        <function-ref name="stop" scoped="" ref="0x2b99935586d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9993543020" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9993543020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b999355b358"/>
        <function-ref name="fired" scoped="" ref="0x2b99935429b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b999355c748"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b999355c2d8"/>
        <function-ref name="getdt" scoped="" ref="0x2b999355bc38"/>
        <function-ref name="gett0" scoped="" ref="0x2b999355b7c8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9993542e28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9993543b88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b999355cd38"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9993542088"/>
        <function-ref name="stop" scoped="" ref="0x2b9993542548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b9993550128" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b9993550128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9993550ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b9993563330" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b9993563330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b99935620c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b99935629d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9993562548"/>
        <function-ref name="overflow" scoped="" ref="0x2b9993562e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b9993573cb8" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b9993573cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b9992ec1378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b999356fa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="bigAVR6UART0" ref="0x2b99933a6da0" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0C.nc">
      <component-ref qname="bigAVR6UART0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="bigAVR6UART0" scoped="" ref="0x2b99933a6da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="bigAVR6UART0"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9993585170"/>
        <function-ref name="receive" scoped="" ref="0x2b99935852f8"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b9993585480"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b9993585608"/>
        <function-ref name="sendByte" scoped="" ref="0x2b9993585790"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9993585918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="bigAVR6UART0" ref="0x2b9993584410" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0P.nc">
      <component-ref qname="bigAVR6UART0P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="bigAVR6UART0" scoped="" ref="0x2b9993584410"/></type-interface>
      <instance>
        <interfacedef-ref qname="bigAVR6UART0"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9993584760"/>
        <function-ref name="receive" scoped="" ref="0x2b99935848e8"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b9993584a70"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b9993584bf8"/>
        <function-ref name="sendByte" scoped="" ref="0x2b9993584d80"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9993581020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x2b999357c540" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0P.nc">
      <component-ref qname="bigAVR6UART0P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b999357c540"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b999357c890"/>
        <function-ref name="receive" scoped="" ref="0x2b999357ca18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b999358e4c8" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0P.nc">
      <component-ref qname="bigAVR6UART0P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b999358e4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b999358e818"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b999358e9a0"/>
        <function-ref name="receive" scoped="" ref="0x2b999358eb28"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b999358ecb0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b999358ee38"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b9993580020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b99935801a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2b999358cbd8" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0P.nc">
      <component-ref qname="bigAVR6UART0P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b999358cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b999357f020"/>
        <function-ref name="stop" scoped="" ref="0x2b999357f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b9993599a58" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <component-ref qname="Atm128Uart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b9993599a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9993599da8"/>
        <function-ref name="receive" scoped="" ref="0x2b9993598020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b9993598310" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <component-ref qname="Atm128Uart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b9993598310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9993598660"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b99935987e8"/>
        <function-ref name="receive" scoped="" ref="0x2b9993598970"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b9993598af8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b9993598c80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b9993598e08"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9993597020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b9993597598" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <component-ref qname="Atm128Uart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b9993597598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b99935963a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9993596cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9993596830"/>
        <function-ref name="overflow" scoped="" ref="0x2b99935b2190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b99935992a0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <component-ref qname="Atm128Uart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b99935992a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b99935995f0"/>
        <function-ref name="stop" scoped="" ref="0x2b9993599778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b99935aee58" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b99935aee58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b99935e51e8"/>
        <function-ref name="receive" scoped="" ref="0x2b99935e5370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2b99935e45f8" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2b99935e45f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b99935e4948"/>
        <function-ref name="stop" scoped="" ref="0x2b99935e4ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b99935ae120" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b99935ae120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b99935ae470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b99935e55f8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b99935e55f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b99935e5948"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b99935e5ad0"/>
        <function-ref name="receive" scoped="" ref="0x2b99935e5c58"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b99935e5de0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b99935e4020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b99935e41a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b99935e4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b99935e2c60" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b99935e2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b99935e19f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b99935e0330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b99935e1e78"/>
        <function-ref name="overflow" scoped="" ref="0x2b99935e07b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2b99935e35c0" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2b99935e35c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b99935e3910"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b99935e3a98"/>
        <function-ref name="rxDone" scoped="" ref="0x2b99935e3c20"/>
        <function-ref name="txDone" scoped="" ref="0x2b99935e3da8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b99935e2020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b99935e21a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b99935e2330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b99935e24b8"/>
        <function-ref name="tx" scoped="" ref="0x2b99935e2640"/>
        <function-ref name="rx" scoped="" ref="0x2b99935e27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b99935ae6f8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b99935ae6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b99935aea48"/>
        <function-ref name="stop" scoped="" ref="0x2b99935aebd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2b99935e4d98" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2b99935e4d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b99935e3170"/>
        <function-ref name="stop" scoped="" ref="0x2b99935e32f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b99935ff860" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b99935ff860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b99935ffbb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b99935ffd38"/>
        <function-ref name="rxDone" scoped="" ref="0x2b99935fe020"/>
        <function-ref name="txDone" scoped="" ref="0x2b99935fe1a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b99935fe330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b99935fe4b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b99935fe640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b99935fe7c8"/>
        <function-ref name="tx" scoped="" ref="0x2b99935fe950"/>
        <function-ref name="rx" scoped="" ref="0x2b99935fead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b999361a020" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b999361a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b999361a370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b999361a4f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b999361a680"/>
        <function-ref name="txDone" scoped="" ref="0x2b999361a808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b999361a990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b999361ab18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b999361aca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b999361ae28"/>
        <function-ref name="tx" scoped="" ref="0x2b9993619020"/>
        <function-ref name="rx" scoped="" ref="0x2b99936191a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b99935ff020" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b99935ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b99935ff370"/>
        <function-ref name="stop" scoped="" ref="0x2b99935ff4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b99935fee58" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b99935fee58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b999361b1e8"/>
        <function-ref name="stop" scoped="" ref="0x2b999361b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b999361b6f0" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b999361b6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b999361ba40"/>
        <function-ref name="stop" scoped="" ref="0x2b999361bbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b9993600700" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b9993600700"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9993600a50"/>
        <function-ref name="stop" scoped="" ref="0x2b9993600bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2b9993619e40" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2b9993619e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b99936161c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b99936156d8" loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b99936156d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b9993615a28"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b9993615bb0"/>
        <function-ref name="rxDone" scoped="" ref="0x2b9993615d38"/>
        <function-ref name="txDone" scoped="" ref="0x2b9993614020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b99936141a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b9993614330"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b99936144b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b9993614640"/>
        <function-ref name="tx" scoped="" ref="0x2b99936147c8"/>
        <function-ref name="rx" scoped="" ref="0x2b9993614950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2b9993614ca8" loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2b9993614ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9993613020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b9993612550" loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b9993612550"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b99936128a0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b9993612a28"/>
        <function-ref name="rxDone" scoped="" ref="0x2b9993612bb0"/>
        <function-ref name="txDone" scoped="" ref="0x2b9993612d38"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b9993611020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b99936111a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b9993611330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b99936114b8"/>
        <function-ref name="tx" scoped="" ref="0x2b9993611640"/>
        <function-ref name="rx" scoped="" ref="0x2b99936117c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b9993616e18" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b9993616e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b99936151a8"/>
        <function-ref name="stop" scoped="" ref="0x2b9993615330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b99936133e0" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b99936133e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9993613730"/>
        <function-ref name="stop" scoped="" ref="0x2b99936138b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b9993613c78" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b9993613c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9993612020"/>
        <function-ref name="stop" scoped="" ref="0x2b99936121a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b9993611ae8" loc="90:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b9993611ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b9993611e38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b9993610020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b99936101a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b9993610330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b99936104b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b99936107c8" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b99936107c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b9993610b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b9993616580" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b9993616580"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b99936168d0"/>
        <function-ref name="stop" scoped="" ref="0x2b9993616a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b999366e420" loc="45:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="OWTestAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b999366e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b999313f530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b999313f888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b999366b6c8"/>
        <function-ref name="fired" scoped="" ref="0x2b999366ddb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b999366cad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b999366c688"/>
        <function-ref name="getdt" scoped="" ref="0x2b9993689020"/>
        <function-ref name="gett0" scoped="" ref="0x2b999366bb18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b999366c238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b999366d020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b999366b0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b999366d4c0"/>
        <function-ref name="stop" scoped="" ref="0x2b999366d960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9993686a60" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TimerMicroC.nc">
      <component-ref qname="OWTestAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9993686a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b99936d8d60"/>
        <function-ref name="fired" scoped="" ref="0x2b99936da470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b99936d81c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b99936dad10"/>
        <function-ref name="getdt" scoped="" ref="0x2b99936d7648"/>
        <function-ref name="gett0" scoped="" ref="0x2b99936d71f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b99936da8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b99936db620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b99936d8790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b99936dbac0"/>
        <function-ref name="stop" scoped="" ref="0x2b99936da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMicro" ref="0x2b999367e9b8" loc="52:/homes/mhartmann/baq/tinyos/tos/system/TimerMicroP.nc">
      <component-ref qname="TimerMicroP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMicro" scoped="" ref="0x2b999367e9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b999367bbc0"/>
        <function-ref name="fired" scoped="" ref="0x2b999367c2e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b999367b020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b999367cb88"/>
        <function-ref name="getdt" scoped="" ref="0x2b99936994d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b9993699088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b999367c738"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b999367d528"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b999367b5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b999367d9c8"/>
        <function-ref name="stop" scoped="" ref="0x2b999367de68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b999368f150" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
      <component-ref qname="HilTimerMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b999368f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b999368fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMicro" ref="0x2b9993695030" loc="49:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
      <component-ref qname="HilTimerMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMicro" scoped="" ref="0x2b9993695030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b99936912b8"/>
        <function-ref name="fired" scoped="" ref="0x2b9993693978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b99936926c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9993692278"/>
        <function-ref name="getdt" scoped="" ref="0x2b9993691b58"/>
        <function-ref name="gett0" scoped="" ref="0x2b9993691708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9993693dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9993695b78"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9993692c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9993693088"/>
        <function-ref name="stop" scoped="" ref="0x2b9993693528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9993696310" loc="48:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMicroC.nc">
      <component-ref qname="HilTimerMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9993696310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9993696660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMicro32" ref="0x2b99936a63b8" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMicroP.nc">
      <component-ref qname="AlarmCounterMicroP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMicro32" scoped="" ref="0x2b99936a63b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b99936a4130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b99936a4a40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b99936a45b8"/>
        <function-ref name="overflow" scoped="" ref="0x2b99936a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMicro32" ref="0x2b99936aa0e0" loc="31:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMicroP.nc">
      <component-ref qname="AlarmCounterMicroP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMicro32" scoped="" ref="0x2b99936aa0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b99936a7738"/>
        <function-ref name="fired" scoped="" ref="0x2b99936a87d8"/>
        <function-ref name="startAt" scoped="" ref="0x2b99936a7130"/>
        <function-ref name="isRunning" scoped="" ref="0x2b99936a8c60"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b99936a7bc0"/>
        <function-ref name="start" scoped="" ref="0x2b99936aae30"/>
        <function-ref name="stop" scoped="" ref="0x2b99936a8350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b999368d738" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMicroP.nc">
      <component-ref qname="AlarmCounterMicroP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b999368d738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b999368da88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b99936a11a8" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMicroP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b99936a11a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b999369e918"/>
        <function-ref name="fired" scoped="" ref="0x2b99936a0980"/>
        <function-ref name="startAt" scoped="" ref="0x2b999369e310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b99936a0e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b999369eda0"/>
        <function-ref name="start" scoped="" ref="0x2b99936a0020"/>
        <function-ref name="stop" scoped="" ref="0x2b99936a04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b99936a29a0" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMicroP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b99936a29a0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b99930bfd88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b99930bfd88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b99936a2cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b999369d3d0" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMicroP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b999369d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b999369c150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b999369ca60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b999369c5d8"/>
        <function-ref name="overflow" scoped="" ref="0x2b99936bb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b9993a92020" loc="38:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMicroP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b9993a92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b9993a92370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b9993a924f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b9993a92680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b9993a92808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b9993a92990"/>
        <function-ref name="setControl" scoped="" ref="0x2b9993a92b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9993a9eda8" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMicroP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b9993a9eda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9993a9b470"/>
        <function-ref name="fired" scoped="" ref="0x2b9993a9c510"/>
        <function-ref name="startAt" scoped="" ref="0x2b9993a9ce20"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9993a9c998"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9993a9b8f8"/>
        <function-ref name="start" scoped="" ref="0x2b9993a9db38"/>
        <function-ref name="stop" scoped="" ref="0x2b9993a9c088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9993a9e600" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMicroP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9993a9e600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9993a9e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9993a99020" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMicroP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b9993a99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9993a99d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9993a986b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9993a98230"/>
        <function-ref name="overflow" scoped="" ref="0x2b9993a98b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x2b9993a8d0a0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMicroP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b9993a8d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b9993a8db98"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b9993a8d578"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b9993a8d700"/>
        <function-ref name="countBusy" scoped="" ref="0x2b9993a8d888"/>
        <function-ref name="getAssr" scoped="" ref="0x2b9993a8da10"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b9993a8d3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b9993a91020" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMicroP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b9993a91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b9993a8e7a8"/>
        <function-ref name="fired" scoped="" ref="0x2b9993a90560"/>
        <function-ref name="get" scoped="" ref="0x2b9993a91ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b9993a909e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b9993a8ec30"/>
        <function-ref name="set" scoped="" ref="0x2b9993a90088"/>
        <function-ref name="start" scoped="" ref="0x2b9993a90e70"/>
        <function-ref name="stop" scoped="" ref="0x2b9993a8e320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9993a97168" loc="37:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMicroP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9993a97168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b9993a93270"/>
        <function-ref name="test" scoped="" ref="0x2b9993a94930"/>
        <function-ref name="get" scoped="" ref="0x2b9993a97ce8"/>
        <function-ref name="setScale" scoped="" ref="0x2b9993a936f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b9993a93bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b9993a96b58"/>
        <function-ref name="overflow" scoped="" ref="0x2b9993a966d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b9993a94db8"/>
        <function-ref name="set" scoped="" ref="0x2b9993a961f8"/>
        <function-ref name="start" scoped="" ref="0x2b9993a94020"/>
        <function-ref name="stop" scoped="" ref="0x2b9993a944a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b99936b1cf0" loc="74:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMicroC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b99936b1cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b99936b00a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b99936b0228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b99936b5c70" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMicroC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b99936b5c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b99936b1410"/>
        <function-ref name="fired" scoped="" ref="0x2b99936b34a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b99936b3db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b99936b3930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b99936b1898"/>
        <function-ref name="start" scoped="" ref="0x2b99936b49f0"/>
        <function-ref name="stop" scoped="" ref="0x2b99936b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b999368bac0" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMicroC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b999368bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b99936b6d60"/>
        <function-ref name="fired" scoped="" ref="0x2b99936b8470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b99936b61c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b99936b8d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b99936b5648"/>
        <function-ref name="gett0" scoped="" ref="0x2b99936b51f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b99936b88c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b99936b9658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b99936b6790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b99936b9af8"/>
        <function-ref name="stop" scoped="" ref="0x2b99936b8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b99936c5930" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMicroC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b99936c5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b99936c5c80"/>
        <function-ref name="runTask" scoped="" ref="0x2b99936c5e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b99936ca858" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMicroC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b99936ca858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b99936c6bc0"/>
        <function-ref name="fired" scoped="" ref="0x2b99936c71c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b99936c6020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b99936c7a60"/>
        <function-ref name="getdt" scoped="" ref="0x2b99936c54d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b99936c5088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b99936c7610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b99936c93d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b99936c65f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b99936c9878"/>
        <function-ref name="stop" scoped="" ref="0x2b99936c9d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b99936ae5e0" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMicroC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b99936ae5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b99936cc988"/>
        <function-ref name="fired" scoped="" ref="0x2b99936ab020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b99936abd70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b99936ab900"/>
        <function-ref name="getdt" scoped="" ref="0x2b99936ca2d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b99936ccdf8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b99936ab490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b99936ad198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b99936cc398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b99936ad658"/>
        <function-ref name="stop" scoped="" ref="0x2b99936adb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b99936c3e18" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b99936c3e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b99936c1a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b99936c00a0" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b99936c00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9993148430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b9993148788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b99936c0df0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b99936bf738"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b99936bf2b0"/>
        <function-ref name="overflow" scoped="" ref="0x2b99936bfbc0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b99931ba178" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b99931b2e08" loc="60:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b99931c0290" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b9992ec1378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b99931c0020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b99931c4940" loc="31:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="27:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b9992ec1378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b99931c3378" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b99931c3108" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b99931c3e00" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b99931c3b90" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b99931c2698" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b99931d70d8" loc="44:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b99931d77a0" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b99930c04c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b99931d8328" loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b99931d6570" loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b99930c04c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b99931d89c8" loc="43:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b99930c04c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b99931d7e58" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b99931da5a8" loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b99931dac18" loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b99930c53a0" loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b99930c3290" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b99930c5ab8" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b99930c04c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b99930cf070" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b99930cf860" loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b9993182450" loc="76:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b9993198d28" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b999311e1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b99931a26d8" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b999337b338" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b999337b338"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b9993388020" loc="136:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b9993379710" loc="83:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b99933775b8" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b9993377020" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b9993377338" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b99933787b8" loc="98:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b99930c04c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b9993387020" loc="151:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b9993388740" loc="144:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b9993378020" loc="92:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b99930c04c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b999337be08" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b999337bb98" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b99933895b8" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b9993389020" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b9993389338" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b999337a8a0" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b999337a630" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9993379070" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="bigAVR6UART0" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0.nc">
      <function command="" provided="0" name="send" ref="0x2b9993370700" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0.nc">
        <interfacedef-ref qname="bigAVR6UART0"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9992ec1378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="str" ref="0x2b9993370160" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9993370480" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9992ec1378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b999336f388" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0.nc">
        <interfacedef-ref qname="bigAVR6UART0"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9992ec1378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b9993370db0" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b999336f108" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9992ec1378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b999336fc90" loc="13:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0.nc">
        <interfacedef-ref qname="bigAVR6UART0"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b999336fa20" loc="13:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b999336ec40" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0.nc">
        <interfacedef-ref qname="bigAVR6UART0"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9992ec1378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b999336e368" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b999336e688" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9992ec1378"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b999336e9b0" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendByte" ref="0x2b9993373ae8" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0.nc">
        <interfacedef-ref qname="bigAVR6UART0"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b9993373878" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b999336cc08" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0.nc">
        <interfacedef-ref qname="bigAVR6UART0"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9992ec1378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b999336c330" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b999336c650" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9992ec1378"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b999336c978" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/uart/bigAVR6UART0.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWire" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/OneWire/OneWire.nc">
      <function event="" provided="0" name="initDone" ref="0x2b999337d020" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/OneWire/OneWire.nc">
        <interfacedef-ref qname="OneWire"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9993371c60" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/OneWire/OneWire.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b9993371620" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/OneWire/OneWire.nc">
        <interfacedef-ref qname="OneWire"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b99933b2e60" loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b99933b2e60"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b99933af0c8" loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b99933af0c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b99933afb60" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b99933af0c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b99933af8f0" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b99933af0c8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b99933d3bf0" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b99933d3bf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b99933cf4c8" loc="61:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9992ec1db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b99933d43f8" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b99933d43f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b99933d4628" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b99933d4628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b99933e8020" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b99933d4628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b99933e7070" loc="76:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b99933e8838" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b99930c04c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b99933e7760" loc="82:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b99933cce18" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b99933cce18"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b99933c9068" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b99933c9068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b99933db958" loc="109:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b99933c9068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b99933dea78" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b99933db020" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b99933c9068"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b99933c9068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b99933dca08" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b99933c9068"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b99933dcd28" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b99933c9068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b99933dc258" loc="88:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b99930c04c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b99933da110" loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b99933c9068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b99933c9b28" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b99933c9068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b99933c98b8" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b99933c9068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b99933de328" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b9993404a58" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b999314ba08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b999314be10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b9993415e18" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9993158100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b9993158508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b9993401c70" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b999314f980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b999314fd88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b9993415678" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b999314f980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b999314fd88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b9993415408" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b999314f980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b999314fd88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b9993414828" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9993158100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b9993158508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b99934145b8" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9993158100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b9993158508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b99934014c8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b999314ba08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b999314be10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b9993401258" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b999314ba08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b999314be10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerSync" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer0Synchronous" ref="0x2b999341d328" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBusy" ref="0x2b999341da30" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b999341b258" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b999341ba08" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b999341e110" loc="28:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="24:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9993152118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b9993152520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b999341eac0" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9993152118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b9993152520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b999341e850" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9993152118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b9993152520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b9993412068" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9993412068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b999340e738" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b99930c04c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b99934119d0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b9993412920" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9993412068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b999340f110" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b999340d020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b99930c04c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9993411290" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9993412068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b9993411020" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9993412068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b999340f808" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b999340e020" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b99933f9418" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b99933f9418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b999340a900" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b99933f5a40" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b99930c04c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b99933f9cb8" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b99933f9418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b9993408290" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b9993408020" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b9993408a10" loc="110:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="106:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b99933f64c0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b99933f7d50" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b999340a1d8" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b99930c04c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b99933f7630" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b99933f9418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b99933f73c0" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b99933f9418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b99933f6bb8" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b99933f5328" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/homes/mhartmann/baq/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/homes/mhartmann/baq/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b9993581e38" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/homes/mhartmann/baq/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b9993581bc8" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b999357ec20" loc="56:/homes/mhartmann/baq/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b999357e668" loc="56:/homes/mhartmann/baq/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b999357e9a0" loc="56:/homes/mhartmann/baq/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b999357dc00" loc="48:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9992ec1378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b999357d660" loc="48:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b999357d980" loc="48:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9992ec1378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b9993593578" loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b9993593308" loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b99935912e0" loc="90:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9992ec1378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b9993593cf0" loc="90:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9993591060" loc="90:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9992ec1378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b99935942a8" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b9993590a70" loc="99:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9992ec1378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b9993590198" loc="99:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b99935904b8" loc="99:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9992ec1378"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b99935907e0" loc="99:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b9993594b20" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b999357a398" loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9992ec1378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b9993595a98" loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9993595db8" loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9992ec1378"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b999357a108" loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/homes/mhartmann/baq/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b999358c020" loc="95:/homes/mhartmann/baq/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/homes/mhartmann/baq/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b999358c7c0" loc="105:/homes/mhartmann/baq/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/homes/mhartmann/baq/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b99935a5578" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b99930c04c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b99935a6738" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b99935c0c08" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b99935c0998" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b99935c1c08" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b99935a9800" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b99935a6020" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b99935a6e58" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b99930c9ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2b99935a5c58" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b99930c04c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b99935c1578" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b99935c1308" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b99935c0328" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9992ebf910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
