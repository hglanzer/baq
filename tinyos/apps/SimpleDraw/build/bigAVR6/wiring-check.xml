<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:SimpleDrawAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b94c0a40a20"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b94c0a3d220"/></to>
    </wire>
    <wire loc="72:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b94c0a3d220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b94c0bed198"/></to>
    </wire>
    <wire loc="10:SimpleDrawAppC.nc">
      <from><interface-ref name="Button0" scoped="" ref="0x2b94c0bf5108"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x2b94c0a7c1a0"/></to>
    </wire>
    <wire loc="164:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b94c0a7c1a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b94c0b0be40"/></to>
    </wire>
    <wire loc="11:SimpleDrawAppC.nc">
      <from><interface-ref name="Button1" scoped="" ref="0x2b94c0bf4390"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x2b94c0a7b658"/></to>
    </wire>
    <wire loc="165:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b94c0a7b658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b94c0b19020"/></to>
    </wire>
    <wire loc="12:SimpleDrawAppC.nc">
      <from><interface-ref name="Button2" scoped="" ref="0x2b94c0bf36a0"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x2b94c0a7a7e0"/></to>
    </wire>
    <wire loc="166:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b94c0a7a7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b94c0b18120"/></to>
    </wire>
    <wire loc="13:SimpleDrawAppC.nc">
      <from><interface-ref name="Button3" scoped="" ref="0x2b94c0bf29b0"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x2b94c0a79968"/></to>
    </wire>
    <wire loc="167:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b94c0a79968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b94c0b162a8"/></to>
    </wire>
    <wire loc="14:SimpleDrawAppC.nc">
      <from><interface-ref name="Button4" scoped="" ref="0x2b94c0bf1cc0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b94c0a86af0"/></to>
    </wire>
    <wire loc="168:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b94c0a86af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b94c0b15430"/></to>
    </wire>
    <wire loc="15:SimpleDrawAppC.nc">
      <from><interface-ref name="Button5" scoped="" ref="0x2b94c0bef020"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x2b94c0a85c78"/></to>
    </wire>
    <wire loc="169:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b94c0a85c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b94c0b145b8"/></to>
    </wire>
    <wire loc="16:SimpleDrawAppC.nc">
      <from><interface-ref name="Button6" scoped="" ref="0x2b94c0bee1c8"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b94c0a84e00"/></to>
    </wire>
    <wire loc="170:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b94c0a84e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b94c0b13740"/></to>
    </wire>
    <wire loc="17:SimpleDrawAppC.nc">
      <from><interface-ref name="Button7" scoped="" ref="0x2b94c0c01390"/></from>
      <to><interface-ref name="PortD7" scoped="" ref="0x2b94c0a82020"/></to>
    </wire>
    <wire loc="171:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b94c0a82020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b94c0b128c8"/></to>
    </wire>
    <wire loc="18:SimpleDrawAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b94c0c09c08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b94c0c50420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b94c0c50420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b94c0c5d020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:SimpleDrawAppC.nc">
      <from><interface-ref name="GLCD" scoped="" ref="0x2b94c0c29d90"/></from>
      <to><interface-ref name="GLCD" scoped="" ref="0x2b94c0e11298"/></to>
    </wire>
    <wire loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDC.nc">
      <from><interface-ref name="GLCD" scoped="" ref="0x2b94c0e11298"/></from>
      <to><interface-ref name="GLCD" scoped="" ref="0x2b94c0e23208"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b94c0a3c620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b94c1504d90"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b94c0a3c620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b94c0c58968"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b94c0bed7d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b94c0945600"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b94c0945600"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b94c09fc448"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b94c0bec1d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b94c0a3f620"/></to>
    </wire>
    <wire loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b94c0a3f620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b94c0a4e600"/></to>
    </wire>
    <wire loc="71:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b94c0bec898"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b94c0a3c620"/></to>
    </wire>
    <wire loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b94c0a3a380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b94c0ef72b8"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b94c0a42618"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b94c0bcf8f0"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b94c0a4d398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b94c0bcf2c0"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b94c0a4eca0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b94c0a47b98"/></to>
    </wire>
    <wire loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b94c0a47b98"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b94c0a51698"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b94c0a54360"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b94c0a3a380"/></to>
    </wire>
    <wire loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b94c0a50b08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b94c0a54360"/></to>
    </wire>
    <wire loc="191:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b94c0a99af0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c0b72970"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b94c0b19020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c12d6710"/></to>
    </wire>
    <wire loc="176:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b94c0a8c658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b94c0b28d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b94c0b28d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c135c710"/></to>
    </wire>
    <wire loc="185:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b94c0a91348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b94c0b2a5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b94c0b2a5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c13be710"/></to>
    </wire>
    <wire loc="143:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b94c0a67348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b94c0af0740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b94c0af0740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c11ae970"/></to>
    </wire>
    <wire loc="183:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b94c0a93020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b94c0b2c2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b94c0b2c2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c1391710"/></to>
    </wire>
    <wire loc="146:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b94c0a65658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b94c0af8930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b94c0af8930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c12096a8"/></to>
    </wire>
    <wire loc="157:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b94c0a767e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b94c0b07740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b94c0b07740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c127f710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b94c0b15430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c12cd710"/></to>
    </wire>
    <wire loc="179:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b94c0a89af0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b94c0b24120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b94c0b24120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c1353710"/></to>
    </wire>
    <wire loc="138:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b94c0a5faf0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b94c0ae5020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b94c0ae5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c1192970"/></to>
    </wire>
    <wire loc="149:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b94c0a70af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b94c0af5d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b94c0af5d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c1200710"/></to>
    </wire>
    <wire loc="160:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b94c0a73c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b94c0b04bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b94c0b04bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c1276710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b94c0b128c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c12f4710"/></to>
    </wire>
    <wire loc="188:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b94c0a8e7e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b94c0b39a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b94c0b39a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c13b5710"/></to>
    </wire>
    <wire loc="194:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b94c0a957e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c0b87020"/></to>
    </wire>
    <wire loc="174:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b94c0a80348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b94c0b1aa50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b94c0b1aa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c1330710"/></to>
    </wire>
    <wire loc="141:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b94c0a69020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b94c0ae2430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b94c0ae2430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c11b4970"/></to>
    </wire>
    <wire loc="152:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b94c0a6c1a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b94c0b01120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b94c0b01120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c1223710"/></to>
    </wire>
    <wire loc="192:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b94c0a974d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c0b7fab0"/></to>
    </wire>
    <wire loc="155:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b94c0a784d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b94c0b09500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b94c0b09500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c12856a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b94c0b18120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c12d3710"/></to>
    </wire>
    <wire loc="177:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b94c0a8b7e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b94c0b27e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b94c0b27e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c1359710"/></to>
    </wire>
    <wire loc="186:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b94c0a904d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b94c0b3b740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b94c0b3b740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c13bb710"/></to>
    </wire>
    <wire loc="144:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b94c0a664d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b94c0aef8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b94c0aef8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c11aa970"/></to>
    </wire>
    <wire loc="147:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b94c0a647e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b94c0af7a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b94c0af7a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c1206710"/></to>
    </wire>
    <wire loc="158:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b94c0a75968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b94c0b068c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b94c0b068c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c127c710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b94c0b145b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c12fa710"/></to>
    </wire>
    <wire loc="180:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b94c0a88c78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b94c0b232a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b94c0b232a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c1350710"/></to>
    </wire>
    <wire loc="139:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b94c0a5ec78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b94c0ae4120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b94c0ae4120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c11ba970"/></to>
    </wire>
    <wire loc="150:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b94c0a6fc78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b94c0af4e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b94c0af4e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c1229710"/></to>
    </wire>
    <wire loc="161:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b94c0a72e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b94c0b02d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b94c0b02d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c1273710"/></to>
    </wire>
    <wire loc="189:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b94c0a9a968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b94c0b38bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b94c0b38bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c13b2710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b94c0b0be40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c12d96a8"/></to>
    </wire>
    <wire loc="175:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b94c0a8d4d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b94c0b29bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b94c0b29bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c132d710"/></to>
    </wire>
    <wire loc="184:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b94c0a921a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b94c0b2b430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b94c0b2b430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c13c1710"/></to>
    </wire>
    <wire loc="195:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b94c0aa2968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c0b94180"/></to>
    </wire>
    <wire loc="142:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b94c0a681a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b94c0af15b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b94c0af15b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c11b1970"/></to>
    </wire>
    <wire loc="153:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b94c0a6b348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b94c0b002a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b94c0b002a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c121f710"/></to>
    </wire>
    <wire loc="182:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b94c0a87e00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b94c0b2d1e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b94c0b2d1e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c13946a8"/></to>
    </wire>
    <wire loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b94c0a77658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b94c0b085b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b94c0b085b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c1282710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b94c0b162a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c12d0710"/></to>
    </wire>
    <wire loc="178:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b94c0a8a968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b94c0b25020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b94c0b25020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c1356710"/></to>
    </wire>
    <wire loc="187:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b94c0a8f658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b94c0b3a8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b94c0b3a8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c13b8710"/></to>
    </wire>
    <wire loc="137:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b94c0a52878"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b94c0ae7dc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b94c0ae7dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c1195970"/></to>
    </wire>
    <wire loc="148:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b94c0a71968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b94c0af6bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b94c0af6bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c1203710"/></to>
    </wire>
    <wire loc="159:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b94c0a74af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b94c0b05a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b94c0b05a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c1279710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b94c0b13740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c12f7710"/></to>
    </wire>
    <wire loc="193:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b94c0a96658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c0b7bc38"/></to>
    </wire>
    <wire loc="173:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b94c0a811a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b94c0b1b930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b94c0b1b930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c13336a8"/></to>
    </wire>
    <wire loc="162:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b94c0a7d020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b94c0b11e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b94c0b11e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c1270710"/></to>
    </wire>
    <wire loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b94c0a5de00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b94c0ae32a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b94c0ae32a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c11b7970"/></to>
    </wire>
    <wire loc="151:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b94c0a6d020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b94c0af2020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b94c0af2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b94c1226710"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b94c09481c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94c09fb2b0"/></to>
    </wire>
    <wire loc="55:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b94c0a04758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b94c0a1b660"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b94c0a212b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b94c0d13268"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b94c0c5d020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b94c0c6b6a8"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b94c0c6b6a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b94c0de2020"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b94c0c58968"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b94c0c75408"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b94c0c62d68"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b94c0df0c38"/></to>
    </wire>
    <wire loc="43:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b94c0c75408"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b94c0d69190"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b94c0df8208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b94c0da4ab0"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b94c0d9fc70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b94c0c73020"/></to>
    </wire>
    <wire loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b94c0c73020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b94c0d69938"/></to>
    </wire>
    <wire loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b94c0defe48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b94c0c7e150"/></to>
    </wire>
    <wire loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b94c0c7e150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b94c0d7fa90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b94c0d7fa90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b94c149fce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b94c0d69190"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b94c14a2438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b94c0d69938"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b94c14a2be0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b94c149b020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b94c0cffe00"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b94c0cffe00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b94c0d05180"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b94c1497e70"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b94c0cf6020"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b94c0cf6020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b94c0d18160"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2b94c1496d20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b94c0d0d020"/></to>
    </wire>
    <wire loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b94c0d0d020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b94c0d17190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b94c1492db0"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b94c0d09218"/></to>
    </wire>
    <wire loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b94c0d09218"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b94c0d13958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2b94c0d9bcf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94c09481c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b94c0df3478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94c09481c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDC.nc">
      <from><interface-ref name="LCD128x64" scoped="" ref="0x2b94c0e432b8"/></from>
      <to><interface-ref name="LCD128x64" scoped="" ref="0x2b94c107f020"/></to>
    </wire>
    <wire loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <from><interface-ref name="LCD128x64" scoped="" ref="0x2b94c107f020"/></from>
      <to><interface-ref name="LCD128x64" scoped="" ref="0x2b94c109b020"/></to>
    </wire>
    <wire loc="12:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDC.nc">
      <from><interface-ref name="TouchScreen" scoped="" ref="0x2b94c0e1c9c8"/></from>
      <to><interface-ref name="TouchScreen" scoped="" ref="0x2b94c0e0a7e8"/></to>
    </wire>
    <wire loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="TouchScreen" scoped="" ref="0x2b94c0e0a7e8"/></from>
      <to><interface-ref name="TouchScreen" scoped="" ref="0x2b94c0e92978"/></to>
    </wire>
    <wire loc="13:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b94c0e9b1e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b94c1062358"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x2b94c1062358"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b94c0edae60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b94c1061a28"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b94c0e92020"/></to>
    </wire>
    <wire loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="driveA" scoped="" ref="0x2b94c0e9a838"/></from>
      <to><interface-ref name="PortG3" scoped="" ref="0x2b94c0a957e0"/></to>
    </wire>
    <wire loc="16:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="driveB" scoped="" ref="0x2b94c0e97b30"/></from>
      <to><interface-ref name="PortG4" scoped="" ref="0x2b94c0aa2968"/></to>
    </wire>
    <wire loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="adcX" scoped="" ref="0x2b94c0e96cb8"/></from>
      <to><interface-ref name="PortF0" scoped="" ref="0x2b94c0a87e00"/></to>
    </wire>
    <wire loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="adcY" scoped="" ref="0x2b94c0e94020"/></from>
      <to><interface-ref name="PortF1" scoped="" ref="0x2b94c0a93020"/></to>
    </wire>
    <wire loc="40:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <from><interface-ref name="checkTS" scoped="" ref="0x2b94c0ea9640"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94c09481c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b94c0ed2690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b94c1061a28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b94c0ee8708"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b94c0ee62f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b94c0ee2dc8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b94c10603f0"/></to>
    </wire>
    <wire loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b94c0edae60"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b94c1038a28"/></to>
    </wire>
    <wire loc="31:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x2b94c0ed0a98"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2b94c1015880"/></to>
    </wire>
    <wire loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b94c106ab28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b94c0ee8708"/></to>
    </wire>
    <wire loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b94c1012e78"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b94c0ed2690"/></to>
    </wire>
    <wire loc="35:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2b94c106b348"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b94c1017c68"/></to>
    </wire>
    <wire loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b94c1012020"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b94c0edf440"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b94c0edf440"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b94c0ef28a8"/></to>
    </wire>
    <wire loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b94c0ee2080"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b94c0ef6318"/></to>
    </wire>
    <wire loc="66:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b94c0ee62f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b94c0ff4a40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b94c0ff4a40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b94c15014b0"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b94c0ff1550"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b94c0ee2dc8"/></to>
    </wire>
    <wire loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b94c0f040d0"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b94c0ef8a28"/></to>
    </wire>
    <wire loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b94c0ef8a28"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b94c0f31c48"/></to>
    </wire>
    <wire loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b94c0ef1610"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b94c0a42618"/></to>
    </wire>
    <wire loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b94c0fed478"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b94c0ef20f0"/></to>
    </wire>
    <wire loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b94c1020268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b94c0ff2020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b94c0ff2020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b94c1500940"/></to>
    </wire>
    <wire loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b94c0f4e0c0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b94c0a24a80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b94c0ff3820"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b94c1500200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b94c0ff2bd8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b94c14ff578"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b94c14ffe18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b94c0ff1550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2b94c14fe5d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b94c15033f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b94c14fb780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94c09481c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b94c153b818"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b94c0fed478"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b94c153a020"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b94c0fedb98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b94c153a5b8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b94c1020268"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b94c1539268"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b94c1020e20"/></to>
    </wire>
    <wire loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x2b94c1026bf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94c09481c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="208:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeRectangle" scoped="" ref="0x2b94c10f0e68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94c09481c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="257:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeString" scoped="" ref="0x2b94c1100368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94c09481c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="224:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeCircle" scoped="" ref="0x2b94c10e8c10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94c09481c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="316:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeLine" scoped="" ref="0x2b94c1113ca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94c09481c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="wait4Controller" scoped="" ref="0x2b94c10b0bd8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94c09481c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="394:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeBar" scoped="" ref="0x2b94c1122790"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94c09481c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="285:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="clearScreenNB" scoped="" ref="0x2b94c111b420"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b94c09481c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc" safe="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc" safe="">
      <documentation loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimpleDrawC" loc="1:SimpleDrawC.nc">
      <module/>
    </component>
    <component qname="SimpleDrawAppC.Timer0" loc="44(SimpleDrawAppC.Timer0):/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="33:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94c09c1530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94c09c1888"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b94c0c8c068"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0SyncC" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0SyncP" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in SYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in SYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in SYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;--> CHANGED TO SYNC-Mode(CPL_CLK)&#9;hglanzer&#10;--> AS0=0 in ASSR&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94c09c1530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94c09c1888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94c09c1530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94c09c1888"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94c09c1530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94c09c1888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="GLCDC" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDC.nc">
      <configuration/>
    </component>
    <component qname="GLCDP" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDP.nc">
      <module/>
    </component>
    <component qname="TouchScreenC" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <configuration/>
    </component>
    <component qname="TouchScreenP" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <module/>
    </component>
    <component qname="TouchScreenC.AdcReadClientC" loc="21(TouchScreenC.AdcReadClientC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LCD128x64C" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <configuration/>
    </component>
    <component qname="LCD128x64P" loc="23:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b94c0a9fba0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b94c0aa9020" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b94c0aa9368" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b94c0aad610" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b94c0aad978" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b94c0aadce0" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b94c0aaa060" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b94c0b41020" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b94c0b41388" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b94c0b416f0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b94c0b41a20" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncC" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc" abstract="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b94c0c8c068" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b94c0c8c068"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b94c0c8c358" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncP" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b94c0c83748" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b94c0c83748"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b94c0c83a38" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b94c0c76c68" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b94c0c76c68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b94c0db4cd0" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b94c0db4cd0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b94c0db1020" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b94c0dee510" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b94c0dee510"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b94c0f7f1c8" loc="89:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b94c0f73dd8" loc="42:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b94c0f97c50" loc="52:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x2b94c10399d0" loc="23:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x2b94c10399d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b94c0a3c620" loc="58:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b94c0a3c620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c0a3c970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b94c0a3d220" loc="57:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b94c0a3d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b94c0a3d570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b94c0a3a380" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b94c0a3a380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c0a3a6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b94c0a3f620" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b94c0a3f620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c0a3f970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b94c0a42618" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b94c0a42618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b94c0a42968"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b94c0a42af0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b94c0a42c78"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b94c0a42e00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b94c0a3a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b94c0a4eca0" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b94c0a4eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c0a4d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b94c0a4e600" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b94c0a4e600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c0a4e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b94c0a4d398" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b94c0a4d398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c0a4d6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b94c0a54360" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b94c0a54360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c0a546b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b94c0a47b98" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b94c0a47b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c0a54020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b94c0a50b08" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b94c0a50b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c0a50e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b94c0a588d8" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b94c0a588d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a58c28"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a58db0"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a50020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a501a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a50330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a504b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a50640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a507c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b94c0a51698" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b94c0a51698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c0a519e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b94c0a99af0" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b94c0a99af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a985e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a98770"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a988f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a98a80"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a98c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a98d90"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a97020"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a971a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b94c0a7b658" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b94c0a7b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a7b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a7bb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a7bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a7be40"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a7a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a7a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a7a330"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a7a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b94c0a8c658" loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b94c0a8c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a8c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a8cb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a8ccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a8ce40"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a8b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a8b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a8b330"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a8b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b94c0a91348" loc="94:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b94c0a91348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a91698"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a91820"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a919a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a91b30"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a91cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a91e40"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a90020"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a901a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b94c0a67348" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b94c0a67348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a67698"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a67820"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a679a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a67b30"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a67cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a67e40"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a66020"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a661a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b94c0a93020" loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b94c0a93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a93370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a934f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a93680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a93808"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a93990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a93b18"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a93ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a93e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b94c0a65658" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b94c0a65658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a659a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a65b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a65cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a65e40"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a64020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a641a8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a64330"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a644b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b94c0a767e0" loc="66:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b94c0a767e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a76b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a76cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a76e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a75020"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a751a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a75330"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a754b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a75640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b94c0a86af0" loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b94c0a86af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a86e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a85020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a851a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a85330"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a854b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a85640"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a857c8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a85950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b94c0a89af0" loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b94c0a89af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a89e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a88020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a881a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a88330"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a884b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a88640"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a887c8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a88950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b94c0a5faf0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b94c0a5faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a5fe40"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a5e020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a5e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a5e330"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a5e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a5e640"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a5e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a5e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b94c0a70af0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b94c0a70af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a70e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a6f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a6f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a6f330"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a6f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a6f640"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a6f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a6f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b94c0a73c78" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b94c0a73c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a72020"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a721a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a72330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a724b8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a72640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a727c8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a72950"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a72ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b94c0a82020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b94c0a82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a82370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a824f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a82680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a82808"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a82990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a82b18"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a82ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a82e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b94c0a8e7e0" loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b94c0a8e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a8eb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a8ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a8ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a9a020"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a9a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a9a330"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a9a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a9a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b94c0a957e0" loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b94c0a957e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a95b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a95cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a95e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0aa2020"/>
        <function-ref name="get" scoped="" ref="0x2b94c0aa21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0aa2330"/>
        <function-ref name="set" scoped="" ref="0x2b94c0aa24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0aa2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b94c0a80348" loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b94c0a80348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a80698"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a80820"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a809a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a80b30"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a80cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a80e40"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a8d020"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a8d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b94c0a69020" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b94c0a69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a69370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a694f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a69680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a69808"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a69990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a69b18"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a69ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a69e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b94c0a6c1a0" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b94c0a6c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a6c4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a6c678"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a6c800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a6c988"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a6cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a6cc98"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a6ce20"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b94c0a974d0" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b94c0a974d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a97820"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a979a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a97b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a97cb8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a97e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a96020"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a961a8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a96330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b94c0a784d0" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b94c0a784d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a78820"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a789a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a78b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a78cb8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a78e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a77020"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a771a8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a77330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b94c0a7a7e0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b94c0a7a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a7ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a7acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a7ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a79020"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a791a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a79330"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a794b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a79640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b94c0a8b7e0" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b94c0a8b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a8bb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a8bcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a8be40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a8a020"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a8a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a8a330"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a8a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a8a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b94c0a904d0" loc="95:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b94c0a904d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a90820"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a909a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a90b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a90cb8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a90e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a8f020"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a8f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a8f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b94c0a664d0" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b94c0a664d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a66820"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a669a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a66b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a66cb8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a66e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a65020"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a651a8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a65330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b94c0a647e0" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b94c0a647e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a64b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a64cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a64e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a71020"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a711a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a71330"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a714b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a71640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b94c0a75968" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b94c0a75968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a75cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a75e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a74020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a741a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a74330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a744b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a74640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a747c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b94c0a85c78" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b94c0a85c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a84020"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a841a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a84330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a844b8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a84640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a847c8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a84950"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a84ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b94c0a88c78" loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b94c0a88c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a87020"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a871a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a87330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a874b8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a87640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a877c8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a87950"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a87ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b94c0a5ec78" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b94c0a5ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a5d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a5d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a5d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a5d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a5d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a5d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a5d950"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a5dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b94c0a6fc78" loc="59:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b94c0a6fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a6e0f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a6e278"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a6e400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a6e588"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a6e710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a6e898"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a6ea20"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a6eba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b94c0a72e00" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b94c0a72e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a7f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a7f330"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a7f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a7f640"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a7f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a7f950"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a7fad8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a7fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b94c0a9a968" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b94c0a9a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a9acb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a9ae40"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a99020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a991a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a99330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a994b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a99640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a997c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b94c0a7c1a0" loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b94c0a7c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a7c6f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a7c878"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a7ca00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a7cb88"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a7cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a7b020"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a7b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a7b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b94c0a8d4d0" loc="84:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b94c0a8d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a8d820"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a8d9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a8db30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a8dcb8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a8de40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a8c020"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a8c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a8c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b94c0a921a0" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b94c0a921a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a924f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a92678"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a92800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a92988"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a92b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a92c98"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a92e20"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a91020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b94c0aa2968" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b94c0aa2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0aa2cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0aa2e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0aa1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0aa11a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0aa1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0aa14b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0aa1640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0aa17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b94c0a681a0" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b94c0a681a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a684f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a68678"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a68800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a68988"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a68b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a68c98"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a68e20"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b94c0a6b348" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b94c0a6b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a6b698"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a6b820"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a6b9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a6bb30"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a6bcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a6be40"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a78020"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a781a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b94c0a87e00" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b94c0a87e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a941a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a94330"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a944b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a94640"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a947c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a94950"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a94ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a94c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b94c0a77658" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b94c0a77658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a779a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a77b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a77cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a77e40"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a76020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a761a8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a76330"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a764b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b94c0a79968" loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b94c0a79968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a79cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a79e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a86020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a861a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a86330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a864b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a86640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a867c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b94c0a8a968" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b94c0a8a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a8acb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a8ae40"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a89020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a891a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a89330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a894b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a89640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a897c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b94c0a8f658" loc="96:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b94c0a8f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a8f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a8fb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a8fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a8fe40"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a8e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a8e1a8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a8e330"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a8e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b94c0a52878" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b94c0a52878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a52bc8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a52d50"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a5f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a5f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a5f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a5f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a5f640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a5f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b94c0a71968" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b94c0a71968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a71cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a71e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a70020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a701a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a70330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a704b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a70640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a707c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b94c0a74af0" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b94c0a74af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a74e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a73020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a731a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a73330"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a734b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a73640"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a737c8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a73950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b94c0a84e00" loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b94c0a84e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a831a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a83330"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a834b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a83640"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a837c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a83950"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a83ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a83c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b94c0a96658" loc="102:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b94c0a96658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a969a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a96b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a96cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a96e40"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a95020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a951a8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a95330"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a954b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b94c0a811a0" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b94c0a811a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a814f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a81678"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a81800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a81988"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a81b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a81c98"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a81e20"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b94c0a7d020" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b94c0a7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a7d370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a7d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a7d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a7d808"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a7d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a7db18"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a7dca0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a7de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b94c0a5de00" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b94c0a5de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a6a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a6a330"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a6a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a6a640"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a6a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a6a950"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a6aad8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a6ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b94c0a6d020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b94c0a6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0a6d370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0a6d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0a6d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0a6d808"/>
        <function-ref name="get" scoped="" ref="0x2b94c0a6d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0a6db18"/>
        <function-ref name="set" scoped="" ref="0x2b94c0a6dca0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0a6de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b94c0ae4120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b94c0ae4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0ae4470"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0ae45f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0ae4780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0ae4908"/>
        <function-ref name="get" scoped="" ref="0x2b94c0ae4a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0ae4c18"/>
        <function-ref name="set" scoped="" ref="0x2b94c0ae4da0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0ae3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b94c0af15b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b94c0af15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0af1908"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0af1a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0af1c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0af1da0"/>
        <function-ref name="get" scoped="" ref="0x2b94c0af0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0af01a8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0af0330"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0af04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b94c0ae7dc0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b94c0ae7dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0ae6170"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0ae62f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0ae6480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0ae6608"/>
        <function-ref name="get" scoped="" ref="0x2b94c0ae6790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0ae6918"/>
        <function-ref name="set" scoped="" ref="0x2b94c0ae6aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0ae6c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b94c0ae32a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b94c0ae32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0ae35f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0ae3780"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0ae3908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0ae3a90"/>
        <function-ref name="get" scoped="" ref="0x2b94c0ae3c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0ae3da0"/>
        <function-ref name="set" scoped="" ref="0x2b94c0ae2020"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0ae21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b94c0af0740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b94c0af0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0af0a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0af0c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0af0da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0aef020"/>
        <function-ref name="get" scoped="" ref="0x2b94c0aef1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0aef330"/>
        <function-ref name="set" scoped="" ref="0x2b94c0aef4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0aef640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b94c0ae5020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b94c0ae5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0ae5370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0ae54f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0ae5680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0ae5808"/>
        <function-ref name="get" scoped="" ref="0x2b94c0ae5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0ae5b18"/>
        <function-ref name="set" scoped="" ref="0x2b94c0ae5ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0ae5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b94c0ae2430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b94c0ae2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0ae2780"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0ae2908"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0ae2a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0ae2c18"/>
        <function-ref name="get" scoped="" ref="0x2b94c0ae2da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0af1020"/>
        <function-ref name="set" scoped="" ref="0x2b94c0af11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0af1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b94c0aef8c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b94c0aef8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0aefc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0aefda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0aee020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0aee1a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0aee330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0aee4b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0aee640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0aee7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c1195970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c1195970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c1195cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1195e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1194020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c11941a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c1194330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c11944b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c1194640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c11947c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c1192970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c1192970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c1192cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1192e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c11bc020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c11bc1a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c11bc330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c11bc4b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c11bc640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c11bc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c11ba970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c11ba970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c11bacc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c11bae48"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c11b9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c11b91a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c11b9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c11b94b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c11b9640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c11b97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c11b7970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c11b7970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c11b7cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c11b7e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c11b6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c11b61a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c11b6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c11b64b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c11b6640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c11b67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c11b4970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c11b4970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c11b4cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c11b4e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c11b3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c11b31a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c11b3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c11b34b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c11b3640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c11b37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c11b1970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c11b1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c11b1cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c11b1e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c11b0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c11b01a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c11b0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c11b04b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c11b0640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c11b07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c11ae970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c11ae970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c11aecc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c11aee48"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c11ac020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c11ac1a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c11ac330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c11ac4b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c11ac640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c11ac7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c11aa970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c11aa970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c11aacc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c11aae48"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c11a9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c11a91a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c11a9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c11a94b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c11a9640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c11a97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b94c0af6bd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b94c0af6bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0af5020"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0af51a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0af5330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0af54b8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0af5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0af57c8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0af5950"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0af5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b94c0af2020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b94c0af2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0af2370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0af24f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0af2680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0af2808"/>
        <function-ref name="get" scoped="" ref="0x2b94c0af2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0af2b18"/>
        <function-ref name="set" scoped="" ref="0x2b94c0af2ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0af2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b94c0af8930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b94c0af8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0af8c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0af8e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0af7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0af71a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0af7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0af74b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0af7640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0af77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b94c0af5d60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b94c0af5d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0af40d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0af4260"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0af43e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0af4570"/>
        <function-ref name="get" scoped="" ref="0x2b94c0af46f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0af4880"/>
        <function-ref name="set" scoped="" ref="0x2b94c0af4a08"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0af4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b94c0b01120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b94c0b01120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b01470"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b015f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b01780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b01908"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b01a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b01c18"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b01da0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b00020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b94c0af7a50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b94c0af7a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0af7da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0af6020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0af61a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0af6330"/>
        <function-ref name="get" scoped="" ref="0x2b94c0af64b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0af6640"/>
        <function-ref name="set" scoped="" ref="0x2b94c0af67c8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0af6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b94c0af4e18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b94c0af4e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0af31a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0af3330"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0af34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0af3640"/>
        <function-ref name="get" scoped="" ref="0x2b94c0af37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0af3950"/>
        <function-ref name="set" scoped="" ref="0x2b94c0af3ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0af3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b94c0b002a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b94c0b002a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b005f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b00780"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b00908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b00a90"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b00c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b00da0"/>
        <function-ref name="set" scoped="" ref="0x2b94c0aff020"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0aff1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c12096a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c12096a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c12099f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1209b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1209d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c1208020"/>
        <function-ref name="get" scoped="" ref="0x2b94c12081a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c1208330"/>
        <function-ref name="set" scoped="" ref="0x2b94c12084b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c1208640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c1206710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c1206710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c1206a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1206be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1206d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c1205020"/>
        <function-ref name="get" scoped="" ref="0x2b94c12051a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c1205330"/>
        <function-ref name="set" scoped="" ref="0x2b94c12054b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c1205640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c1203710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c1203710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c1203a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1203be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1203d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c1202020"/>
        <function-ref name="get" scoped="" ref="0x2b94c12021a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c1202330"/>
        <function-ref name="set" scoped="" ref="0x2b94c12024b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c1202640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c1200710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c1200710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c1200a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1200be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1200d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c11ff020"/>
        <function-ref name="get" scoped="" ref="0x2b94c11ff1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c11ff330"/>
        <function-ref name="set" scoped="" ref="0x2b94c11ff4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c11ff640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c1229710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c1229710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c1229a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1229be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1229d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c1228020"/>
        <function-ref name="get" scoped="" ref="0x2b94c12281a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c1228330"/>
        <function-ref name="set" scoped="" ref="0x2b94c12284b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c1228640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c1226710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c1226710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c1226a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1226be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1226d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c1225020"/>
        <function-ref name="get" scoped="" ref="0x2b94c12251a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c1225330"/>
        <function-ref name="set" scoped="" ref="0x2b94c12254b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c1225640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c1223710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c1223710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c1223a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1223be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1223d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c1221020"/>
        <function-ref name="get" scoped="" ref="0x2b94c12211a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c1221330"/>
        <function-ref name="set" scoped="" ref="0x2b94c12214b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c1221640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c121f710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c121f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c121fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c121fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c121fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c121e020"/>
        <function-ref name="get" scoped="" ref="0x2b94c121e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c121e330"/>
        <function-ref name="set" scoped="" ref="0x2b94c121e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c121e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b94c0b07740" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b94c0b07740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b07a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b07c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b07da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b06020"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b061a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b06330"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b064b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b06640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b94c0b04bd8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b94c0b04bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b02020"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b021a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b02330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b024b8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b02640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b027c8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b02950"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b02ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b94c0b09500" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b94c0b09500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b09850"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b099d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b09b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b09ce8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b09e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b08020"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b081a8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b08330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b94c0b068c8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b94c0b068c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b06c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b06da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b05020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b051a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b05330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b054b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b05640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b057c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b94c0b02d60" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b94c0b02d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b110d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b11260"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b113e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b11570"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b116f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b11880"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b11a08"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b11b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b94c0b085b8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b94c0b085b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b08908"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b08a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b08c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b08da0"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b07020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b071a8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b07330"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b074b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b94c0b05a50" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b94c0b05a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b05da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b04020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b041a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b04330"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b044b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b04640"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b047c8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b04950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b94c0b11e18" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b94c0b11e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b101a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b10330"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b104b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b10640"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b107c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b10950"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b10ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b10c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c12856a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c12856a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c12859f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1285b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1285d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c1284020"/>
        <function-ref name="get" scoped="" ref="0x2b94c12841a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c1284330"/>
        <function-ref name="set" scoped="" ref="0x2b94c12844b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c1284640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c1282710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c1282710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c1282a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1282be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1282d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c1281020"/>
        <function-ref name="get" scoped="" ref="0x2b94c12811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c1281330"/>
        <function-ref name="set" scoped="" ref="0x2b94c12814b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c1281640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c127f710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c127f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c127fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c127fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c127fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c127e020"/>
        <function-ref name="get" scoped="" ref="0x2b94c127e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c127e330"/>
        <function-ref name="set" scoped="" ref="0x2b94c127e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c127e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c127c710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c127c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c127ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c127cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c127cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c127b020"/>
        <function-ref name="get" scoped="" ref="0x2b94c127b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c127b330"/>
        <function-ref name="set" scoped="" ref="0x2b94c127b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c127b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c1279710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c1279710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c1279a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1279be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1279d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c1278020"/>
        <function-ref name="get" scoped="" ref="0x2b94c12781a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c1278330"/>
        <function-ref name="set" scoped="" ref="0x2b94c12784b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c1278640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c1276710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c1276710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c1276a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1276be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1276d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c1275020"/>
        <function-ref name="get" scoped="" ref="0x2b94c12751a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c1275330"/>
        <function-ref name="set" scoped="" ref="0x2b94c12754b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c1275640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c1273710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c1273710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c1273a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1273be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1273d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c1272020"/>
        <function-ref name="get" scoped="" ref="0x2b94c12721a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c1272330"/>
        <function-ref name="set" scoped="" ref="0x2b94c12724b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c1272640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c1270710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c1270710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c1270a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1270be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1270d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c129c020"/>
        <function-ref name="get" scoped="" ref="0x2b94c129c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c129c330"/>
        <function-ref name="set" scoped="" ref="0x2b94c129c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c129c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b94c0b18120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b94c0b18120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b18470"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b185f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b18780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b18908"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b18a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b18c18"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b18da0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b16020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b94c0b145b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b94c0b145b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b14908"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b14a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b14c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b14da0"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b13020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b131a8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b13330"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b134b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b94c0b0be40" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b94c0b0be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b0a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b0a348"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b0a4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b0a658"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b0a7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b0a968"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b0aaf0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b0ac78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b94c0b162a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b94c0b162a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b165f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b16780"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b16908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b16a90"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b16c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b16da0"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b15020"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b151a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b94c0b13740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b94c0b13740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b13a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b13c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b13da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b12020"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b121a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b12330"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b124b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b12640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b94c0b19020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b94c0b19020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b19370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b194f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b19680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b19808"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b19990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b19b18"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b19ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b19e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b94c0b15430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b94c0b15430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b15780"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b15908"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b15a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b15c18"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b15da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b14020"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b141a8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b14330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b94c0b128c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b94c0b128c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b12c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b12da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b21020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b211a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b21330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b214b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b21640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b217c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c12d96a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c12d96a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c12d99f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c12d9b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c12d9d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c12d8020"/>
        <function-ref name="get" scoped="" ref="0x2b94c12d81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c12d8330"/>
        <function-ref name="set" scoped="" ref="0x2b94c12d84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c12d8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c12d6710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c12d6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c12d6a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c12d6be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c12d6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c12d5020"/>
        <function-ref name="get" scoped="" ref="0x2b94c12d51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c12d5330"/>
        <function-ref name="set" scoped="" ref="0x2b94c12d54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c12d5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c12d3710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c12d3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c12d3a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c12d3be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c12d3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c12d2020"/>
        <function-ref name="get" scoped="" ref="0x2b94c12d21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c12d2330"/>
        <function-ref name="set" scoped="" ref="0x2b94c12d24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c12d2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c12d0710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c12d0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c12d0a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c12d0be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c12d0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c12cf020"/>
        <function-ref name="get" scoped="" ref="0x2b94c12cf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c12cf330"/>
        <function-ref name="set" scoped="" ref="0x2b94c12cf4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c12cf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c12cd710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c12cd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c12cda60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c12cdbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c12cdd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c12fc020"/>
        <function-ref name="get" scoped="" ref="0x2b94c12fc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c12fc330"/>
        <function-ref name="set" scoped="" ref="0x2b94c12fc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c12fc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c12fa710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c12fa710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c12faa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c12fabe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c12fad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c12f9020"/>
        <function-ref name="get" scoped="" ref="0x2b94c12f91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c12f9330"/>
        <function-ref name="set" scoped="" ref="0x2b94c12f94b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c12f9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c12f7710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c12f7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c12f7a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c12f7be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c12f7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c12f6020"/>
        <function-ref name="get" scoped="" ref="0x2b94c12f61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c12f6330"/>
        <function-ref name="set" scoped="" ref="0x2b94c12f64b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c12f6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c12f4710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c12f4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c12f4a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c12f4be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c12f4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c12f2020"/>
        <function-ref name="get" scoped="" ref="0x2b94c12f21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c12f2330"/>
        <function-ref name="set" scoped="" ref="0x2b94c12f24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c12f2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b94c0b29bd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b94c0b29bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b28020"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b281a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b28330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b284b8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b28640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b287c8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b28950"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b28ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b94c0b25020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b94c0b25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b25370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b254f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b25680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b25808"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b25990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b25b18"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b25ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b25e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b94c0b1b930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b94c0b1b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b1bc80"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b1be08"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b1a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b1a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b1a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b1a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b1a640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b1a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b94c0b28d60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b94c0b28d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b270d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b27260"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b273e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b27570"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b276f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b27880"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b27a08"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b27b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b94c0b24120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b94c0b24120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b24470"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b245f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b24780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b24908"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b24a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b24c18"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b24da0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b23020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b94c0b1aa50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b94c0b1aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b1ada0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b29020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b291a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b29330"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b294b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b29640"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b297c8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b29950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b94c0b27e18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b94c0b27e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b261a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b26330"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b264b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b26640"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b267c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b26950"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b26ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b26c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b94c0b232a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b94c0b232a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b235f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b23780"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b23908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b23a90"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b23c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b23da0"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b22020"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b221a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c13336a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c13336a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c13339f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1333b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1333d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c1332020"/>
        <function-ref name="get" scoped="" ref="0x2b94c13321a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c1332330"/>
        <function-ref name="set" scoped="" ref="0x2b94c13324b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c1332640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c1330710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c1330710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c1330a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1330be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1330d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c132f020"/>
        <function-ref name="get" scoped="" ref="0x2b94c132f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c132f330"/>
        <function-ref name="set" scoped="" ref="0x2b94c132f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c132f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c132d710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c132d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c132da60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c132dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c132dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c135e020"/>
        <function-ref name="get" scoped="" ref="0x2b94c135e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c135e330"/>
        <function-ref name="set" scoped="" ref="0x2b94c135e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c135e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c135c710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c135c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c135ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c135cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c135cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c135b020"/>
        <function-ref name="get" scoped="" ref="0x2b94c135b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c135b330"/>
        <function-ref name="set" scoped="" ref="0x2b94c135b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c135b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c1359710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c1359710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c1359a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1359be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1359d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c1358020"/>
        <function-ref name="get" scoped="" ref="0x2b94c13581a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c1358330"/>
        <function-ref name="set" scoped="" ref="0x2b94c13584b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c1358640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c1356710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c1356710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c1356a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1356be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1356d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c1355020"/>
        <function-ref name="get" scoped="" ref="0x2b94c13551a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c1355330"/>
        <function-ref name="set" scoped="" ref="0x2b94c13554b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c1355640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c1353710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c1353710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c1353a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1353be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1353d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c1352020"/>
        <function-ref name="get" scoped="" ref="0x2b94c13521a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c1352330"/>
        <function-ref name="set" scoped="" ref="0x2b94c13524b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c1352640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c1350710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c1350710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c1350a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1350be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1350d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c134f020"/>
        <function-ref name="get" scoped="" ref="0x2b94c134f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c134f330"/>
        <function-ref name="set" scoped="" ref="0x2b94c134f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c134f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b94c0b2b430" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b94c0b2b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b2b780"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b2b908"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b2ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b2bc18"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b2bda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b2a020"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b2a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b2a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b94c0b3a8c8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b94c0b3a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b3ac18"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b3ada0"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b39020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b391a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b39330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b394b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b39640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b397c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b94c0b2d1e8" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b94c0b2d1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b2d538"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b2d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b2d848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b2d9d0"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b2db58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b2dce0"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b2de68"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b94c0b2a5b8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b94c0b2a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b2a908"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b2aa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b2ac18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b2ada0"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b3b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b3b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b3b330"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b3b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b94c0b39a50" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b94c0b39a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b39da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b38020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b381a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b38330"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b384b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b38640"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b387c8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b38950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b94c0b2c2a8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b94c0b2c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b2c5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b2c780"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b2c908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b2ca90"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b2cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b2cda0"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b2b020"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b2b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b94c0b3b740" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b94c0b3b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b3ba90"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b3bc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b3bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b3a020"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b3a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b3a330"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b3a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b3a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b94c0b38bd8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b94c0b38bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b36020"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b361a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b36330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b364b8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b36640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b367c8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b36950"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b36ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c13946a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c13946a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c13949f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1394b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1394d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c1393020"/>
        <function-ref name="get" scoped="" ref="0x2b94c13931a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c1393330"/>
        <function-ref name="set" scoped="" ref="0x2b94c13934b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c1393640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c1391710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c1391710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c1391a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c1391be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c1391d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c13c3020"/>
        <function-ref name="get" scoped="" ref="0x2b94c13c31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c13c3330"/>
        <function-ref name="set" scoped="" ref="0x2b94c13c34b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c13c3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c13c1710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c13c1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c13c1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c13c1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c13c1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c13c0020"/>
        <function-ref name="get" scoped="" ref="0x2b94c13c01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c13c0330"/>
        <function-ref name="set" scoped="" ref="0x2b94c13c04b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c13c0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c13be710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c13be710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c13bea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c13bebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c13bed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c13bd020"/>
        <function-ref name="get" scoped="" ref="0x2b94c13bd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c13bd330"/>
        <function-ref name="set" scoped="" ref="0x2b94c13bd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c13bd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c13bb710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c13bb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c13bba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c13bbbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c13bbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c13ba020"/>
        <function-ref name="get" scoped="" ref="0x2b94c13ba1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c13ba330"/>
        <function-ref name="set" scoped="" ref="0x2b94c13ba4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c13ba640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c13b8710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c13b8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c13b8a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c13b8be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c13b8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c13b7020"/>
        <function-ref name="get" scoped="" ref="0x2b94c13b71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c13b7330"/>
        <function-ref name="set" scoped="" ref="0x2b94c13b74b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c13b7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c13b5710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c13b5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c13b5a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c13b5be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c13b5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c13b4020"/>
        <function-ref name="get" scoped="" ref="0x2b94c13b41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c13b4330"/>
        <function-ref name="set" scoped="" ref="0x2b94c13b44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c13b4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c13b2710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c13b2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c13b2a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c13b2be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c13b2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c13b1020"/>
        <function-ref name="get" scoped="" ref="0x2b94c13b11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c13b1330"/>
        <function-ref name="set" scoped="" ref="0x2b94c13b14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c13b1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c0b42ac0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c0b42ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b42e10"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b50020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b501a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b50330"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b504b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b50640"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b507c8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b50950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c0b5fdb8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c0b5fdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b5e170"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b5e2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b5e480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b5e608"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b5e790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b5e918"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b5eaa0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b5ec28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c0b593e0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c0b593e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b59730"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b598b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b59a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b59bc8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b59d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b58020"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b581a8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b58330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c0b667e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c0b667e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b66b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b66cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b66e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b65020"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b651a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b65330"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b654b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b65640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c0b62c38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c0b62c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b61020"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b611a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b61330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b614b8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b61640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b617c8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b61950"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b61ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c0b6e020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c0b6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b6e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b6e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b6e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b6e808"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b6e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b6eb18"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b6eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b6ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c0b69480" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c0b69480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b697d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b69958"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b69ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b69c68"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b69df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b7a020"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b7a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b7a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c0b777e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c0b777e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b77b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b77cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b77e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b76020"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b761a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b76330"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b764b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b76640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c0b72970" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c0b72970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b72cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b72e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b83020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b831a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b83330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b834b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b83640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b837c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c0b7fab0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c0b7fab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b7fe00"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b7e020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b7e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b7e330"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b7e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b7e640"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b7e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b7e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c0b7bc38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c0b7bc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b8c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b8c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b8c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b8c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b8c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b8c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b8c950"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b8cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c0b87020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c0b87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b87370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b874f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b87680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b87808"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b87990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b87b18"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b87ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b87e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b94c0b94180" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b94c0b94180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0b944d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0b94658"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0b947e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0b94968"/>
        <function-ref name="get" scoped="" ref="0x2b94c0b94af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0b94c78"/>
        <function-ref name="set" scoped="" ref="0x2b94c0b94e00"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0b93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b94c0bcf2c0" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b94c0bcf2c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b94c0940128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b94c0940128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c0bcf610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b94c0bcf8f0" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b94c0bcf8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b94c0bcfc40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b94c0bcfdc8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b94c0bce020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b94c0bce1a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b94c0bce330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b94c0bec898" loc="60:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b94c0bec898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c0becbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b94c0bed198" loc="57:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b94c0bed198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b94c0bed4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b94c0bec1d0" loc="59:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b94c0bec1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c0bec520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b94c0bed7d0" loc="58:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b94c0bed7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c0bedb20"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b94c0bedca8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b94c0bede30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b94c09481c8" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b94c09481c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b94c0948518"/>
        <function-ref name="runTask" scoped="" ref="0x2b94c09486a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b94c0945600" loc="47:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b94c0945600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c0945950"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b94c0945ad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b94c0945c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b94c09fb2b0" loc="56:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b94c09fb2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b94c09fb600"/>
        <function-ref name="runTask" scoped="" ref="0x2b94c09fb788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b94c0a04758" loc="57:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b94c0a04758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b94c0a04aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b94c09fc448" loc="55:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b94c09fc448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c09fc798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b94c09fc920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b94c09fcaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b94c0a212b0" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b94c0a212b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b94c0a21600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b94c0a1b660" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b94c0a1b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b94c0a1b9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b94c0a24a80" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b94c0a24a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b94c0a24dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b94c0c09c08" loc="11:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b94c0c09c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94c09c1530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94c09c1888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b94c0c08e78"/>
        <function-ref name="fired" scoped="" ref="0x2b94c0bfe5a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b94c0c082d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b94c0bfee48"/>
        <function-ref name="getdt" scoped="" ref="0x2b94c0c07748"/>
        <function-ref name="gett0" scoped="" ref="0x2b94c0c072f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b94c0bfe9f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b94c0bff7e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b94c0c088a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b94c0bffc88"/>
        <function-ref name="stop" scoped="" ref="0x2b94c0bfe158"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button2" ref="0x2b94c0bf36a0" loc="5:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button2" scoped="" ref="0x2b94c0bf36a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0bf39f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0bf3b78"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0bf3d00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0bf2020"/>
        <function-ref name="get" scoped="" ref="0x2b94c0bf21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0bf2330"/>
        <function-ref name="set" scoped="" ref="0x2b94c0bf24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0bf2640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b94c0a40a20" loc="2:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b94c0a40a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b94c0a40d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button5" ref="0x2b94c0bef020" loc="8:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button5" scoped="" ref="0x2b94c0bef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0bef370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0bef4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0bef680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0bef808"/>
        <function-ref name="get" scoped="" ref="0x2b94c0bef990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0befb18"/>
        <function-ref name="set" scoped="" ref="0x2b94c0befca0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0befe28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button7" ref="0x2b94c0c01390" loc="10:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button7" scoped="" ref="0x2b94c0c01390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0c016e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0c01868"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0c019f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0c01b78"/>
        <function-ref name="get" scoped="" ref="0x2b94c0c01d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0c00020"/>
        <function-ref name="set" scoped="" ref="0x2b94c0c001a8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0c00330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button0" ref="0x2b94c0bf5108" loc="3:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button0" scoped="" ref="0x2b94c0bf5108"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0bf5458"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0bf55e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0bf5768"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0bf58f0"/>
        <function-ref name="get" scoped="" ref="0x2b94c0bf5a78"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0bf5c00"/>
        <function-ref name="set" scoped="" ref="0x2b94c0bf5d88"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0bf4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button3" ref="0x2b94c0bf29b0" loc="6:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button3" scoped="" ref="0x2b94c0bf29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0bf2d00"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0bf1020"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0bf11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0bf1330"/>
        <function-ref name="get" scoped="" ref="0x2b94c0bf14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0bf1640"/>
        <function-ref name="set" scoped="" ref="0x2b94c0bf17c8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0bf1950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GLCD" ref="0x2b94c0c29d90" loc="12:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GLCD" scoped="" ref="0x2b94c0c29d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GLCD"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b94c0c05170"/>
        <function-ref name="tsPressed" scoped="" ref="0x2b94c0c052f8"/>
        <function-ref name="initDone" scoped="" ref="0x2b94c0c05480"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b94c0c05608"/>
        <function-ref name="calibrated" scoped="" ref="0x2b94c0c05790"/>
        <function-ref name="isPressed" scoped="" ref="0x2b94c0c05918"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b94c0c05aa0"/>
        <function-ref name="calibrateTouchScreen" scoped="" ref="0x2b94c0c05c28"/>
        <function-ref name="barWritten" scoped="" ref="0x2b94c0c05db0"/>
        <function-ref name="getXY" scoped="" ref="0x2b94c0c04020"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b94c0c041a8"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b94c0c04330"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b94c0c044b8"/>
        <function-ref name="copyByte" scoped="" ref="0x2b94c0c04740"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b94c0c048c8"/>
        <function-ref name="xyReady" scoped="" ref="0x2b94c0c04a50"/>
        <function-ref name="writeByte" scoped="" ref="0x2b94c0c04bd8"/>
        <function-ref name="setPixel" scoped="" ref="0x2b94c0c04d60"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b94c0c28020"/>
        <function-ref name="getCalibration" scoped="" ref="0x2b94c0c281a8"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b94c0c28330"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b94c0c284b8"/>
        <function-ref name="writePixel" scoped="" ref="0x2b94c0c28640"/>
        <function-ref name="initLCD" scoped="" ref="0x2b94c0c287c8"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b94c0c28950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button1" ref="0x2b94c0bf4390" loc="4:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button1" scoped="" ref="0x2b94c0bf4390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0bf46e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0bf4868"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0bf49f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0bf4b78"/>
        <function-ref name="get" scoped="" ref="0x2b94c0bf4d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0bf3020"/>
        <function-ref name="set" scoped="" ref="0x2b94c0bf31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0bf3330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button6" ref="0x2b94c0bee1c8" loc="9:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button6" scoped="" ref="0x2b94c0bee1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0bee518"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0bee6a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0bee828"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0bee9b0"/>
        <function-ref name="get" scoped="" ref="0x2b94c0beeb38"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0beecc0"/>
        <function-ref name="set" scoped="" ref="0x2b94c0beee48"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0c01020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button4" ref="0x2b94c0bf1cc0" loc="7:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button4" scoped="" ref="0x2b94c0bf1cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0bf00a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0bf0228"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0bf03b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0bf0538"/>
        <function-ref name="get" scoped="" ref="0x2b94c0bf06c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0bf0848"/>
        <function-ref name="set" scoped="" ref="0x2b94c0bf09d0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0bf0b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b94c0c50420" loc="45:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="SimpleDrawAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b94c0c50420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94c09c1530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94c09c1888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b94c0e146c8"/>
        <function-ref name="fired" scoped="" ref="0x2b94c0e16db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b94c0e15ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b94c0e15688"/>
        <function-ref name="getdt" scoped="" ref="0x2b94c0e12020"/>
        <function-ref name="gett0" scoped="" ref="0x2b94c0e14b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b94c0e15238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b94c0e16020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b94c0e140f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b94c0e164c0"/>
        <function-ref name="stop" scoped="" ref="0x2b94c0e16960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b94c0c5d020" loc="49:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b94c0c5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94c09c1530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94c09c1888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b94c0c592b8"/>
        <function-ref name="fired" scoped="" ref="0x2b94c0c5c978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b94c0c5b6c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b94c0c5b278"/>
        <function-ref name="getdt" scoped="" ref="0x2b94c0c59b58"/>
        <function-ref name="gett0" scoped="" ref="0x2b94c0c59708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b94c0c5cdc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b94c0c5db68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b94c0c5bc98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b94c0c5c088"/>
        <function-ref name="stop" scoped="" ref="0x2b94c0c5c528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b94c0c6b6a8" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b94c0c6b6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94c09c1530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94c09c1888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b94c0c67a18"/>
        <function-ref name="fired" scoped="" ref="0x2b94c0c68158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b94c0c68e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b94c0c689f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b94c0c662e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b94c0c67e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b94c0c685a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b94c0c6a370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b94c0c67448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b94c0c6a810"/>
        <function-ref name="stop" scoped="" ref="0x2b94c0c6acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b94c0c62d68" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b94c0c62d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94c09c1530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94c09c1888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b94c0c64928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b94c0c58968" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b94c0c58968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c0c58cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b94c0c7e150" loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b94c0c7e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94c09c1530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94c09c1888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b94c0c7d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b94c0c7d930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b94c0c7d4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b94c0c7ddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b94c0c75408" loc="35:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b94c0c75408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c0c75758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b94c0c73020" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b94c0c73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94c09c1530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94c09c1888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b94c0c81690"/>
        <function-ref name="fired" scoped="" ref="0x2b94c0c726f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b94c0c81088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b94c0c72b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b94c0c81b18"/>
        <function-ref name="start" scoped="" ref="0x2b94c0c73d70"/>
        <function-ref name="stop" scoped="" ref="0x2b94c0c72270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b94c0d69938" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b94c0d69938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94c09c1530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94c09c1888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b94c0d7f020"/>
        <function-ref name="fired" scoped="" ref="0x2b94c0d80088"/>
        <function-ref name="startAt" scoped="" ref="0x2b94c0d80998"/>
        <function-ref name="isRunning" scoped="" ref="0x2b94c0d80510"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b94c0d7f4a8"/>
        <function-ref name="start" scoped="" ref="0x2b94c0d686b0"/>
        <function-ref name="stop" scoped="" ref="0x2b94c0d68b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b94c0d69190" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b94c0d69190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b94c0941d88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b94c0941d88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c0d694e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b94c0d7fa90" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b94c0d7fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94c09c1530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94c09c1888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b94c0d7e828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b94c0d7d190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b94c0d7ecb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b94c0d7d618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b94c1497e70" loc="38:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b94c1497e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b94c14961e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b94c1496370"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b94c14964f8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b94c1496680"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b94c1496808"/>
        <function-ref name="setControl" scoped="" ref="0x2b94c1496990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b94c14a2be0" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b94c14a2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94c09c1530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94c09c1888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b94c149f270"/>
        <function-ref name="fired" scoped="" ref="0x2b94c14a0310"/>
        <function-ref name="startAt" scoped="" ref="0x2b94c14a0c20"/>
        <function-ref name="isRunning" scoped="" ref="0x2b94c14a0798"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b94c149f6f8"/>
        <function-ref name="start" scoped="" ref="0x2b94c14a1970"/>
        <function-ref name="stop" scoped="" ref="0x2b94c14a1e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b94c14a2438" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b94c14a2438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c14a2788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b94c149fce0" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b94c149fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94c09c1530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94c09c1888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b94c149dac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b94c149c4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b94c149c020"/>
        <function-ref name="overflow" scoped="" ref="0x2b94c149c930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x2b94c1492db0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b94c1492db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b94c1491918"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b94c14912f8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b94c1491480"/>
        <function-ref name="countBusy" scoped="" ref="0x2b94c1491608"/>
        <function-ref name="getAssr" scoped="" ref="0x2b94c1491790"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b94c1491170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b94c1496d20" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b94c1496d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b94c1492510"/>
        <function-ref name="fired" scoped="" ref="0x2b94c14942b0"/>
        <function-ref name="get" scoped="" ref="0x2b94c14958f0"/>
        <function-ref name="reset" scoped="" ref="0x2b94c1494738"/>
        <function-ref name="isOn" scoped="" ref="0x2b94c1492998"/>
        <function-ref name="set" scoped="" ref="0x2b94c1495d78"/>
        <function-ref name="start" scoped="" ref="0x2b94c1494bc0"/>
        <function-ref name="stop" scoped="" ref="0x2b94c1492088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b94c149b020" loc="37:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b94c149b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b94c14970f8"/>
        <function-ref name="test" scoped="" ref="0x2b94c14987a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c149bba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b94c1497580"/>
        <function-ref name="getScale" scoped="" ref="0x2b94c1497a58"/>
        <function-ref name="reset" scoped="" ref="0x2b94c149a9e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b94c149a560"/>
        <function-ref name="isOn" scoped="" ref="0x2b94c1498c30"/>
        <function-ref name="set" scoped="" ref="0x2b94c149a088"/>
        <function-ref name="start" scoped="" ref="0x2b94c149ae70"/>
        <function-ref name="stop" scoped="" ref="0x2b94c1498320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b94c0cf6020" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b94c0cf6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b94c0cf6370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b94c0cf64f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b94c0cf6680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b94c0cf6808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b94c0cf6990"/>
        <function-ref name="setControl" scoped="" ref="0x2b94c0cf6b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b94c0d09218" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b94c0d09218"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b94c0d09d10"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b94c0d096f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b94c0d09878"/>
        <function-ref name="countBusy" scoped="" ref="0x2b94c0d09a00"/>
        <function-ref name="getAssr" scoped="" ref="0x2b94c0d09b88"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b94c0d09568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b94c0d0d020" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b94c0d0d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b94c0d0b7a8"/>
        <function-ref name="fired" scoped="" ref="0x2b94c0d0c560"/>
        <function-ref name="get" scoped="" ref="0x2b94c0d0dba0"/>
        <function-ref name="reset" scoped="" ref="0x2b94c0d0c9e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b94c0d0bc30"/>
        <function-ref name="set" scoped="" ref="0x2b94c0d0c088"/>
        <function-ref name="start" scoped="" ref="0x2b94c0d0ce70"/>
        <function-ref name="stop" scoped="" ref="0x2b94c0d0b320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b94c0cffe00" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b94c0cffe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b94c0cf80f8"/>
        <function-ref name="test" scoped="" ref="0x2b94c0cf9798"/>
        <function-ref name="get" scoped="" ref="0x2b94c0cfba18"/>
        <function-ref name="setScale" scoped="" ref="0x2b94c0cf8580"/>
        <function-ref name="getScale" scoped="" ref="0x2b94c0cf8a58"/>
        <function-ref name="reset" scoped="" ref="0x2b94c0cfa980"/>
        <function-ref name="overflow" scoped="" ref="0x2b94c0cfa4f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b94c0cf9c20"/>
        <function-ref name="set" scoped="" ref="0x2b94c0cfa020"/>
        <function-ref name="start" scoped="" ref="0x2b94c0cfae08"/>
        <function-ref name="stop" scoped="" ref="0x2b94c0cf9310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b94c0d18160" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b94c0d18160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b94c0d184b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b94c0d18638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b94c0d187c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b94c0d18948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b94c0d18ad0"/>
        <function-ref name="setControl" scoped="" ref="0x2b94c0d18c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b94c0d13268" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b94c0d13268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b94c0d135b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b94c0d13958" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b94c0d13958"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b94c0d124b8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b94c0d13e30"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b94c0d12020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b94c0d121a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b94c0d12330"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b94c0d13ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b94c0d17190" loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b94c0d17190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b94c0d15930"/>
        <function-ref name="fired" scoped="" ref="0x2b94c0d166d0"/>
        <function-ref name="get" scoped="" ref="0x2b94c0d17d10"/>
        <function-ref name="reset" scoped="" ref="0x2b94c0d16b58"/>
        <function-ref name="isOn" scoped="" ref="0x2b94c0d15db8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0d161f8"/>
        <function-ref name="start" scoped="" ref="0x2b94c0d15020"/>
        <function-ref name="stop" scoped="" ref="0x2b94c0d154a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b94c0d05180" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b94c0d05180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b94c0d19270"/>
        <function-ref name="test" scoped="" ref="0x2b94c0d03930"/>
        <function-ref name="get" scoped="" ref="0x2b94c0d05d00"/>
        <function-ref name="setScale" scoped="" ref="0x2b94c0d196f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b94c0d19bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b94c0d04b58"/>
        <function-ref name="overflow" scoped="" ref="0x2b94c0d046d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b94c0d03db8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0d041f8"/>
        <function-ref name="start" scoped="" ref="0x2b94c0d03020"/>
        <function-ref name="stop" scoped="" ref="0x2b94c0d034a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b94c0d9bcf0" loc="74:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b94c0d9bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b94c0db50a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b94c0db5228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b94c0d9fc70" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b94c0d9fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94c09c1530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94c09c1888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b94c0d9b410"/>
        <function-ref name="fired" scoped="" ref="0x2b94c0d9c4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b94c0d9cdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b94c0d9c930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b94c0d9b898"/>
        <function-ref name="start" scoped="" ref="0x2b94c0d9e9f0"/>
        <function-ref name="stop" scoped="" ref="0x2b94c0d9c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b94c0da4ab0" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b94c0da4ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94c09c1530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94c09c1888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b94c0da0d60"/>
        <function-ref name="fired" scoped="" ref="0x2b94c0da2470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b94c0da01c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b94c0da2d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b94c0d9f648"/>
        <function-ref name="gett0" scoped="" ref="0x2b94c0d9f1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b94c0da28c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b94c0da3620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b94c0da0790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b94c0da3ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b94c0da2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b94c0df3478" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b94c0df3478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b94c0df37c8"/>
        <function-ref name="runTask" scoped="" ref="0x2b94c0df3950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b94c0df8208" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b94c0df8208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94c09c1530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94c09c1888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b94c0df45f0"/>
        <function-ref name="fired" scoped="" ref="0x2b94c0df6b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b94c0df58c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b94c0df5470"/>
        <function-ref name="getdt" scoped="" ref="0x2b94c0df3020"/>
        <function-ref name="gett0" scoped="" ref="0x2b94c0df4a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b94c0df5020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b94c0df8d50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b94c0df4020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b94c0df6238"/>
        <function-ref name="stop" scoped="" ref="0x2b94c0df66d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b94c0de2020" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b94c0de2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94c09c1530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94c09c1888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b94c0df9358"/>
        <function-ref name="fired" scoped="" ref="0x2b94c0de19b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b94c0dfb748"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b94c0dfb2d8"/>
        <function-ref name="getdt" scoped="" ref="0x2b94c0df9c38"/>
        <function-ref name="gett0" scoped="" ref="0x2b94c0df97c8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b94c0de1e28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b94c0de2b88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b94c0dfbd38"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b94c0de1088"/>
        <function-ref name="stop" scoped="" ref="0x2b94c0de1548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b94c0df0c38" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b94c0df0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94c09c1530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94c09c1888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b94c0def820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b94c0defe48" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b94c0defe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b94c09c1530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b94c09c1888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b94c0e01be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b94c0e00548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b94c0e000c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b94c0e009d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GLCD" ref="0x2b94c0e11298" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDC.nc">
      <component-ref qname="GLCDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GLCD" scoped="" ref="0x2b94c0e11298"/></type-interface>
      <instance>
        <interfacedef-ref qname="GLCD"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b94c0e115e8"/>
        <function-ref name="tsPressed" scoped="" ref="0x2b94c0e11770"/>
        <function-ref name="initDone" scoped="" ref="0x2b94c0e118f8"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b94c0e11a80"/>
        <function-ref name="calibrated" scoped="" ref="0x2b94c0e11c08"/>
        <function-ref name="isPressed" scoped="" ref="0x2b94c0e11d90"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b94c0e0e020"/>
        <function-ref name="calibrateTouchScreen" scoped="" ref="0x2b94c0e0e1a8"/>
        <function-ref name="barWritten" scoped="" ref="0x2b94c0e0e330"/>
        <function-ref name="getXY" scoped="" ref="0x2b94c0e0e4b8"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b94c0e0e640"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b94c0e0e7c8"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b94c0e0e950"/>
        <function-ref name="copyByte" scoped="" ref="0x2b94c0e0ebd8"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b94c0e0ed60"/>
        <function-ref name="xyReady" scoped="" ref="0x2b94c0e0d020"/>
        <function-ref name="writeByte" scoped="" ref="0x2b94c0e0d1a8"/>
        <function-ref name="setPixel" scoped="" ref="0x2b94c0e0d330"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b94c0e0d4b8"/>
        <function-ref name="getCalibration" scoped="" ref="0x2b94c0e0d640"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b94c0e0d7c8"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b94c0e0d950"/>
        <function-ref name="writePixel" scoped="" ref="0x2b94c0e0dad8"/>
        <function-ref name="initLCD" scoped="" ref="0x2b94c0e0dc60"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b94c0e0dde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LCD128x64" ref="0x2b94c0e432b8" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDP.nc">
      <component-ref qname="GLCDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b94c0e432b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b94c0e43608"/>
        <function-ref name="initDone" scoped="" ref="0x2b94c0e43790"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b94c0e43918"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b94c0e43aa0"/>
        <function-ref name="barWritten" scoped="" ref="0x2b94c0e43c28"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b94c0e43db0"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b94c0e1e020"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b94c0e1e1a8"/>
        <function-ref name="copyByte" scoped="" ref="0x2b94c0e1e330"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b94c0e1e4b8"/>
        <function-ref name="writeByte" scoped="" ref="0x2b94c0e1e640"/>
        <function-ref name="setPixel" scoped="" ref="0x2b94c0e1e7c8"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b94c0e1e950"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b94c0e1ebd8"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b94c0e1ed60"/>
        <function-ref name="writePixel" scoped="" ref="0x2b94c0e1a020"/>
        <function-ref name="initLCD" scoped="" ref="0x2b94c0e1a1a8"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b94c0e1a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GLCD" ref="0x2b94c0e23208" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDP.nc">
      <component-ref qname="GLCDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GLCD" scoped="" ref="0x2b94c0e23208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GLCD"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b94c0e23558"/>
        <function-ref name="tsPressed" scoped="" ref="0x2b94c0e236e0"/>
        <function-ref name="initDone" scoped="" ref="0x2b94c0e23868"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b94c0e239f0"/>
        <function-ref name="calibrated" scoped="" ref="0x2b94c0e23b78"/>
        <function-ref name="isPressed" scoped="" ref="0x2b94c0e23d00"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b94c0e22020"/>
        <function-ref name="calibrateTouchScreen" scoped="" ref="0x2b94c0e221a8"/>
        <function-ref name="barWritten" scoped="" ref="0x2b94c0e22330"/>
        <function-ref name="getXY" scoped="" ref="0x2b94c0e224b8"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b94c0e22640"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b94c0e227c8"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b94c0e22950"/>
        <function-ref name="copyByte" scoped="" ref="0x2b94c0e22bd8"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b94c0e22d60"/>
        <function-ref name="xyReady" scoped="" ref="0x2b94c0e21020"/>
        <function-ref name="writeByte" scoped="" ref="0x2b94c0e211a8"/>
        <function-ref name="setPixel" scoped="" ref="0x2b94c0e21330"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b94c0e214b8"/>
        <function-ref name="getCalibration" scoped="" ref="0x2b94c0e21640"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b94c0e217c8"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b94c0e21950"/>
        <function-ref name="writePixel" scoped="" ref="0x2b94c0e21ad8"/>
        <function-ref name="initLCD" scoped="" ref="0x2b94c0e21c60"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b94c0e21de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TouchScreen" ref="0x2b94c0e1c9c8" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDP.nc">
      <component-ref qname="GLCDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TouchScreen" scoped="" ref="0x2b94c0e1c9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TouchScreen"/>
      </instance>
      <interface-functions>
        <function-ref name="tsPressed" scoped="" ref="0x2b94c0e1cd18"/>
        <function-ref name="isPressed" scoped="" ref="0x2b94c0e1f020"/>
        <function-ref name="getXY" scoped="" ref="0x2b94c0e1f1a8"/>
        <function-ref name="xyReady" scoped="" ref="0x2b94c0e1f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TouchScreen" ref="0x2b94c0e0a7e8" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <component-ref qname="TouchScreenC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TouchScreen" scoped="" ref="0x2b94c0e0a7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TouchScreen"/>
      </instance>
      <interface-functions>
        <function-ref name="tsPressed" scoped="" ref="0x2b94c0e0ab38"/>
        <function-ref name="isPressed" scoped="" ref="0x2b94c0e0acc0"/>
        <function-ref name="getXY" scoped="" ref="0x2b94c0e0ae48"/>
        <function-ref name="xyReady" scoped="" ref="0x2b94c0e83020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x2b94c0e9b1e0" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b94c0e9b1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b94c0e9bd28"/>
        <function-ref name="readDone" scoped="" ref="0x2b94c0e9a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="driveA" ref="0x2b94c0e9a838" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="driveA" scoped="" ref="0x2b94c0e9a838"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0e9ab88"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0e9ad10"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0e97020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0e971a8"/>
        <function-ref name="get" scoped="" ref="0x2b94c0e97330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0e974b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c0e97640"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0e977c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x2b94c0e92020" loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b94c0e92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b94c0e92370"/>
        <function-ref name="getChannel" scoped="" ref="0x2b94c0e924f8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b94c0e92680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="checkTS" ref="0x2b94c0ea9640" loc="40:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="checkTS" scoped="" ref="0x2b94c0ea9640"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b94c0ea9990"/>
        <function-ref name="runTask" scoped="" ref="0x2b94c0ea9b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="adcX" ref="0x2b94c0e96cb8" loc="21:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="adcX" scoped="" ref="0x2b94c0e96cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0e950a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0e95228"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0e953b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0e95538"/>
        <function-ref name="get" scoped="" ref="0x2b94c0e956c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0e95848"/>
        <function-ref name="set" scoped="" ref="0x2b94c0e959d0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0e95b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="driveB" ref="0x2b94c0e97b30" loc="20:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="driveB" scoped="" ref="0x2b94c0e97b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0e97e80"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0e96030"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0e961b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0e96340"/>
        <function-ref name="get" scoped="" ref="0x2b94c0e964c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0e96650"/>
        <function-ref name="set" scoped="" ref="0x2b94c0e967d8"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0e96960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TouchScreen" ref="0x2b94c0e92978" loc="25:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TouchScreen" scoped="" ref="0x2b94c0e92978"/></type-interface>
      <instance>
        <interfacedef-ref qname="TouchScreen"/>
      </instance>
      <interface-functions>
        <function-ref name="tsPressed" scoped="" ref="0x2b94c0e92cc8"/>
        <function-ref name="isPressed" scoped="" ref="0x2b94c0e92e50"/>
        <function-ref name="getXY" scoped="" ref="0x2b94c0e8f020"/>
        <function-ref name="xyReady" scoped="" ref="0x2b94c0e8f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="adcY" ref="0x2b94c0e94020" loc="22:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="adcY" scoped="" ref="0x2b94c0e94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b94c0e94370"/>
        <function-ref name="isInput" scoped="" ref="0x2b94c0e944f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b94c0e94680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b94c0e94808"/>
        <function-ref name="get" scoped="" ref="0x2b94c0e94990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b94c0e94b18"/>
        <function-ref name="set" scoped="" ref="0x2b94c0e94ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b94c0e94e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b94c10603f0" loc="25:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TouchScreenC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b94c10603f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b94c1060740"/>
        <function-ref name="configure" scoped="" ref="0x2b94c10608c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b94c1062358" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TouchScreenC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b94c1062358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b94c1061020"/>
        <function-ref name="readDone" scoped="" ref="0x2b94c1061470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b94c1061a28" loc="24:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TouchScreenC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b94c1061a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b94c1061d78"/>
        <function-ref name="getChannel" scoped="" ref="0x2b94c1060020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b94c10601a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b94c0edae60" loc="18:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b94c0edae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b94c0ed59e0"/>
        <function-ref name="readDone" scoped="" ref="0x2b94c0ed5e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b94c0ed0a98" loc="19:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b94c0ed0a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b94c0ed3658"/>
        <function-ref name="readDone" scoped="" ref="0x2b94c0ed3ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b94c0ed2690" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b94c0ed2690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b94c0ed29e0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b94c0ed2b68"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b94c0ed2cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b94c0ee8708" loc="23:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b94c0ee8708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b94c0ee8a58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b94c0ee8be0"/>
        <function-ref name="request" scoped="" ref="0x2b94c0ee8d68"/>
        <function-ref name="granted" scoped="" ref="0x2b94c0ecd020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b94c0ecd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b94c0ee2dc8" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b94c0ee2dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b94c0ede170"/>
        <function-ref name="configure" scoped="" ref="0x2b94c0ede2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b94c0ee2080" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b94c0ee2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b94c0ee23d0"/>
        <function-ref name="dataReady" scoped="" ref="0x2b94c0ee2558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b94c0edf440" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b94c0edf440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b94c0edf790"/>
        <function-ref name="cancel" scoped="" ref="0x2b94c0edf918"/>
        <function-ref name="dataReady" scoped="" ref="0x2b94c0edfaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b94c0ee62f0" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b94c0ee62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b94c0ee6640"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b94c0ee67c8"/>
        <function-ref name="request" scoped="" ref="0x2b94c0ee6950"/>
        <function-ref name="granted" scoped="" ref="0x2b94c0ee6ad8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b94c0ee6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b94c0ef72b8" loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b94c0ef72b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c0ef7608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b94c0ef6318" loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b94c0ef6318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b94c0ef6668"/>
        <function-ref name="dataReady" scoped="" ref="0x2b94c0ef67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b94c0ef28a8" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b94c0ef28a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b94c0ef2bf8"/>
        <function-ref name="cancel" scoped="" ref="0x2b94c0ef2d80"/>
        <function-ref name="dataReady" scoped="" ref="0x2b94c0ef6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x2b94c0f040d0" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b94c0f040d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b94c0f04420"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b94c0f045a8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b94c0f04730"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b94c0f048b8"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b94c0f04a40"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b94c0f04bc8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b94c0f04d50"/>
        <function-ref name="isComplete" scoped="" ref="0x2b94c0ef5020"/>
        <function-ref name="cancel" scoped="" ref="0x2b94c0ef51a8"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b94c0ef5330"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b94c0ef54b8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b94c0ef5640"/>
        <function-ref name="startConversion" scoped="" ref="0x2b94c0ef57c8"/>
        <function-ref name="isStarted" scoped="" ref="0x2b94c0ef5a50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b94c0ef5bd8"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b94c0ef5d60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b94c0ef1020"/>
        <function-ref name="getValue" scoped="" ref="0x2b94c0ef11a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b94c0ef1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b94c0ef20f0" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b94c0ef20f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b94c0ef2440"/>
        <function-ref name="stop" scoped="" ref="0x2b94c0ef25c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b94c0ef1610" loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b94c0ef1610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b94c0ef1960"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b94c0ef1ae8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b94c0ef1c70"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b94c0ef1df8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b94c0f03020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b94c0ef8a28" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b94c0ef8a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b94c0ef8d78"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b94c0f33020"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b94c0f331a8"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b94c0f33330"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b94c0f334b8"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b94c0f33640"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b94c0f337c8"/>
        <function-ref name="isComplete" scoped="" ref="0x2b94c0f33950"/>
        <function-ref name="cancel" scoped="" ref="0x2b94c0f33ad8"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b94c0f33c60"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b94c0f33de8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b94c0f32020"/>
        <function-ref name="startConversion" scoped="" ref="0x2b94c0f321a8"/>
        <function-ref name="isStarted" scoped="" ref="0x2b94c0f32430"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b94c0f325b8"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b94c0f32740"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b94c0f328c8"/>
        <function-ref name="getValue" scoped="" ref="0x2b94c0f32a50"/>
        <function-ref name="dataReady" scoped="" ref="0x2b94c0f32bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b94c0f31c48" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b94c0f31c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b94c0f2e020"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b94c0f2e1a8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b94c0f2e330"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b94c0f2e4b8"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b94c0f2e640"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b94c0f2e7c8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b94c0f2e950"/>
        <function-ref name="isComplete" scoped="" ref="0x2b94c0f2ead8"/>
        <function-ref name="cancel" scoped="" ref="0x2b94c0f2ec60"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b94c0f2ede8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b94c0f2d020"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b94c0f2d1a8"/>
        <function-ref name="startConversion" scoped="" ref="0x2b94c0f2d330"/>
        <function-ref name="isStarted" scoped="" ref="0x2b94c0f2d5b8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b94c0f2d740"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b94c0f2d8c8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b94c0f2da50"/>
        <function-ref name="getValue" scoped="" ref="0x2b94c0f2dbd8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b94c0f2dd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b94c0f4e0c0" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b94c0f4e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b94c0f4e410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b94c0ff3820" loc="92:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b94c0ff3820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b94c0ff3b90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b94c0ff3d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b94c0ff1550" loc="96:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b94c0ff1550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b94c0ff18c0"/>
        <function-ref name="configure" scoped="" ref="0x2b94c0ff1a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b94c0ff2020" loc="93:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b94c0ff2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b94c0ff2370"/>
        <function-ref name="requested" scoped="" ref="0x2b94c0ff24f8"/>
        <function-ref name="granted" scoped="" ref="0x2b94c0ff2680"/>
        <function-ref name="isOwner" scoped="" ref="0x2b94c0ff2808"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b94c0ff2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b94c0ff4a40" loc="91:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b94c0ff4a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b94c0ff4db0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b94c0ff3020"/>
        <function-ref name="request" scoped="" ref="0x2b94c0ff31a8"/>
        <function-ref name="granted" scoped="" ref="0x2b94c0ff3330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b94c0ff34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b94c0ff2bd8" loc="94:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b94c0ff2bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b94c0ff1020"/>
        <function-ref name="userId" scoped="" ref="0x2b94c0ff11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b94c1504d90" loc="44:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b94c1504d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b94c1503170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b94c15033f8" loc="45:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b94c15033f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b94c1503748"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b94c15038d0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b94c1503a58"/>
        <function-ref name="dequeue" scoped="" ref="0x2b94c1503be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b94c1500200" loc="55:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b94c1500200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b94c1500570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b94c15006f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b94c14ffe18" loc="60:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b94c14ffe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b94c14fe1c0"/>
        <function-ref name="configure" scoped="" ref="0x2b94c14fe348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b94c14fe5d0" loc="61:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b94c14fe5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b94c14fe920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b94c14feaa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b94c14fec30"/>
        <function-ref name="dequeue" scoped="" ref="0x2b94c14fedb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b94c1500940" loc="56:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b94c1500940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b94c1500c90"/>
        <function-ref name="requested" scoped="" ref="0x2b94c1500e18"/>
        <function-ref name="granted" scoped="" ref="0x2b94c14ff020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b94c14ff1a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b94c14ff330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b94c14fc060" loc="62:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b94c14fc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b94c14fc3b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b94c14fc538"/>
        <function-ref name="led1On" scoped="" ref="0x2b94c14fc6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b94c14fc848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b94c14fc9d0"/>
        <function-ref name="get" scoped="" ref="0x2b94c14fcb58"/>
        <function-ref name="led1Off" scoped="" ref="0x2b94c14fcce0"/>
        <function-ref name="setPort" scoped="" ref="0x2b94c14fce68"/>
        <function-ref name="led0On" scoped="" ref="0x2b94c14fb4b8"/>
        <function-ref name="set" scoped="" ref="0x2b94c14fb1a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b94c14fb020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b94c14fb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b94c15014b0" loc="54:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b94c15014b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b94c1501820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b94c15019a8"/>
        <function-ref name="request" scoped="" ref="0x2b94c1501b30"/>
        <function-ref name="granted" scoped="" ref="0x2b94c1501cb8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b94c1501e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b94c14ff578" loc="57:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b94c14ff578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b94c14ff8c8"/>
        <function-ref name="userId" scoped="" ref="0x2b94c14ffa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b94c14fb780" loc="75:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b94c14fb780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b94c14fbad0"/>
        <function-ref name="runTask" scoped="" ref="0x2b94c14fbc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b94c0fedb98" loc="72:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b94c0fedb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b94c1020020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b94c1020268" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b94c1020268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b94c10205b8"/>
        <function-ref name="requested" scoped="" ref="0x2b94c1020740"/>
        <function-ref name="granted" scoped="" ref="0x2b94c10208c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b94c1020a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b94c1020bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b94c0fed478" loc="70:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b94c0fed478"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b94c0fed7c8"/>
        <function-ref name="stop" scoped="" ref="0x2b94c0fed950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b94c1020e20" loc="74:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b94c1020e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b94c101f1a8"/>
        <function-ref name="userId" scoped="" ref="0x2b94c101f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b94c153a020" loc="62:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b94c153a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b94c153a370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b94c153a5b8" loc="63:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b94c153a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b94c153a908"/>
        <function-ref name="requested" scoped="" ref="0x2b94c153aa90"/>
        <function-ref name="granted" scoped="" ref="0x2b94c153ac18"/>
        <function-ref name="isOwner" scoped="" ref="0x2b94c153ada0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b94c1539020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b94c153b818" loc="60:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b94c153b818"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b94c153bb68"/>
        <function-ref name="stop" scoped="" ref="0x2b94c153bcf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b94c1539268" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b94c1539268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b94c15395b8"/>
        <function-ref name="userId" scoped="" ref="0x2b94c1539740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b94c1017c68" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b94c1017c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b94c10167e8"/>
        <function-ref name="readDone" scoped="" ref="0x2b94c1016c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b94c1015880" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b94c1015880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b94c1014490"/>
        <function-ref name="readDone" scoped="" ref="0x2b94c1014918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b94c1012e78" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b94c1012e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b94c10111f8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b94c1011380"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b94c1011508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x2b94c1012020" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b94c1012020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b94c1012370"/>
        <function-ref name="cancel" scoped="" ref="0x2b94c10124f8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b94c1012680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x2b94c1026bf8" loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x2b94c1026bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b94c1025020"/>
        <function-ref name="runTask" scoped="" ref="0x2b94c10251a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b94c1038a28" loc="24:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b94c1038a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b94c1037620"/>
        <function-ref name="readDone" scoped="" ref="0x2b94c1037a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2b94c106b348" loc="26:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2b94c106b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b94c106a020"/>
        <function-ref name="readDone" scoped="" ref="0x2b94c106a490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b94c106ab28" loc="27:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b94c106ab28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b94c1068020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b94c10681a8"/>
        <function-ref name="request" scoped="" ref="0x2b94c1068330"/>
        <function-ref name="granted" scoped="" ref="0x2b94c10684b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b94c1068640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCD128x64" ref="0x2b94c107f020" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <component-ref qname="LCD128x64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b94c107f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b94c107f370"/>
        <function-ref name="initDone" scoped="" ref="0x2b94c107f4f8"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b94c107f680"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b94c107f808"/>
        <function-ref name="barWritten" scoped="" ref="0x2b94c107f990"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b94c107fb18"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b94c107fca0"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b94c107fe28"/>
        <function-ref name="copyByte" scoped="" ref="0x2b94c107e020"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b94c107e1a8"/>
        <function-ref name="writeByte" scoped="" ref="0x2b94c107e330"/>
        <function-ref name="setPixel" scoped="" ref="0x2b94c107e4b8"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b94c107e640"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b94c107e8c8"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b94c107ea50"/>
        <function-ref name="writePixel" scoped="" ref="0x2b94c107ebd8"/>
        <function-ref name="initLCD" scoped="" ref="0x2b94c107ed60"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b94c107d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeRectangle" ref="0x2b94c10f0e68" loc="208:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeRectangle" scoped="" ref="0x2b94c10f0e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b94c10ef1e8"/>
        <function-ref name="runTask" scoped="" ref="0x2b94c10ef370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCD128x64" ref="0x2b94c109b020" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b94c109b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b94c109b370"/>
        <function-ref name="initDone" scoped="" ref="0x2b94c109b4f8"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b94c109b680"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b94c109b808"/>
        <function-ref name="barWritten" scoped="" ref="0x2b94c109b990"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b94c109bb18"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b94c109bca0"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b94c109be28"/>
        <function-ref name="copyByte" scoped="" ref="0x2b94c109a020"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b94c109a1a8"/>
        <function-ref name="writeByte" scoped="" ref="0x2b94c109a330"/>
        <function-ref name="setPixel" scoped="" ref="0x2b94c109a4b8"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b94c109a640"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b94c109a8c8"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b94c109aa50"/>
        <function-ref name="writePixel" scoped="" ref="0x2b94c109abd8"/>
        <function-ref name="initLCD" scoped="" ref="0x2b94c109ad60"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b94c1099020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeString" ref="0x2b94c1100368" loc="257:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeString" scoped="" ref="0x2b94c1100368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b94c11006b8"/>
        <function-ref name="runTask" scoped="" ref="0x2b94c1100840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeCircle" ref="0x2b94c10e8c10" loc="224:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeCircle" scoped="" ref="0x2b94c10e8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b94c10e7020"/>
        <function-ref name="runTask" scoped="" ref="0x2b94c10e71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeLine" ref="0x2b94c1113ca0" loc="316:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeLine" scoped="" ref="0x2b94c1113ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b94c1112020"/>
        <function-ref name="runTask" scoped="" ref="0x2b94c11121a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="wait4Controller" ref="0x2b94c10b0bd8" loc="65:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="wait4Controller" scoped="" ref="0x2b94c10b0bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b94c10ae020"/>
        <function-ref name="runTask" scoped="" ref="0x2b94c10ae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeBar" ref="0x2b94c1122790" loc="394:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeBar" scoped="" ref="0x2b94c1122790"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b94c1122ae0"/>
        <function-ref name="runTask" scoped="" ref="0x2b94c1122c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="clearScreenNB" ref="0x2b94c111b420" loc="285:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="clearScreenNB" scoped="" ref="0x2b94c111b420"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b94c111b770"/>
        <function-ref name="runTask" scoped="" ref="0x2b94c111b8f8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b94c0a3c178" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b94c0a34e08" loc="60:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b94c0a42290" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b94c0a42020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b94c0a46940" loc="31:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="27:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b94c0a45378" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b94c0a45108" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b94c0a45e00" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b94c0a45b90" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b94c0a44698" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b94c0a590d8" loc="44:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b94c0a597a0" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b94c0a5a328" loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b94c0a58570" loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b94c0a5a9c8" loc="43:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b94c0a59e58" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b94c0a5c5a8" loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b94c0a5cc18" loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b94c09473a0" loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b94c0945290" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b94c0947ab8" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b94c0951070" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b94c0951860" loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b94c0a04450" loc="76:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b94c0a1ad28" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b94c09a01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b94c0a246d8" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b94c0c00d18" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b94c0c00d18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b94c0c0b760" loc="136:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b94c0bfa110" loc="83:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b94c0bf9d40" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b94c0bf97a8" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b94c0bf9ac0" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b94c0bf9070" loc="98:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b94c0c096b0" loc="151:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b94c0c0be80" loc="144:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b94c0bfa888" loc="92:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b94c0bfd820" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b94c0bfd5b0" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b94c0bf8d28" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b94c0bf8790" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b94c0bf8aa8" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b94c0bfc290" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b94c0bfc020" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b94c0bfca38" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GLCD" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
      <function command="" provided="0" name="startClearScreen" ref="0x2b94c0c199b0" loc="68:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b94c0c19740" loc="68:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="tsPressed" ref="0x2b94c0c12328" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x2b94c0c18098" loc="70:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteBar" ref="0x2b94c0c0c918" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b94c0c0dc68" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b94c0c0c020" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b94c0c0c350" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="width" ref="0x2b94c0c0c678" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="calibrated" ref="0x2b94c0c13c50" loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isPressed" ref="0x2b94c0c158c8" loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b94c0c15658" loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteLine" ref="0x2b94c0c19040" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b94c0c1b430" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b94c0c1b730" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="xEnd" ref="0x2b94c0c1ba50" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="yEnd" ref="0x2b94c0c1bd70" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateTouchScreen" ref="0x2b94c0c034b0" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="barWritten" ref="0x2b94c0c29258" loc="80:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getXY" ref="0x2b94c0c15030" loc="12:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteRectangle" ref="0x2b94c0c1ecf0" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b94c0c1e150" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b94c0c1e450" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="a" ref="0x2b94c0c1e750" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="b" ref="0x2b94c0c1ea50" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="screenCleared" ref="0x2b94c0c298f8" loc="82:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="lineWritten" ref="0x2b94c0c17b48" loc="78:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="copyByte" ref="0x2b94c0c11020" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b94c0c12978" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b94c0c12c78" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteString" ref="0x2b94c0c1cd20" loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b94c0c1c490" loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x2b94c0c1c790" loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b94c0c1ca90" loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="xyReady" ref="0x2b94c0c135b0" loc="21:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b94c0c13020" loc="21:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b94c0c13330" loc="21:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="writeByte" ref="0x2b94c0c0f8d0" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b94c0c0f020" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b94c0c0f320" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b94c0c0f640" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x2b94c0c0d5a0" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b94c0c0d020" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b94c0c0d320" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="circleWritten" ref="0x2b94c0c18738" loc="72:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCalibration" ref="0x2b94c0c029b0" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x_cmin" ref="0x2b94c0c03b90" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="x_cmax" ref="0x2b94c0c02020" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="y_cmin" ref="0x2b94c0c02398" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="y_cmax" ref="0x2b94c0c02710" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteCircle" ref="0x2b94c0c1dd78" loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="xcenter" ref="0x2b94c0c1d480" loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="ycenter" ref="0x2b94c0c1d7b8" loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="radius" ref="0x2b94c0c1dae8" loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rectangleWritten" ref="0x2b94c0c174c0" loc="76:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writePixel" ref="0x2b94c0c0e8b8" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b94c0c0e020" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b94c0c0e320" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="on" ref="0x2b94c0c0e628" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initLCD" ref="0x2b94c0c118e8" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b94c0c11678" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stringWritten" ref="0x2b94c0c18dd8" loc="74:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b94c0c62020" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b94c0c62020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b94c0c628b0" loc="61:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b94c0743db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b94c0c7f7b8" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b94c0c7f7b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b94c0c7f9e8" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b94c0c7f9e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b94c0c7c2a8" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b94c0c7f9e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b94c0c7b328" loc="76:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b94c0c7cac0" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b94c0c7ba18" loc="82:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b94c0c713e8" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b94c0c713e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b94c0c71618" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b94c0c71618"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b94c0c6c020" loc="109:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b94c0c71618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b94c0c6f070" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b94c0c6e5c0" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b94c0c71618"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b94c0c71618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b94c0c6e020" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b94c0c71618"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b94c0c6e340" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b94c0c71618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b94c0c6f7e0" loc="88:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b94c0c6c7a0" loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b94c0c71618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b94c0c70108" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b94c0c71618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b94c0c71e68" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b94c0c71618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b94c0c708d8" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b94c0ca9020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94c09cda08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b94c09cde10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b94c0ca7360" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94c09da100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b94c09da508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b94c0ca81d8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94c09d1980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b94c09d1d88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b94c0ca8b90" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94c09d1980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b94c09d1d88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b94c0ca8920" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94c09d1980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b94c09d1d88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b94c0ca7d18" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94c09da100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b94c09da508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b94c0ca7aa8" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94c09da100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b94c09da508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b94c0ca99f0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94c09cda08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b94c09cde10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b94c0ca9780" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94c09cda08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b94c09cde10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerSync" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer0Synchronous" ref="0x2b94c0cb04e8" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBusy" ref="0x2b94c0cb0bf0" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b94c0caf3e0" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b94c0cafb90" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b94c0cb2328" loc="28:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="24:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94c09d4118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b94c09d4520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b94c0cb2cd8" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94c09d4118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b94c09d4520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b94c0cb2a68" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b94c09d4118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b94c09d4520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b94c0cab420" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b94c0cab420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b94c0cb8a40" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b94c0ca3d88" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b94c0cabcd8" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b94c0cab420"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b94c0cb94c0" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b94c0cb71d8" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b94c0ca3648" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b94c0cab420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b94c0ca33d8" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b94c0cab420"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b94c0cb9bb8" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b94c0cb8328" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b94c0c8e688" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b94c0c8e688"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b94c0c9dcf0" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b94c0c9fe20" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b94c0ca1020" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b94c0c8e688"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b94c0c9c690" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b94c0c9c420" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b94c0c9ce10" loc="110:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="106:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b94c0ca07f8" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b94c0ca00d8" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b94c0c9d5c8" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b94c0ca1958" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b94c0c8e688"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b94c0ca16e8" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b94c0c8e688"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b94c0c9f020" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b94c0c9f708" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LCD128x64" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
      <function command="" provided="0" name="startClearScreen" ref="0x2b94c0e2a020" loc="40:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b94c0e2bc98" loc="40:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x2b94c0e2a690" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteBar" ref="0x2b94c0e30020" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b94c0e312e8" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b94c0e315e8" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b94c0e31918" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="width" ref="0x2b94c0e31c40" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteLine" ref="0x2b94c0e2b5e0" loc="38:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b94c0e2c918" loc="38:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b94c0e2cc18" loc="38:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="xEnd" ref="0x2b94c0e2b020" loc="38:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="yEnd" ref="0x2b94c0e2b340" loc="38:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="barWritten" ref="0x2b94c0e27910" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteRectangle" ref="0x2b94c0e2f2c0" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b94c0e306b8" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b94c0e309b8" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="a" ref="0x2b94c0e30cb8" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="b" ref="0x2b94c0e2f020" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="screenCleared" ref="0x2b94c0e43020" loc="54:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="lineWritten" ref="0x2b94c0e27290" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="copyByte" ref="0x2b94c0e197d0" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b94c0e19250" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b94c0e19550" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteString" ref="0x2b94c0e2c2b0" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b94c0e2e940" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x2b94c0e2ec40" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b94c0e2c020" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="writeByte" ref="0x2b94c0e34040" loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b94c0e18760" loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b94c0e18a60" loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b94c0e18d80" loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x2b94c0e32bf0" loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b94c0e32670" loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b94c0e32970" loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="circleWritten" ref="0x2b94c0e2ad30" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteCircle" ref="0x2b94c0e2e2b0" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="xcenter" ref="0x2b94c0e2f978" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="ycenter" ref="0x2b94c0e2fcb0" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="radius" ref="0x2b94c0e2e020" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rectangleWritten" ref="0x2b94c0e28bb8" loc="48:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writePixel" ref="0x2b94c0e32020" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b94c0e346a0" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b94c0e349a0" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="on" ref="0x2b94c0e34ca8" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initLCD" ref="0x2b94c0e18108" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b94c0e19e28" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stringWritten" ref="0x2b94c0e284f8" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TouchScreen" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
      <function event="" provided="0" name="tsPressed" ref="0x2b94c0e1c730" loc="13:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
        <interfacedef-ref qname="TouchScreen"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isPressed" ref="0x2b94c0e1d478" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
        <interfacedef-ref qname="TouchScreen"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b94c0e1d208" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getXY" ref="0x2b94c0e20b80" loc="4:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
        <interfacedef-ref qname="TouchScreen"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="xyReady" ref="0x2b94c0e1c0b8" loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
        <interfacedef-ref qname="TouchScreen"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b94c0e1dac8" loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b94c0e1ddd8" loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b94c0e9c708" loc="49:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b94c0e9c708"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b94c0e99020" loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b94c0e99cb0" loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b94c0e9c708"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b94c0e99730" loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b94c0e99a30" loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b94c0e9c708"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x2b94c0e90468" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b94c0e93c20" loc="25:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x2b94c0e90c48" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b94c0ed7450" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b94c0edbc40" loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b94c0ed4b08" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b94c0ed4b08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b94c0ed13a0" loc="58:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b94c0ed00b8" loc="66:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b94c0ed4b08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b94c0ed1ae8" loc="66:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b94c0ed1de8" loc="66:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b94c0ed4b08"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b94c0ee93a0" loc="120:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b94c0eeb488" loc="97:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b94c0ecead8" loc="88:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b94c0eebc10" loc="102:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b94c0ee9d88" loc="128:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b94c0edda20" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b94c0ee3d20" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b94c0edd0c8" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b94c0edd430" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b94c0edd780" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b94c0efaa70" loc="119:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b94c0efb9e0" loc="119:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b94c0efbd00" loc="119:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x2b94c0efa060" loc="119:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x2b94c0efa410" loc="120:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x2b94c0efa7c0" loc="120:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b94c0ee16f8" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b94c0ee4a18" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b94c0ee4d70" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b94c0ee1108" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b94c0ee1458" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b94c0edf020" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b94c0ee06d8" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b94c0ee0138" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b94c0ee0458" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x2b94c0f09710" loc="114:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x2b94c0ef0720" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b94c09ba478"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x2b94c09ba930"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x2b94c0f06a88" loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b94c0f06818" loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2b94c0f07020" loc="122:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x2b94c0eed3e0" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x2b94c0eef290" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b94c09ba478"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b94c09ba930"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x2b94c0eef020" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b94c09ba478"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b94c09ba930"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x2b94c0f0b258" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x2b94c0f06020" loc="133:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b94c0f05258" loc="150:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x2b94c0eedad0" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x2b94c0f0a110" loc="99:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x2b94c0f0b9a0" loc="95:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x2b94c0f0a838" loc="106:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x2b94c0f07780" loc="127:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x2b94c0eee480" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b94c09c2020"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b94c09c26e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x2b94c0eee210" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b94c09c2020"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b94c09c26e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x2b94c0f09020" loc="110:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x2b94c0eefa68" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b94c09c2020"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b94c09c26e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b94c0eeec20" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b94c0f05d68" loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b94c0f05af8" loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b94c0743378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b94c0ef44d0" loc="95:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b94c0ef4ca8" loc="105:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b94c0f7a4b0" loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b94c0f7ad78" loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b94c0f761d8" loc="56:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b94c0f751d8" loc="73:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b94c0f7d958" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b94c0f769d8" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b94c0f75aa0" loc="81:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b94c0f72820" loc="90:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b94c0f71070" loc="98:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b94c0f8a620" loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b94c094bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b94c0f738a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b94c0f8a3b0" loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b94c0f738a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b94c0f8d720" loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b94c0f8b290" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b94c09424c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b94c0f738a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b94c0f8b020" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b94c0f738a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b94c0f8bb30" loc="70:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b94c0f738a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b94c0fab020" loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b94c0fab758" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b94c0fa9020" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b94c0fa9e70" loc="83:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b94c0fa7480" loc="100:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b94c0fa7c18" loc="117:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b94c0fa9738" loc="77:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b94c0fa6768" loc="134:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b94c0fa64f8" loc="134:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPort" ref="0x2b94c0fa4600" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b94c0fa4060" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
          <variable name="pval" ref="0x2b94c0fa4380" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b94c0741910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b94c0fac7e0" loc="56:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b94c0fa8608" loc="89:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b94c0fa8d20" loc="94:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2b94c100c020" loc="62:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
