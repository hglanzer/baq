<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:SimpleDrawAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b0ca5fdca20"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b0ca5fd9220"/></to>
    </wire>
    <wire loc="72:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b0ca5fd9220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b0ca6189198"/></to>
    </wire>
    <wire loc="10:SimpleDrawAppC.nc">
      <from><interface-ref name="Button0" scoped="" ref="0x2b0ca6191108"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x2b0ca60181a0"/></to>
    </wire>
    <wire loc="164:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b0ca60181a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b0ca60a7e40"/></to>
    </wire>
    <wire loc="11:SimpleDrawAppC.nc">
      <from><interface-ref name="Button1" scoped="" ref="0x2b0ca6190390"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x2b0ca6017658"/></to>
    </wire>
    <wire loc="165:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b0ca6017658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b0ca60b5020"/></to>
    </wire>
    <wire loc="12:SimpleDrawAppC.nc">
      <from><interface-ref name="Button2" scoped="" ref="0x2b0ca618f6a0"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x2b0ca60167e0"/></to>
    </wire>
    <wire loc="166:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b0ca60167e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b0ca60b4120"/></to>
    </wire>
    <wire loc="13:SimpleDrawAppC.nc">
      <from><interface-ref name="Button3" scoped="" ref="0x2b0ca618e9b0"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x2b0ca6015968"/></to>
    </wire>
    <wire loc="167:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b0ca6015968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b0ca60b22a8"/></to>
    </wire>
    <wire loc="14:SimpleDrawAppC.nc">
      <from><interface-ref name="Button4" scoped="" ref="0x2b0ca618dcc0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b0ca6022af0"/></to>
    </wire>
    <wire loc="168:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b0ca6022af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b0ca60b1430"/></to>
    </wire>
    <wire loc="15:SimpleDrawAppC.nc">
      <from><interface-ref name="Button5" scoped="" ref="0x2b0ca618b020"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x2b0ca6021c78"/></to>
    </wire>
    <wire loc="169:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b0ca6021c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b0ca60b05b8"/></to>
    </wire>
    <wire loc="16:SimpleDrawAppC.nc">
      <from><interface-ref name="Button6" scoped="" ref="0x2b0ca618a1c8"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b0ca6020e00"/></to>
    </wire>
    <wire loc="170:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b0ca6020e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b0ca60af740"/></to>
    </wire>
    <wire loc="17:SimpleDrawAppC.nc">
      <from><interface-ref name="Button7" scoped="" ref="0x2b0ca619d390"/></from>
      <to><interface-ref name="PortD7" scoped="" ref="0x2b0ca601e020"/></to>
    </wire>
    <wire loc="171:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b0ca601e020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b0ca60ae8c8"/></to>
    </wire>
    <wire loc="18:SimpleDrawAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b0ca61a5c08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0ca61e3420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b0ca61e3420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b0ca61f0b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:SimpleDrawAppC.nc">
      <from><interface-ref name="GLCD" scoped="" ref="0x2b0ca61c5d90"/></from>
      <to><interface-ref name="GLCD" scoped="" ref="0x2b0ca639d298"/></to>
    </wire>
    <wire loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDC.nc">
      <from><interface-ref name="GLCD" scoped="" ref="0x2b0ca639d298"/></from>
      <to><interface-ref name="GLCD" scoped="" ref="0x2b0ca63af208"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0ca5fd8620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0ca6aaad90"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0ca5fd8620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0ca61ea4d8"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b0ca61897d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b0ca5ee1600"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b0ca5ee1600"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b0ca5f98448"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b0ca61881d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0ca5fdb620"/></to>
    </wire>
    <wire loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b0ca5fdb620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0ca5fea600"/></to>
    </wire>
    <wire loc="71:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0ca6188898"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b0ca5fd8620"/></to>
    </wire>
    <wire loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b0ca5fd6380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0ca647c2b8"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0ca5fde618"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0ca616b8f0"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b0ca5fe9398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0ca616b2c0"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b0ca5feaca0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b0ca5fe3b98"/></to>
    </wire>
    <wire loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b0ca5fe3b98"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b0ca5fed698"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b0ca5ff0360"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b0ca5fd6380"/></to>
    </wire>
    <wire loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b0ca5fecb08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b0ca5ff0360"/></to>
    </wire>
    <wire loc="191:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b0ca6035af0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca610e970"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b0ca60b5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca687c710"/></to>
    </wire>
    <wire loc="176:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b0ca6028658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b0ca60c4d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b0ca60c4d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca68d0710"/></to>
    </wire>
    <wire loc="185:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b0ca602d348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b0ca60c65b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b0ca60c65b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca6931710"/></to>
    </wire>
    <wire loc="143:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b0ca6003348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b0ca608c740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b0ca608c740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca6753970"/></to>
    </wire>
    <wire loc="183:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b0ca602f020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b0ca60c82a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b0ca60c82a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca6937710"/></to>
    </wire>
    <wire loc="146:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b0ca6001658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b0ca6094930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b0ca6094930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca67af6a8"/></to>
    </wire>
    <wire loc="157:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b0ca60127e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b0ca60a3740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b0ca60a3740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca67f7710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b0ca60b1430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca6872710"/></to>
    </wire>
    <wire loc="179:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b0ca6025af0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b0ca60c0120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b0ca60c0120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca68f8710"/></to>
    </wire>
    <wire loc="138:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b0ca5ffbaf0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b0ca6081020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b0ca6081020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca6738970"/></to>
    </wire>
    <wire loc="149:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b0ca600caf0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b0ca6091d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b0ca6091d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca67a5710"/></to>
    </wire>
    <wire loc="160:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b0ca600fc78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b0ca60a0bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b0ca60a0bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca681b710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b0ca60ae8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca6869710"/></to>
    </wire>
    <wire loc="188:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b0ca602a7e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b0ca60d5a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b0ca60d5a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca695a710"/></to>
    </wire>
    <wire loc="194:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b0ca60317e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca6123020"/></to>
    </wire>
    <wire loc="174:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b0ca601c348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b0ca60b6a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b0ca60b6a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca68d6710"/></to>
    </wire>
    <wire loc="141:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b0ca6005020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b0ca607e430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b0ca607e430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca672e970"/></to>
    </wire>
    <wire loc="152:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b0ca60081a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b0ca609d120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b0ca609d120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca679c710"/></to>
    </wire>
    <wire loc="192:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b0ca60334d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca611bab0"/></to>
    </wire>
    <wire loc="155:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b0ca60144d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b0ca60a5500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b0ca60a5500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca67fd6a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b0ca60b4120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca6879710"/></to>
    </wire>
    <wire loc="177:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b0ca60277e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b0ca60c3e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b0ca60c3e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca68cc710"/></to>
    </wire>
    <wire loc="186:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b0ca602c4d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b0ca60d7740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b0ca60d7740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca692d710"/></to>
    </wire>
    <wire loc="144:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b0ca60024d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b0ca608b8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b0ca608b8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca6750970"/></to>
    </wire>
    <wire loc="147:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b0ca60007e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b0ca6093a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b0ca6093a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca67ac710"/></to>
    </wire>
    <wire loc="158:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b0ca6011968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b0ca60a28c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b0ca60a28c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca6821710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b0ca60b05b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca686f710"/></to>
    </wire>
    <wire loc="180:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b0ca6024c78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b0ca60bf2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b0ca60bf2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca68f5710"/></to>
    </wire>
    <wire loc="139:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b0ca5ffac78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b0ca6080120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b0ca6080120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca6734970"/></to>
    </wire>
    <wire loc="150:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b0ca600bc78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b0ca6090e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b0ca6090e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca67a2710"/></to>
    </wire>
    <wire loc="161:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b0ca600ee00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b0ca609ed60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b0ca609ed60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca6818710"/></to>
    </wire>
    <wire loc="189:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b0ca6036968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b0ca60d4bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b0ca60d4bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca6957710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b0ca60a7e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca687f6a8"/></to>
    </wire>
    <wire loc="175:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b0ca60294d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b0ca60c5bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b0ca60c5bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca68d3710"/></to>
    </wire>
    <wire loc="184:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b0ca602e1a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b0ca60c7430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b0ca60c7430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca6934710"/></to>
    </wire>
    <wire loc="195:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b0ca603e968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca6130180"/></to>
    </wire>
    <wire loc="142:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b0ca60041a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b0ca608d5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b0ca608d5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca6756970"/></to>
    </wire>
    <wire loc="153:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b0ca6007348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b0ca609c2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b0ca609c2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca67c5710"/></to>
    </wire>
    <wire loc="182:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b0ca6023e00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b0ca60c91e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b0ca60c91e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca693a6a8"/></to>
    </wire>
    <wire loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b0ca6013658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b0ca60a45b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b0ca60a45b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca67fa710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b0ca60b22a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca6875710"/></to>
    </wire>
    <wire loc="178:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b0ca6026968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b0ca60c1020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b0ca60c1020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca68c9710"/></to>
    </wire>
    <wire loc="187:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b0ca602b658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b0ca60d68c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b0ca60d68c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca695d710"/></to>
    </wire>
    <wire loc="137:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b0ca5fee878"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b0ca6083dc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b0ca6083dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca673b970"/></to>
    </wire>
    <wire loc="148:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b0ca600d968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b0ca6092bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b0ca6092bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca67a8710"/></to>
    </wire>
    <wire loc="159:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b0ca6010af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b0ca60a1a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b0ca60a1a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca681e710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b0ca60af740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca686c710"/></to>
    </wire>
    <wire loc="193:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b0ca6032658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca6117c38"/></to>
    </wire>
    <wire loc="173:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b0ca601d1a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b0ca60b7930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b0ca60b7930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca68d96a8"/></to>
    </wire>
    <wire loc="162:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b0ca6019020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b0ca60ade18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b0ca60ade18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca6815710"/></to>
    </wire>
    <wire loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b0ca5ff9e00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b0ca607f2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b0ca607f2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca6731970"/></to>
    </wire>
    <wire loc="151:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b0ca6009020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b0ca608e020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b0ca608e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0ca679f710"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b0ca5ee41c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0ca5f972b0"/></to>
    </wire>
    <wire loc="55:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b0ca5fa0758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b0ca5fb7660"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b0ca5fbd2b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b0ca62a3268"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b0ca61f0b18"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b0ca61e7208"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b0ca61e7208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0ca636e020"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b0ca61ea4d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0ca6207020"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b0ca61f4980"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0ca637dc38"/></to>
    </wire>
    <wire loc="43:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b0ca6207020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0ca62f7190"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b0ca6384208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0ca6332ab0"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b0ca632dc70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b0ca61ff838"/></to>
    </wire>
    <wire loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b0ca61ff838"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b0ca62f7938"/></to>
    </wire>
    <wire loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b0ca637ce48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b0ca620de40"/></to>
    </wire>
    <wire loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b0ca620de40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0ca630da90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b0ca630da90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0ca6a05ce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b0ca62f7190"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0ca6a09438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b0ca62f7938"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b0ca6a09be0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b0ca6a01020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0ca628fe00"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0ca628fe00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0ca6295180"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b0ca6a3de70"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b0ca6286020"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b0ca6286020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b0ca62a8160"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2b0ca6a3bd20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b0ca629d020"/></to>
    </wire>
    <wire loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b0ca629d020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b0ca62a7190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b0ca6a38db0"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b0ca629a218"/></to>
    </wire>
    <wire loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b0ca629a218"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b0ca62a3958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2b0ca6343cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0ca5ee41c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b0ca637f478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0ca5ee41c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDC.nc">
      <from><interface-ref name="LCD128x64" scoped="" ref="0x2b0ca63ce2b8"/></from>
      <to><interface-ref name="LCD128x64" scoped="" ref="0x2b0ca65fe020"/></to>
    </wire>
    <wire loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <from><interface-ref name="LCD128x64" scoped="" ref="0x2b0ca65fe020"/></from>
      <to><interface-ref name="LCD128x64" scoped="" ref="0x2b0ca6640020"/></to>
    </wire>
    <wire loc="12:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDC.nc">
      <from><interface-ref name="TouchScreen" scoped="" ref="0x2b0ca63a89c8"/></from>
      <to><interface-ref name="TouchScreen" scoped="" ref="0x2b0ca63b27e8"/></to>
    </wire>
    <wire loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="TouchScreen" scoped="" ref="0x2b0ca63b27e8"/></from>
      <to><interface-ref name="TouchScreen" scoped="" ref="0x2b0ca6437978"/></to>
    </wire>
    <wire loc="13:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b0ca64221e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b0ca6608358"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x2b0ca6608358"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b0ca645fe60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b0ca6607a28"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b0ca6437020"/></to>
    </wire>
    <wire loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="driveA" scoped="" ref="0x2b0ca6421838"/></from>
      <to><interface-ref name="PortG3" scoped="" ref="0x2b0ca60317e0"/></to>
    </wire>
    <wire loc="16:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="driveB" scoped="" ref="0x2b0ca641fb30"/></from>
      <to><interface-ref name="PortG4" scoped="" ref="0x2b0ca603e968"/></to>
    </wire>
    <wire loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="adcX" scoped="" ref="0x2b0ca641ecb8"/></from>
      <to><interface-ref name="PortF0" scoped="" ref="0x2b0ca6023e00"/></to>
    </wire>
    <wire loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="adcY" scoped="" ref="0x2b0ca641c020"/></from>
      <to><interface-ref name="PortF1" scoped="" ref="0x2b0ca602f020"/></to>
    </wire>
    <wire loc="40:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <from><interface-ref name="checkTS" scoped="" ref="0x2b0ca6431640"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0ca5ee41c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b0ca6477690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b0ca6607a28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b0ca646e708"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b0ca646b2f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0ca6488dc8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0ca66063f0"/></to>
    </wire>
    <wire loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b0ca645fe60"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b0ca65dda28"/></to>
    </wire>
    <wire loc="31:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x2b0ca6475a98"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2b0ca65ba880"/></to>
    </wire>
    <wire loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b0ca65e9b28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b0ca646e708"/></to>
    </wire>
    <wire loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b0ca65b8e78"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b0ca6477690"/></to>
    </wire>
    <wire loc="35:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2b0ca65eb348"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b0ca65bdc68"/></to>
    </wire>
    <wire loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b0ca65b8020"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b0ca6484440"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b0ca6484440"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b0ca64988a8"/></to>
    </wire>
    <wire loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b0ca6488080"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b0ca647b318"/></to>
    </wire>
    <wire loc="66:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b0ca646b2f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b0ca6576a40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b0ca6576a40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b0ca6aa74b0"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0ca6596550"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0ca6488dc8"/></to>
    </wire>
    <wire loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b0ca64890d0"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b0ca647da28"/></to>
    </wire>
    <wire loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b0ca647da28"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b0ca64d6c48"/></to>
    </wire>
    <wire loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0ca6497610"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0ca5fde618"/></to>
    </wire>
    <wire loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b0ca6593478"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b0ca64980f0"/></to>
    </wire>
    <wire loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b0ca65a2268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b0ca6597020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b0ca6597020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b0ca6aa5940"/></to>
    </wire>
    <wire loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b0ca64d10c0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b0ca5fc0a80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b0ca6598820"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b0ca6aa5200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0ca6597bd8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0ca6aa4578"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0ca6aa4e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0ca6596550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2b0ca6aa35d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b0ca6aa93f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b0ca6aa1780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0ca5ee41c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b0ca6ae1818"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b0ca6593478"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b0ca6ae0020"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b0ca6593b98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b0ca6ae05b8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b0ca65a2268"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0ca6adf268"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0ca65a2e20"/></to>
    </wire>
    <wire loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x2b0ca65cbbf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0ca5ee41c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="208:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeRectangle" scoped="" ref="0x2b0ca666ee68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0ca5ee41c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="257:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeString" scoped="" ref="0x2b0ca66a5368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0ca5ee41c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="224:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeCircle" scoped="" ref="0x2b0ca668ec10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0ca5ee41c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="316:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeLine" scoped="" ref="0x2b0ca66b9ca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0ca5ee41c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="wait4Controller" scoped="" ref="0x2b0ca6655bd8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0ca5ee41c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="394:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeBar" scoped="" ref="0x2b0ca66c8790"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0ca5ee41c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="285:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="clearScreenNB" scoped="" ref="0x2b0ca6698420"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0ca5ee41c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc" safe="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc" safe="">
      <documentation loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimpleDrawC" loc="1:SimpleDrawC.nc">
      <module/>
    </component>
    <component qname="SimpleDrawAppC.Timer0" loc="44(SimpleDrawAppC.Timer0):/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="33:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0ca5f5d530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0ca5f5d888"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b0ca620bc68"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0SyncC" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0SyncP" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in SYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in SYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in SYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;--> CHANGED TO SYNC-Mode(CPL_CLK)&#9;hglanzer&#10;--> AS0=0 in ASSR&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0ca5f5d530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0ca5f5d888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0ca5f5d530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0ca5f5d888"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0ca5f5d530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0ca5f5d888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="GLCDC" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDC.nc">
      <configuration/>
    </component>
    <component qname="GLCDP" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDP.nc">
      <module/>
    </component>
    <component qname="TouchScreenC" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <configuration/>
    </component>
    <component qname="TouchScreenP" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <module/>
    </component>
    <component qname="TouchScreenC.AdcReadClientC" loc="21(TouchScreenC.AdcReadClientC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LCD128x64C" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <configuration/>
    </component>
    <component qname="LCD128x64P" loc="23:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b0ca603bba0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b0ca6045020" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b0ca6045368" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b0ca6049610" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b0ca6049978" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b0ca6049ce0" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b0ca6046060" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b0ca60dd020" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b0ca60dd388" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b0ca60dd6f0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b0ca60dda20" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncC" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc" abstract="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b0ca620bc68" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b0ca620bc68"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b0ca6208020" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncP" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b0ca6213410" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b0ca6213410"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b0ca6213700" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0ca61f2c68" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0ca61f2c68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0ca6341cd0" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0ca6341cd0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b0ca633e020" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0ca6397510" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0ca6397510"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b0ca65031c8" loc="89:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b0ca6516dd8" loc="42:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b0ca653cc50" loc="52:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x2b0ca65de9d0" loc="23:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x2b0ca65de9d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b0ca5fd8620" loc="58:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b0ca5fd8620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca5fd8970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b0ca5fd9220" loc="57:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b0ca5fd9220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b0ca5fd9570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b0ca5fd6380" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b0ca5fd6380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca5fd66d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0ca5fdb620" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0ca5fdb620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca5fdb970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b0ca5fde618" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0ca5fde618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b0ca5fde968"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b0ca5fdeaf0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b0ca5fdec78"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b0ca5fdee00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b0ca5fd6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b0ca5feaca0" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b0ca5feaca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca5fe9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0ca5fea600" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0ca5fea600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca5fea950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b0ca5fe9398" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b0ca5fe9398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca5fe96e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b0ca5ff0360" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b0ca5ff0360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca5ff06b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b0ca5fe3b98" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b0ca5fe3b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca5ff0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b0ca5fecb08" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b0ca5fecb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca5fece58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b0ca5ff48d8" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b0ca5ff48d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca5ff4c28"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca5ff4db0"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca5fec020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca5fec1a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca5fec330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca5fec4b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca5fec640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca5fec7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b0ca5fed698" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b0ca5fed698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca5fed9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b0ca6035af0" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b0ca6035af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60345e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6034770"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60348f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6034a80"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6034c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6034d90"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6033020"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60331a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b0ca6017658" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b0ca6017658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60179a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6017b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6017cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6017e40"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6016020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60161a8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6016330"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60164b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b0ca6028658" loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b0ca6028658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60289a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6028b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6028cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6028e40"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6027020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60271a8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6027330"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60274b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b0ca602d348" loc="94:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b0ca602d348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca602d698"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca602d820"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca602d9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca602db30"/>
        <function-ref name="get" scoped="" ref="0x2b0ca602dcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca602de40"/>
        <function-ref name="set" scoped="" ref="0x2b0ca602c020"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca602c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b0ca6003348" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b0ca6003348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6003698"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6003820"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60039a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6003b30"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6003cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6003e40"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6002020"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60021a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b0ca602f020" loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b0ca602f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca602f370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca602f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca602f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca602f808"/>
        <function-ref name="get" scoped="" ref="0x2b0ca602f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca602fb18"/>
        <function-ref name="set" scoped="" ref="0x2b0ca602fca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca602fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b0ca6001658" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b0ca6001658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60019a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6001b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6001cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6001e40"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6000020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60001a8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6000330"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60004b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b0ca60127e0" loc="66:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b0ca60127e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6012b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6012cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6012e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6011020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60111a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6011330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60114b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6011640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b0ca6022af0" loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b0ca6022af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6022e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6021020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60211a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6021330"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60214b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6021640"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60217c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6021950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b0ca6025af0" loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b0ca6025af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6025e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6024020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60241a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6024330"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60244b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6024640"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60247c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6024950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b0ca5ffbaf0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b0ca5ffbaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca5ffbe40"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca5ffa020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca5ffa1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca5ffa330"/>
        <function-ref name="get" scoped="" ref="0x2b0ca5ffa4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca5ffa640"/>
        <function-ref name="set" scoped="" ref="0x2b0ca5ffa7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca5ffa950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b0ca600caf0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b0ca600caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca600ce40"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca600b020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca600b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca600b330"/>
        <function-ref name="get" scoped="" ref="0x2b0ca600b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca600b640"/>
        <function-ref name="set" scoped="" ref="0x2b0ca600b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca600b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b0ca600fc78" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b0ca600fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca600e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca600e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca600e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca600e4b8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca600e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca600e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca600e950"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca600ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b0ca601e020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b0ca601e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca601e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca601e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca601e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca601e808"/>
        <function-ref name="get" scoped="" ref="0x2b0ca601e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca601eb18"/>
        <function-ref name="set" scoped="" ref="0x2b0ca601eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca601ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b0ca602a7e0" loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b0ca602a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca602ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca602acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca602ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6036020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60361a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6036330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60364b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6036640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b0ca60317e0" loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b0ca60317e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6031b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6031cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6031e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca603e020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca603e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca603e330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca603e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca603e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b0ca601c348" loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b0ca601c348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca601c698"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca601c820"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca601c9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca601cb30"/>
        <function-ref name="get" scoped="" ref="0x2b0ca601ccb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca601ce40"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6029020"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60291a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b0ca6005020" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b0ca6005020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6005370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60054f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6005680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6005808"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6005990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6005b18"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6005ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6005e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b0ca60081a0" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b0ca60081a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60084f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6008678"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6008800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6008988"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6008b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6008c98"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6008e20"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6007020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b0ca60334d0" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b0ca60334d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6033820"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60339a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6033b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6033cb8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6033e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6032020"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60321a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6032330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b0ca60144d0" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b0ca60144d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6014820"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60149a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6014b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6014cb8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6014e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6013020"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60131a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6013330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b0ca60167e0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b0ca60167e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6016b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6016cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6016e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6015020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60151a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6015330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60154b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6015640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b0ca60277e0" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b0ca60277e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6027b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6027cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6027e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6026020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60261a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6026330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60264b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6026640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b0ca602c4d0" loc="95:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b0ca602c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca602c820"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca602c9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca602cb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca602ccb8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca602ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca602b020"/>
        <function-ref name="set" scoped="" ref="0x2b0ca602b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca602b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b0ca60024d0" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b0ca60024d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6002820"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60029a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6002b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6002cb8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6002e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6001020"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60011a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6001330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b0ca60007e0" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b0ca60007e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6000b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6000cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6000e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca600d020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca600d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca600d330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca600d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca600d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b0ca6011968" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b0ca6011968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6011cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6011e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6010020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60101a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6010330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60104b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6010640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60107c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b0ca6021c78" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b0ca6021c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6020020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60201a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6020330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60204b8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6020640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60207c8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6020950"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6020ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b0ca6024c78" loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b0ca6024c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6023020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60231a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6023330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60234b8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6023640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60237c8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6023950"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6023ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b0ca5ffac78" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b0ca5ffac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca5ff9020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca5ff91a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca5ff9330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca5ff94b8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca5ff9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca5ff97c8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca5ff9950"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca5ff9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b0ca600bc78" loc="59:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b0ca600bc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca600a0f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca600a278"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca600a400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca600a588"/>
        <function-ref name="get" scoped="" ref="0x2b0ca600a710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca600a898"/>
        <function-ref name="set" scoped="" ref="0x2b0ca600aa20"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca600aba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b0ca600ee00" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b0ca600ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca601b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca601b330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca601b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca601b640"/>
        <function-ref name="get" scoped="" ref="0x2b0ca601b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca601b950"/>
        <function-ref name="set" scoped="" ref="0x2b0ca601bad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca601bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b0ca6036968" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b0ca6036968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6036cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6036e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6035020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60351a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6035330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60354b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6035640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60357c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b0ca60181a0" loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b0ca60181a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60186f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6018878"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6018a00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6018b88"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6018d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6017020"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60171a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6017330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b0ca60294d0" loc="84:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b0ca60294d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6029820"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60299a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6029b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6029cb8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6029e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6028020"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60281a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6028330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b0ca602e1a0" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b0ca602e1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca602e4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca602e678"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca602e800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca602e988"/>
        <function-ref name="get" scoped="" ref="0x2b0ca602eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca602ec98"/>
        <function-ref name="set" scoped="" ref="0x2b0ca602ee20"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca602d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b0ca603e968" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b0ca603e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca603ecb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca603ee40"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca603d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca603d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca603d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca603d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca603d640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca603d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b0ca60041a0" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b0ca60041a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60044f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6004678"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6004800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6004988"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6004b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6004c98"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6004e20"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6003020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b0ca6007348" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b0ca6007348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6007698"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6007820"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60079a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6007b30"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6007cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6007e40"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6014020"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60141a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b0ca6023e00" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b0ca6023e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60301a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6030330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60304b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6030640"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60307c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6030950"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6030ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6030c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b0ca6013658" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b0ca6013658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60139a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6013b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6013cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6013e40"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6012020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60121a8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6012330"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60124b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b0ca6015968" loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b0ca6015968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6015cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6015e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6022020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60221a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6022330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60224b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6022640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60227c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b0ca6026968" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b0ca6026968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6026cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6026e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6025020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60251a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6025330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60254b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6025640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60257c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b0ca602b658" loc="96:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b0ca602b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca602b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca602bb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca602bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca602be40"/>
        <function-ref name="get" scoped="" ref="0x2b0ca602a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca602a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca602a330"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca602a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b0ca5fee878" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b0ca5fee878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca5feebc8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca5feed50"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca5ffb020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca5ffb1a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca5ffb330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca5ffb4b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca5ffb640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca5ffb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b0ca600d968" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b0ca600d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca600dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca600de40"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca600c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca600c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca600c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca600c4b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca600c640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca600c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b0ca6010af0" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b0ca6010af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6010e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca600f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca600f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca600f330"/>
        <function-ref name="get" scoped="" ref="0x2b0ca600f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca600f640"/>
        <function-ref name="set" scoped="" ref="0x2b0ca600f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca600f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b0ca6020e00" loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b0ca6020e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca601f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca601f330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca601f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca601f640"/>
        <function-ref name="get" scoped="" ref="0x2b0ca601f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca601f950"/>
        <function-ref name="set" scoped="" ref="0x2b0ca601fad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca601fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b0ca6032658" loc="102:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b0ca6032658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60329a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6032b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6032cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6032e40"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6031020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60311a8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6031330"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60314b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b0ca601d1a0" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b0ca601d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca601d4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca601d678"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca601d800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca601d988"/>
        <function-ref name="get" scoped="" ref="0x2b0ca601db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca601dc98"/>
        <function-ref name="set" scoped="" ref="0x2b0ca601de20"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca601c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b0ca6019020" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b0ca6019020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6019370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60194f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6019680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6019808"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6019990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6019b18"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6019ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6019e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b0ca5ff9e00" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b0ca5ff9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60061a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6006330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60064b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6006640"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60067c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6006950"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6006ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6006c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b0ca6009020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b0ca6009020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6009370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60094f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6009680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6009808"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6009990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6009b18"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6009ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6009e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b0ca6080120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b0ca6080120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6080470"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60805f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6080780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6080908"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6080a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6080c18"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6080da0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca607f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b0ca608d5b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b0ca608d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca608d908"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca608da90"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca608dc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca608dda0"/>
        <function-ref name="get" scoped="" ref="0x2b0ca608c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca608c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca608c330"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca608c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b0ca6083dc0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b0ca6083dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6082170"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60822f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6082480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6082608"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6082790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6082918"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6082aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6082c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b0ca607f2a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b0ca607f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca607f5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca607f780"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca607f908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca607fa90"/>
        <function-ref name="get" scoped="" ref="0x2b0ca607fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca607fda0"/>
        <function-ref name="set" scoped="" ref="0x2b0ca607e020"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca607e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b0ca608c740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b0ca608c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca608ca90"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca608cc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca608cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca608b020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca608b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca608b330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca608b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca608b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b0ca6081020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b0ca6081020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6081370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60814f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6081680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6081808"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6081990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6081b18"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6081ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6081e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b0ca607e430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b0ca607e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca607e780"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca607e908"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca607ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca607ec18"/>
        <function-ref name="get" scoped="" ref="0x2b0ca607eda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca608d020"/>
        <function-ref name="set" scoped="" ref="0x2b0ca608d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca608d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b0ca608b8c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b0ca608b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca608bc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca608bda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca608a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca608a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca608a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca608a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca608a640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca608a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca673b970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca673b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca673bcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca673be48"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca673a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca673a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca673a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca673a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca673a640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca673a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca6738970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca6738970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6738cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6738e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6736020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca67361a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6736330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca67364b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6736640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca67367c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca6734970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca6734970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6734cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6734e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6733020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca67331a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6733330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca67334b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6733640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca67337c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca6731970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca6731970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6731cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6731e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6730020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca67301a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6730330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca67304b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6730640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca67307c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca672e970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca672e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca672ecc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca672ee48"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6758020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca67581a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6758330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca67584b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6758640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca67587c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca6756970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca6756970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6756cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6756e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6755020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca67551a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6755330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca67554b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6755640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca67557c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca6753970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca6753970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6753cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6753e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6752020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca67521a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6752330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca67524b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6752640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca67527c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca6750970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca6750970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6750cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6750e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca674f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca674f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca674f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca674f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca674f640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca674f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b0ca6092bd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b0ca6092bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6091020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60911a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6091330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60914b8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6091640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60917c8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6091950"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6091ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b0ca608e020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b0ca608e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca608e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca608e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca608e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca608e808"/>
        <function-ref name="get" scoped="" ref="0x2b0ca608e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca608eb18"/>
        <function-ref name="set" scoped="" ref="0x2b0ca608eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca608ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b0ca6094930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b0ca6094930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6094c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6094e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6093020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60931a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6093330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60934b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6093640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60937c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b0ca6091d60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b0ca6091d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60900d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6090260"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60903e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6090570"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60906f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6090880"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6090a08"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6090b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b0ca609d120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b0ca609d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca609d470"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca609d5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca609d780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca609d908"/>
        <function-ref name="get" scoped="" ref="0x2b0ca609da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca609dc18"/>
        <function-ref name="set" scoped="" ref="0x2b0ca609dda0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca609c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b0ca6093a50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b0ca6093a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6093da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6092020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60921a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6092330"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60924b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6092640"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60927c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6092950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b0ca6090e18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b0ca6090e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca608f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca608f330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca608f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca608f640"/>
        <function-ref name="get" scoped="" ref="0x2b0ca608f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca608f950"/>
        <function-ref name="set" scoped="" ref="0x2b0ca608fad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca608fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b0ca609c2a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b0ca609c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca609c5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca609c780"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca609c908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca609ca90"/>
        <function-ref name="get" scoped="" ref="0x2b0ca609cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca609cda0"/>
        <function-ref name="set" scoped="" ref="0x2b0ca609b020"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca609b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca67af6a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca67af6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca67af9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca67afb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca67afd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca67ae020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca67ae1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca67ae330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca67ae4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca67ae640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca67ac710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca67ac710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca67aca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca67acbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca67acd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca67aa020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca67aa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca67aa330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca67aa4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca67aa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca67a8710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca67a8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca67a8a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca67a8be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca67a8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca67a7020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca67a71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca67a7330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca67a74b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca67a7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca67a5710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca67a5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca67a5a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca67a5be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca67a5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca67a4020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca67a41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca67a4330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca67a44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca67a4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca67a2710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca67a2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca67a2a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca67a2be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca67a2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca67a1020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca67a11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca67a1330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca67a14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca67a1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca679f710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca679f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca679fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca679fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca679fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca679e020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca679e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca679e330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca679e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca679e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca679c710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca679c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca679ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca679cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca679cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca679b020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca679b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca679b330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca679b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca679b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca67c5710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca67c5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca67c5a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca67c5be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca67c5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca67c4020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca67c41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca67c4330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca67c44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca67c4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b0ca60a3740" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b0ca60a3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60a3a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60a3c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60a3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60a2020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60a21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60a2330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60a24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60a2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b0ca60a0bd8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b0ca60a0bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca609e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca609e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca609e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca609e4b8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca609e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca609e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca609e950"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca609ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b0ca60a5500" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b0ca60a5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60a5850"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60a59d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60a5b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60a5ce8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60a5e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60a4020"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60a41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60a4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b0ca60a28c8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b0ca60a28c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60a2c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60a2da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60a1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60a11a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60a1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60a14b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60a1640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60a17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b0ca609ed60" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b0ca609ed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60ad0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60ad260"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60ad3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60ad570"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60ad6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60ad880"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60ada08"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60adb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b0ca60a45b8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b0ca60a45b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60a4908"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60a4a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60a4c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60a4da0"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60a3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60a31a8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60a3330"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60a34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b0ca60a1a50" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b0ca60a1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60a1da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60a0020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60a01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60a0330"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60a04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60a0640"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60a07c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60a0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b0ca60ade18" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b0ca60ade18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60ac1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60ac330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60ac4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60ac640"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60ac7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60ac950"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60acad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60acc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca67fd6a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca67fd6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca67fd9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca67fdb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca67fdd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca67fc020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca67fc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca67fc330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca67fc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca67fc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca67fa710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca67fa710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca67faa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca67fabe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca67fad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca67f9020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca67f91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca67f9330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca67f94b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca67f9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca67f7710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca67f7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca67f7a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca67f7be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca67f7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca67f5020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca67f51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca67f5330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca67f54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca67f5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca6821710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca6821710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6821a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6821be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6821d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6820020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca68201a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6820330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca68204b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6820640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca681e710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca681e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca681ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca681ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca681ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca681d020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca681d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca681d330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca681d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca681d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca681b710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca681b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca681ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca681bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca681bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca681a020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca681a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca681a330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca681a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca681a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca6818710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca6818710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6818a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6818be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6818d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6817020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca68171a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6817330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca68174b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6817640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca6815710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca6815710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6815a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6815be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6815d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6814020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca68141a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6814330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca68144b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6814640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b0ca60b4120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b0ca60b4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60b4470"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60b45f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60b4780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60b4908"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60b4a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60b4c18"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60b4da0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b0ca60b05b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b0ca60b05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60b0908"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60b0a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60b0c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60b0da0"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60af020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60af1a8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60af330"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60af4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b0ca60a7e40" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b0ca60a7e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60a61c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60a6348"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60a64d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60a6658"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60a67e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60a6968"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60a6af0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60a6c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b0ca60b22a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b0ca60b22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60b25f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60b2780"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60b2908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60b2a90"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60b2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60b2da0"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60b1020"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60b11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b0ca60af740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b0ca60af740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60afa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60afc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60afda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60ae020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60ae1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60ae330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60ae4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60ae640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b0ca60b5020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b0ca60b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60b5370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60b54f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60b5680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60b5808"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60b5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60b5b18"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60b5ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60b5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b0ca60b1430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b0ca60b1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60b1780"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60b1908"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60b1a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60b1c18"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60b1da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60b0020"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60b01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60b0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b0ca60ae8c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b0ca60ae8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60aec18"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60aeda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60bd020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60bd1a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60bd330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60bd4b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60bd640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60bd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca687f6a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca687f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca687f9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca687fb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca687fd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca687e020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca687e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca687e330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca687e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca687e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca687c710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca687c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca687ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca687cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca687cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca687b020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca687b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca687b330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca687b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca687b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca6879710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca6879710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6879a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6879be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6879d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6877020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca68771a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6877330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca68774b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6877640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca6875710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca6875710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6875a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6875be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6875d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6874020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca68741a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6874330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca68744b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6874640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca6872710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca6872710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6872a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6872be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6872d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6871020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca68711a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6871330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca68714b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6871640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca686f710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca686f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca686fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca686fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca686fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca686e020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca686e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca686e330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca686e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca686e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca686c710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca686c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca686ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca686cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca686cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca686b020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca686b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca686b330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca686b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca686b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca6869710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca6869710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6869a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6869be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6869d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6898020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca68981a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6898330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca68984b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6898640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b0ca60c5bd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b0ca60c5bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60c4020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60c41a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60c4330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60c44b8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60c4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60c47c8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60c4950"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60c4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b0ca60c1020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b0ca60c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60c1370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60c14f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60c1680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60c1808"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60c1990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60c1b18"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60c1ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60c1e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b0ca60b7930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b0ca60b7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60b7c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60b7e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60b6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60b61a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60b6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60b64b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60b6640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60b67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b0ca60c4d60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b0ca60c4d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60c30d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60c3260"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60c33e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60c3570"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60c36f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60c3880"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60c3a08"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60c3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b0ca60c0120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b0ca60c0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60c0470"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60c05f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60c0780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60c0908"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60c0a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60c0c18"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60c0da0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b0ca60b6a50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b0ca60b6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60b6da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60c5020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60c51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60c5330"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60c54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60c5640"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60c57c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60c5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b0ca60c3e18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b0ca60c3e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60c21a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60c2330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60c24b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60c2640"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60c27c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60c2950"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60c2ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60c2c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b0ca60bf2a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b0ca60bf2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60bf5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60bf780"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60bf908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60bfa90"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60bfc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60bfda0"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60be020"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60be1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca68d96a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca68d96a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca68d99f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca68d9b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca68d9d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca68d8020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca68d81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca68d8330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca68d84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca68d8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca68d6710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca68d6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca68d6a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca68d6be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca68d6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca68d5020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca68d51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca68d5330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca68d54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca68d5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca68d3710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca68d3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca68d3a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca68d3be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca68d3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca68d2020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca68d21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca68d2330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca68d24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca68d2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca68d0710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca68d0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca68d0a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca68d0be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca68d0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca68ce020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca68ce1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca68ce330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca68ce4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca68ce640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca68cc710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca68cc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca68cca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca68ccbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca68ccd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca68cb020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca68cb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca68cb330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca68cb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca68cb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca68c9710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca68c9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca68c9a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca68c9be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca68c9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca68fa020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca68fa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca68fa330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca68fa4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca68fa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca68f8710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca68f8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca68f8a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca68f8be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca68f8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca68f7020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca68f71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca68f7330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca68f74b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca68f7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca68f5710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca68f5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca68f5a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca68f5be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca68f5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca68f4020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca68f41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca68f4330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca68f44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca68f4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b0ca60c7430" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b0ca60c7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60c7780"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60c7908"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60c7a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60c7c18"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60c7da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60c6020"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60c61a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60c6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b0ca60d68c8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b0ca60d68c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60d6c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60d6da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60d5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60d51a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60d5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60d54b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60d5640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60d57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b0ca60c91e8" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b0ca60c91e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60c9538"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60c96c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60c9848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60c99d0"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60c9b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60c9ce0"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60c9e68"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b0ca60c65b8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b0ca60c65b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60c6908"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60c6a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60c6c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60c6da0"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60d7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60d71a8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60d7330"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60d74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b0ca60d5a50" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b0ca60d5a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60d5da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60d4020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60d41a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60d4330"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60d44b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60d4640"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60d47c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60d4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b0ca60c82a8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b0ca60c82a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60c85f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60c8780"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60c8908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60c8a90"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60c8c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60c8da0"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60c7020"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60c71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b0ca60d7740" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b0ca60d7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60d7a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60d7c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60d7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60d6020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60d61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60d6330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60d64b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60d6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b0ca60d4bd8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b0ca60d4bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60d2020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60d21a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60d2330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60d24b8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60d2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60d27c8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60d2950"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60d2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca693a6a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca693a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca693a9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca693ab80"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca693ad08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6939020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca69391a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6939330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca69394b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6939640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca6937710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca6937710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6937a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6937be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6937d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6936020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca69361a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6936330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca69364b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6936640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca6934710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca6934710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6934a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6934be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6934d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6933020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca69331a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6933330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca69334b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6933640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca6931710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca6931710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6931a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6931be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6931d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca692f020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca692f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca692f330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca692f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca692f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca692d710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca692d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca692da60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca692dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca692dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca695f020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca695f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca695f330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca695f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca695f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca695d710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca695d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca695da60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca695dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca695dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca695c020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca695c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca695c330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca695c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca695c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca695a710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca695a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca695aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca695abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca695ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6959020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca69591a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6959330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca69594b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6959640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca6957710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca6957710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6957a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6957be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6957d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6956020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca69561a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6956330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca69564b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6956640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca60deac0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca60deac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60dee10"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60ec020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60ec1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60ec330"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60ec4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60ec640"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60ec7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60ec950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca60fbdb8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca60fbdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60fa170"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60fa2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60fa480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60fa608"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60fa790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60fa918"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60faaa0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60fac28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca60f53e0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca60f53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60f5730"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60f58b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60f5a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60f5bc8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60f5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60f4020"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60f41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60f4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca61027e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca61027e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6102b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6102cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6102e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6101020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca61011a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6101330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca61014b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6101640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca60fec38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca60fec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca60fd020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca60fd1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca60fd330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca60fd4b8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca60fd640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca60fd7c8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca60fd950"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca60fdad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca610a020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca610a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca610a370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca610a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca610a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca610a808"/>
        <function-ref name="get" scoped="" ref="0x2b0ca610a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca610ab18"/>
        <function-ref name="set" scoped="" ref="0x2b0ca610aca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca610ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca6105480" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca6105480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca61057d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6105958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6105ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6105c68"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6105df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6116020"/>
        <function-ref name="set" scoped="" ref="0x2b0ca61161a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6116330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca61137e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca61137e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6113b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6113cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6113e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6112020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca61121a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6112330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca61124b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6112640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca610e970" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca610e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca610ecc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca610ee48"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca611f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca611f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca611f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca611f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca611f640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca611f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca611bab0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca611bab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca611be00"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca611a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca611a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca611a330"/>
        <function-ref name="get" scoped="" ref="0x2b0ca611a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca611a640"/>
        <function-ref name="set" scoped="" ref="0x2b0ca611a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca611a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca6117c38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca6117c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6128020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca61281a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6128330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca61284b8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6128640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca61287c8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6128950"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6128ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca6123020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca6123020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6123370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca61234f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6123680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6123808"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6123990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6123b18"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6123ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6123e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0ca6130180" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0ca6130180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca61304d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6130658"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca61307e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6130968"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6130af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6130c78"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6130e00"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca612f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0ca616b2c0" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0ca616b2c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b0ca5edc128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b0ca5edc128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca616b610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b0ca616b8f0" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0ca616b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b0ca616bc40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b0ca616bdc8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b0ca616a020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b0ca616a1a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b0ca616a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b0ca6188898" loc="60:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b0ca6188898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca6188be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b0ca6189198" loc="57:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b0ca6189198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b0ca61894e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b0ca61881d0" loc="59:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b0ca61881d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca6188520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b0ca61897d0" loc="58:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b0ca61897d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca6189b20"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b0ca6189ca8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b0ca6189e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b0ca5ee41c8" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b0ca5ee41c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0ca5ee4518"/>
        <function-ref name="runTask" scoped="" ref="0x2b0ca5ee46a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b0ca5ee1600" loc="47:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b0ca5ee1600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca5ee1950"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b0ca5ee1ad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b0ca5ee1c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b0ca5f972b0" loc="56:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b0ca5f972b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0ca5f97600"/>
        <function-ref name="runTask" scoped="" ref="0x2b0ca5f97788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b0ca5fa0758" loc="57:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b0ca5fa0758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b0ca5fa0aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b0ca5f98448" loc="55:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b0ca5f98448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca5f98798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b0ca5f98920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b0ca5f98aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b0ca5fbd2b0" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b0ca5fbd2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b0ca5fbd600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b0ca5fb7660" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b0ca5fb7660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b0ca5fb79b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b0ca5fc0a80" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b0ca5fc0a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b0ca5fc0dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b0ca61a5c08" loc="11:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b0ca61a5c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0ca5f5d530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0ca5f5d888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0ca61a4e78"/>
        <function-ref name="fired" scoped="" ref="0x2b0ca619a5a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0ca61a42d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0ca619ae48"/>
        <function-ref name="getdt" scoped="" ref="0x2b0ca61a3748"/>
        <function-ref name="gett0" scoped="" ref="0x2b0ca61a32f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0ca619a9f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0ca619b7e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0ca61a48a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0ca619bc88"/>
        <function-ref name="stop" scoped="" ref="0x2b0ca619a158"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button2" ref="0x2b0ca618f6a0" loc="5:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button2" scoped="" ref="0x2b0ca618f6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca618f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca618fb78"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca618fd00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca618e020"/>
        <function-ref name="get" scoped="" ref="0x2b0ca618e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca618e330"/>
        <function-ref name="set" scoped="" ref="0x2b0ca618e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca618e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b0ca5fdca20" loc="2:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b0ca5fdca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b0ca5fdcd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button5" ref="0x2b0ca618b020" loc="8:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button5" scoped="" ref="0x2b0ca618b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca618b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca618b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca618b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca618b808"/>
        <function-ref name="get" scoped="" ref="0x2b0ca618b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca618bb18"/>
        <function-ref name="set" scoped="" ref="0x2b0ca618bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca618be28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button7" ref="0x2b0ca619d390" loc="10:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button7" scoped="" ref="0x2b0ca619d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca619d6e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca619d868"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca619d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca619db78"/>
        <function-ref name="get" scoped="" ref="0x2b0ca619dd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca619c020"/>
        <function-ref name="set" scoped="" ref="0x2b0ca619c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca619c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button0" ref="0x2b0ca6191108" loc="3:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button0" scoped="" ref="0x2b0ca6191108"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6191458"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca61915e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca6191768"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca61918f0"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6191a78"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca6191c00"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6191d88"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca6190020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button3" ref="0x2b0ca618e9b0" loc="6:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button3" scoped="" ref="0x2b0ca618e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca618ed00"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca618d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca618d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca618d330"/>
        <function-ref name="get" scoped="" ref="0x2b0ca618d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca618d640"/>
        <function-ref name="set" scoped="" ref="0x2b0ca618d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca618d950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GLCD" ref="0x2b0ca61c5d90" loc="12:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GLCD" scoped="" ref="0x2b0ca61c5d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GLCD"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b0ca61a1170"/>
        <function-ref name="tsPressed" scoped="" ref="0x2b0ca61a12f8"/>
        <function-ref name="initDone" scoped="" ref="0x2b0ca61a1480"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b0ca61a1608"/>
        <function-ref name="calibrated" scoped="" ref="0x2b0ca61a1790"/>
        <function-ref name="isPressed" scoped="" ref="0x2b0ca61a1918"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b0ca61a1aa0"/>
        <function-ref name="calibrateTouchScreen" scoped="" ref="0x2b0ca61a1c28"/>
        <function-ref name="barWritten" scoped="" ref="0x2b0ca61a1db0"/>
        <function-ref name="getXY" scoped="" ref="0x2b0ca61a0020"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b0ca61a01a8"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b0ca61a0330"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b0ca61a04b8"/>
        <function-ref name="copyByte" scoped="" ref="0x2b0ca61a0740"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b0ca61a08c8"/>
        <function-ref name="xyReady" scoped="" ref="0x2b0ca61a0a50"/>
        <function-ref name="writeByte" scoped="" ref="0x2b0ca61a0bd8"/>
        <function-ref name="setPixel" scoped="" ref="0x2b0ca61a0d60"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b0ca61c4020"/>
        <function-ref name="getCalibration" scoped="" ref="0x2b0ca61c41a8"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b0ca61c4330"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b0ca61c44b8"/>
        <function-ref name="writePixel" scoped="" ref="0x2b0ca61c4640"/>
        <function-ref name="initLCD" scoped="" ref="0x2b0ca61c47c8"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b0ca61c4950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button1" ref="0x2b0ca6190390" loc="4:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button1" scoped="" ref="0x2b0ca6190390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca61906e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6190868"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca61909f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca6190b78"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6190d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca618f020"/>
        <function-ref name="set" scoped="" ref="0x2b0ca618f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca618f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button6" ref="0x2b0ca618a1c8" loc="9:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button6" scoped="" ref="0x2b0ca618a1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca618a518"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca618a6a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca618a828"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca618a9b0"/>
        <function-ref name="get" scoped="" ref="0x2b0ca618ab38"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca618acc0"/>
        <function-ref name="set" scoped="" ref="0x2b0ca618ae48"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca619d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button4" ref="0x2b0ca618dcc0" loc="7:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button4" scoped="" ref="0x2b0ca618dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca618c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca618c228"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca618c3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca618c538"/>
        <function-ref name="get" scoped="" ref="0x2b0ca618c6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca618c848"/>
        <function-ref name="set" scoped="" ref="0x2b0ca618c9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca618cb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0ca61e3420" loc="45:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="SimpleDrawAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0ca61e3420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0ca5f5d530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0ca5f5d888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0ca63a06c8"/>
        <function-ref name="fired" scoped="" ref="0x2b0ca63a2db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0ca63a1ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0ca63a1688"/>
        <function-ref name="getdt" scoped="" ref="0x2b0ca639e020"/>
        <function-ref name="gett0" scoped="" ref="0x2b0ca63a0b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0ca63a1238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0ca63a2020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0ca63a00f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0ca63a24c0"/>
        <function-ref name="stop" scoped="" ref="0x2b0ca63a2960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b0ca61f0b18" loc="49:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b0ca61f0b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0ca5f5d530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0ca5f5d888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0ca61edd98"/>
        <function-ref name="fired" scoped="" ref="0x2b0ca61ee4d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0ca61ed1f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0ca61eed78"/>
        <function-ref name="getdt" scoped="" ref="0x2b0ca61ec688"/>
        <function-ref name="gett0" scoped="" ref="0x2b0ca61ec238"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0ca61ee928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0ca61ef6f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0ca61ed7c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0ca61efb90"/>
        <function-ref name="stop" scoped="" ref="0x2b0ca61ee088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b0ca61e7208" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b0ca61e7208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0ca5f5d530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0ca5f5d888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0ca61f95f0"/>
        <function-ref name="fired" scoped="" ref="0x2b0ca61fcb28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0ca61fa8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0ca61fa470"/>
        <function-ref name="getdt" scoped="" ref="0x2b0ca61f8020"/>
        <function-ref name="gett0" scoped="" ref="0x2b0ca61f9a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0ca61fa020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0ca61e7d50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0ca61f9020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0ca61fc238"/>
        <function-ref name="stop" scoped="" ref="0x2b0ca61fc6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b0ca61f4980" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b0ca61f4980"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0ca5f5d530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0ca5f5d888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0ca61f6560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0ca61ea4d8" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0ca61ea4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca61ea828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b0ca620de40" loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b0ca620de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0ca5f5d530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0ca5f5d888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0ca6211be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0ca6210548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0ca62100c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b0ca62109d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0ca6207020" loc="35:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0ca6207020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca6207370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b0ca61ff838" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b0ca61ff838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0ca5f5d530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0ca5f5d888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0ca61fd020"/>
        <function-ref name="fired" scoped="" ref="0x2b0ca6205020"/>
        <function-ref name="startAt" scoped="" ref="0x2b0ca6205930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0ca62054a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0ca61fd4a8"/>
        <function-ref name="start" scoped="" ref="0x2b0ca62065e0"/>
        <function-ref name="stop" scoped="" ref="0x2b0ca6206ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b0ca62f7938" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b0ca62f7938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0ca5f5d530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0ca5f5d888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0ca630d020"/>
        <function-ref name="fired" scoped="" ref="0x2b0ca630f088"/>
        <function-ref name="startAt" scoped="" ref="0x2b0ca630f998"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0ca630f510"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0ca630d4a8"/>
        <function-ref name="start" scoped="" ref="0x2b0ca62f66b0"/>
        <function-ref name="stop" scoped="" ref="0x2b0ca62f6b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0ca62f7190" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0ca62f7190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b0ca5eddd88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b0ca5eddd88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca62f74e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b0ca630da90" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0ca630da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0ca5f5d530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0ca5f5d888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0ca630c828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0ca630b190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0ca630ccb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b0ca630b618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b0ca6a3de70" loc="38:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b0ca6a3de70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b0ca6a3b1e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b0ca6a3b370"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b0ca6a3b4f8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b0ca6a3b680"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b0ca6a3b808"/>
        <function-ref name="setControl" scoped="" ref="0x2b0ca6a3b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b0ca6a09be0" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b0ca6a09be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0ca5f5d530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0ca5f5d888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0ca6a05270"/>
        <function-ref name="fired" scoped="" ref="0x2b0ca6a06310"/>
        <function-ref name="startAt" scoped="" ref="0x2b0ca6a06c20"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0ca6a06798"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0ca6a056f8"/>
        <function-ref name="start" scoped="" ref="0x2b0ca6a08970"/>
        <function-ref name="stop" scoped="" ref="0x2b0ca6a08e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0ca6a09438" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0ca6a09438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca6a09788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b0ca6a05ce0" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0ca6a05ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0ca5f5d530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0ca5f5d888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0ca6a04ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0ca6a034a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0ca6a03020"/>
        <function-ref name="overflow" scoped="" ref="0x2b0ca6a03930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x2b0ca6a38db0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b0ca6a38db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b0ca6a36918"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b0ca6a362f8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b0ca6a36480"/>
        <function-ref name="countBusy" scoped="" ref="0x2b0ca6a36608"/>
        <function-ref name="getAssr" scoped="" ref="0x2b0ca6a36790"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b0ca6a36170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b0ca6a3bd20" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b0ca6a3bd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0ca6a38510"/>
        <function-ref name="fired" scoped="" ref="0x2b0ca6a392b0"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6a3a8f0"/>
        <function-ref name="reset" scoped="" ref="0x2b0ca6a39738"/>
        <function-ref name="isOn" scoped="" ref="0x2b0ca6a38998"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6a3ad78"/>
        <function-ref name="start" scoped="" ref="0x2b0ca6a39bc0"/>
        <function-ref name="stop" scoped="" ref="0x2b0ca6a38088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b0ca6a01020" loc="37:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0ca6a01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0ca6a3d0f8"/>
        <function-ref name="test" scoped="" ref="0x2b0ca6a3e7a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6a01ba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b0ca6a3d580"/>
        <function-ref name="getScale" scoped="" ref="0x2b0ca6a3da58"/>
        <function-ref name="reset" scoped="" ref="0x2b0ca6a009e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b0ca6a00560"/>
        <function-ref name="isOn" scoped="" ref="0x2b0ca6a3ec30"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6a00088"/>
        <function-ref name="start" scoped="" ref="0x2b0ca6a00e70"/>
        <function-ref name="stop" scoped="" ref="0x2b0ca6a3e320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b0ca6286020" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b0ca6286020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b0ca6286370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b0ca62864f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b0ca6286680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b0ca6286808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b0ca6286990"/>
        <function-ref name="setControl" scoped="" ref="0x2b0ca6286b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b0ca629a218" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b0ca629a218"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b0ca629ad10"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b0ca629a6f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b0ca629a878"/>
        <function-ref name="countBusy" scoped="" ref="0x2b0ca629aa00"/>
        <function-ref name="getAssr" scoped="" ref="0x2b0ca629ab88"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b0ca629a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b0ca629d020" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b0ca629d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0ca629b7a8"/>
        <function-ref name="fired" scoped="" ref="0x2b0ca629c560"/>
        <function-ref name="get" scoped="" ref="0x2b0ca629dba0"/>
        <function-ref name="reset" scoped="" ref="0x2b0ca629c9e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b0ca629bc30"/>
        <function-ref name="set" scoped="" ref="0x2b0ca629c088"/>
        <function-ref name="start" scoped="" ref="0x2b0ca629ce70"/>
        <function-ref name="stop" scoped="" ref="0x2b0ca629b320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0ca628fe00" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0ca628fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0ca62880f8"/>
        <function-ref name="test" scoped="" ref="0x2b0ca6289798"/>
        <function-ref name="get" scoped="" ref="0x2b0ca628ca18"/>
        <function-ref name="setScale" scoped="" ref="0x2b0ca6288580"/>
        <function-ref name="getScale" scoped="" ref="0x2b0ca6288a58"/>
        <function-ref name="reset" scoped="" ref="0x2b0ca628a980"/>
        <function-ref name="overflow" scoped="" ref="0x2b0ca628a4f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b0ca6289c20"/>
        <function-ref name="set" scoped="" ref="0x2b0ca628a020"/>
        <function-ref name="start" scoped="" ref="0x2b0ca628ae08"/>
        <function-ref name="stop" scoped="" ref="0x2b0ca6289310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b0ca62a8160" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b0ca62a8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b0ca62a84b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b0ca62a8638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b0ca62a87c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b0ca62a8948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b0ca62a8ad0"/>
        <function-ref name="setControl" scoped="" ref="0x2b0ca62a8c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b0ca62a3268" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b0ca62a3268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b0ca62a35b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b0ca62a3958" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b0ca62a3958"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b0ca62a24b8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b0ca62a3e30"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b0ca62a2020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b0ca62a21a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b0ca62a2330"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b0ca62a3ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b0ca62a7190" loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b0ca62a7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0ca62a5930"/>
        <function-ref name="fired" scoped="" ref="0x2b0ca62a66d0"/>
        <function-ref name="get" scoped="" ref="0x2b0ca62a7d10"/>
        <function-ref name="reset" scoped="" ref="0x2b0ca62a6b58"/>
        <function-ref name="isOn" scoped="" ref="0x2b0ca62a5db8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca62a61f8"/>
        <function-ref name="start" scoped="" ref="0x2b0ca62a5020"/>
        <function-ref name="stop" scoped="" ref="0x2b0ca62a54a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0ca6295180" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0ca6295180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0ca6292270"/>
        <function-ref name="test" scoped="" ref="0x2b0ca6293930"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6295d00"/>
        <function-ref name="setScale" scoped="" ref="0x2b0ca62926f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b0ca6292bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b0ca6294b58"/>
        <function-ref name="overflow" scoped="" ref="0x2b0ca62946d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b0ca6293db8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca62941f8"/>
        <function-ref name="start" scoped="" ref="0x2b0ca6293020"/>
        <function-ref name="stop" scoped="" ref="0x2b0ca62934a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b0ca6343cf0" loc="74:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b0ca6343cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0ca63420a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b0ca6342228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b0ca632dc70" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b0ca632dc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0ca5f5d530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0ca5f5d888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0ca6343410"/>
        <function-ref name="fired" scoped="" ref="0x2b0ca632b4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b0ca632bdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0ca632b930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0ca6343898"/>
        <function-ref name="start" scoped="" ref="0x2b0ca632c9f0"/>
        <function-ref name="stop" scoped="" ref="0x2b0ca632b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0ca6332ab0" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0ca6332ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0ca5f5d530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0ca5f5d888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0ca632ed60"/>
        <function-ref name="fired" scoped="" ref="0x2b0ca6330470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0ca632e1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0ca6330d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b0ca632d648"/>
        <function-ref name="gett0" scoped="" ref="0x2b0ca632d1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0ca63308c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0ca6331620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0ca632e790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0ca6331ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b0ca6330020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b0ca637f478" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b0ca637f478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0ca637f7c8"/>
        <function-ref name="runTask" scoped="" ref="0x2b0ca637f950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b0ca6384208" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b0ca6384208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0ca5f5d530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0ca5f5d888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0ca63805f0"/>
        <function-ref name="fired" scoped="" ref="0x2b0ca6383b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0ca63818c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0ca6381470"/>
        <function-ref name="getdt" scoped="" ref="0x2b0ca637f020"/>
        <function-ref name="gett0" scoped="" ref="0x2b0ca6380a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0ca6381020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0ca6384d50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0ca6380020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0ca6383238"/>
        <function-ref name="stop" scoped="" ref="0x2b0ca63836d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0ca636e020" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0ca636e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0ca5f5d530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0ca5f5d888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0ca6385358"/>
        <function-ref name="fired" scoped="" ref="0x2b0ca63899b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0ca6387748"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0ca63872d8"/>
        <function-ref name="getdt" scoped="" ref="0x2b0ca6385c38"/>
        <function-ref name="gett0" scoped="" ref="0x2b0ca63857c8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0ca6389e28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0ca636eb88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0ca6387d38"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0ca6389088"/>
        <function-ref name="stop" scoped="" ref="0x2b0ca6389548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b0ca637dc38" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b0ca637dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0ca5f5d530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0ca5f5d888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0ca637c820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b0ca637ce48" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0ca637ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0ca5f5d530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0ca5f5d888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0ca638dbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0ca638c548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0ca638c0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b0ca638c9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GLCD" ref="0x2b0ca639d298" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDC.nc">
      <component-ref qname="GLCDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GLCD" scoped="" ref="0x2b0ca639d298"/></type-interface>
      <instance>
        <interfacedef-ref qname="GLCD"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b0ca639d5e8"/>
        <function-ref name="tsPressed" scoped="" ref="0x2b0ca639d770"/>
        <function-ref name="initDone" scoped="" ref="0x2b0ca639d8f8"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b0ca639da80"/>
        <function-ref name="calibrated" scoped="" ref="0x2b0ca639dc08"/>
        <function-ref name="isPressed" scoped="" ref="0x2b0ca639dd90"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b0ca639a020"/>
        <function-ref name="calibrateTouchScreen" scoped="" ref="0x2b0ca639a1a8"/>
        <function-ref name="barWritten" scoped="" ref="0x2b0ca639a330"/>
        <function-ref name="getXY" scoped="" ref="0x2b0ca639a4b8"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b0ca639a640"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b0ca639a7c8"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b0ca639a950"/>
        <function-ref name="copyByte" scoped="" ref="0x2b0ca639abd8"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b0ca639ad60"/>
        <function-ref name="xyReady" scoped="" ref="0x2b0ca6399020"/>
        <function-ref name="writeByte" scoped="" ref="0x2b0ca63991a8"/>
        <function-ref name="setPixel" scoped="" ref="0x2b0ca6399330"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b0ca63994b8"/>
        <function-ref name="getCalibration" scoped="" ref="0x2b0ca6399640"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b0ca63997c8"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b0ca6399950"/>
        <function-ref name="writePixel" scoped="" ref="0x2b0ca6399ad8"/>
        <function-ref name="initLCD" scoped="" ref="0x2b0ca6399c60"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b0ca6399de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LCD128x64" ref="0x2b0ca63ce2b8" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDP.nc">
      <component-ref qname="GLCDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b0ca63ce2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b0ca63ce608"/>
        <function-ref name="initDone" scoped="" ref="0x2b0ca63ce790"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b0ca63ce918"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b0ca63ceaa0"/>
        <function-ref name="barWritten" scoped="" ref="0x2b0ca63cec28"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b0ca63cedb0"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b0ca63aa020"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b0ca63aa1a8"/>
        <function-ref name="copyByte" scoped="" ref="0x2b0ca63aa330"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b0ca63aa4b8"/>
        <function-ref name="writeByte" scoped="" ref="0x2b0ca63aa640"/>
        <function-ref name="setPixel" scoped="" ref="0x2b0ca63aa7c8"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b0ca63aa950"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b0ca63aabd8"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b0ca63aad60"/>
        <function-ref name="writePixel" scoped="" ref="0x2b0ca63a7020"/>
        <function-ref name="initLCD" scoped="" ref="0x2b0ca63a71a8"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b0ca63a7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GLCD" ref="0x2b0ca63af208" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDP.nc">
      <component-ref qname="GLCDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GLCD" scoped="" ref="0x2b0ca63af208"/></type-interface>
      <instance>
        <interfacedef-ref qname="GLCD"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b0ca63af558"/>
        <function-ref name="tsPressed" scoped="" ref="0x2b0ca63af6e0"/>
        <function-ref name="initDone" scoped="" ref="0x2b0ca63af868"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b0ca63af9f0"/>
        <function-ref name="calibrated" scoped="" ref="0x2b0ca63afb78"/>
        <function-ref name="isPressed" scoped="" ref="0x2b0ca63afd00"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b0ca63ae020"/>
        <function-ref name="calibrateTouchScreen" scoped="" ref="0x2b0ca63ae1a8"/>
        <function-ref name="barWritten" scoped="" ref="0x2b0ca63ae330"/>
        <function-ref name="getXY" scoped="" ref="0x2b0ca63ae4b8"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b0ca63ae640"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b0ca63ae7c8"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b0ca63ae950"/>
        <function-ref name="copyByte" scoped="" ref="0x2b0ca63aebd8"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b0ca63aed60"/>
        <function-ref name="xyReady" scoped="" ref="0x2b0ca63ad020"/>
        <function-ref name="writeByte" scoped="" ref="0x2b0ca63ad1a8"/>
        <function-ref name="setPixel" scoped="" ref="0x2b0ca63ad330"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b0ca63ad4b8"/>
        <function-ref name="getCalibration" scoped="" ref="0x2b0ca63ad640"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b0ca63ad7c8"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b0ca63ad950"/>
        <function-ref name="writePixel" scoped="" ref="0x2b0ca63adad8"/>
        <function-ref name="initLCD" scoped="" ref="0x2b0ca63adc60"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b0ca63adde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TouchScreen" ref="0x2b0ca63a89c8" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDP.nc">
      <component-ref qname="GLCDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TouchScreen" scoped="" ref="0x2b0ca63a89c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TouchScreen"/>
      </instance>
      <interface-functions>
        <function-ref name="tsPressed" scoped="" ref="0x2b0ca63a8d18"/>
        <function-ref name="isPressed" scoped="" ref="0x2b0ca63ab020"/>
        <function-ref name="getXY" scoped="" ref="0x2b0ca63ab1a8"/>
        <function-ref name="xyReady" scoped="" ref="0x2b0ca63ab330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TouchScreen" ref="0x2b0ca63b27e8" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <component-ref qname="TouchScreenC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TouchScreen" scoped="" ref="0x2b0ca63b27e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TouchScreen"/>
      </instance>
      <interface-functions>
        <function-ref name="tsPressed" scoped="" ref="0x2b0ca63b2b38"/>
        <function-ref name="isPressed" scoped="" ref="0x2b0ca63b2cc0"/>
        <function-ref name="getXY" scoped="" ref="0x2b0ca63b2e48"/>
        <function-ref name="xyReady" scoped="" ref="0x2b0ca6428020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x2b0ca64221e0" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b0ca64221e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b0ca6422d28"/>
        <function-ref name="readDone" scoped="" ref="0x2b0ca64211c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="driveA" ref="0x2b0ca6421838" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="driveA" scoped="" ref="0x2b0ca6421838"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca6421b88"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca6421d10"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca641f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca641f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b0ca641f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca641f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca641f640"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca641f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x2b0ca6437020" loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b0ca6437020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b0ca6437370"/>
        <function-ref name="getChannel" scoped="" ref="0x2b0ca64374f8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b0ca6437680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="checkTS" ref="0x2b0ca6431640" loc="40:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="checkTS" scoped="" ref="0x2b0ca6431640"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0ca6431990"/>
        <function-ref name="runTask" scoped="" ref="0x2b0ca6431b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="adcX" ref="0x2b0ca641ecb8" loc="21:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="adcX" scoped="" ref="0x2b0ca641ecb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca641d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca641d228"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca641d3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca641d538"/>
        <function-ref name="get" scoped="" ref="0x2b0ca641d6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca641d848"/>
        <function-ref name="set" scoped="" ref="0x2b0ca641d9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca641db58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="driveB" ref="0x2b0ca641fb30" loc="20:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="driveB" scoped="" ref="0x2b0ca641fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca641fe80"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca641e030"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca641e1b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca641e340"/>
        <function-ref name="get" scoped="" ref="0x2b0ca641e4c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca641e650"/>
        <function-ref name="set" scoped="" ref="0x2b0ca641e7d8"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca641e960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TouchScreen" ref="0x2b0ca6437978" loc="25:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TouchScreen" scoped="" ref="0x2b0ca6437978"/></type-interface>
      <instance>
        <interfacedef-ref qname="TouchScreen"/>
      </instance>
      <interface-functions>
        <function-ref name="tsPressed" scoped="" ref="0x2b0ca6437cc8"/>
        <function-ref name="isPressed" scoped="" ref="0x2b0ca6437e50"/>
        <function-ref name="getXY" scoped="" ref="0x2b0ca6436020"/>
        <function-ref name="xyReady" scoped="" ref="0x2b0ca64361a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="adcY" ref="0x2b0ca641c020" loc="22:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="adcY" scoped="" ref="0x2b0ca641c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0ca641c370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0ca641c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0ca641c680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0ca641c808"/>
        <function-ref name="get" scoped="" ref="0x2b0ca641c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0ca641cb18"/>
        <function-ref name="set" scoped="" ref="0x2b0ca641cca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0ca641ce28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b0ca66063f0" loc="25:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TouchScreenC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0ca66063f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b0ca6606740"/>
        <function-ref name="configure" scoped="" ref="0x2b0ca66068c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b0ca6608358" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TouchScreenC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b0ca6608358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b0ca6607020"/>
        <function-ref name="readDone" scoped="" ref="0x2b0ca6607470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b0ca6607a28" loc="24:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TouchScreenC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b0ca6607a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b0ca6607d78"/>
        <function-ref name="getChannel" scoped="" ref="0x2b0ca6606020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b0ca66061a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b0ca645fe60" loc="18:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b0ca645fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b0ca645b9e0"/>
        <function-ref name="readDone" scoped="" ref="0x2b0ca645be30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b0ca6475a98" loc="19:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b0ca6475a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b0ca6478658"/>
        <function-ref name="readDone" scoped="" ref="0x2b0ca6478ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b0ca6477690" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b0ca6477690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b0ca64779e0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b0ca6477b68"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b0ca6477cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b0ca646e708" loc="23:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b0ca646e708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0ca646ea58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0ca646ebe0"/>
        <function-ref name="request" scoped="" ref="0x2b0ca646ed68"/>
        <function-ref name="granted" scoped="" ref="0x2b0ca6472020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0ca64721a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b0ca6488dc8" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0ca6488dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b0ca6483170"/>
        <function-ref name="configure" scoped="" ref="0x2b0ca64832f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b0ca6488080" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b0ca6488080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b0ca64883d0"/>
        <function-ref name="dataReady" scoped="" ref="0x2b0ca6488558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b0ca6484440" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b0ca6484440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b0ca6484790"/>
        <function-ref name="cancel" scoped="" ref="0x2b0ca6484918"/>
        <function-ref name="dataReady" scoped="" ref="0x2b0ca6484aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b0ca646b2f0" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b0ca646b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0ca646b640"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0ca646b7c8"/>
        <function-ref name="request" scoped="" ref="0x2b0ca646b950"/>
        <function-ref name="granted" scoped="" ref="0x2b0ca646bad8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0ca646bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0ca647c2b8" loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0ca647c2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca647c608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b0ca647b318" loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b0ca647b318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b0ca647b668"/>
        <function-ref name="dataReady" scoped="" ref="0x2b0ca647b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b0ca64988a8" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b0ca64988a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b0ca6498bf8"/>
        <function-ref name="cancel" scoped="" ref="0x2b0ca6498d80"/>
        <function-ref name="dataReady" scoped="" ref="0x2b0ca647b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x2b0ca64890d0" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b0ca64890d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b0ca6489420"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b0ca64895a8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b0ca6489730"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b0ca64898b8"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b0ca6489a40"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b0ca6489bc8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b0ca6489d50"/>
        <function-ref name="isComplete" scoped="" ref="0x2b0ca647a020"/>
        <function-ref name="cancel" scoped="" ref="0x2b0ca647a1a8"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b0ca647a330"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b0ca647a4b8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b0ca647a640"/>
        <function-ref name="startConversion" scoped="" ref="0x2b0ca647a7c8"/>
        <function-ref name="isStarted" scoped="" ref="0x2b0ca647aa50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b0ca647abd8"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b0ca647ad60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b0ca6497020"/>
        <function-ref name="getValue" scoped="" ref="0x2b0ca64971a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b0ca6497330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b0ca64980f0" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b0ca64980f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0ca6498440"/>
        <function-ref name="stop" scoped="" ref="0x2b0ca64985c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b0ca6497610" loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0ca6497610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b0ca6497960"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b0ca6497ae8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b0ca6497c70"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b0ca6497df8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b0ca64a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b0ca647da28" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b0ca647da28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b0ca647dd78"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b0ca64d8020"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b0ca64d81a8"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b0ca64d8330"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b0ca64d84b8"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b0ca64d8640"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b0ca64d87c8"/>
        <function-ref name="isComplete" scoped="" ref="0x2b0ca64d8950"/>
        <function-ref name="cancel" scoped="" ref="0x2b0ca64d8ad8"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b0ca64d8c60"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b0ca64d8de8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b0ca64d7020"/>
        <function-ref name="startConversion" scoped="" ref="0x2b0ca64d71a8"/>
        <function-ref name="isStarted" scoped="" ref="0x2b0ca64d7430"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b0ca64d75b8"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b0ca64d7740"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b0ca64d78c8"/>
        <function-ref name="getValue" scoped="" ref="0x2b0ca64d7a50"/>
        <function-ref name="dataReady" scoped="" ref="0x2b0ca64d7bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b0ca64d6c48" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b0ca64d6c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b0ca64d3020"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b0ca64d31a8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b0ca64d3330"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b0ca64d34b8"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b0ca64d3640"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b0ca64d37c8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b0ca64d3950"/>
        <function-ref name="isComplete" scoped="" ref="0x2b0ca64d3ad8"/>
        <function-ref name="cancel" scoped="" ref="0x2b0ca64d3c60"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b0ca64d3de8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b0ca64d2020"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b0ca64d21a8"/>
        <function-ref name="startConversion" scoped="" ref="0x2b0ca64d2330"/>
        <function-ref name="isStarted" scoped="" ref="0x2b0ca64d25b8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b0ca64d2740"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b0ca64d28c8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b0ca64d2a50"/>
        <function-ref name="getValue" scoped="" ref="0x2b0ca64d2bd8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b0ca64d2d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b0ca64d10c0" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b0ca64d10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b0ca64d1410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b0ca6598820" loc="92:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b0ca6598820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b0ca6598b90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b0ca6598d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b0ca6596550" loc="96:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0ca6596550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b0ca65968c0"/>
        <function-ref name="configure" scoped="" ref="0x2b0ca6596a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b0ca6597020" loc="93:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b0ca6597020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0ca6597370"/>
        <function-ref name="requested" scoped="" ref="0x2b0ca65974f8"/>
        <function-ref name="granted" scoped="" ref="0x2b0ca6597680"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0ca6597808"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b0ca6597990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b0ca6576a40" loc="91:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b0ca6576a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0ca6576db0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0ca6598020"/>
        <function-ref name="request" scoped="" ref="0x2b0ca65981a8"/>
        <function-ref name="granted" scoped="" ref="0x2b0ca6598330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0ca65984b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b0ca6597bd8" loc="94:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0ca6597bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b0ca6596020"/>
        <function-ref name="userId" scoped="" ref="0x2b0ca65961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0ca6aaad90" loc="44:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0ca6aaad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0ca6aa9170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b0ca6aa93f8" loc="45:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b0ca6aa93f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b0ca6aa9748"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b0ca6aa98d0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b0ca6aa9a58"/>
        <function-ref name="dequeue" scoped="" ref="0x2b0ca6aa9be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b0ca6aa5200" loc="55:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b0ca6aa5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b0ca6aa5570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b0ca6aa56f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b0ca6aa4e18" loc="60:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0ca6aa4e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b0ca6aa31c0"/>
        <function-ref name="configure" scoped="" ref="0x2b0ca6aa3348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b0ca6aa35d0" loc="61:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b0ca6aa35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b0ca6aa3920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b0ca6aa3aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b0ca6aa3c30"/>
        <function-ref name="dequeue" scoped="" ref="0x2b0ca6aa3db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b0ca6aa5940" loc="56:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b0ca6aa5940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0ca6aa5c90"/>
        <function-ref name="requested" scoped="" ref="0x2b0ca6aa5e18"/>
        <function-ref name="granted" scoped="" ref="0x2b0ca6aa4020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0ca6aa41a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b0ca6aa4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b0ca6aa2060" loc="62:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b0ca6aa2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b0ca6aa23b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b0ca6aa2538"/>
        <function-ref name="led1On" scoped="" ref="0x2b0ca6aa26c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b0ca6aa2848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b0ca6aa29d0"/>
        <function-ref name="get" scoped="" ref="0x2b0ca6aa2b58"/>
        <function-ref name="led1Off" scoped="" ref="0x2b0ca6aa2ce0"/>
        <function-ref name="setPort" scoped="" ref="0x2b0ca6aa2e68"/>
        <function-ref name="led0On" scoped="" ref="0x2b0ca6aa14b8"/>
        <function-ref name="set" scoped="" ref="0x2b0ca6aa11a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b0ca6aa1020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b0ca6aa1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b0ca6aa74b0" loc="54:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b0ca6aa74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0ca6aa7820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0ca6aa79a8"/>
        <function-ref name="request" scoped="" ref="0x2b0ca6aa7b30"/>
        <function-ref name="granted" scoped="" ref="0x2b0ca6aa7cb8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0ca6aa7e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b0ca6aa4578" loc="57:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0ca6aa4578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b0ca6aa48c8"/>
        <function-ref name="userId" scoped="" ref="0x2b0ca6aa4a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b0ca6aa1780" loc="75:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b0ca6aa1780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0ca6aa1ad0"/>
        <function-ref name="runTask" scoped="" ref="0x2b0ca6aa1c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b0ca6593b98" loc="72:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b0ca6593b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b0ca65a2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b0ca65a2268" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b0ca65a2268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0ca65a25b8"/>
        <function-ref name="requested" scoped="" ref="0x2b0ca65a2740"/>
        <function-ref name="granted" scoped="" ref="0x2b0ca65a28c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0ca65a2a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b0ca65a2bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b0ca6593478" loc="70:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b0ca6593478"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0ca65937c8"/>
        <function-ref name="stop" scoped="" ref="0x2b0ca6593950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b0ca65a2e20" loc="74:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0ca65a2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b0ca65a01a8"/>
        <function-ref name="userId" scoped="" ref="0x2b0ca65a0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b0ca6ae0020" loc="62:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b0ca6ae0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b0ca6ae0370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b0ca6ae05b8" loc="63:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b0ca6ae05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0ca6ae0908"/>
        <function-ref name="requested" scoped="" ref="0x2b0ca6ae0a90"/>
        <function-ref name="granted" scoped="" ref="0x2b0ca6ae0c18"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0ca6ae0da0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b0ca6adf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b0ca6ae1818" loc="60:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b0ca6ae1818"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0ca6ae1b68"/>
        <function-ref name="stop" scoped="" ref="0x2b0ca6ae1cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b0ca6adf268" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0ca6adf268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b0ca6adf5b8"/>
        <function-ref name="userId" scoped="" ref="0x2b0ca6adf740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b0ca65bdc68" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b0ca65bdc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b0ca65bc7e8"/>
        <function-ref name="readDone" scoped="" ref="0x2b0ca65bcc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b0ca65ba880" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b0ca65ba880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b0ca65b9490"/>
        <function-ref name="readDone" scoped="" ref="0x2b0ca65b9918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b0ca65b8e78" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b0ca65b8e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b0ca65b71f8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b0ca65b7380"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b0ca65b7508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x2b0ca65b8020" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b0ca65b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b0ca65b8370"/>
        <function-ref name="cancel" scoped="" ref="0x2b0ca65b84f8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b0ca65b8680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x2b0ca65cbbf8" loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x2b0ca65cbbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0ca65ca020"/>
        <function-ref name="runTask" scoped="" ref="0x2b0ca65ca1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b0ca65dda28" loc="24:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b0ca65dda28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b0ca65dc620"/>
        <function-ref name="readDone" scoped="" ref="0x2b0ca65dca90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2b0ca65eb348" loc="26:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2b0ca65eb348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b0ca65e9020"/>
        <function-ref name="readDone" scoped="" ref="0x2b0ca65e9490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b0ca65e9b28" loc="27:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b0ca65e9b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0ca65e8020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0ca65e81a8"/>
        <function-ref name="request" scoped="" ref="0x2b0ca65e8330"/>
        <function-ref name="granted" scoped="" ref="0x2b0ca65e84b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0ca65e8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCD128x64" ref="0x2b0ca65fe020" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <component-ref qname="LCD128x64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b0ca65fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b0ca65fe370"/>
        <function-ref name="initDone" scoped="" ref="0x2b0ca65fe4f8"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b0ca65fe680"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b0ca65fe808"/>
        <function-ref name="barWritten" scoped="" ref="0x2b0ca65fe990"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b0ca65feb18"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b0ca65feca0"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b0ca65fee28"/>
        <function-ref name="copyByte" scoped="" ref="0x2b0ca65fd020"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b0ca65fd1a8"/>
        <function-ref name="writeByte" scoped="" ref="0x2b0ca65fd330"/>
        <function-ref name="setPixel" scoped="" ref="0x2b0ca65fd4b8"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b0ca65fd640"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b0ca65fd8c8"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b0ca65fda50"/>
        <function-ref name="writePixel" scoped="" ref="0x2b0ca65fdbd8"/>
        <function-ref name="initLCD" scoped="" ref="0x2b0ca65fdd60"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b0ca65fc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeRectangle" ref="0x2b0ca666ee68" loc="208:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeRectangle" scoped="" ref="0x2b0ca666ee68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0ca666c1e8"/>
        <function-ref name="runTask" scoped="" ref="0x2b0ca666c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCD128x64" ref="0x2b0ca6640020" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b0ca6640020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b0ca6640370"/>
        <function-ref name="initDone" scoped="" ref="0x2b0ca66404f8"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b0ca6640680"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b0ca6640808"/>
        <function-ref name="barWritten" scoped="" ref="0x2b0ca6640990"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b0ca6640b18"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b0ca6640ca0"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b0ca6640e28"/>
        <function-ref name="copyByte" scoped="" ref="0x2b0ca663f020"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b0ca663f1a8"/>
        <function-ref name="writeByte" scoped="" ref="0x2b0ca663f330"/>
        <function-ref name="setPixel" scoped="" ref="0x2b0ca663f4b8"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b0ca663f640"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b0ca663f8c8"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b0ca663fa50"/>
        <function-ref name="writePixel" scoped="" ref="0x2b0ca663fbd8"/>
        <function-ref name="initLCD" scoped="" ref="0x2b0ca663fd60"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b0ca663e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeString" ref="0x2b0ca66a5368" loc="257:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeString" scoped="" ref="0x2b0ca66a5368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0ca66a56b8"/>
        <function-ref name="runTask" scoped="" ref="0x2b0ca66a5840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeCircle" ref="0x2b0ca668ec10" loc="224:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeCircle" scoped="" ref="0x2b0ca668ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0ca668d020"/>
        <function-ref name="runTask" scoped="" ref="0x2b0ca668d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeLine" ref="0x2b0ca66b9ca0" loc="316:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeLine" scoped="" ref="0x2b0ca66b9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0ca66b8020"/>
        <function-ref name="runTask" scoped="" ref="0x2b0ca66b81a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="wait4Controller" ref="0x2b0ca6655bd8" loc="65:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="wait4Controller" scoped="" ref="0x2b0ca6655bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0ca6654020"/>
        <function-ref name="runTask" scoped="" ref="0x2b0ca66541a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeBar" ref="0x2b0ca66c8790" loc="394:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeBar" scoped="" ref="0x2b0ca66c8790"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0ca66c8ae0"/>
        <function-ref name="runTask" scoped="" ref="0x2b0ca66c8c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="clearScreenNB" ref="0x2b0ca6698420" loc="285:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="clearScreenNB" scoped="" ref="0x2b0ca6698420"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0ca6698770"/>
        <function-ref name="runTask" scoped="" ref="0x2b0ca66988f8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b0ca5fd8178" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b0ca5fd0e08" loc="60:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b0ca5fde290" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b0ca5fde020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b0ca5fe2940" loc="31:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="27:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b0ca5fe1378" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b0ca5fe1108" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b0ca5fe1e00" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b0ca5fe1b90" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b0ca5fe0698" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b0ca5ff50d8" loc="44:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b0ca5ff57a0" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b0ca5ff6328" loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b0ca5ff4570" loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0ca5ff69c8" loc="43:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b0ca5ff5e58" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0ca5ff85a8" loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b0ca5ff8c18" loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b0ca5ee33a0" loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b0ca5ee1290" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b0ca5ee3ab8" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b0ca5eed070" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b0ca5eed860" loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b0ca5fa0450" loc="76:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b0ca5fb6d28" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b0ca5f3c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b0ca5fc06d8" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0ca619cd18" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0ca619cd18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b0ca61a7760" loc="136:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b0ca6196110" loc="83:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b0ca6195d40" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b0ca61957a8" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b0ca6195ac0" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b0ca6195070" loc="98:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b0ca61a56b0" loc="151:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b0ca61a7e80" loc="144:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b0ca6196888" loc="92:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b0ca6199820" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b0ca61995b0" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b0ca6194d28" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b0ca6194790" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b0ca6194aa8" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b0ca6198290" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b0ca6198020" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0ca6198a38" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GLCD" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
      <function command="" provided="0" name="startClearScreen" ref="0x2b0ca61b59b0" loc="68:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b0ca61b5740" loc="68:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="tsPressed" ref="0x2b0ca61ae328" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x2b0ca61b4098" loc="70:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteBar" ref="0x2b0ca61a8918" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b0ca61a9c68" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b0ca61a8020" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b0ca61a8350" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="width" ref="0x2b0ca61a8678" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="calibrated" ref="0x2b0ca61afc50" loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isPressed" ref="0x2b0ca61b18c8" loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b0ca61b1658" loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteLine" ref="0x2b0ca61b5040" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b0ca61b7430" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b0ca61b7730" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="xEnd" ref="0x2b0ca61b7a50" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="yEnd" ref="0x2b0ca61b7d70" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateTouchScreen" ref="0x2b0ca619f4b0" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="barWritten" ref="0x2b0ca61c5258" loc="80:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getXY" ref="0x2b0ca61b1030" loc="12:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteRectangle" ref="0x2b0ca61bacf0" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b0ca61ba150" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b0ca61ba450" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="a" ref="0x2b0ca61ba750" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="b" ref="0x2b0ca61baa50" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="screenCleared" ref="0x2b0ca61c58f8" loc="82:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="lineWritten" ref="0x2b0ca61b3b48" loc="78:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="copyByte" ref="0x2b0ca61ad020" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b0ca61ae978" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b0ca61aec78" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteString" ref="0x2b0ca61b8d20" loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0ca61b8490" loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x2b0ca61b8790" loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b0ca61b8a90" loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="xyReady" ref="0x2b0ca61af5b0" loc="21:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b0ca61af020" loc="21:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b0ca61af330" loc="21:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="writeByte" ref="0x2b0ca61ab8d0" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b0ca61ab020" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b0ca61ab320" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b0ca61ab640" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x2b0ca61a95a0" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b0ca61a9020" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b0ca61a9320" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="circleWritten" ref="0x2b0ca61b4738" loc="72:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCalibration" ref="0x2b0ca619e9b0" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x_cmin" ref="0x2b0ca619fb90" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="x_cmax" ref="0x2b0ca619e020" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="y_cmin" ref="0x2b0ca619e398" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="y_cmax" ref="0x2b0ca619e710" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteCircle" ref="0x2b0ca61b9d78" loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="xcenter" ref="0x2b0ca61b9480" loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="ycenter" ref="0x2b0ca61b97b8" loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="radius" ref="0x2b0ca61b9ae8" loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rectangleWritten" ref="0x2b0ca61b34c0" loc="76:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writePixel" ref="0x2b0ca61aa8b8" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b0ca61aa020" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b0ca61aa320" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="on" ref="0x2b0ca61aa628" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initLCD" ref="0x2b0ca61ad8e8" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b0ca61ad678" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stringWritten" ref="0x2b0ca61b4dd8" loc="74:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0ca61f8bf0" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0ca61f8bf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b0ca61f44c8" loc="61:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0ca5cdfdb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0ca620f3f8" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0ca620f3f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b0ca620f628" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0ca620f628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b0ca620e020" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0ca620f628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b0ca620d070" loc="76:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b0ca620e838" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b0ca620d760" loc="82:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0ca6207e18" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0ca6207e18"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b0ca6204068" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0ca6204068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b0ca6200958" loc="109:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0ca6204068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b0ca6202a78" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b0ca6200020" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0ca6204068"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0ca6204068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b0ca6201a08" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0ca6204068"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b0ca6201d28" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0ca6204068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b0ca6201258" loc="88:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b0ca61ff110" loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0ca6204068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b0ca6204b28" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0ca6204068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b0ca62048b8" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0ca6204068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0ca6202328" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b0ca622aa58" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0ca5f69a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b0ca5f69e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b0ca623ae18" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0ca5f76100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b0ca5f76508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b0ca623cc70" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0ca5f6d980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b0ca5f6dd88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b0ca623a678" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0ca5f6d980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b0ca5f6dd88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b0ca623a408" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0ca5f6d980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b0ca5f6dd88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b0ca6239828" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0ca5f76100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b0ca5f76508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b0ca62395b8" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0ca5f76100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b0ca5f76508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b0ca623c4c8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0ca5f69a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b0ca5f69e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b0ca623c258" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0ca5f69a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b0ca5f69e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerSync" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer0Synchronous" ref="0x2b0ca6241328" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBusy" ref="0x2b0ca6241a30" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b0ca6240258" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b0ca6240a08" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b0ca6243110" loc="28:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="24:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0ca5f70118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b0ca5f70520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b0ca6243ac0" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0ca5f70118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b0ca5f70520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b0ca6243850" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0ca5f70118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b0ca5f70520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b0ca6237068" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0ca6237068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b0ca6249738" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b0ca62359d0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0ca6237920" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0ca6237068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b0ca6234110" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b0ca6248020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0ca6235290" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0ca6237068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b0ca6235020" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0ca6237068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b0ca6234808" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0ca6249020" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b0ca621e418" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0ca621e418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b0ca622f900" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b0ca6231a40" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0ca621ecb8" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0ca621e418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b0ca622e290" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b0ca622e020" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b0ca622ea10" loc="110:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="106:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b0ca62324c0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b0ca6233d50" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b0ca622f1d8" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0ca6233630" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0ca621e418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b0ca62333c0" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0ca621e418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b0ca6232bb8" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0ca6231328" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LCD128x64" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
      <function command="" provided="0" name="startClearScreen" ref="0x2b0ca63b5020" loc="40:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b0ca63b6c98" loc="40:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x2b0ca63b5690" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteBar" ref="0x2b0ca63bb020" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b0ca63bc2e8" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b0ca63bc5e8" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b0ca63bc918" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="width" ref="0x2b0ca63bcc40" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteLine" ref="0x2b0ca63b65e0" loc="38:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b0ca63b7918" loc="38:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b0ca63b7c18" loc="38:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="xEnd" ref="0x2b0ca63b6020" loc="38:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="yEnd" ref="0x2b0ca63b6340" loc="38:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="barWritten" ref="0x2b0ca63cf910" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteRectangle" ref="0x2b0ca63ba2c0" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b0ca63bb6b8" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b0ca63bb9b8" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="a" ref="0x2b0ca63bbcb8" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="b" ref="0x2b0ca63ba020" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="screenCleared" ref="0x2b0ca63ce020" loc="54:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="lineWritten" ref="0x2b0ca63cf290" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="copyByte" ref="0x2b0ca63a67d0" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b0ca63a6250" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b0ca63a6550" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteString" ref="0x2b0ca63b72b0" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0ca63b9940" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x2b0ca63b9c40" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b0ca63b7020" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="writeByte" ref="0x2b0ca63bf040" loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b0ca63c0760" loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b0ca63c0a60" loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b0ca63c0d80" loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x2b0ca63bebf0" loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b0ca63be670" loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b0ca63be970" loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="circleWritten" ref="0x2b0ca63b5d30" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteCircle" ref="0x2b0ca63b92b0" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="xcenter" ref="0x2b0ca63ba978" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="ycenter" ref="0x2b0ca63bacb0" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="radius" ref="0x2b0ca63b9020" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rectangleWritten" ref="0x2b0ca63d0bb8" loc="48:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writePixel" ref="0x2b0ca63be020" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b0ca63bf6a0" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b0ca63bf9a0" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="on" ref="0x2b0ca63bfca8" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initLCD" ref="0x2b0ca63c0108" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b0ca63a6e28" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stringWritten" ref="0x2b0ca63d04f8" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TouchScreen" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
      <function event="" provided="0" name="tsPressed" ref="0x2b0ca63a8730" loc="13:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
        <interfacedef-ref qname="TouchScreen"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isPressed" ref="0x2b0ca63a9478" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
        <interfacedef-ref qname="TouchScreen"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b0ca63a9208" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getXY" ref="0x2b0ca63acb80" loc="4:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
        <interfacedef-ref qname="TouchScreen"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="xyReady" ref="0x2b0ca63a80b8" loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
        <interfacedef-ref qname="TouchScreen"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b0ca63a9ac8" loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b0ca63a9dd8" loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b0ca6423708" loc="49:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b0ca6423708"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b0ca6420020" loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b0ca6420cb0" loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b0ca6423708"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b0ca6420730" loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b0ca6420a30" loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b0ca6423708"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x2b0ca6435468" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b0ca6438c20" loc="25:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x2b0ca6435c48" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b0ca645d450" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b0ca6460c40" loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b0ca645ab08" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b0ca645ab08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b0ca64763a0" loc="58:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b0ca64750b8" loc="66:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b0ca645ab08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b0ca6476ae8" loc="66:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b0ca6476de8" loc="66:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b0ca645ab08"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b0ca646f3a0" loc="120:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b0ca6470488" loc="97:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b0ca6473ad8" loc="88:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b0ca6470c10" loc="102:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b0ca646fd88" loc="128:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b0ca6482a20" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b0ca6469d20" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b0ca64820c8" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b0ca6482430" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b0ca6482780" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b0ca6480a70" loc="119:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0ca64819e0" loc="119:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b0ca6481d00" loc="119:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x2b0ca6480060" loc="119:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x2b0ca6480410" loc="120:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x2b0ca64807c0" loc="120:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b0ca64876f8" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b0ca646aa18" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b0ca646ad70" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b0ca6487108" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b0ca6487458" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b0ca6484020" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b0ca64866d8" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0ca6486138" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b0ca6486458" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x2b0ca648e710" loc="114:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x2b0ca6496720" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b0ca5f56478"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x2b0ca5f56930"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x2b0ca648ca88" loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b0ca648c818" loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2b0ca648d020" loc="122:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x2b0ca64923e0" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x2b0ca6495290" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b0ca5f56478"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b0ca5f56930"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x2b0ca6495020" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b0ca5f56478"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b0ca5f56930"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x2b0ca6491258" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x2b0ca648c020" loc="133:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b0ca648b258" loc="150:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x2b0ca6492ad0" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x2b0ca6490110" loc="99:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x2b0ca64919a0" loc="95:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x2b0ca6490838" loc="106:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x2b0ca648d780" loc="127:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x2b0ca6493480" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b0ca5f5e020"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b0ca5f5e6e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x2b0ca6493210" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b0ca5f5e020"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b0ca5f5e6e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x2b0ca648e020" loc="110:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x2b0ca6495a68" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b0ca5f5e020"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b0ca5f5e6e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b0ca6493c20" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b0ca648bd68" loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0ca648baf8" loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0ca5cdf378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b0ca64794d0" loc="95:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0ca6479ca8" loc="105:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b0ca64fd4b0" loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b0ca64fdd78" loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b0ca651c1d8" loc="56:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b0ca651a1d8" loc="73:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b0ca6500958" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b0ca651c9d8" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b0ca651aaa0" loc="81:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b0ca6518820" loc="90:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b0ca6517070" loc="98:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b0ca650e620" loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0ca5ee7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b0ca65168a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b0ca650e3b0" loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b0ca65168a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b0ca6510720" loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b0ca650f290" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0ca5ede4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b0ca65168a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b0ca650f020" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b0ca65168a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b0ca650fb30" loc="70:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b0ca65168a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b0ca6550020" loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b0ca6550758" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b0ca654f020" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b0ca654fe70" loc="83:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b0ca654c480" loc="100:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0ca654cc18" loc="117:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b0ca654f738" loc="77:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0ca654b768" loc="134:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b0ca654b4f8" loc="134:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPort" ref="0x2b0ca654a600" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b0ca654a060" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
          <variable name="pval" ref="0x2b0ca654a380" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0ca5cdd910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b0ca65517e0" loc="56:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b0ca654e608" loc="89:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b0ca654ed20" loc="94:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2b0ca658e020" loc="62:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
