<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:SimpleDrawAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b21526d4a20"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b21526d1220"/></to>
    </wire>
    <wire loc="72:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b21526d1220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b2152881198"/></to>
    </wire>
    <wire loc="10:SimpleDrawAppC.nc">
      <from><interface-ref name="Button0" scoped="" ref="0x2b2152889108"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x2b21527101a0"/></to>
    </wire>
    <wire loc="164:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b21527101a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b215279fe40"/></to>
    </wire>
    <wire loc="11:SimpleDrawAppC.nc">
      <from><interface-ref name="Button1" scoped="" ref="0x2b2152888390"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x2b215270f658"/></to>
    </wire>
    <wire loc="165:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b215270f658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b21527ad020"/></to>
    </wire>
    <wire loc="12:SimpleDrawAppC.nc">
      <from><interface-ref name="Button2" scoped="" ref="0x2b21528876a0"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x2b215270e7e0"/></to>
    </wire>
    <wire loc="166:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b215270e7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b21527ac120"/></to>
    </wire>
    <wire loc="13:SimpleDrawAppC.nc">
      <from><interface-ref name="Button3" scoped="" ref="0x2b21528869b0"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x2b215270d968"/></to>
    </wire>
    <wire loc="167:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b215270d968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b21527aa2a8"/></to>
    </wire>
    <wire loc="14:SimpleDrawAppC.nc">
      <from><interface-ref name="Button4" scoped="" ref="0x2b2152885cc0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b215271aaf0"/></to>
    </wire>
    <wire loc="168:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b215271aaf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b21527a9430"/></to>
    </wire>
    <wire loc="15:SimpleDrawAppC.nc">
      <from><interface-ref name="Button5" scoped="" ref="0x2b2152883020"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x2b2152719c78"/></to>
    </wire>
    <wire loc="169:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b2152719c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b21527a85b8"/></to>
    </wire>
    <wire loc="16:SimpleDrawAppC.nc">
      <from><interface-ref name="Button6" scoped="" ref="0x2b21528821c8"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b2152718e00"/></to>
    </wire>
    <wire loc="170:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b2152718e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b21527a7740"/></to>
    </wire>
    <wire loc="17:SimpleDrawAppC.nc">
      <from><interface-ref name="Button7" scoped="" ref="0x2b2152895390"/></from>
      <to><interface-ref name="PortD7" scoped="" ref="0x2b2152716020"/></to>
    </wire>
    <wire loc="171:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b2152716020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b21527a68c8"/></to>
    </wire>
    <wire loc="18:SimpleDrawAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b215289dc08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b21528ca420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b21528ca420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b21528d7510"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:SimpleDrawAppC.nc">
      <from><interface-ref name="GLCD" scoped="" ref="0x2b21528aabc8"/></from>
      <to><interface-ref name="GLCD" scoped="" ref="0x2b2152a9b298"/></to>
    </wire>
    <wire loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDC.nc">
      <from><interface-ref name="GLCD" scoped="" ref="0x2b2152a9b298"/></from>
      <to><interface-ref name="GLCD" scoped="" ref="0x2b2152a91020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b21526d0620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b21531a5bd8"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b21526d0620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b21528e8e48"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b21528817d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b21525d9600"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b21525d9600"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b2152690448"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b21528801d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b21526d3620"/></to>
    </wire>
    <wire loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b21526d3620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b21526e2600"/></to>
    </wire>
    <wire loc="71:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b2152880898"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b21526d0620"/></to>
    </wire>
    <wire loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b21526ce380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2152b6bd48"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b21526d6618"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b21528638f0"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b21526e1398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b21528632c0"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b21526e2ca0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b21526dbb98"/></to>
    </wire>
    <wire loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b21526dbb98"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b21526e5698"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b21526e8360"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b21526ce380"/></to>
    </wire>
    <wire loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b21526e4b08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b21526e8360"/></to>
    </wire>
    <wire loc="191:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b215272daf0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152806970"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b21527ad020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152f77710"/></to>
    </wire>
    <wire loc="176:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b2152720658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b21527bcd60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b21527bcd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152fcb710"/></to>
    </wire>
    <wire loc="185:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b2152725348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b21527be5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b21527be5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b215302c710"/></to>
    </wire>
    <wire loc="143:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b21526fb348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b2152784740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b2152784740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152e4f710"/></to>
    </wire>
    <wire loc="183:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b2152727020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b21527c02a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b21527c02a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2153032710"/></to>
    </wire>
    <wire loc="146:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b21526f9658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b215278c930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b215278c930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152e7e6a8"/></to>
    </wire>
    <wire loc="157:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b215270a7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b215279b740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b215279b740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152ef2710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b21527a9430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152f6e710"/></to>
    </wire>
    <wire loc="179:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b215271daf0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b21527b8120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b21527b8120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152fc2710"/></to>
    </wire>
    <wire loc="138:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b21526f3af0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b2152779020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b2152779020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152e33710"/></to>
    </wire>
    <wire loc="149:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b2152704af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b2152789d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b2152789d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152ea1710"/></to>
    </wire>
    <wire loc="160:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b2152707c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b2152798bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b2152798bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152f17710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b21527a68c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152f65710"/></to>
    </wire>
    <wire loc="188:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b21527227e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b21527cda50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b21527cda50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2153056710"/></to>
    </wire>
    <wire loc="194:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b21527297e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b215281b020"/></to>
    </wire>
    <wire loc="174:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b2152714348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b21527aea50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b21527aea50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152fd1710"/></to>
    </wire>
    <wire loc="141:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b21526fd020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b2152776430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b2152776430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152e2a710"/></to>
    </wire>
    <wire loc="152:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b21527001a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b2152795120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b2152795120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152e98710"/></to>
    </wire>
    <wire loc="192:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b215272b4d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152813ab0"/></to>
    </wire>
    <wire loc="155:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b215270c4d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b215279d500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b215279d500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152ef86a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b21527ac120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152f74710"/></to>
    </wire>
    <wire loc="177:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b215271f7e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b21527bbe18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b21527bbe18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152fc8710"/></to>
    </wire>
    <wire loc="186:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b21527244d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b21527cf740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b21527cf740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2153029710"/></to>
    </wire>
    <wire loc="144:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b21526fa4d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b21527838c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b21527838c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152e4b710"/></to>
    </wire>
    <wire loc="147:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b21526f87e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b215278ba50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b215278ba50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152ea7710"/></to>
    </wire>
    <wire loc="158:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b2152709968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b215279a8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b215279a8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152eef710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b21527a85b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152f6b710"/></to>
    </wire>
    <wire loc="180:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b215271cc78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b21527b72a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b21527b72a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152ff1710"/></to>
    </wire>
    <wire loc="139:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b21526f2c78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b2152778120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b2152778120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152e30710"/></to>
    </wire>
    <wire loc="150:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b2152703c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b2152788e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b2152788e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152e9e710"/></to>
    </wire>
    <wire loc="161:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b2152706e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b2152796d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b2152796d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152f14710"/></to>
    </wire>
    <wire loc="189:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b215272e968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b21527ccbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b21527ccbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2153053710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b215279fe40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152f4a6a8"/></to>
    </wire>
    <wire loc="175:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b21527214d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b21527bdbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b21527bdbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152fce710"/></to>
    </wire>
    <wire loc="184:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b21527261a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b21527bf430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b21527bf430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b215302f710"/></to>
    </wire>
    <wire loc="195:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b2152736968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152828180"/></to>
    </wire>
    <wire loc="142:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b21526fc1a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b21527855b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b21527855b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152e27710"/></to>
    </wire>
    <wire loc="153:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b21526ff348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b21527942a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b21527942a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152e95710"/></to>
    </wire>
    <wire loc="182:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b215271be00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b21527c11e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b21527c11e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b21530356a8"/></to>
    </wire>
    <wire loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b215270b658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b215279c5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b215279c5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152ef5710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b21527aa2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152f71710"/></to>
    </wire>
    <wire loc="178:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b215271e968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b21527b9020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b21527b9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152fc5710"/></to>
    </wire>
    <wire loc="187:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b2152723658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b21527ce8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b21527ce8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2153026710"/></to>
    </wire>
    <wire loc="137:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b21526e6878"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b215277bdc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b215277bdc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152e36710"/></to>
    </wire>
    <wire loc="148:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b2152705968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b215278abd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b215278abd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152ea4710"/></to>
    </wire>
    <wire loc="159:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b2152708af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b2152799a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b2152799a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152f1a710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b21527a7740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152f68710"/></to>
    </wire>
    <wire loc="193:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b215272a658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b215280fc38"/></to>
    </wire>
    <wire loc="173:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b21527151a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b21527af930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b21527af930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152fd46a8"/></to>
    </wire>
    <wire loc="162:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b2152711020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b21527a5e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b21527a5e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152f11710"/></to>
    </wire>
    <wire loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b21526f1e00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b21527772a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b21527772a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152e2d710"/></to>
    </wire>
    <wire loc="151:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b2152701020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b2152786020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b2152786020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2152e9b710"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b21525dc1c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b215268f2b0"/></to>
    </wire>
    <wire loc="55:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b2152698758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b21526af660"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b21526b52b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b21529a1268"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b21528d7510"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b21528e5b68"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b21528e5b68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b2152a6c020"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b21528e8e48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b21528f06f0"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b21528f4108"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b2152a7ac38"/></to>
    </wire>
    <wire loc="43:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b21528f06f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b21529f5190"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b2152a66208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b2152a16ab0"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b2152a2bc70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b21528ed020"/></to>
    </wire>
    <wire loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b21528ed020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b21529f5938"/></to>
    </wire>
    <wire loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b2152a8ce48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b21528f8150"/></to>
    </wire>
    <wire loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b21528f8150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b21529f1a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b21529f1a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b2153101ce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b21529f5190"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2153104438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b21529f5938"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b2153104be0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b21530fd020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b2152974e00"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b2152974e00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b2152993180"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b21530f9e70"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b2152984020"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b2152984020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b215298e160"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2b21530f8d20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b2152983020"/></to>
    </wire>
    <wire loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b2152983020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b215298d190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b2153133db0"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b215297f218"/></to>
    </wire>
    <wire loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b215297f218"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b21529a1958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2b2152a27cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b21525dc1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b2152a7d478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b21525dc1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDC.nc">
      <from><interface-ref name="LCD128x64" scoped="" ref="0x2b2152ab19d0"/></from>
      <to><interface-ref name="LCD128x64" scoped="" ref="0x2b2152cdb020"/></to>
    </wire>
    <wire loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <from><interface-ref name="LCD128x64" scoped="" ref="0x2b2152cdb020"/></from>
      <to><interface-ref name="LCD128x64" scoped="" ref="0x2b2152d1ecd8"/></to>
    </wire>
    <wire loc="12:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDC.nc">
      <from><interface-ref name="TouchScreen" scoped="" ref="0x2b2152aa52b8"/></from>
      <to><interface-ref name="TouchScreen" scoped="" ref="0x2b2152b0d0c0"/></to>
    </wire>
    <wire loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="TouchScreen" scoped="" ref="0x2b2152b0d0c0"/></from>
      <to><interface-ref name="TouchScreen" scoped="" ref="0x2b2152b1c020"/></to>
    </wire>
    <wire loc="13:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b2152b22a68"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b2152ce4358"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x2b2152ce4358"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b2152b42ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b2152ce3a28"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b2152b19668"/></to>
    </wire>
    <wire loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="driveA" scoped="" ref="0x2b2152b21140"/></from>
      <to><interface-ref name="PortG3" scoped="" ref="0x2b21527297e0"/></to>
    </wire>
    <wire loc="16:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="driveB" scoped="" ref="0x2b2152b20388"/></from>
      <to><interface-ref name="PortG4" scoped="" ref="0x2b2152736968"/></to>
    </wire>
    <wire loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="adcX" scoped="" ref="0x2b2152b1f510"/></from>
      <to><interface-ref name="PortF0" scoped="" ref="0x2b215271be00"/></to>
    </wire>
    <wire loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="adcY" scoped="" ref="0x2b2152b1e698"/></from>
      <to><interface-ref name="PortF1" scoped="" ref="0x2b2152727020"/></to>
    </wire>
    <wire loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <from><interface-ref name="checkTS" scoped="" ref="0x2b2152b15c68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b21525dc1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b2152b563f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b2152ce3a28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b2152b55410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b2152b6d020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2152b6c890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2152ce23f0"/></to>
    </wire>
    <wire loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b2152b42ad8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b2152cbba28"/></to>
    </wire>
    <wire loc="31:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x2b2152b5a6f8"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2b2152c99880"/></to>
    </wire>
    <wire loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b2152cecb28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b2152b55410"/></to>
    </wire>
    <wire loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b2152c96e78"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b2152b563f0"/></to>
    </wire>
    <wire loc="35:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2b2152ced348"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b2152c9bc68"/></to>
    </wire>
    <wire loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b2152c96020"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b2152b660d0"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b2152b660d0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b2152b7d488"/></to>
    </wire>
    <wire loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b2152b619b0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b2152b7dde0"/></to>
    </wire>
    <wire loc="66:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b2152b6d020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b2152c78e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b2152c78e50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b21531a24b0"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2152c758a0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2152b6c890"/></to>
    </wire>
    <wire loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b2152b8c940"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b2152bba020"/></to>
    </wire>
    <wire loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b2152bba020"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b2152bb51e8"/></to>
    </wire>
    <wire loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b2152b78d30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b21526d6618"/></to>
    </wire>
    <wire loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b2152c71478"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b2152b7bc10"/></to>
    </wire>
    <wire loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b2152c80268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b2152c763f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b2152c763f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b21531a1940"/></to>
    </wire>
    <wire loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b2152bb3640"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b21526b8a80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b2152c77b70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b21531a1200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b2152c75020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b21531a0578"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b21531a0e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2152c758a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2b215319f5d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b21531a42a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b215319c780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b21525dc1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b21531dc818"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b2152c71478"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b21531db020"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b2152c71b98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b21531db5b8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b2152c80268"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b21531da268"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b2152c80e20"/></to>
    </wire>
    <wire loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x2b2152caabf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b21525dc1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="212:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeRectangle" scoped="" ref="0x2b2152d68368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b21525dc1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="261:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeString" scoped="" ref="0x2b2152d796c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b21525dc1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="228:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeCircle" scoped="" ref="0x2b2152d880c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b21525dc1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="320:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeLine" scoped="" ref="0x2b2152d8b190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b21525dc1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="wait4Controller" scoped="" ref="0x2b2152d339e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b21525dc1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="398:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeBar" scoped="" ref="0x2b2152dc3cd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b21525dc1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="289:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="clearScreenNB" scoped="" ref="0x2b2152d947d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b21525dc1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc" safe="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc" safe="">
      <documentation loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimpleDrawC" loc="1:SimpleDrawC.nc">
      <module/>
    </component>
    <component qname="SimpleDrawAppC.Timer0" loc="44(SimpleDrawAppC.Timer0):/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="33:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2152655530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2152655888"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b2152906068"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0SyncC" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0SyncP" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in SYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in SYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in SYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;--> CHANGED TO SYNC-Mode(CPL_CLK)&#9;hglanzer&#10;--> AS0=0 in ASSR&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2152655530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2152655888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2152655530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2152655888"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2152655530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2152655888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="GLCDC" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDC.nc">
      <configuration/>
    </component>
    <component qname="GLCDP" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDP.nc">
      <module/>
    </component>
    <component qname="TouchScreenC" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <configuration/>
    </component>
    <component qname="TouchScreenP" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <module/>
    </component>
    <component qname="TouchScreenC.AdcReadClientC" loc="21(TouchScreenC.AdcReadClientC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LCD128x64C" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <configuration/>
    </component>
    <component qname="LCD128x64P" loc="23:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b2152733ba0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b215273d020" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b215273d368" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b2152741610" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b2152741978" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b2152741ce0" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b215273e060" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b21527d5020" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b21527d5388" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b21527d56f0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b21527d5a20" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncC" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc" abstract="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b2152906068" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b2152906068"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b2152906358" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncP" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b2152913748" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b2152913748"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b2152913a38" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b21528eec68" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b21528eec68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b2152a25cd0" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b2152a25cd0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b2152a22020" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b2152a78510" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b2152a78510"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b2152be5b08" loc="89:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b2152bf4748" loc="42:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b2152c1a5c0" loc="52:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x2b2152cbc9d0" loc="23:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x2b2152cbc9d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b21526d0620" loc="58:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b21526d0620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b21526d0970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b21526d1220" loc="57:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b21526d1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b21526d1570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b21526ce380" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b21526ce380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b21526ce6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b21526d3620" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b21526d3620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b21526d3970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b21526d6618" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b21526d6618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b21526d6968"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b21526d6af0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b21526d6c78"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b21526d6e00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b21526ce020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b21526e2ca0" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b21526e2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b21526e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b21526e2600" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b21526e2600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b21526e2950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b21526e1398" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b21526e1398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b21526e16e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b21526e8360" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b21526e8360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b21526e86b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b21526dbb98" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b21526dbb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b21526e8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b21526e4b08" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b21526e4b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b21526e4e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b21526ec8d8" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b21526ec8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21526ecc28"/>
        <function-ref name="isInput" scoped="" ref="0x2b21526ecdb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b21526e4020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21526e41a8"/>
        <function-ref name="get" scoped="" ref="0x2b21526e4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21526e44b8"/>
        <function-ref name="set" scoped="" ref="0x2b21526e4640"/>
        <function-ref name="clr" scoped="" ref="0x2b21526e47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b21526e5698" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b21526e5698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b21526e59e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b215272daf0" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b215272daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215272c5e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b215272c770"/>
        <function-ref name="toggle" scoped="" ref="0x2b215272c8f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215272ca80"/>
        <function-ref name="get" scoped="" ref="0x2b215272cc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215272cd90"/>
        <function-ref name="set" scoped="" ref="0x2b215272b020"/>
        <function-ref name="clr" scoped="" ref="0x2b215272b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b215270f658" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b215270f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215270f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b215270fb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b215270fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215270fe40"/>
        <function-ref name="get" scoped="" ref="0x2b215270e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215270e1a8"/>
        <function-ref name="set" scoped="" ref="0x2b215270e330"/>
        <function-ref name="clr" scoped="" ref="0x2b215270e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b2152720658" loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b2152720658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527209a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152720b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152720cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152720e40"/>
        <function-ref name="get" scoped="" ref="0x2b215271f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215271f1a8"/>
        <function-ref name="set" scoped="" ref="0x2b215271f330"/>
        <function-ref name="clr" scoped="" ref="0x2b215271f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b2152725348" loc="94:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b2152725348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152725698"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152725820"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527259a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152725b30"/>
        <function-ref name="get" scoped="" ref="0x2b2152725cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152725e40"/>
        <function-ref name="set" scoped="" ref="0x2b2152724020"/>
        <function-ref name="clr" scoped="" ref="0x2b21527241a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b21526fb348" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b21526fb348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21526fb698"/>
        <function-ref name="isInput" scoped="" ref="0x2b21526fb820"/>
        <function-ref name="toggle" scoped="" ref="0x2b21526fb9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21526fbb30"/>
        <function-ref name="get" scoped="" ref="0x2b21526fbcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21526fbe40"/>
        <function-ref name="set" scoped="" ref="0x2b21526fa020"/>
        <function-ref name="clr" scoped="" ref="0x2b21526fa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b2152727020" loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b2152727020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152727370"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527274f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152727680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152727808"/>
        <function-ref name="get" scoped="" ref="0x2b2152727990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152727b18"/>
        <function-ref name="set" scoped="" ref="0x2b2152727ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2152727e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b21526f9658" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b21526f9658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21526f99a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b21526f9b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b21526f9cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21526f9e40"/>
        <function-ref name="get" scoped="" ref="0x2b21526f8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21526f81a8"/>
        <function-ref name="set" scoped="" ref="0x2b21526f8330"/>
        <function-ref name="clr" scoped="" ref="0x2b21526f84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b215270a7e0" loc="66:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b215270a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215270ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b215270acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b215270ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152709020"/>
        <function-ref name="get" scoped="" ref="0x2b21527091a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152709330"/>
        <function-ref name="set" scoped="" ref="0x2b21527094b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152709640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b215271aaf0" loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b215271aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215271ae40"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152719020"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527191a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152719330"/>
        <function-ref name="get" scoped="" ref="0x2b21527194b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152719640"/>
        <function-ref name="set" scoped="" ref="0x2b21527197c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152719950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b215271daf0" loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b215271daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215271de40"/>
        <function-ref name="isInput" scoped="" ref="0x2b215271c020"/>
        <function-ref name="toggle" scoped="" ref="0x2b215271c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215271c330"/>
        <function-ref name="get" scoped="" ref="0x2b215271c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215271c640"/>
        <function-ref name="set" scoped="" ref="0x2b215271c7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b215271c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b21526f3af0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b21526f3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21526f3e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b21526f2020"/>
        <function-ref name="toggle" scoped="" ref="0x2b21526f21a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21526f2330"/>
        <function-ref name="get" scoped="" ref="0x2b21526f24b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21526f2640"/>
        <function-ref name="set" scoped="" ref="0x2b21526f27c8"/>
        <function-ref name="clr" scoped="" ref="0x2b21526f2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b2152704af0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b2152704af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152704e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152703020"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527031a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152703330"/>
        <function-ref name="get" scoped="" ref="0x2b21527034b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152703640"/>
        <function-ref name="set" scoped="" ref="0x2b21527037c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152703950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b2152707c78" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b2152707c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152706020"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527061a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152706330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527064b8"/>
        <function-ref name="get" scoped="" ref="0x2b2152706640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527067c8"/>
        <function-ref name="set" scoped="" ref="0x2b2152706950"/>
        <function-ref name="clr" scoped="" ref="0x2b2152706ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b2152716020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b2152716020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152716370"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527164f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152716680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152716808"/>
        <function-ref name="get" scoped="" ref="0x2b2152716990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152716b18"/>
        <function-ref name="set" scoped="" ref="0x2b2152716ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2152716e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b21527227e0" loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b21527227e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152722b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152722cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152722e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215272e020"/>
        <function-ref name="get" scoped="" ref="0x2b215272e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215272e330"/>
        <function-ref name="set" scoped="" ref="0x2b215272e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b215272e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b21527297e0" loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b21527297e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152729b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152729cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152729e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152736020"/>
        <function-ref name="get" scoped="" ref="0x2b21527361a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152736330"/>
        <function-ref name="set" scoped="" ref="0x2b21527364b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152736640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b2152714348" loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b2152714348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152714698"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152714820"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527149a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152714b30"/>
        <function-ref name="get" scoped="" ref="0x2b2152714cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152714e40"/>
        <function-ref name="set" scoped="" ref="0x2b2152721020"/>
        <function-ref name="clr" scoped="" ref="0x2b21527211a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b21526fd020" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b21526fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21526fd370"/>
        <function-ref name="isInput" scoped="" ref="0x2b21526fd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b21526fd680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21526fd808"/>
        <function-ref name="get" scoped="" ref="0x2b21526fd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21526fdb18"/>
        <function-ref name="set" scoped="" ref="0x2b21526fdca0"/>
        <function-ref name="clr" scoped="" ref="0x2b21526fde28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b21527001a0" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b21527001a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527004f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152700678"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152700800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152700988"/>
        <function-ref name="get" scoped="" ref="0x2b2152700b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152700c98"/>
        <function-ref name="set" scoped="" ref="0x2b2152700e20"/>
        <function-ref name="clr" scoped="" ref="0x2b21526ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b215272b4d0" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b215272b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215272b820"/>
        <function-ref name="isInput" scoped="" ref="0x2b215272b9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b215272bb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215272bcb8"/>
        <function-ref name="get" scoped="" ref="0x2b215272be40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215272a020"/>
        <function-ref name="set" scoped="" ref="0x2b215272a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b215272a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b215270c4d0" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b215270c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215270c820"/>
        <function-ref name="isInput" scoped="" ref="0x2b215270c9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b215270cb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215270ccb8"/>
        <function-ref name="get" scoped="" ref="0x2b215270ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215270b020"/>
        <function-ref name="set" scoped="" ref="0x2b215270b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b215270b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b215270e7e0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b215270e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215270eb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b215270ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b215270ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215270d020"/>
        <function-ref name="get" scoped="" ref="0x2b215270d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215270d330"/>
        <function-ref name="set" scoped="" ref="0x2b215270d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b215270d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b215271f7e0" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b215271f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215271fb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b215271fcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b215271fe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215271e020"/>
        <function-ref name="get" scoped="" ref="0x2b215271e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215271e330"/>
        <function-ref name="set" scoped="" ref="0x2b215271e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b215271e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b21527244d0" loc="95:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b21527244d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152724820"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527249a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152724b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152724cb8"/>
        <function-ref name="get" scoped="" ref="0x2b2152724e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152723020"/>
        <function-ref name="set" scoped="" ref="0x2b21527231a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152723330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b21526fa4d0" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b21526fa4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21526fa820"/>
        <function-ref name="isInput" scoped="" ref="0x2b21526fa9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b21526fab30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21526facb8"/>
        <function-ref name="get" scoped="" ref="0x2b21526fae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21526f9020"/>
        <function-ref name="set" scoped="" ref="0x2b21526f91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b21526f9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b21526f87e0" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b21526f87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21526f8b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b21526f8cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b21526f8e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152705020"/>
        <function-ref name="get" scoped="" ref="0x2b21527051a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152705330"/>
        <function-ref name="set" scoped="" ref="0x2b21527054b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152705640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b2152709968" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b2152709968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152709cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152709e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152708020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527081a8"/>
        <function-ref name="get" scoped="" ref="0x2b2152708330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527084b8"/>
        <function-ref name="set" scoped="" ref="0x2b2152708640"/>
        <function-ref name="clr" scoped="" ref="0x2b21527087c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b2152719c78" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b2152719c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152718020"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527181a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152718330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527184b8"/>
        <function-ref name="get" scoped="" ref="0x2b2152718640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527187c8"/>
        <function-ref name="set" scoped="" ref="0x2b2152718950"/>
        <function-ref name="clr" scoped="" ref="0x2b2152718ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b215271cc78" loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b215271cc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215271b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b215271b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b215271b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215271b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b215271b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215271b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b215271b950"/>
        <function-ref name="clr" scoped="" ref="0x2b215271bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b21526f2c78" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b21526f2c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21526f1020"/>
        <function-ref name="isInput" scoped="" ref="0x2b21526f11a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b21526f1330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21526f14b8"/>
        <function-ref name="get" scoped="" ref="0x2b21526f1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21526f17c8"/>
        <function-ref name="set" scoped="" ref="0x2b21526f1950"/>
        <function-ref name="clr" scoped="" ref="0x2b21526f1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b2152703c78" loc="59:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b2152703c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527020f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152702278"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152702400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152702588"/>
        <function-ref name="get" scoped="" ref="0x2b2152702710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152702898"/>
        <function-ref name="set" scoped="" ref="0x2b2152702a20"/>
        <function-ref name="clr" scoped="" ref="0x2b2152702ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b2152706e00" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b2152706e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527131a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152713330"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527134b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152713640"/>
        <function-ref name="get" scoped="" ref="0x2b21527137c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152713950"/>
        <function-ref name="set" scoped="" ref="0x2b2152713ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152713c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b215272e968" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b215272e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215272ecb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b215272ee40"/>
        <function-ref name="toggle" scoped="" ref="0x2b215272d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215272d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b215272d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215272d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b215272d640"/>
        <function-ref name="clr" scoped="" ref="0x2b215272d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b21527101a0" loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b21527101a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527106f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152710878"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152710a00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152710b88"/>
        <function-ref name="get" scoped="" ref="0x2b2152710d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215270f020"/>
        <function-ref name="set" scoped="" ref="0x2b215270f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b215270f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b21527214d0" loc="84:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b21527214d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152721820"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527219a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152721b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152721cb8"/>
        <function-ref name="get" scoped="" ref="0x2b2152721e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152720020"/>
        <function-ref name="set" scoped="" ref="0x2b21527201a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152720330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b21527261a0" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b21527261a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527264f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152726678"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152726800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152726988"/>
        <function-ref name="get" scoped="" ref="0x2b2152726b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152726c98"/>
        <function-ref name="set" scoped="" ref="0x2b2152726e20"/>
        <function-ref name="clr" scoped="" ref="0x2b2152725020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b2152736968" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b2152736968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152736cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152736e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152735020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527351a8"/>
        <function-ref name="get" scoped="" ref="0x2b2152735330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527354b8"/>
        <function-ref name="set" scoped="" ref="0x2b2152735640"/>
        <function-ref name="clr" scoped="" ref="0x2b21527357c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b21526fc1a0" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b21526fc1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21526fc4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b21526fc678"/>
        <function-ref name="toggle" scoped="" ref="0x2b21526fc800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21526fc988"/>
        <function-ref name="get" scoped="" ref="0x2b21526fcb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21526fcc98"/>
        <function-ref name="set" scoped="" ref="0x2b21526fce20"/>
        <function-ref name="clr" scoped="" ref="0x2b21526fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b21526ff348" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b21526ff348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21526ff698"/>
        <function-ref name="isInput" scoped="" ref="0x2b21526ff820"/>
        <function-ref name="toggle" scoped="" ref="0x2b21526ff9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21526ffb30"/>
        <function-ref name="get" scoped="" ref="0x2b21526ffcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21526ffe40"/>
        <function-ref name="set" scoped="" ref="0x2b215270c020"/>
        <function-ref name="clr" scoped="" ref="0x2b215270c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b215271be00" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b215271be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527281a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152728330"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527284b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152728640"/>
        <function-ref name="get" scoped="" ref="0x2b21527287c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152728950"/>
        <function-ref name="set" scoped="" ref="0x2b2152728ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152728c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b215270b658" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b215270b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215270b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b215270bb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b215270bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215270be40"/>
        <function-ref name="get" scoped="" ref="0x2b215270a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215270a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b215270a330"/>
        <function-ref name="clr" scoped="" ref="0x2b215270a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b215270d968" loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b215270d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215270dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b215270de40"/>
        <function-ref name="toggle" scoped="" ref="0x2b215271a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215271a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b215271a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215271a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b215271a640"/>
        <function-ref name="clr" scoped="" ref="0x2b215271a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b215271e968" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b215271e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215271ecb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b215271ee40"/>
        <function-ref name="toggle" scoped="" ref="0x2b215271d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215271d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b215271d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215271d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b215271d640"/>
        <function-ref name="clr" scoped="" ref="0x2b215271d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b2152723658" loc="96:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b2152723658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527239a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152723b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152723cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152723e40"/>
        <function-ref name="get" scoped="" ref="0x2b2152722020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527221a8"/>
        <function-ref name="set" scoped="" ref="0x2b2152722330"/>
        <function-ref name="clr" scoped="" ref="0x2b21527224b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b21526e6878" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b21526e6878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21526e6bc8"/>
        <function-ref name="isInput" scoped="" ref="0x2b21526e6d50"/>
        <function-ref name="toggle" scoped="" ref="0x2b21526f3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21526f31a8"/>
        <function-ref name="get" scoped="" ref="0x2b21526f3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21526f34b8"/>
        <function-ref name="set" scoped="" ref="0x2b21526f3640"/>
        <function-ref name="clr" scoped="" ref="0x2b21526f37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b2152705968" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b2152705968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152705cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152705e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152704020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527041a8"/>
        <function-ref name="get" scoped="" ref="0x2b2152704330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527044b8"/>
        <function-ref name="set" scoped="" ref="0x2b2152704640"/>
        <function-ref name="clr" scoped="" ref="0x2b21527047c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b2152708af0" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b2152708af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152708e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152707020"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527071a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152707330"/>
        <function-ref name="get" scoped="" ref="0x2b21527074b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152707640"/>
        <function-ref name="set" scoped="" ref="0x2b21527077c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152707950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b2152718e00" loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b2152718e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527171a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152717330"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527174b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152717640"/>
        <function-ref name="get" scoped="" ref="0x2b21527177c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152717950"/>
        <function-ref name="set" scoped="" ref="0x2b2152717ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152717c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b215272a658" loc="102:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b215272a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215272a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b215272ab30"/>
        <function-ref name="toggle" scoped="" ref="0x2b215272acb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215272ae40"/>
        <function-ref name="get" scoped="" ref="0x2b2152729020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527291a8"/>
        <function-ref name="set" scoped="" ref="0x2b2152729330"/>
        <function-ref name="clr" scoped="" ref="0x2b21527294b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b21527151a0" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b21527151a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527154f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152715678"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152715800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152715988"/>
        <function-ref name="get" scoped="" ref="0x2b2152715b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152715c98"/>
        <function-ref name="set" scoped="" ref="0x2b2152715e20"/>
        <function-ref name="clr" scoped="" ref="0x2b2152714020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b2152711020" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b2152711020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152711370"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527114f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152711680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152711808"/>
        <function-ref name="get" scoped="" ref="0x2b2152711990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152711b18"/>
        <function-ref name="set" scoped="" ref="0x2b2152711ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2152711e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b21526f1e00" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b21526f1e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21526fe1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b21526fe330"/>
        <function-ref name="toggle" scoped="" ref="0x2b21526fe4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21526fe640"/>
        <function-ref name="get" scoped="" ref="0x2b21526fe7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21526fe950"/>
        <function-ref name="set" scoped="" ref="0x2b21526fead8"/>
        <function-ref name="clr" scoped="" ref="0x2b21526fec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b2152701020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b2152701020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152701370"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527014f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152701680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152701808"/>
        <function-ref name="get" scoped="" ref="0x2b2152701990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152701b18"/>
        <function-ref name="set" scoped="" ref="0x2b2152701ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2152701e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b2152778120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b2152778120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152778470"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527785f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152778780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152778908"/>
        <function-ref name="get" scoped="" ref="0x2b2152778a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152778c18"/>
        <function-ref name="set" scoped="" ref="0x2b2152778da0"/>
        <function-ref name="clr" scoped="" ref="0x2b2152777020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b21527855b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b21527855b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152785908"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152785a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152785c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152785da0"/>
        <function-ref name="get" scoped="" ref="0x2b2152784020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527841a8"/>
        <function-ref name="set" scoped="" ref="0x2b2152784330"/>
        <function-ref name="clr" scoped="" ref="0x2b21527844b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b215277bdc0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b215277bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215277a170"/>
        <function-ref name="isInput" scoped="" ref="0x2b215277a2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b215277a480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215277a608"/>
        <function-ref name="get" scoped="" ref="0x2b215277a790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215277a918"/>
        <function-ref name="set" scoped="" ref="0x2b215277aaa0"/>
        <function-ref name="clr" scoped="" ref="0x2b215277ac28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b21527772a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b21527772a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527775f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152777780"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152777908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152777a90"/>
        <function-ref name="get" scoped="" ref="0x2b2152777c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152777da0"/>
        <function-ref name="set" scoped="" ref="0x2b2152776020"/>
        <function-ref name="clr" scoped="" ref="0x2b21527761a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b2152784740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b2152784740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152784a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152784c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152784da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152783020"/>
        <function-ref name="get" scoped="" ref="0x2b21527831a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152783330"/>
        <function-ref name="set" scoped="" ref="0x2b21527834b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152783640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b2152779020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b2152779020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152779370"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527794f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152779680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152779808"/>
        <function-ref name="get" scoped="" ref="0x2b2152779990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152779b18"/>
        <function-ref name="set" scoped="" ref="0x2b2152779ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2152779e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b2152776430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b2152776430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152776780"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152776908"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152776a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152776c18"/>
        <function-ref name="get" scoped="" ref="0x2b2152776da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152785020"/>
        <function-ref name="set" scoped="" ref="0x2b21527851a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152785330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b21527838c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b21527838c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152783c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152783da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152782020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527821a8"/>
        <function-ref name="get" scoped="" ref="0x2b2152782330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527824b8"/>
        <function-ref name="set" scoped="" ref="0x2b2152782640"/>
        <function-ref name="clr" scoped="" ref="0x2b21527827c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152e36710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152e36710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152e36a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152e36be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152e36d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152e35020"/>
        <function-ref name="get" scoped="" ref="0x2b2152e351a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152e35330"/>
        <function-ref name="set" scoped="" ref="0x2b2152e354b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152e35640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152e33710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152e33710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152e33a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152e33be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152e33d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152e32020"/>
        <function-ref name="get" scoped="" ref="0x2b2152e321a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152e32330"/>
        <function-ref name="set" scoped="" ref="0x2b2152e324b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152e32640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152e30710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152e30710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152e30a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152e30be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152e30d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152e2f020"/>
        <function-ref name="get" scoped="" ref="0x2b2152e2f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152e2f330"/>
        <function-ref name="set" scoped="" ref="0x2b2152e2f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152e2f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152e2d710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152e2d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152e2da60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152e2dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152e2dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152e2c020"/>
        <function-ref name="get" scoped="" ref="0x2b2152e2c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152e2c330"/>
        <function-ref name="set" scoped="" ref="0x2b2152e2c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152e2c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152e2a710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152e2a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152e2aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152e2abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152e2ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152e29020"/>
        <function-ref name="get" scoped="" ref="0x2b2152e291a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152e29330"/>
        <function-ref name="set" scoped="" ref="0x2b2152e294b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152e29640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152e27710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152e27710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152e27a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152e27be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152e27d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152e26020"/>
        <function-ref name="get" scoped="" ref="0x2b2152e261a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152e26330"/>
        <function-ref name="set" scoped="" ref="0x2b2152e264b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152e26640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152e4f710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152e4f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152e4fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152e4fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152e4fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152e4d020"/>
        <function-ref name="get" scoped="" ref="0x2b2152e4d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152e4d330"/>
        <function-ref name="set" scoped="" ref="0x2b2152e4d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152e4d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152e4b710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152e4b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152e4ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152e4bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152e4bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152e4a020"/>
        <function-ref name="get" scoped="" ref="0x2b2152e4a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152e4a330"/>
        <function-ref name="set" scoped="" ref="0x2b2152e4a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152e4a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b215278abd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b215278abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152789020"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527891a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152789330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527894b8"/>
        <function-ref name="get" scoped="" ref="0x2b2152789640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527897c8"/>
        <function-ref name="set" scoped="" ref="0x2b2152789950"/>
        <function-ref name="clr" scoped="" ref="0x2b2152789ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b2152786020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b2152786020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152786370"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527864f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152786680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152786808"/>
        <function-ref name="get" scoped="" ref="0x2b2152786990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152786b18"/>
        <function-ref name="set" scoped="" ref="0x2b2152786ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2152786e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b215278c930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b215278c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215278cc80"/>
        <function-ref name="isInput" scoped="" ref="0x2b215278ce08"/>
        <function-ref name="toggle" scoped="" ref="0x2b215278b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215278b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b215278b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215278b4b8"/>
        <function-ref name="set" scoped="" ref="0x2b215278b640"/>
        <function-ref name="clr" scoped="" ref="0x2b215278b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b2152789d60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b2152789d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527880d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152788260"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527883e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152788570"/>
        <function-ref name="get" scoped="" ref="0x2b21527886f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152788880"/>
        <function-ref name="set" scoped="" ref="0x2b2152788a08"/>
        <function-ref name="clr" scoped="" ref="0x2b2152788b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b2152795120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b2152795120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152795470"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527955f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152795780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152795908"/>
        <function-ref name="get" scoped="" ref="0x2b2152795a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152795c18"/>
        <function-ref name="set" scoped="" ref="0x2b2152795da0"/>
        <function-ref name="clr" scoped="" ref="0x2b2152794020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b215278ba50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b215278ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215278bda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b215278a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b215278a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215278a330"/>
        <function-ref name="get" scoped="" ref="0x2b215278a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215278a640"/>
        <function-ref name="set" scoped="" ref="0x2b215278a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b215278a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b2152788e18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b2152788e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527871a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152787330"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527874b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152787640"/>
        <function-ref name="get" scoped="" ref="0x2b21527877c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152787950"/>
        <function-ref name="set" scoped="" ref="0x2b2152787ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152787c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b21527942a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b21527942a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527945f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152794780"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152794908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152794a90"/>
        <function-ref name="get" scoped="" ref="0x2b2152794c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152794da0"/>
        <function-ref name="set" scoped="" ref="0x2b2152793020"/>
        <function-ref name="clr" scoped="" ref="0x2b21527931a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152e7e6a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152e7e6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152e7e9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152e7eb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152e7ed08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152e7d020"/>
        <function-ref name="get" scoped="" ref="0x2b2152e7d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152e7d330"/>
        <function-ref name="set" scoped="" ref="0x2b2152e7d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152e7d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152ea7710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152ea7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152ea7a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152ea7be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152ea7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152ea6020"/>
        <function-ref name="get" scoped="" ref="0x2b2152ea61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152ea6330"/>
        <function-ref name="set" scoped="" ref="0x2b2152ea64b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152ea6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152ea4710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152ea4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152ea4a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152ea4be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152ea4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152ea3020"/>
        <function-ref name="get" scoped="" ref="0x2b2152ea31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152ea3330"/>
        <function-ref name="set" scoped="" ref="0x2b2152ea34b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152ea3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152ea1710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152ea1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152ea1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152ea1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152ea1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152ea0020"/>
        <function-ref name="get" scoped="" ref="0x2b2152ea01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152ea0330"/>
        <function-ref name="set" scoped="" ref="0x2b2152ea04b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152ea0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152e9e710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152e9e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152e9ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152e9ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152e9ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152e9d020"/>
        <function-ref name="get" scoped="" ref="0x2b2152e9d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152e9d330"/>
        <function-ref name="set" scoped="" ref="0x2b2152e9d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152e9d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152e9b710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152e9b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152e9ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152e9bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152e9bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152e9a020"/>
        <function-ref name="get" scoped="" ref="0x2b2152e9a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152e9a330"/>
        <function-ref name="set" scoped="" ref="0x2b2152e9a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152e9a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152e98710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152e98710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152e98a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152e98be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152e98d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152e97020"/>
        <function-ref name="get" scoped="" ref="0x2b2152e971a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152e97330"/>
        <function-ref name="set" scoped="" ref="0x2b2152e974b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152e97640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152e95710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152e95710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152e95a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152e95be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152e95d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152e93020"/>
        <function-ref name="get" scoped="" ref="0x2b2152e931a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152e93330"/>
        <function-ref name="set" scoped="" ref="0x2b2152e934b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152e93640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b215279b740" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b215279b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215279ba90"/>
        <function-ref name="isInput" scoped="" ref="0x2b215279bc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b215279bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215279a020"/>
        <function-ref name="get" scoped="" ref="0x2b215279a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215279a330"/>
        <function-ref name="set" scoped="" ref="0x2b215279a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b215279a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b2152798bd8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b2152798bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152796020"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527961a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152796330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527964b8"/>
        <function-ref name="get" scoped="" ref="0x2b2152796640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527967c8"/>
        <function-ref name="set" scoped="" ref="0x2b2152796950"/>
        <function-ref name="clr" scoped="" ref="0x2b2152796ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b215279d500" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b215279d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215279d850"/>
        <function-ref name="isInput" scoped="" ref="0x2b215279d9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b215279db60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215279dce8"/>
        <function-ref name="get" scoped="" ref="0x2b215279de70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215279c020"/>
        <function-ref name="set" scoped="" ref="0x2b215279c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b215279c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b215279a8c8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b215279a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215279ac18"/>
        <function-ref name="isInput" scoped="" ref="0x2b215279ada0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152799020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527991a8"/>
        <function-ref name="get" scoped="" ref="0x2b2152799330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527994b8"/>
        <function-ref name="set" scoped="" ref="0x2b2152799640"/>
        <function-ref name="clr" scoped="" ref="0x2b21527997c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b2152796d60" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b2152796d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527a50d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527a5260"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527a53e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527a5570"/>
        <function-ref name="get" scoped="" ref="0x2b21527a56f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527a5880"/>
        <function-ref name="set" scoped="" ref="0x2b21527a5a08"/>
        <function-ref name="clr" scoped="" ref="0x2b21527a5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b215279c5b8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b215279c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215279c908"/>
        <function-ref name="isInput" scoped="" ref="0x2b215279ca90"/>
        <function-ref name="toggle" scoped="" ref="0x2b215279cc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215279cda0"/>
        <function-ref name="get" scoped="" ref="0x2b215279b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215279b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b215279b330"/>
        <function-ref name="clr" scoped="" ref="0x2b215279b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b2152799a50" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b2152799a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152799da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152798020"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527981a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152798330"/>
        <function-ref name="get" scoped="" ref="0x2b21527984b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152798640"/>
        <function-ref name="set" scoped="" ref="0x2b21527987c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152798950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b21527a5e18" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b21527a5e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527a41a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527a4330"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527a44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527a4640"/>
        <function-ref name="get" scoped="" ref="0x2b21527a47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527a4950"/>
        <function-ref name="set" scoped="" ref="0x2b21527a4ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b21527a4c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152ef86a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152ef86a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152ef89f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152ef8b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152ef8d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152ef7020"/>
        <function-ref name="get" scoped="" ref="0x2b2152ef71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152ef7330"/>
        <function-ref name="set" scoped="" ref="0x2b2152ef74b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152ef7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152ef5710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152ef5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152ef5a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152ef5be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152ef5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152ef4020"/>
        <function-ref name="get" scoped="" ref="0x2b2152ef41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152ef4330"/>
        <function-ref name="set" scoped="" ref="0x2b2152ef44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152ef4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152ef2710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152ef2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152ef2a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152ef2be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152ef2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152ef1020"/>
        <function-ref name="get" scoped="" ref="0x2b2152ef11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152ef1330"/>
        <function-ref name="set" scoped="" ref="0x2b2152ef14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152ef1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152eef710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152eef710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152eefa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152eefbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152eefd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152eee020"/>
        <function-ref name="get" scoped="" ref="0x2b2152eee1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152eee330"/>
        <function-ref name="set" scoped="" ref="0x2b2152eee4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152eee640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152f1a710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152f1a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152f1aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152f1abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152f1ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152f19020"/>
        <function-ref name="get" scoped="" ref="0x2b2152f191a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152f19330"/>
        <function-ref name="set" scoped="" ref="0x2b2152f194b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152f19640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152f17710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152f17710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152f17a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152f17be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152f17d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152f16020"/>
        <function-ref name="get" scoped="" ref="0x2b2152f161a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152f16330"/>
        <function-ref name="set" scoped="" ref="0x2b2152f164b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152f16640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152f14710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152f14710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152f14a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152f14be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152f14d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152f13020"/>
        <function-ref name="get" scoped="" ref="0x2b2152f131a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152f13330"/>
        <function-ref name="set" scoped="" ref="0x2b2152f134b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152f13640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152f11710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152f11710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152f11a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152f11be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152f11d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152f0f020"/>
        <function-ref name="get" scoped="" ref="0x2b2152f0f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152f0f330"/>
        <function-ref name="set" scoped="" ref="0x2b2152f0f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152f0f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b21527ac120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b21527ac120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527ac470"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527ac5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527ac780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527ac908"/>
        <function-ref name="get" scoped="" ref="0x2b21527aca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527acc18"/>
        <function-ref name="set" scoped="" ref="0x2b21527acda0"/>
        <function-ref name="clr" scoped="" ref="0x2b21527aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b21527a85b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b21527a85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527a8908"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527a8a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527a8c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527a8da0"/>
        <function-ref name="get" scoped="" ref="0x2b21527a7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527a71a8"/>
        <function-ref name="set" scoped="" ref="0x2b21527a7330"/>
        <function-ref name="clr" scoped="" ref="0x2b21527a74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b215279fe40" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b215279fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215279e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b215279e348"/>
        <function-ref name="toggle" scoped="" ref="0x2b215279e4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215279e658"/>
        <function-ref name="get" scoped="" ref="0x2b215279e7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215279e968"/>
        <function-ref name="set" scoped="" ref="0x2b215279eaf0"/>
        <function-ref name="clr" scoped="" ref="0x2b215279ec78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b21527aa2a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b21527aa2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527aa5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527aa780"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527aa908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527aaa90"/>
        <function-ref name="get" scoped="" ref="0x2b21527aac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527aada0"/>
        <function-ref name="set" scoped="" ref="0x2b21527a9020"/>
        <function-ref name="clr" scoped="" ref="0x2b21527a91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b21527a7740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b21527a7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527a7a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527a7c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527a7da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527a6020"/>
        <function-ref name="get" scoped="" ref="0x2b21527a61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527a6330"/>
        <function-ref name="set" scoped="" ref="0x2b21527a64b8"/>
        <function-ref name="clr" scoped="" ref="0x2b21527a6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b21527ad020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b21527ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527ad370"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527ad4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527ad680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527ad808"/>
        <function-ref name="get" scoped="" ref="0x2b21527ad990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527adb18"/>
        <function-ref name="set" scoped="" ref="0x2b21527adca0"/>
        <function-ref name="clr" scoped="" ref="0x2b21527ade28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b21527a9430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b21527a9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527a9780"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527a9908"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527a9a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527a9c18"/>
        <function-ref name="get" scoped="" ref="0x2b21527a9da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527a8020"/>
        <function-ref name="set" scoped="" ref="0x2b21527a81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b21527a8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b21527a68c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b21527a68c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527a6c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527a6da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527b5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527b51a8"/>
        <function-ref name="get" scoped="" ref="0x2b21527b5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527b54b8"/>
        <function-ref name="set" scoped="" ref="0x2b21527b5640"/>
        <function-ref name="clr" scoped="" ref="0x2b21527b57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152f4a6a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152f4a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152f4a9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152f4ab80"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152f4ad08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152f49020"/>
        <function-ref name="get" scoped="" ref="0x2b2152f491a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152f49330"/>
        <function-ref name="set" scoped="" ref="0x2b2152f494b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152f49640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152f77710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152f77710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152f77a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152f77be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152f77d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152f76020"/>
        <function-ref name="get" scoped="" ref="0x2b2152f761a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152f76330"/>
        <function-ref name="set" scoped="" ref="0x2b2152f764b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152f76640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152f74710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152f74710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152f74a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152f74be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152f74d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152f73020"/>
        <function-ref name="get" scoped="" ref="0x2b2152f731a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152f73330"/>
        <function-ref name="set" scoped="" ref="0x2b2152f734b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152f73640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152f71710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152f71710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152f71a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152f71be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152f71d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152f70020"/>
        <function-ref name="get" scoped="" ref="0x2b2152f701a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152f70330"/>
        <function-ref name="set" scoped="" ref="0x2b2152f704b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152f70640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152f6e710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152f6e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152f6ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152f6ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152f6ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152f6d020"/>
        <function-ref name="get" scoped="" ref="0x2b2152f6d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152f6d330"/>
        <function-ref name="set" scoped="" ref="0x2b2152f6d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152f6d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152f6b710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152f6b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152f6ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152f6bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152f6bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152f6a020"/>
        <function-ref name="get" scoped="" ref="0x2b2152f6a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152f6a330"/>
        <function-ref name="set" scoped="" ref="0x2b2152f6a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152f6a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152f68710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152f68710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152f68a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152f68be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152f68d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152f67020"/>
        <function-ref name="get" scoped="" ref="0x2b2152f671a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152f67330"/>
        <function-ref name="set" scoped="" ref="0x2b2152f674b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152f67640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152f65710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152f65710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152f65a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152f65be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152f65d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152f64020"/>
        <function-ref name="get" scoped="" ref="0x2b2152f641a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152f64330"/>
        <function-ref name="set" scoped="" ref="0x2b2152f644b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152f64640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b21527bdbd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b21527bdbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527bc020"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527bc1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527bc330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527bc4b8"/>
        <function-ref name="get" scoped="" ref="0x2b21527bc640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527bc7c8"/>
        <function-ref name="set" scoped="" ref="0x2b21527bc950"/>
        <function-ref name="clr" scoped="" ref="0x2b21527bcad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b21527b9020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b21527b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527b9370"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527b94f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527b9680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527b9808"/>
        <function-ref name="get" scoped="" ref="0x2b21527b9990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527b9b18"/>
        <function-ref name="set" scoped="" ref="0x2b21527b9ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b21527b9e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b21527af930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b21527af930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527afc80"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527afe08"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527ae020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527ae1a8"/>
        <function-ref name="get" scoped="" ref="0x2b21527ae330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527ae4b8"/>
        <function-ref name="set" scoped="" ref="0x2b21527ae640"/>
        <function-ref name="clr" scoped="" ref="0x2b21527ae7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b21527bcd60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b21527bcd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527bb0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527bb260"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527bb3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527bb570"/>
        <function-ref name="get" scoped="" ref="0x2b21527bb6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527bb880"/>
        <function-ref name="set" scoped="" ref="0x2b21527bba08"/>
        <function-ref name="clr" scoped="" ref="0x2b21527bbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b21527b8120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b21527b8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527b8470"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527b85f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527b8780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527b8908"/>
        <function-ref name="get" scoped="" ref="0x2b21527b8a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527b8c18"/>
        <function-ref name="set" scoped="" ref="0x2b21527b8da0"/>
        <function-ref name="clr" scoped="" ref="0x2b21527b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b21527aea50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b21527aea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527aeda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527bd020"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527bd1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527bd330"/>
        <function-ref name="get" scoped="" ref="0x2b21527bd4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527bd640"/>
        <function-ref name="set" scoped="" ref="0x2b21527bd7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b21527bd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b21527bbe18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b21527bbe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527ba1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527ba330"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527ba4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527ba640"/>
        <function-ref name="get" scoped="" ref="0x2b21527ba7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527ba950"/>
        <function-ref name="set" scoped="" ref="0x2b21527baad8"/>
        <function-ref name="clr" scoped="" ref="0x2b21527bac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b21527b72a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b21527b72a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527b75f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527b7780"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527b7908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527b7a90"/>
        <function-ref name="get" scoped="" ref="0x2b21527b7c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527b7da0"/>
        <function-ref name="set" scoped="" ref="0x2b21527b6020"/>
        <function-ref name="clr" scoped="" ref="0x2b21527b61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152fd46a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152fd46a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152fd49f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152fd4b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152fd4d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152fd3020"/>
        <function-ref name="get" scoped="" ref="0x2b2152fd31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152fd3330"/>
        <function-ref name="set" scoped="" ref="0x2b2152fd34b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152fd3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152fd1710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152fd1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152fd1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152fd1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152fd1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152fd0020"/>
        <function-ref name="get" scoped="" ref="0x2b2152fd01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152fd0330"/>
        <function-ref name="set" scoped="" ref="0x2b2152fd04b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152fd0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152fce710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152fce710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152fcea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152fcebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152fced70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152fcd020"/>
        <function-ref name="get" scoped="" ref="0x2b2152fcd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152fcd330"/>
        <function-ref name="set" scoped="" ref="0x2b2152fcd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152fcd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152fcb710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152fcb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152fcba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152fcbbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152fcbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152fca020"/>
        <function-ref name="get" scoped="" ref="0x2b2152fca1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152fca330"/>
        <function-ref name="set" scoped="" ref="0x2b2152fca4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152fca640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152fc8710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152fc8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152fc8a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152fc8be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152fc8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152fc7020"/>
        <function-ref name="get" scoped="" ref="0x2b2152fc71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152fc7330"/>
        <function-ref name="set" scoped="" ref="0x2b2152fc74b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152fc7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152fc5710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152fc5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152fc5a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152fc5be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152fc5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152fc4020"/>
        <function-ref name="get" scoped="" ref="0x2b2152fc41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152fc4330"/>
        <function-ref name="set" scoped="" ref="0x2b2152fc44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152fc4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152fc2710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152fc2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152fc2a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152fc2be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152fc2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152fc1020"/>
        <function-ref name="get" scoped="" ref="0x2b2152fc11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152fc1330"/>
        <function-ref name="set" scoped="" ref="0x2b2152fc14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152fc1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152ff1710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152ff1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152ff1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152ff1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152ff1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152ff0020"/>
        <function-ref name="get" scoped="" ref="0x2b2152ff01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152ff0330"/>
        <function-ref name="set" scoped="" ref="0x2b2152ff04b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152ff0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b21527bf430" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b21527bf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527bf780"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527bf908"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527bfa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527bfc18"/>
        <function-ref name="get" scoped="" ref="0x2b21527bfda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527be020"/>
        <function-ref name="set" scoped="" ref="0x2b21527be1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b21527be330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b21527ce8c8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b21527ce8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527cec18"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527ceda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527cd020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527cd1a8"/>
        <function-ref name="get" scoped="" ref="0x2b21527cd330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527cd4b8"/>
        <function-ref name="set" scoped="" ref="0x2b21527cd640"/>
        <function-ref name="clr" scoped="" ref="0x2b21527cd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b21527c11e8" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b21527c11e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527c1538"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527c16c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527c1848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527c19d0"/>
        <function-ref name="get" scoped="" ref="0x2b21527c1b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527c1ce0"/>
        <function-ref name="set" scoped="" ref="0x2b21527c1e68"/>
        <function-ref name="clr" scoped="" ref="0x2b21527c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b21527be5b8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b21527be5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527be908"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527bea90"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527bec18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527beda0"/>
        <function-ref name="get" scoped="" ref="0x2b21527cf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527cf1a8"/>
        <function-ref name="set" scoped="" ref="0x2b21527cf330"/>
        <function-ref name="clr" scoped="" ref="0x2b21527cf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b21527cda50" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b21527cda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527cdda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527cc020"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527cc1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527cc330"/>
        <function-ref name="get" scoped="" ref="0x2b21527cc4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527cc640"/>
        <function-ref name="set" scoped="" ref="0x2b21527cc7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b21527cc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b21527c02a8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b21527c02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527c05f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527c0780"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527c0908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527c0a90"/>
        <function-ref name="get" scoped="" ref="0x2b21527c0c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527c0da0"/>
        <function-ref name="set" scoped="" ref="0x2b21527bf020"/>
        <function-ref name="clr" scoped="" ref="0x2b21527bf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b21527cf740" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b21527cf740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527cfa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527cfc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527cfda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527ce020"/>
        <function-ref name="get" scoped="" ref="0x2b21527ce1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527ce330"/>
        <function-ref name="set" scoped="" ref="0x2b21527ce4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b21527ce640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b21527ccbd8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b21527ccbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527ca020"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527ca1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527ca330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527ca4b8"/>
        <function-ref name="get" scoped="" ref="0x2b21527ca640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527ca7c8"/>
        <function-ref name="set" scoped="" ref="0x2b21527ca950"/>
        <function-ref name="clr" scoped="" ref="0x2b21527caad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b21530356a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b21530356a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21530359f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2153035b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b2153035d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2153034020"/>
        <function-ref name="get" scoped="" ref="0x2b21530341a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2153034330"/>
        <function-ref name="set" scoped="" ref="0x2b21530344b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2153034640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2153032710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2153032710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2153032a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2153032be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2153032d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2153031020"/>
        <function-ref name="get" scoped="" ref="0x2b21530311a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2153031330"/>
        <function-ref name="set" scoped="" ref="0x2b21530314b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2153031640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b215302f710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b215302f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215302fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b215302fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b215302fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215302e020"/>
        <function-ref name="get" scoped="" ref="0x2b215302e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215302e330"/>
        <function-ref name="set" scoped="" ref="0x2b215302e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b215302e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b215302c710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b215302c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215302ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b215302cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b215302cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215302b020"/>
        <function-ref name="get" scoped="" ref="0x2b215302b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215302b330"/>
        <function-ref name="set" scoped="" ref="0x2b215302b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b215302b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2153029710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2153029710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2153029a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2153029be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2153029d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2153028020"/>
        <function-ref name="get" scoped="" ref="0x2b21530281a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2153028330"/>
        <function-ref name="set" scoped="" ref="0x2b21530284b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2153028640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2153026710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2153026710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2153026a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2153026be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2153026d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2153025020"/>
        <function-ref name="get" scoped="" ref="0x2b21530251a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2153025330"/>
        <function-ref name="set" scoped="" ref="0x2b21530254b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2153025640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2153056710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2153056710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2153056a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2153056be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2153056d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2153055020"/>
        <function-ref name="get" scoped="" ref="0x2b21530551a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2153055330"/>
        <function-ref name="set" scoped="" ref="0x2b21530554b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2153055640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2153053710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2153053710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2153053a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2153053be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2153053d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2153052020"/>
        <function-ref name="get" scoped="" ref="0x2b21530521a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2153052330"/>
        <function-ref name="set" scoped="" ref="0x2b21530524b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2153052640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b21527d6ac0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b21527d6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527d6e10"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527e4020"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527e41a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527e4330"/>
        <function-ref name="get" scoped="" ref="0x2b21527e44b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527e4640"/>
        <function-ref name="set" scoped="" ref="0x2b21527e47c8"/>
        <function-ref name="clr" scoped="" ref="0x2b21527e4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b21527f3db8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b21527f3db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527f2170"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527f22f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527f2480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527f2608"/>
        <function-ref name="get" scoped="" ref="0x2b21527f2790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527f2918"/>
        <function-ref name="set" scoped="" ref="0x2b21527f2aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b21527f2c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b21527ed3e0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b21527ed3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527ed730"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527ed8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527eda40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527edbc8"/>
        <function-ref name="get" scoped="" ref="0x2b21527edd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527ec020"/>
        <function-ref name="set" scoped="" ref="0x2b21527ec1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b21527ec330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b21527fa7e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b21527fa7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527fab38"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527facc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527fae48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527f9020"/>
        <function-ref name="get" scoped="" ref="0x2b21527f91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527f9330"/>
        <function-ref name="set" scoped="" ref="0x2b21527f94b8"/>
        <function-ref name="clr" scoped="" ref="0x2b21527f9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b21527f6c38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b21527f6c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527f5020"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527f51a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527f5330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527f54b8"/>
        <function-ref name="get" scoped="" ref="0x2b21527f5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21527f57c8"/>
        <function-ref name="set" scoped="" ref="0x2b21527f5950"/>
        <function-ref name="clr" scoped="" ref="0x2b21527f5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152802020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152802020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152802370"/>
        <function-ref name="isInput" scoped="" ref="0x2b21528024f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152802680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152802808"/>
        <function-ref name="get" scoped="" ref="0x2b2152802990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152802b18"/>
        <function-ref name="set" scoped="" ref="0x2b2152802ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2152802e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b21527fd480" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b21527fd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21527fd7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b21527fd958"/>
        <function-ref name="toggle" scoped="" ref="0x2b21527fdae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21527fdc68"/>
        <function-ref name="get" scoped="" ref="0x2b21527fddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215280e020"/>
        <function-ref name="set" scoped="" ref="0x2b215280e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b215280e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b215280b7e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b215280b7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215280bb38"/>
        <function-ref name="isInput" scoped="" ref="0x2b215280bcc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b215280be48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215280a020"/>
        <function-ref name="get" scoped="" ref="0x2b215280a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215280a330"/>
        <function-ref name="set" scoped="" ref="0x2b215280a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b215280a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152806970" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152806970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152806cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152806e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152817020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21528171a8"/>
        <function-ref name="get" scoped="" ref="0x2b2152817330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21528174b8"/>
        <function-ref name="set" scoped="" ref="0x2b2152817640"/>
        <function-ref name="clr" scoped="" ref="0x2b21528177c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152813ab0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152813ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152813e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152812020"/>
        <function-ref name="toggle" scoped="" ref="0x2b21528121a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152812330"/>
        <function-ref name="get" scoped="" ref="0x2b21528124b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152812640"/>
        <function-ref name="set" scoped="" ref="0x2b21528127c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152812950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b215280fc38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b215280fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152820020"/>
        <function-ref name="isInput" scoped="" ref="0x2b21528201a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152820330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21528204b8"/>
        <function-ref name="get" scoped="" ref="0x2b2152820640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b21528207c8"/>
        <function-ref name="set" scoped="" ref="0x2b2152820950"/>
        <function-ref name="clr" scoped="" ref="0x2b2152820ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b215281b020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b215281b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b215281b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b215281b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b215281b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b215281b808"/>
        <function-ref name="get" scoped="" ref="0x2b215281b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b215281bb18"/>
        <function-ref name="set" scoped="" ref="0x2b215281bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b215281be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2152828180" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2152828180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21528284d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152828658"/>
        <function-ref name="toggle" scoped="" ref="0x2b21528287e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152828968"/>
        <function-ref name="get" scoped="" ref="0x2b2152828af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152828c78"/>
        <function-ref name="set" scoped="" ref="0x2b2152828e00"/>
        <function-ref name="clr" scoped="" ref="0x2b2152827020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b21528632c0" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b21528632c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b21525d4128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b21525d4128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2152863610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b21528638f0" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b21528638f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b2152863c40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b2152863dc8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b2152862020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b21528621a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b2152862330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b2152880898" loc="60:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b2152880898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2152880be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b2152881198" loc="57:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b2152881198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b21528814e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b21528801d0" loc="59:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b21528801d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2152880520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b21528817d0" loc="58:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b21528817d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2152881b20"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b2152881ca8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b2152881e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b21525dc1c8" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b21525dc1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b21525dc518"/>
        <function-ref name="runTask" scoped="" ref="0x2b21525dc6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b21525d9600" loc="47:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b21525d9600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b21525d9950"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b21525d9ad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b21525d9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b215268f2b0" loc="56:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b215268f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b215268f600"/>
        <function-ref name="runTask" scoped="" ref="0x2b215268f788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b2152698758" loc="57:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b2152698758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b2152698aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b2152690448" loc="55:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b2152690448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2152690798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b2152690920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b2152690aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b21526b52b0" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b21526b52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b21526b5600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b21526af660" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b21526af660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b21526af9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b21526b8a80" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b21526b8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b21526b8dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b215289dc08" loc="11:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b215289dc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2152655530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2152655888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b215289ce78"/>
        <function-ref name="fired" scoped="" ref="0x2b21528925a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b215289c2d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b2152892e48"/>
        <function-ref name="getdt" scoped="" ref="0x2b215289b748"/>
        <function-ref name="gett0" scoped="" ref="0x2b215289b2f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b21528929f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b21528937e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b215289c8a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b2152893c88"/>
        <function-ref name="stop" scoped="" ref="0x2b2152892158"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button2" ref="0x2b21528876a0" loc="5:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button2" scoped="" ref="0x2b21528876a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21528879f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152887b78"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152887d00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152886020"/>
        <function-ref name="get" scoped="" ref="0x2b21528861a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152886330"/>
        <function-ref name="set" scoped="" ref="0x2b21528864b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152886640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b21526d4a20" loc="2:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b21526d4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b21526d4d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button5" ref="0x2b2152883020" loc="8:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button5" scoped="" ref="0x2b2152883020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152883370"/>
        <function-ref name="isInput" scoped="" ref="0x2b21528834f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152883680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152883808"/>
        <function-ref name="get" scoped="" ref="0x2b2152883990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152883b18"/>
        <function-ref name="set" scoped="" ref="0x2b2152883ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2152883e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button7" ref="0x2b2152895390" loc="10:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button7" scoped="" ref="0x2b2152895390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21528956e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152895868"/>
        <function-ref name="toggle" scoped="" ref="0x2b21528959f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152895b78"/>
        <function-ref name="get" scoped="" ref="0x2b2152895d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152894020"/>
        <function-ref name="set" scoped="" ref="0x2b21528941a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152894330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button0" ref="0x2b2152889108" loc="3:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button0" scoped="" ref="0x2b2152889108"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152889458"/>
        <function-ref name="isInput" scoped="" ref="0x2b21528895e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152889768"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21528898f0"/>
        <function-ref name="get" scoped="" ref="0x2b2152889a78"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152889c00"/>
        <function-ref name="set" scoped="" ref="0x2b2152889d88"/>
        <function-ref name="clr" scoped="" ref="0x2b2152888020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button3" ref="0x2b21528869b0" loc="6:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button3" scoped="" ref="0x2b21528869b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152886d00"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152885020"/>
        <function-ref name="toggle" scoped="" ref="0x2b21528851a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152885330"/>
        <function-ref name="get" scoped="" ref="0x2b21528854b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152885640"/>
        <function-ref name="set" scoped="" ref="0x2b21528857c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152885950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GLCD" ref="0x2b21528aabc8" loc="12:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GLCD" scoped="" ref="0x2b21528aabc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GLCD"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b2152899020"/>
        <function-ref name="tsPressed" scoped="" ref="0x2b21528991a8"/>
        <function-ref name="initDone" scoped="" ref="0x2b2152899330"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b21528994b8"/>
        <function-ref name="isPressed" scoped="" ref="0x2b2152899640"/>
        <function-ref name="calibrated" scoped="" ref="0x2b21528997c8"/>
        <function-ref name="calibrateTouchScreen" scoped="" ref="0x2b2152899950"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b2152899ad8"/>
        <function-ref name="getXY" scoped="" ref="0x2b2152899c60"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b2152899de8"/>
        <function-ref name="barWritten" scoped="" ref="0x2b2152898020"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b21528981a8"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b2152898330"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b21528985b8"/>
        <function-ref name="xyReady" scoped="" ref="0x2b2152898740"/>
        <function-ref name="writeByte" scoped="" ref="0x2b21528988c8"/>
        <function-ref name="setPixel" scoped="" ref="0x2b2152898a50"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b2152898bd8"/>
        <function-ref name="getCalibration" scoped="" ref="0x2b2152898d60"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b21528bd020"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b21528bd1a8"/>
        <function-ref name="writePixel" scoped="" ref="0x2b21528bd330"/>
        <function-ref name="initLCD" scoped="" ref="0x2b21528bd4b8"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b21528bd640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button1" ref="0x2b2152888390" loc="4:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button1" scoped="" ref="0x2b2152888390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21528886e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152888868"/>
        <function-ref name="toggle" scoped="" ref="0x2b21528889f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152888b78"/>
        <function-ref name="get" scoped="" ref="0x2b2152888d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152887020"/>
        <function-ref name="set" scoped="" ref="0x2b21528871a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152887330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button6" ref="0x2b21528821c8" loc="9:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button6" scoped="" ref="0x2b21528821c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152882518"/>
        <function-ref name="isInput" scoped="" ref="0x2b21528826a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152882828"/>
        <function-ref name="isOutput" scoped="" ref="0x2b21528829b0"/>
        <function-ref name="get" scoped="" ref="0x2b2152882b38"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152882cc0"/>
        <function-ref name="set" scoped="" ref="0x2b2152882e48"/>
        <function-ref name="clr" scoped="" ref="0x2b2152895020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button4" ref="0x2b2152885cc0" loc="7:SimpleDrawC.nc">
      <component-ref qname="SimpleDrawC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button4" scoped="" ref="0x2b2152885cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b21528840a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152884228"/>
        <function-ref name="toggle" scoped="" ref="0x2b21528843b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152884538"/>
        <function-ref name="get" scoped="" ref="0x2b21528846c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152884848"/>
        <function-ref name="set" scoped="" ref="0x2b21528849d0"/>
        <function-ref name="clr" scoped="" ref="0x2b2152884b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b21528ca420" loc="45:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="SimpleDrawAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b21528ca420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2152655530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2152655888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2152a9d6c8"/>
        <function-ref name="fired" scoped="" ref="0x2b2152a84db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b2152a83ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b2152a83688"/>
        <function-ref name="getdt" scoped="" ref="0x2b2152a9c020"/>
        <function-ref name="gett0" scoped="" ref="0x2b2152a9db18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2152a83238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b2152a84020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b2152a9d0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b2152a844c0"/>
        <function-ref name="stop" scoped="" ref="0x2b2152a84960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b21528d7510" loc="49:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b21528d7510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2152655530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2152655888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b21528e9768"/>
        <function-ref name="fired" scoped="" ref="0x2b21528d6e18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b21528d5b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b21528d5728"/>
        <function-ref name="getdt" scoped="" ref="0x2b21528e8088"/>
        <function-ref name="gett0" scoped="" ref="0x2b21528e9bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b21528d52d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b21528d6088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b21528e9198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b21528d6528"/>
        <function-ref name="stop" scoped="" ref="0x2b21528d69c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b21528e5b68" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b21528e5b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2152655530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2152655888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b21528e1d98"/>
        <function-ref name="fired" scoped="" ref="0x2b21528e24d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b21528e11f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b21528e2d78"/>
        <function-ref name="getdt" scoped="" ref="0x2b21528e0688"/>
        <function-ref name="gett0" scoped="" ref="0x2b21528e0238"/>
        <function-ref name="isRunning" scoped="" ref="0x2b21528e2928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b21528e36f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b21528e17c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b21528e3b90"/>
        <function-ref name="stop" scoped="" ref="0x2b21528e2088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b21528f4108" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b21528f4108"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2152655530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2152655888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b21528f4c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b21528e8e48" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b21528e8e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b21528e51c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b21528f8150" loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b21528f8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2152655530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2152655888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b215290a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b215290a930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b215290a4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b215290adb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b21528f06f0" loc="35:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b21528f06f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b21528f0a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b21528ed020" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b21528ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2152655530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2152655888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b21528fb690"/>
        <function-ref name="fired" scoped="" ref="0x2b21528ec6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b21528fb088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b21528ecb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b21528fbb18"/>
        <function-ref name="start" scoped="" ref="0x2b21528edd70"/>
        <function-ref name="stop" scoped="" ref="0x2b21528ec270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b21529f5938" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b21529f5938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2152655530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2152655888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b21529f1020"/>
        <function-ref name="fired" scoped="" ref="0x2b21529f2088"/>
        <function-ref name="startAt" scoped="" ref="0x2b21529f2998"/>
        <function-ref name="isRunning" scoped="" ref="0x2b21529f2510"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b21529f14a8"/>
        <function-ref name="start" scoped="" ref="0x2b21529f46b0"/>
        <function-ref name="stop" scoped="" ref="0x2b21529f4b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b21529f5190" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b21529f5190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b21525d5d88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b21525d5d88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b21529f54e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b21529f1a90" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b21529f1a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2152655530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2152655888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b21529f0828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b21529ef190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b21529f0cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b21529ef618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b21530f9e70" loc="38:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b21530f9e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b21530f81e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b21530f8370"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b21530f84f8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b21530f8680"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b21530f8808"/>
        <function-ref name="setControl" scoped="" ref="0x2b21530f8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b2153104be0" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b2153104be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2152655530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2152655888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2153101270"/>
        <function-ref name="fired" scoped="" ref="0x2b2153102310"/>
        <function-ref name="startAt" scoped="" ref="0x2b2153102c20"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2153102798"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b21531016f8"/>
        <function-ref name="start" scoped="" ref="0x2b2153103970"/>
        <function-ref name="stop" scoped="" ref="0x2b2153103e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2153104438" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2153104438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2153104788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b2153101ce0" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b2153101ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2152655530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2152655888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b21530ffac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b21530fe4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b21530fe020"/>
        <function-ref name="overflow" scoped="" ref="0x2b21530fe930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x2b2153133db0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b2153133db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b2153132918"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b21531322f8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b2153132480"/>
        <function-ref name="countBusy" scoped="" ref="0x2b2153132608"/>
        <function-ref name="getAssr" scoped="" ref="0x2b2153132790"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b2153132170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b21530f8d20" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b21530f8d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b2153133510"/>
        <function-ref name="fired" scoped="" ref="0x2b21531352b0"/>
        <function-ref name="get" scoped="" ref="0x2b21531368f0"/>
        <function-ref name="reset" scoped="" ref="0x2b2153135738"/>
        <function-ref name="isOn" scoped="" ref="0x2b2153133998"/>
        <function-ref name="set" scoped="" ref="0x2b2153136d78"/>
        <function-ref name="start" scoped="" ref="0x2b2153135bc0"/>
        <function-ref name="stop" scoped="" ref="0x2b2153133088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b21530fd020" loc="37:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b21530fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b21530f90f8"/>
        <function-ref name="test" scoped="" ref="0x2b21530fb7a8"/>
        <function-ref name="get" scoped="" ref="0x2b21530fdba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b21530f9580"/>
        <function-ref name="getScale" scoped="" ref="0x2b21530f9a58"/>
        <function-ref name="reset" scoped="" ref="0x2b21530fc9e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b21530fc560"/>
        <function-ref name="isOn" scoped="" ref="0x2b21530fbc30"/>
        <function-ref name="set" scoped="" ref="0x2b21530fc088"/>
        <function-ref name="start" scoped="" ref="0x2b21530fce70"/>
        <function-ref name="stop" scoped="" ref="0x2b21530fb320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b2152984020" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b2152984020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b2152984370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b21529844f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b2152984680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b2152984808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b2152984990"/>
        <function-ref name="setControl" scoped="" ref="0x2b2152984b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b215297f218" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b215297f218"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b215297fd10"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b215297f6f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b215297f878"/>
        <function-ref name="countBusy" scoped="" ref="0x2b215297fa00"/>
        <function-ref name="getAssr" scoped="" ref="0x2b215297fb88"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b215297f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b2152983020" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b2152983020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b21529817a8"/>
        <function-ref name="fired" scoped="" ref="0x2b2152982560"/>
        <function-ref name="get" scoped="" ref="0x2b2152983ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b21529829e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b2152981c30"/>
        <function-ref name="set" scoped="" ref="0x2b2152982088"/>
        <function-ref name="start" scoped="" ref="0x2b2152982e70"/>
        <function-ref name="stop" scoped="" ref="0x2b2152981320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b2152974e00" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b2152974e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b21529860f8"/>
        <function-ref name="test" scoped="" ref="0x2b2152987798"/>
        <function-ref name="get" scoped="" ref="0x2b2152989a18"/>
        <function-ref name="setScale" scoped="" ref="0x2b2152986580"/>
        <function-ref name="getScale" scoped="" ref="0x2b2152986a58"/>
        <function-ref name="reset" scoped="" ref="0x2b2152988980"/>
        <function-ref name="overflow" scoped="" ref="0x2b21529884f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b2152987c20"/>
        <function-ref name="set" scoped="" ref="0x2b2152988020"/>
        <function-ref name="start" scoped="" ref="0x2b2152988e08"/>
        <function-ref name="stop" scoped="" ref="0x2b2152987310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b215298e160" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b215298e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b215298e4b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b215298e638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b215298e7c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b215298e948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b215298ead0"/>
        <function-ref name="setControl" scoped="" ref="0x2b215298ec58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b21529a1268" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b21529a1268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b21529a15b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b21529a1958" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b21529a1958"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b21529a04b8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b21529a1e30"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b21529a0020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b21529a01a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b21529a0330"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b21529a1ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b215298d190" loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b215298d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b215298a930"/>
        <function-ref name="fired" scoped="" ref="0x2b215298c6d0"/>
        <function-ref name="get" scoped="" ref="0x2b215298dd10"/>
        <function-ref name="reset" scoped="" ref="0x2b215298cb58"/>
        <function-ref name="isOn" scoped="" ref="0x2b215298adb8"/>
        <function-ref name="set" scoped="" ref="0x2b215298c1f8"/>
        <function-ref name="start" scoped="" ref="0x2b215298a020"/>
        <function-ref name="stop" scoped="" ref="0x2b215298a4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b2152993180" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b2152993180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b215298f270"/>
        <function-ref name="test" scoped="" ref="0x2b2152991930"/>
        <function-ref name="get" scoped="" ref="0x2b2152993d00"/>
        <function-ref name="setScale" scoped="" ref="0x2b215298f6f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b215298fbd0"/>
        <function-ref name="reset" scoped="" ref="0x2b2152992b58"/>
        <function-ref name="overflow" scoped="" ref="0x2b21529926d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b2152991db8"/>
        <function-ref name="set" scoped="" ref="0x2b21529921f8"/>
        <function-ref name="start" scoped="" ref="0x2b2152991020"/>
        <function-ref name="stop" scoped="" ref="0x2b21529914a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b2152a27cf0" loc="74:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b2152a27cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2152a260a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b2152a26228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b2152a2bc70" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b2152a2bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2152655530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2152655888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2152a27410"/>
        <function-ref name="fired" scoped="" ref="0x2b2152a284a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b2152a28db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2152a28930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b2152a27898"/>
        <function-ref name="start" scoped="" ref="0x2b2152a299f0"/>
        <function-ref name="stop" scoped="" ref="0x2b2152a28020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b2152a16ab0" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b2152a16ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2152655530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2152655888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2152a2cd60"/>
        <function-ref name="fired" scoped="" ref="0x2b2152a2d470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b2152a2c1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b2152a2dd10"/>
        <function-ref name="getdt" scoped="" ref="0x2b2152a2b648"/>
        <function-ref name="gett0" scoped="" ref="0x2b2152a2b1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2152a2d8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b2152a15620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b2152a2c790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b2152a15ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b2152a2d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b2152a7d478" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b2152a7d478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2152a7d7c8"/>
        <function-ref name="runTask" scoped="" ref="0x2b2152a7d950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b2152a66208" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b2152a66208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2152655530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2152655888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2152a7e5f0"/>
        <function-ref name="fired" scoped="" ref="0x2b2152a80b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b2152a7f8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b2152a7f470"/>
        <function-ref name="getdt" scoped="" ref="0x2b2152a7d020"/>
        <function-ref name="gett0" scoped="" ref="0x2b2152a7ea40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2152a7f020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b2152a66d50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b2152a7e020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b2152a80238"/>
        <function-ref name="stop" scoped="" ref="0x2b2152a806d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b2152a6c020" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b2152a6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2152655530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2152655888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2152a67358"/>
        <function-ref name="fired" scoped="" ref="0x2b2152a6a9b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b2152a69748"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b2152a692d8"/>
        <function-ref name="getdt" scoped="" ref="0x2b2152a67c38"/>
        <function-ref name="gett0" scoped="" ref="0x2b2152a677c8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2152a6ae28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b2152a6cb88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b2152a69d38"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b2152a6a088"/>
        <function-ref name="stop" scoped="" ref="0x2b2152a6a548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b2152a7ac38" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b2152a7ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2152655530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2152655888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2152a8c820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b2152a8ce48" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b2152a8ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2152655530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2152655888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2152a8bbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b2152a8a548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b2152a8a0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b2152a8a9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GLCD" ref="0x2b2152a9b298" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDC.nc">
      <component-ref qname="GLCDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GLCD" scoped="" ref="0x2b2152a9b298"/></type-interface>
      <instance>
        <interfacedef-ref qname="GLCD"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b2152a9b5e8"/>
        <function-ref name="tsPressed" scoped="" ref="0x2b2152a9b770"/>
        <function-ref name="initDone" scoped="" ref="0x2b2152a9b8f8"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b2152a9ba80"/>
        <function-ref name="isPressed" scoped="" ref="0x2b2152a9bc08"/>
        <function-ref name="calibrated" scoped="" ref="0x2b2152a9bd90"/>
        <function-ref name="calibrateTouchScreen" scoped="" ref="0x2b2152a98020"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b2152a981a8"/>
        <function-ref name="getXY" scoped="" ref="0x2b2152a98330"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b2152a984b8"/>
        <function-ref name="barWritten" scoped="" ref="0x2b2152a98640"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b2152a987c8"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b2152a98950"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b2152a98bd8"/>
        <function-ref name="xyReady" scoped="" ref="0x2b2152a98d60"/>
        <function-ref name="writeByte" scoped="" ref="0x2b2152a97020"/>
        <function-ref name="setPixel" scoped="" ref="0x2b2152a971a8"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b2152a97330"/>
        <function-ref name="getCalibration" scoped="" ref="0x2b2152a974b8"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b2152a97640"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b2152a977c8"/>
        <function-ref name="writePixel" scoped="" ref="0x2b2152a97950"/>
        <function-ref name="initLCD" scoped="" ref="0x2b2152a97ad8"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b2152a97c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LCD128x64" ref="0x2b2152ab19d0" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDP.nc">
      <component-ref qname="GLCDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b2152ab19d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b2152ab1d20"/>
        <function-ref name="initDone" scoped="" ref="0x2b2152aa9020"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b2152aa91a8"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b2152aa9330"/>
        <function-ref name="barWritten" scoped="" ref="0x2b2152aa94b8"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b2152aa9640"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b2152aa97c8"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b2152aa9950"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b2152aa9ad8"/>
        <function-ref name="writeByte" scoped="" ref="0x2b2152aa9c60"/>
        <function-ref name="setPixel" scoped="" ref="0x2b2152aa9de8"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b2152aa4020"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b2152aa41a8"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b2152aa4430"/>
        <function-ref name="writePixel" scoped="" ref="0x2b2152aa45b8"/>
        <function-ref name="initLCD" scoped="" ref="0x2b2152aa4740"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b2152aa48c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GLCD" ref="0x2b2152a91020" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDP.nc">
      <component-ref qname="GLCDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GLCD" scoped="" ref="0x2b2152a91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GLCD"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b2152a91370"/>
        <function-ref name="tsPressed" scoped="" ref="0x2b2152a914f8"/>
        <function-ref name="initDone" scoped="" ref="0x2b2152a91680"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b2152a91808"/>
        <function-ref name="isPressed" scoped="" ref="0x2b2152a91990"/>
        <function-ref name="calibrated" scoped="" ref="0x2b2152a91b18"/>
        <function-ref name="calibrateTouchScreen" scoped="" ref="0x2b2152a91ca0"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b2152a91e28"/>
        <function-ref name="getXY" scoped="" ref="0x2b2152a90020"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b2152a901a8"/>
        <function-ref name="barWritten" scoped="" ref="0x2b2152a90330"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b2152a904b8"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b2152a90640"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b2152a908c8"/>
        <function-ref name="xyReady" scoped="" ref="0x2b2152a90a50"/>
        <function-ref name="writeByte" scoped="" ref="0x2b2152a90bd8"/>
        <function-ref name="setPixel" scoped="" ref="0x2b2152a90d60"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b2152aab020"/>
        <function-ref name="getCalibration" scoped="" ref="0x2b2152aab1a8"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b2152aab330"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b2152aab4b8"/>
        <function-ref name="writePixel" scoped="" ref="0x2b2152aab640"/>
        <function-ref name="initLCD" scoped="" ref="0x2b2152aab7c8"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b2152aab950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TouchScreen" ref="0x2b2152aa52b8" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDP.nc">
      <component-ref qname="GLCDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TouchScreen" scoped="" ref="0x2b2152aa52b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TouchScreen"/>
      </instance>
      <interface-functions>
        <function-ref name="tsPressed" scoped="" ref="0x2b2152aa5608"/>
        <function-ref name="isPressed" scoped="" ref="0x2b2152aa5790"/>
        <function-ref name="getXY" scoped="" ref="0x2b2152aa5918"/>
        <function-ref name="xyReady" scoped="" ref="0x2b2152aa5aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TouchScreen" ref="0x2b2152b0d0c0" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <component-ref qname="TouchScreenC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TouchScreen" scoped="" ref="0x2b2152b0d0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TouchScreen"/>
      </instance>
      <interface-functions>
        <function-ref name="tsPressed" scoped="" ref="0x2b2152b0d410"/>
        <function-ref name="isPressed" scoped="" ref="0x2b2152b0d598"/>
        <function-ref name="getXY" scoped="" ref="0x2b2152b0d720"/>
        <function-ref name="xyReady" scoped="" ref="0x2b2152b0d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x2b2152b22a68" loc="20:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b2152b22a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b2152b06620"/>
        <function-ref name="readDone" scoped="" ref="0x2b2152b06a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="driveA" ref="0x2b2152b21140" loc="21:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="driveA" scoped="" ref="0x2b2152b21140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152b21490"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152b21618"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152b217a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152b21928"/>
        <function-ref name="get" scoped="" ref="0x2b2152b21ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152b21c38"/>
        <function-ref name="set" scoped="" ref="0x2b2152b21dc0"/>
        <function-ref name="clr" scoped="" ref="0x2b2152b20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x2b2152b19668" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b2152b19668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b2152b199b8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b2152b19b40"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b2152b19cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="checkTS" ref="0x2b2152b15c68" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="checkTS" scoped="" ref="0x2b2152b15c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2152b14020"/>
        <function-ref name="runTask" scoped="" ref="0x2b2152b141a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="adcX" ref="0x2b2152b1f510" loc="23:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="adcX" scoped="" ref="0x2b2152b1f510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152b1f860"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152b1f9e8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152b1fb70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152b1fcf8"/>
        <function-ref name="get" scoped="" ref="0x2b2152b1fe80"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152b1e030"/>
        <function-ref name="set" scoped="" ref="0x2b2152b1e1b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2152b1e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="driveB" ref="0x2b2152b20388" loc="22:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="driveB" scoped="" ref="0x2b2152b20388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152b206d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152b20860"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152b209e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152b20b70"/>
        <function-ref name="get" scoped="" ref="0x2b2152b20cf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152b20e80"/>
        <function-ref name="set" scoped="" ref="0x2b2152b1f030"/>
        <function-ref name="clr" scoped="" ref="0x2b2152b1f1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TouchScreen" ref="0x2b2152b1c020" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TouchScreen" scoped="" ref="0x2b2152b1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TouchScreen"/>
      </instance>
      <interface-functions>
        <function-ref name="tsPressed" scoped="" ref="0x2b2152b1c370"/>
        <function-ref name="isPressed" scoped="" ref="0x2b2152b1c4f8"/>
        <function-ref name="getXY" scoped="" ref="0x2b2152b1c680"/>
        <function-ref name="xyReady" scoped="" ref="0x2b2152b1c808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="adcY" ref="0x2b2152b1e698" loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="adcY" scoped="" ref="0x2b2152b1e698"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2152b1e9e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2152b1eb70"/>
        <function-ref name="toggle" scoped="" ref="0x2b2152b1ecf8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2152b1ee80"/>
        <function-ref name="get" scoped="" ref="0x2b2152b1d030"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2152b1d1b8"/>
        <function-ref name="set" scoped="" ref="0x2b2152b1d340"/>
        <function-ref name="clr" scoped="" ref="0x2b2152b1d4c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b2152ce23f0" loc="25:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TouchScreenC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2152ce23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b2152ce2740"/>
        <function-ref name="configure" scoped="" ref="0x2b2152ce28c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b2152ce4358" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TouchScreenC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b2152ce4358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b2152ce3020"/>
        <function-ref name="readDone" scoped="" ref="0x2b2152ce3470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b2152ce3a28" loc="24:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TouchScreenC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b2152ce3a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b2152ce3d78"/>
        <function-ref name="getChannel" scoped="" ref="0x2b2152ce2020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b2152ce21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b2152b42ad8" loc="18:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b2152b42ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b2152b5c658"/>
        <function-ref name="readDone" scoped="" ref="0x2b2152b5caa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b2152b5a6f8" loc="19:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b2152b5a6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b2152b573a8"/>
        <function-ref name="readDone" scoped="" ref="0x2b2152b57830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b2152b563f0" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b2152b563f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b2152b56740"/>
        <function-ref name="getChannel" scoped="" ref="0x2b2152b568c8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b2152b56a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b2152b55410" loc="23:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b2152b55410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2152b55760"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b2152b558e8"/>
        <function-ref name="request" scoped="" ref="0x2b2152b55a70"/>
        <function-ref name="granted" scoped="" ref="0x2b2152b55bf8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b2152b55d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b2152b6c890" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2152b6c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b2152b6cbe0"/>
        <function-ref name="configure" scoped="" ref="0x2b2152b6cd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b2152b619b0" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b2152b619b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b2152b61d00"/>
        <function-ref name="dataReady" scoped="" ref="0x2b2152b6c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b2152b660d0" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b2152b660d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b2152b66420"/>
        <function-ref name="cancel" scoped="" ref="0x2b2152b665a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b2152b66730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b2152b6d020" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b2152b6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2152b6d370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b2152b6d4f8"/>
        <function-ref name="request" scoped="" ref="0x2b2152b6d680"/>
        <function-ref name="granted" scoped="" ref="0x2b2152b6d808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b2152b6d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2152b6bd48" loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2152b6bd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2152b7e0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b2152b7dde0" loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b2152b7dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b2152b7a170"/>
        <function-ref name="dataReady" scoped="" ref="0x2b2152b7a2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b2152b7d488" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b2152b7d488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b2152b7d7d8"/>
        <function-ref name="cancel" scoped="" ref="0x2b2152b7d960"/>
        <function-ref name="dataReady" scoped="" ref="0x2b2152b7dae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x2b2152b8c940" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b2152b8c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b2152b8cc90"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b2152b8ce18"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b2152b79020"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b2152b791a8"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b2152b79330"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b2152b794b8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b2152b79640"/>
        <function-ref name="isComplete" scoped="" ref="0x2b2152b797c8"/>
        <function-ref name="cancel" scoped="" ref="0x2b2152b79950"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b2152b79ad8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b2152b79c60"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b2152b79de8"/>
        <function-ref name="startConversion" scoped="" ref="0x2b2152b78020"/>
        <function-ref name="isStarted" scoped="" ref="0x2b2152b782a8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b2152b78430"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b2152b785b8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b2152b78740"/>
        <function-ref name="getValue" scoped="" ref="0x2b2152b788c8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b2152b78a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b2152b7bc10" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b2152b7bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b2152b7d020"/>
        <function-ref name="stop" scoped="" ref="0x2b2152b7d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b2152b78d30" loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b2152b78d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b2152b8b0d8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b2152b8b260"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b2152b8b3e8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b2152b8b570"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b2152b8b6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b2152bba020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b2152bba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b2152bba370"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b2152bba4f8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b2152bba680"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b2152bba808"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b2152bba990"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b2152bbab18"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b2152bbaca0"/>
        <function-ref name="isComplete" scoped="" ref="0x2b2152bbae28"/>
        <function-ref name="cancel" scoped="" ref="0x2b2152bb9020"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b2152bb91a8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b2152bb9330"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b2152bb94b8"/>
        <function-ref name="startConversion" scoped="" ref="0x2b2152bb9640"/>
        <function-ref name="isStarted" scoped="" ref="0x2b2152bb98c8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b2152bb9a50"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b2152bb9bd8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b2152bb9d60"/>
        <function-ref name="getValue" scoped="" ref="0x2b2152bb8020"/>
        <function-ref name="dataReady" scoped="" ref="0x2b2152bb81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b2152bb51e8" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b2152bb51e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b2152bb5538"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b2152bb56c0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b2152bb5848"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b2152bb59d0"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b2152bb5b58"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b2152bb5ce0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b2152bb5e68"/>
        <function-ref name="isComplete" scoped="" ref="0x2b2152bb4020"/>
        <function-ref name="cancel" scoped="" ref="0x2b2152bb41a8"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b2152bb4330"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b2152bb44b8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b2152bb4640"/>
        <function-ref name="startConversion" scoped="" ref="0x2b2152bb47c8"/>
        <function-ref name="isStarted" scoped="" ref="0x2b2152bb4a50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b2152bb4bd8"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b2152bb4d60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b2152bb3020"/>
        <function-ref name="getValue" scoped="" ref="0x2b2152bb31a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b2152bb3330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b2152bb3640" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b2152bb3640"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b2152bb3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b2152c77b70" loc="92:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b2152c77b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b2152c76020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b2152c761a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b2152c758a0" loc="96:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2152c758a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b2152c75c10"/>
        <function-ref name="configure" scoped="" ref="0x2b2152c75d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b2152c763f0" loc="93:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b2152c763f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2152c76740"/>
        <function-ref name="requested" scoped="" ref="0x2b2152c768c8"/>
        <function-ref name="granted" scoped="" ref="0x2b2152c76a50"/>
        <function-ref name="isOwner" scoped="" ref="0x2b2152c76bd8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b2152c76d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b2152c78e50" loc="91:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b2152c78e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2152c771e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b2152c77370"/>
        <function-ref name="request" scoped="" ref="0x2b2152c774f8"/>
        <function-ref name="granted" scoped="" ref="0x2b2152c77680"/>
        <function-ref name="isOwner" scoped="" ref="0x2b2152c77808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b2152c75020" loc="94:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b2152c75020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b2152c75370"/>
        <function-ref name="userId" scoped="" ref="0x2b2152c754f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b21531a5bd8" loc="44:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b21531a5bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b21531a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b21531a42a8" loc="45:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b21531a42a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b21531a45f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b21531a4780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b21531a4908"/>
        <function-ref name="dequeue" scoped="" ref="0x2b21531a4a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b21531a1200" loc="55:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b21531a1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b21531a1570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b21531a16f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b21531a0e18" loc="60:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b21531a0e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b215319f1c0"/>
        <function-ref name="configure" scoped="" ref="0x2b215319f348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b215319f5d0" loc="61:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b215319f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b215319f920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b215319faa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b215319fc30"/>
        <function-ref name="dequeue" scoped="" ref="0x2b215319fdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b21531a1940" loc="56:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b21531a1940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b21531a1c90"/>
        <function-ref name="requested" scoped="" ref="0x2b21531a1e18"/>
        <function-ref name="granted" scoped="" ref="0x2b21531a0020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b21531a01a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b21531a0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b215319d060" loc="62:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b215319d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b215319d3b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b215319d538"/>
        <function-ref name="led1On" scoped="" ref="0x2b215319d6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b215319d848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b215319d9d0"/>
        <function-ref name="get" scoped="" ref="0x2b215319db58"/>
        <function-ref name="led1Off" scoped="" ref="0x2b215319dce0"/>
        <function-ref name="setPort" scoped="" ref="0x2b215319de68"/>
        <function-ref name="led0On" scoped="" ref="0x2b215319c4b8"/>
        <function-ref name="set" scoped="" ref="0x2b215319c1a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b215319c020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b215319c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b21531a24b0" loc="54:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b21531a24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b21531a2820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b21531a29a8"/>
        <function-ref name="request" scoped="" ref="0x2b21531a2b30"/>
        <function-ref name="granted" scoped="" ref="0x2b21531a2cb8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b21531a2e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b21531a0578" loc="57:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b21531a0578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b21531a08c8"/>
        <function-ref name="userId" scoped="" ref="0x2b21531a0a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b215319c780" loc="75:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b215319c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b215319cad0"/>
        <function-ref name="runTask" scoped="" ref="0x2b215319cc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b2152c71b98" loc="72:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b2152c71b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b2152c80020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b2152c80268" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b2152c80268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2152c805b8"/>
        <function-ref name="requested" scoped="" ref="0x2b2152c80740"/>
        <function-ref name="granted" scoped="" ref="0x2b2152c808c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b2152c80a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b2152c80bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b2152c71478" loc="70:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b2152c71478"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b2152c717c8"/>
        <function-ref name="stop" scoped="" ref="0x2b2152c71950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b2152c80e20" loc="74:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b2152c80e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b2152ca31a8"/>
        <function-ref name="userId" scoped="" ref="0x2b2152ca3330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b21531db020" loc="62:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b21531db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b21531db370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b21531db5b8" loc="63:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b21531db5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b21531db908"/>
        <function-ref name="requested" scoped="" ref="0x2b21531dba90"/>
        <function-ref name="granted" scoped="" ref="0x2b21531dbc18"/>
        <function-ref name="isOwner" scoped="" ref="0x2b21531dbda0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b21531da020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b21531dc818" loc="60:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b21531dc818"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b21531dcb68"/>
        <function-ref name="stop" scoped="" ref="0x2b21531dccf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b21531da268" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b21531da268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b21531da5b8"/>
        <function-ref name="userId" scoped="" ref="0x2b21531da740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b2152c9bc68" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b2152c9bc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b2152c9a7e8"/>
        <function-ref name="readDone" scoped="" ref="0x2b2152c9ac38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b2152c99880" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b2152c99880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b2152c98490"/>
        <function-ref name="readDone" scoped="" ref="0x2b2152c98918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b2152c96e78" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b2152c96e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b2152c951f8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b2152c95380"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b2152c95508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x2b2152c96020" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b2152c96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b2152c96370"/>
        <function-ref name="cancel" scoped="" ref="0x2b2152c964f8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b2152c96680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x2b2152caabf8" loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x2b2152caabf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2152ca9020"/>
        <function-ref name="runTask" scoped="" ref="0x2b2152ca91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b2152cbba28" loc="24:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b2152cbba28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b2152cba620"/>
        <function-ref name="readDone" scoped="" ref="0x2b2152cbaa90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2b2152ced348" loc="26:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2b2152ced348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b2152cec020"/>
        <function-ref name="readDone" scoped="" ref="0x2b2152cec490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b2152cecb28" loc="27:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b2152cecb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2152cea020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b2152cea1a8"/>
        <function-ref name="request" scoped="" ref="0x2b2152cea330"/>
        <function-ref name="granted" scoped="" ref="0x2b2152cea4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b2152cea640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCD128x64" ref="0x2b2152cdb020" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <component-ref qname="LCD128x64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b2152cdb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b2152cdb370"/>
        <function-ref name="initDone" scoped="" ref="0x2b2152cdb4f8"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b2152cdb680"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b2152cdb808"/>
        <function-ref name="barWritten" scoped="" ref="0x2b2152cdb990"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b2152cdbb18"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b2152cdbca0"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b2152cdbe28"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b2152d00020"/>
        <function-ref name="writeByte" scoped="" ref="0x2b2152d001a8"/>
        <function-ref name="setPixel" scoped="" ref="0x2b2152d00330"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b2152d004b8"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b2152d00640"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b2152d008c8"/>
        <function-ref name="writePixel" scoped="" ref="0x2b2152d00a50"/>
        <function-ref name="initLCD" scoped="" ref="0x2b2152d00bd8"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b2152d00d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeRectangle" ref="0x2b2152d68368" loc="212:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeRectangle" scoped="" ref="0x2b2152d68368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2152d686b8"/>
        <function-ref name="runTask" scoped="" ref="0x2b2152d68840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCD128x64" ref="0x2b2152d1ecd8" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b2152d1ecd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b2152d1d0a0"/>
        <function-ref name="initDone" scoped="" ref="0x2b2152d1d228"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b2152d1d3b0"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b2152d1d538"/>
        <function-ref name="barWritten" scoped="" ref="0x2b2152d1d6c0"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b2152d1d848"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b2152d1d9d0"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b2152d1db58"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b2152d1dce0"/>
        <function-ref name="writeByte" scoped="" ref="0x2b2152d1de68"/>
        <function-ref name="setPixel" scoped="" ref="0x2b2152d1c020"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b2152d1c1a8"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b2152d1c330"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b2152d1c5b8"/>
        <function-ref name="writePixel" scoped="" ref="0x2b2152d1c740"/>
        <function-ref name="initLCD" scoped="" ref="0x2b2152d1c8c8"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b2152d1ca50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeString" ref="0x2b2152d796c8" loc="261:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeString" scoped="" ref="0x2b2152d796c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2152d79a18"/>
        <function-ref name="runTask" scoped="" ref="0x2b2152d79ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeCircle" ref="0x2b2152d880c0" loc="228:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeCircle" scoped="" ref="0x2b2152d880c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2152d88410"/>
        <function-ref name="runTask" scoped="" ref="0x2b2152d88598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeLine" ref="0x2b2152d8b190" loc="320:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeLine" scoped="" ref="0x2b2152d8b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2152d8b4e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b2152d8b668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="wait4Controller" ref="0x2b2152d339e0" loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="wait4Controller" scoped="" ref="0x2b2152d339e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2152d33d30"/>
        <function-ref name="runTask" scoped="" ref="0x2b2152d32020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeBar" ref="0x2b2152dc3cd0" loc="398:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeBar" scoped="" ref="0x2b2152dc3cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2152dc20a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b2152dc2228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="clearScreenNB" ref="0x2b2152d947d0" loc="289:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="clearScreenNB" scoped="" ref="0x2b2152d947d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2152d94b20"/>
        <function-ref name="runTask" scoped="" ref="0x2b2152d94ca8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b21526d0178" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b21526c8e08" loc="60:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b21526d6290" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b21526d6020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b21526da940" loc="31:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="27:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b21526d9378" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b21526d9108" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b21526d9e00" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b21526d9b90" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b21526d8698" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b21526ed0d8" loc="44:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b21526ed7a0" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b21526ee328" loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b21526ec570" loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b21526ee9c8" loc="43:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b21526ede58" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b21526f05a8" loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b21526f0c18" loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b21525db3a0" loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b21525d9290" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b21525dbab8" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b21525e5070" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b21525e5860" loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b2152698450" loc="76:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b21526aed28" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b21526341a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b21526b86d8" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b2152894d18" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b2152894d18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b215289f760" loc="136:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b215288e110" loc="83:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b215288dd40" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b215288d7a8" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b215288dac0" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b215288d070" loc="98:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b215289d6b0" loc="151:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b215289fe80" loc="144:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b215288e888" loc="92:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b2152891820" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b21528915b0" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b215288cd28" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b215288c790" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b215288caa8" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b2152890290" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b2152890020" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b2152890a38" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GLCD" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
      <function command="" provided="0" name="startClearScreen" ref="0x2b21528afa48" loc="68:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b21528af7d8" loc="68:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="tsPressed" ref="0x2b21528a6328" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x2b21528ad0f8" loc="70:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteBar" ref="0x2b21528a1a00" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b21528a2de0" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b21528a1108" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b21528a1438" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="width" ref="0x2b21528a1760" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isPressed" ref="0x2b21528a98c8" loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b21528a9658" loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="calibrated" ref="0x2b21528a7c50" loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateTouchScreen" ref="0x2b21528974b0" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteLine" ref="0x2b21528af0d8" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b21528b04b0" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b21528b07b0" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="xEnd" ref="0x2b21528b0ad0" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="yEnd" ref="0x2b21528b0df0" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getXY" ref="0x2b21528a9030" loc="12:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteRectangle" ref="0x2b21528a0ca8" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b21528a0108" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b21528a0408" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="a" ref="0x2b21528a0708" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="b" ref="0x2b21528a0a08" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="barWritten" ref="0x2b21528aa290" loc="80:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="lineWritten" ref="0x2b21528acbe0" loc="78:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="screenCleared" ref="0x2b21528aa930" loc="82:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteString" ref="0x2b21528b1da0" loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b21528b1510" loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x2b21528b1810" loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b21528b1b10" loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="xyReady" ref="0x2b21528a75b0" loc="21:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b21528a7020" loc="21:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b21528a7330" loc="21:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="writeByte" ref="0x2b21528a5b98" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b21528a52e8" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b21528a55e8" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b21528a5908" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x2b21528a2718" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b21528a2198" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b21528a2498" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="circleWritten" ref="0x2b21528ad798" loc="72:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCalibration" ref="0x2b21528969b0" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x_cmin" ref="0x2b2152897b90" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="x_cmax" ref="0x2b2152896020" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="y_cmin" ref="0x2b2152896398" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="y_cmax" ref="0x2b2152896710" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteCircle" ref="0x2b21528b2df8" loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="xcenter" ref="0x2b21528b2500" loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="ycenter" ref="0x2b21528b2838" loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="radius" ref="0x2b21528b2b68" loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rectangleWritten" ref="0x2b21528ac558" loc="76:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writePixel" ref="0x2b21528a3ae8" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b21528a3250" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b21528a3550" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="on" ref="0x2b21528a3858" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initLCD" ref="0x2b21528a6c10" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b21528a69a0" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stringWritten" ref="0x2b21528ade38" loc="74:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b21528f2340" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b21528f2340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b21528f2bd0" loc="61:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b21523d7db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b21528f97b8" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b21528f97b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b21528f99e8" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b21528f99e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b21528f62a8" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b21528f99e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b21528f5328" loc="76:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b21528f6ac0" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b21528f5a18" loc="82:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b21528eb528" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b21528eb528"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b21528eb758" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b21528eb758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b21528fc020" loc="109:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b21528eb758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b21528ff1d8" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b21528fe6c0" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b21528eb758"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b21528eb758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b21528fe120" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b21528eb758"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b21528fe440" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b21528eb758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b21528ff948" loc="88:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b21528fc7a0" loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b21528eb758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b21528ea290" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b21528eb758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b21528ea020" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b21528eb758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b21528eaa60" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b2152923020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2152661a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b2152661e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b2152921360" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b215266e100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b215266e508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b21529221d8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2152665980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b2152665d88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b2152922b90" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2152665980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b2152665d88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b2152922920" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2152665980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b2152665d88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b2152921d18" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b215266e100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b215266e508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b2152921aa8" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b215266e100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b215266e508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b21529239f0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2152661a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b2152661e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b2152923780" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2152661a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b2152661e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerSync" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer0Synchronous" ref="0x2b215293f4e8" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBusy" ref="0x2b215293fbf0" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b215293e3e0" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b215293eb90" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b2152940328" loc="28:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="24:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2152668118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b2152668520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b2152940cd8" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2152668118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b2152668520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b2152940a68" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2152668118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b2152668520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b2152936420" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2152936420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b2152931a40" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b2152933d88" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b2152936cd8" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2152936420"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b21529324c0" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b215292f1d8" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b2152933648" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2152936420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b21529333d8" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2152936420"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b2152932bb8" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b2152931328" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b215291e688" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b215291e688"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b2152917cf0" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b2152918e20" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b215291b020" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b215291e688"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b2152916690" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b2152916420" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b2152916e10" loc="110:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="106:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b215291a7f8" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b215291a0d8" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b21529175c8" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b215291b958" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b215291e688"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b215291b6e8" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b215291e688"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b2152918020" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b2152918708" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LCD128x64" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
      <function command="" provided="0" name="startClearScreen" ref="0x2b2152ab5780" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b2152ab5510" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x2b2152ab5df0" loc="38:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteBar" ref="0x2b2152a9f9c0" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b2152aa1d98" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b2152a9f0c8" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b2152a9f3f8" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="width" ref="0x2b2152a9f720" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteLine" ref="0x2b2152ab6e30" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b2152ab6250" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b2152ab6550" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="xEnd" ref="0x2b2152ab6870" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="yEnd" ref="0x2b2152ab6b90" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="barWritten" ref="0x2b2152ab1098" loc="48:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteRectangle" ref="0x2b2152a9ec68" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b2152a9e0c8" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b2152a9e3c8" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="a" ref="0x2b2152a9e6c8" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="b" ref="0x2b2152a9e9c8" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="screenCleared" ref="0x2b2152ab1738" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="lineWritten" ref="0x2b2152ab29e8" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteString" ref="0x2b2152ab8bc0" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b2152ab8330" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x2b2152ab8630" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b2152ab8930" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="writeByte" ref="0x2b2152aa3b98" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b2152aa32e8" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b2152aa35e8" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b2152aa3908" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x2b2152aa1718" loc="20:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b2152aa1198" loc="20:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b2152aa1498" loc="20:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="circleWritten" ref="0x2b2152ab44d8" loc="40:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteCircle" ref="0x2b2152ab9c50" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="xcenter" ref="0x2b2152ab9358" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="ycenter" ref="0x2b2152ab9690" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="radius" ref="0x2b2152ab99c0" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rectangleWritten" ref="0x2b2152ab2360" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writePixel" ref="0x2b2152aa2ae8" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b2152aa2250" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b2152aa2550" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="on" ref="0x2b2152aa2858" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initLCD" ref="0x2b2152aaac50" loc="4:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b2152aaa9e0" loc="4:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stringWritten" ref="0x2b2152ab4b78" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TouchScreen" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
      <function event="" provided="0" name="tsPressed" ref="0x2b2152aa5020" loc="13:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
        <interfacedef-ref qname="TouchScreen"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isPressed" ref="0x2b2152aa8d20" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
        <interfacedef-ref qname="TouchScreen"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b2152aa8ab0" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getXY" ref="0x2b2152aa8488" loc="4:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
        <interfacedef-ref qname="TouchScreen"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="xyReady" ref="0x2b2152aa7940" loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
        <interfacedef-ref qname="TouchScreen"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b2152aa73b0" loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b2152aa76c0" loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b2152b05020" loc="49:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b2152b05020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b2152b05858" loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b2152b225a0" loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b2152b05020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b2152b22020" loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b2152b22320" loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b2152b05020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x2b2152b1ab10" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b2152b1a328" loc="25:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x2b2152b19328" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b2152b5f0d8" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b2152b608f8" loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b2152b5b780" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b2152b5b780"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b2152b58020" loc="58:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b2152b58ce8" loc="66:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b2152b5b780"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b2152b58768" loc="66:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b2152b58a68" loc="66:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b2152b5b780"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b2152b700d8" loc="120:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b2152b52178" loc="97:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b2152b53848" loc="88:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b2152b52900" loc="102:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b2152b70ac0" loc="128:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b2152b64768" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b2152b65a60" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b2152b65db8" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b2152b64178" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b2152b644c8" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b2152b613f0" loc="119:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b2152b63368" loc="119:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b2152b63688" loc="119:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x2b2152b639c0" loc="119:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x2b2152b63d70" loc="120:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x2b2152b61140" loc="120:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b2152b68440" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b2152b6a738" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b2152b6aa90" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b2152b6adf8" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b2152b681a0" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b2152b67c80" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b2152b67408" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b2152b68e48" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b2152b67188" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x2b2152b900d8" loc="114:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x2b2152b771d8" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b215264e478"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x2b215264e930"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x2b2152b8d338" loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b2152b8d0c8" loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2b2152b90918" loc="122:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x2b2152b75d18" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x2b2152b77bb0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b215264e478"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b215264e930"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x2b2152b77940" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b215264e478"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b215264e930"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x2b2152b74b88" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x2b2152b8e870" loc="133:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b2152b8dad0" loc="150:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x2b2152b74448" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x2b2152b72a48" loc="99:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x2b2152b72328" loc="95:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x2b2152b711d8" loc="106:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x2b2152b8e0d8" loc="127:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x2b2152b76dd0" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b2152656020"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b21526566e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x2b2152b76b60" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b2152656020"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b21526566e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x2b2152b71990" loc="110:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x2b2152b763e0" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b2152656020"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b21526566e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b2152b755b8" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b2152b8c640" loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b2152b8c3d0" loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b21523d7378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b2152b7b020" loc="95:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b2152b7b7f8" loc="105:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b2152c03c98" loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b2152bff5c0" loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b2152bfca78" loc="56:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b2152bfba70" loc="73:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b2152bfc258" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b2152bfb2a8" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b2152bfa360" loc="81:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b2152bf7020" loc="90:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b2152bf7810" loc="98:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b2152c0f020" loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b21525dfae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b2152bf4218"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b2152c10c60" loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b2152bf4218"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b2152c120d8" loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b2152c12b58" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b21525d64c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b2152bf4218"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b2152c128e8" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b2152bf4218"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b2152c10428" loc="70:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b2152bf4218"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b2152c30550" loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b2152c30c88" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b2152c2f420" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b2152c2d2a8" loc="83:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b2152c2c8b0" loc="100:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b2152c2b070" loc="117:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b2152c2fb38" loc="77:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b2152c2bb70" loc="134:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b2152c2b900" loc="134:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPort" ref="0x2b2152c29a08" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b2152c29468" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
          <variable name="pval" ref="0x2b2152c29788" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b21523d5910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b2152c31df8" loc="56:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b2152c2da18" loc="89:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b2152c2c178" loc="94:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2b2152c90110" loc="62:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
