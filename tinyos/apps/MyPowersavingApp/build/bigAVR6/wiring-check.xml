<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="23:MyPowersavingAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b67d2ae71b8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b67d284d258"/></to>
    </wire>
    <wire loc="72:/homes/hglanzer/GIT/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b67d284d258"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b67d29fd198"/></to>
    </wire>
    <wire loc="29:MyPowersavingAppC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b67d2ae77f8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b67d2a02438"/></to>
    </wire>
    <wire loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b67d2a02438"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b67d2a15be8"/></to>
    </wire>
    <wire loc="72:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b67d284c680"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2b67d2a82790"/></to>
    </wire>
    <wire loc="73:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b67d284c680"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2b67d2a7d688"/></to>
    </wire>
    <wire loc="61:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b67d284c680"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b67d2a15610"/></to>
    </wire>
    <wire loc="67:/homes/hglanzer/GIT/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b67d29fd7d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b67d2755600"/></to>
    </wire>
    <wire loc="53:/homes/hglanzer/GIT/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b67d2755600"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b67d280c448"/></to>
    </wire>
    <wire loc="68:/homes/hglanzer/GIT/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b67d29fc1d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b67d284f670"/></to>
    </wire>
    <wire loc="58:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b67d284f670"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b67d285e600"/></to>
    </wire>
    <wire loc="71:/homes/hglanzer/GIT/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b67d29fc898"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b67d284c680"/></to>
    </wire>
    <wire loc="59:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b67d2852618"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b67d29df8f0"/></to>
    </wire>
    <wire loc="61:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b67d285d398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b67d29df2c0"/></to>
    </wire>
    <wire loc="62:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b67d285eca0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b67d2857b98"/></to>
    </wire>
    <wire loc="24:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b67d2857b98"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b67d2861698"/></to>
    </wire>
    <wire loc="63:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b67d2864360"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b67d284a380"/></to>
    </wire>
    <wire loc="29:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b67d2860b08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b67d2864360"/></to>
    </wire>
    <wire loc="191:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b67d28a9af0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2982970"/></to>
    </wire>
    <wire loc="165:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b67d288b658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b67d2929020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b67d2929020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2c60480"/></to>
    </wire>
    <wire loc="176:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b67d289c658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b67d2938d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b67d2938d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2cc6480"/></to>
    </wire>
    <wire loc="185:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b67d28a1348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b67d293a5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b67d293a5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2d1f480"/></to>
    </wire>
    <wire loc="143:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b67d2877348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b67d2900740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b67d2900740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2b2e480"/></to>
    </wire>
    <wire loc="183:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b67d28a3020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b67d293c2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b67d293c2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2d25480"/></to>
    </wire>
    <wire loc="146:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b67d2875658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b67d2908930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b67d2908930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2b753e0"/></to>
    </wire>
    <wire loc="157:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b67d28867e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b67d2917740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b67d2917740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2bfb480"/></to>
    </wire>
    <wire loc="168:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b67d2896af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b67d2925430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b67d2925430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2c57480"/></to>
    </wire>
    <wire loc="179:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b67d2899af0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b67d2934120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b67d2934120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2cbd480"/></to>
    </wire>
    <wire loc="138:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b67d286faf0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b67d28f5020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b67d28f5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2b263e0"/></to>
    </wire>
    <wire loc="149:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b67d2880af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b67d2905d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b67d2905d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2b86480"/></to>
    </wire>
    <wire loc="160:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b67d2883c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b67d2914bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b67d2914bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2bf2480"/></to>
    </wire>
    <wire loc="171:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b67d2892020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b67d29228c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b67d29228c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2c6b480"/></to>
    </wire>
    <wire loc="188:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b67d289e7e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b67d2949a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b67d2949a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2d36480"/></to>
    </wire>
    <wire loc="194:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b67d28a57e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2997020"/></to>
    </wire>
    <wire loc="174:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b67d2890348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b67d292aa50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b67d292aa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2cad480"/></to>
    </wire>
    <wire loc="141:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b67d2879020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b67d28f2430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b67d28f2430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2b1d480"/></to>
    </wire>
    <wire loc="152:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b67d287c1a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b67d2911120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b67d2911120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2b96480"/></to>
    </wire>
    <wire loc="192:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b67d28a74d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d298fab0"/></to>
    </wire>
    <wire loc="155:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b67d28884d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b67d2919500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b67d2919500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2be53e0"/></to>
    </wire>
    <wire loc="166:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b67d288a7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b67d2928120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b67d2928120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2c5d480"/></to>
    </wire>
    <wire loc="177:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b67d289b7e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b67d2937e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b67d2937e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2cc3480"/></to>
    </wire>
    <wire loc="186:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b67d28a04d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b67d294b740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b67d294b740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2d1c480"/></to>
    </wire>
    <wire loc="144:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b67d28764d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b67d28ff8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b67d28ff8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2b2b480"/></to>
    </wire>
    <wire loc="147:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b67d28747e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b67d2907a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b67d2907a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2b8c480"/></to>
    </wire>
    <wire loc="158:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b67d2885968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b67d29168c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b67d29168c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2bf8480"/></to>
    </wire>
    <wire loc="169:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b67d2895c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b67d29245b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b67d29245b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2c54480"/></to>
    </wire>
    <wire loc="180:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b67d2898c78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b67d29332a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b67d29332a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2cd9480"/></to>
    </wire>
    <wire loc="139:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b67d286ec78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b67d28f4120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b67d28f4120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2b23480"/></to>
    </wire>
    <wire loc="150:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b67d287fc78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b67d2904e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b67d2904e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2b83480"/></to>
    </wire>
    <wire loc="161:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b67d2882e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b67d2912d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b67d2912d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2bee480"/></to>
    </wire>
    <wire loc="189:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b67d28aa968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b67d2948bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b67d2948bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2d33480"/></to>
    </wire>
    <wire loc="164:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b67d288c1a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b67d291be40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b67d291be40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2c453e0"/></to>
    </wire>
    <wire loc="175:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b67d289d4d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b67d2939bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b67d2939bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2cc9480"/></to>
    </wire>
    <wire loc="184:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b67d28a21a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b67d293b430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b67d293b430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2d22480"/></to>
    </wire>
    <wire loc="195:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b67d28b2968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d29a4180"/></to>
    </wire>
    <wire loc="142:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b67d28781a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b67d29015b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b67d29015b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2b31480"/></to>
    </wire>
    <wire loc="153:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b67d287b348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b67d29102a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b67d29102a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2b93480"/></to>
    </wire>
    <wire loc="182:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b67d2897e00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b67d293d1e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b67d293d1e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2d283e0"/></to>
    </wire>
    <wire loc="156:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b67d2887658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b67d29185b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b67d29185b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2be2480"/></to>
    </wire>
    <wire loc="167:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b67d2889968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b67d29262a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b67d29262a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2c5a480"/></to>
    </wire>
    <wire loc="178:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b67d289a968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b67d2935020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b67d2935020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2cc0480"/></to>
    </wire>
    <wire loc="187:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b67d289f658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b67d294a8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b67d294a8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2d39480"/></to>
    </wire>
    <wire loc="137:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b67d2862870"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b67d28f7dc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b67d28f7dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2b11258"/></to>
    </wire>
    <wire loc="148:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b67d2881968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b67d2906bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b67d2906bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2b89480"/></to>
    </wire>
    <wire loc="159:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b67d2884af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b67d2915a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b67d2915a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2bf5480"/></to>
    </wire>
    <wire loc="170:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b67d2894e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b67d2923740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b67d2923740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2c6f480"/></to>
    </wire>
    <wire loc="193:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b67d28a6658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d298bc38"/></to>
    </wire>
    <wire loc="173:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b67d28911a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b67d292b930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b67d292b930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2cb03e0"/></to>
    </wire>
    <wire loc="162:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b67d288d020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b67d2921e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b67d2921e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2c07480"/></to>
    </wire>
    <wire loc="140:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b67d286de00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b67d28f32a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b67d28f32a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2b20480"/></to>
    </wire>
    <wire loc="151:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b67d287d020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b67d2902020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b67d2902020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b67d2b9a480"/></to>
    </wire>
    <wire loc="54:/homes/hglanzer/GIT/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b67d27581c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b67d280b2b0"/></to>
    </wire>
    <wire loc="55:/homes/hglanzer/GIT/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b67d2814758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b67d282b660"/></to>
    </wire>
    <wire loc="51:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b67d2a05020"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b67d2a52430"/></to>
    </wire>
    <wire loc="52:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b67d29ff080"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b67d2a52b90"/></to>
    </wire>
    <wire loc="53:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b67d2a632d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b67d2a1b108"/></to>
    </wire>
    <wire loc="56:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2b67d2a51c18"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b67d2a72060"/></to>
    </wire>
    <wire loc="60:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2b67d2a72060"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b67d2a7f020"/></to>
    </wire>
    <wire loc="57:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2b67d2a65470"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b67d2a728b8"/></to>
    </wire>
    <wire loc="61:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2b67d2a728b8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b67d2a7f8b8"/></to>
    </wire>
    <wire loc="58:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2b67d2a65c10"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b67d2a71158"/></to>
    </wire>
    <wire loc="62:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2b67d2a71158"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b67d2a7e158"/></to>
    </wire>
    <wire loc="66:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2b67d2a85860"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2b67d2a91020"/></to>
    </wire>
    <wire loc="64:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2b67d2a866b0"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2b67d2a7dd98"/></to>
    </wire>
    <wire loc="65:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2b67d2a85020"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2b67d2a7c6b8"/></to>
    </wire>
    <wire loc="68:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b67d2a904c8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b67d2852618"/></to>
    </wire>
    <wire loc="69:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b67d2a8f1a8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b67d2834a80"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/homes/hglanzer/GIT/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/homes/hglanzer/GIT/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformP.nc" safe="">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <documentation loc="10:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc" safe="">
      <documentation loc="10:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc" safe="">
      <documentation loc="14:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/homes/hglanzer/GIT/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/homes/hglanzer/GIT/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/homes/hglanzer/GIT/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/homes/hglanzer/GIT/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="78:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="69:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MyPowersavingC" loc="15:MyPowersavingC.nc" safe="">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b67d28afba0" loc="40:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b67d28b9020" loc="40:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b67d28b9368" loc="40:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b67d28bd610" loc="41:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b67d28bd978" loc="42:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b67d28bdce0" loc="43:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b67d28ba060" loc="44:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b67d2951020" loc="42:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b67d2951388" loc="43:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b67d29516f0" loc="44:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b67d2951a20" loc="45:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b67d284c680" loc="58:/homes/hglanzer/GIT/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b67d284c680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b67d284c9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b67d284d258" loc="57:/homes/hglanzer/GIT/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b67d284d258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b67d284d5a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b67d284a380" loc="52:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b67d284a380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b67d284a6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b67d284f670" loc="46:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b67d284f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b67d284f9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b67d2852618" loc="50:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b67d2852618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b67d2852968"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b67d2852af0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b67d2852c78"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b67d2852e00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b67d284a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b67d285eca0" loc="45:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b67d285eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b67d285d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b67d285e600" loc="44:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b67d285e600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b67d285e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b67d285d398" loc="46:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b67d285d398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b67d285d6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b67d2864360" loc="18:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b67d2864360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b67d28646b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b67d2857b98" loc="17:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b67d2857b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b67d2864020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b67d2860b08" loc="19:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b67d2860b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b67d2860e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b67d28688d8" loc="18:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b67d28688d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2868c28"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2868db0"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2860020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28601a8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2860330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28604b8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2860640"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28607c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b67d2861698" loc="17:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b67d2861698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b67d28619e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b67d28a9af0" loc="100:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b67d28a9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28a85e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28a8770"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28a88f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28a8a80"/>
        <function-ref name="get" scoped="" ref="0x2b67d28a8c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28a8d90"/>
        <function-ref name="set" scoped="" ref="0x2b67d28a7020"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28a71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b67d288b658" loc="74:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b67d288b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d288b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d288bb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d288bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d288be40"/>
        <function-ref name="get" scoped="" ref="0x2b67d288a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d288a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b67d288a330"/>
        <function-ref name="clr" scoped="" ref="0x2b67d288a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b67d289c658" loc="85:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b67d289c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d289c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d289cb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d289ccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d289ce40"/>
        <function-ref name="get" scoped="" ref="0x2b67d289b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d289b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b67d289b330"/>
        <function-ref name="clr" scoped="" ref="0x2b67d289b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b67d28a1348" loc="94:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b67d28a1348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28a1698"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28a1820"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28a19a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28a1b30"/>
        <function-ref name="get" scoped="" ref="0x2b67d28a1cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28a1e40"/>
        <function-ref name="set" scoped="" ref="0x2b67d28a0020"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28a01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b67d2877348" loc="52:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b67d2877348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2877698"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2877820"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28779a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2877b30"/>
        <function-ref name="get" scoped="" ref="0x2b67d2877cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2877e40"/>
        <function-ref name="set" scoped="" ref="0x2b67d2876020"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28761a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b67d28a3020" loc="92:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b67d28a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28a3370"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28a34f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28a3680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28a3808"/>
        <function-ref name="get" scoped="" ref="0x2b67d28a3990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28a3b18"/>
        <function-ref name="set" scoped="" ref="0x2b67d28a3ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28a3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b67d2875658" loc="55:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b67d2875658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28759a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2875b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2875cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2875e40"/>
        <function-ref name="get" scoped="" ref="0x2b67d2874020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28741a8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2874330"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28744b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b67d28867e0" loc="66:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b67d28867e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2886b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2886cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2886e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2885020"/>
        <function-ref name="get" scoped="" ref="0x2b67d28851a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2885330"/>
        <function-ref name="set" scoped="" ref="0x2b67d28854b8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2885640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b67d2896af0" loc="77:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b67d2896af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2896e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2895020"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28951a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2895330"/>
        <function-ref name="get" scoped="" ref="0x2b67d28954b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2895640"/>
        <function-ref name="set" scoped="" ref="0x2b67d28957c8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2895950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b67d2899af0" loc="88:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b67d2899af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2899e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2898020"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28981a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2898330"/>
        <function-ref name="get" scoped="" ref="0x2b67d28984b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2898640"/>
        <function-ref name="set" scoped="" ref="0x2b67d28987c8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2898950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b67d286faf0" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b67d286faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d286fe40"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d286e020"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d286e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d286e330"/>
        <function-ref name="get" scoped="" ref="0x2b67d286e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d286e640"/>
        <function-ref name="set" scoped="" ref="0x2b67d286e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d286e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b67d2880af0" loc="58:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b67d2880af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2880e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d287f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d287f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d287f330"/>
        <function-ref name="get" scoped="" ref="0x2b67d287f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d287f640"/>
        <function-ref name="set" scoped="" ref="0x2b67d287f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d287f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b67d2883c78" loc="69:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b67d2883c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2882020"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28821a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2882330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28824b8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2882640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28827c8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2882950"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2882ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b67d2892020" loc="80:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b67d2892020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2892370"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28924f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2892680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2892808"/>
        <function-ref name="get" scoped="" ref="0x2b67d2892990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2892b18"/>
        <function-ref name="set" scoped="" ref="0x2b67d2892ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2892e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b67d289e7e0" loc="97:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b67d289e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d289eb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d289ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d289ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28aa020"/>
        <function-ref name="get" scoped="" ref="0x2b67d28aa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28aa330"/>
        <function-ref name="set" scoped="" ref="0x2b67d28aa4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28aa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b67d28a57e0" loc="103:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b67d28a57e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28a5b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28a5cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28a5e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28b2020"/>
        <function-ref name="get" scoped="" ref="0x2b67d28b21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28b2330"/>
        <function-ref name="set" scoped="" ref="0x2b67d28b24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28b2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b67d2890348" loc="83:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b67d2890348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2890698"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2890820"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28909a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2890b30"/>
        <function-ref name="get" scoped="" ref="0x2b67d2890cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2890e40"/>
        <function-ref name="set" scoped="" ref="0x2b67d289d020"/>
        <function-ref name="clr" scoped="" ref="0x2b67d289d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b67d2879020" loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b67d2879020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2879370"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28794f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2879680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2879808"/>
        <function-ref name="get" scoped="" ref="0x2b67d2879990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2879b18"/>
        <function-ref name="set" scoped="" ref="0x2b67d2879ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2879e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b67d287c1a0" loc="61:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b67d287c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d287c4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d287c678"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d287c800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d287c988"/>
        <function-ref name="get" scoped="" ref="0x2b67d287cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d287cc98"/>
        <function-ref name="set" scoped="" ref="0x2b67d287ce20"/>
        <function-ref name="clr" scoped="" ref="0x2b67d287b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b67d28a74d0" loc="101:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b67d28a74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28a7820"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28a79a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28a7b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28a7cb8"/>
        <function-ref name="get" scoped="" ref="0x2b67d28a7e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28a6020"/>
        <function-ref name="set" scoped="" ref="0x2b67d28a61a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28a6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b67d28884d0" loc="64:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b67d28884d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2888820"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28889a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2888b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2888cb8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2888e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2887020"/>
        <function-ref name="set" scoped="" ref="0x2b67d28871a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2887330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b67d288a7e0" loc="75:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b67d288a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d288ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d288acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d288ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2889020"/>
        <function-ref name="get" scoped="" ref="0x2b67d28891a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2889330"/>
        <function-ref name="set" scoped="" ref="0x2b67d28894b8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2889640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b67d289b7e0" loc="86:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b67d289b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d289bb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d289bcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d289be40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d289a020"/>
        <function-ref name="get" scoped="" ref="0x2b67d289a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d289a330"/>
        <function-ref name="set" scoped="" ref="0x2b67d289a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d289a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b67d28a04d0" loc="95:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b67d28a04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28a0820"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28a09a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28a0b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28a0cb8"/>
        <function-ref name="get" scoped="" ref="0x2b67d28a0e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d289f020"/>
        <function-ref name="set" scoped="" ref="0x2b67d289f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d289f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b67d28764d0" loc="53:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b67d28764d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2876820"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28769a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2876b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2876cb8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2876e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2875020"/>
        <function-ref name="set" scoped="" ref="0x2b67d28751a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2875330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b67d28747e0" loc="56:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b67d28747e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2874b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2874cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2874e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2881020"/>
        <function-ref name="get" scoped="" ref="0x2b67d28811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2881330"/>
        <function-ref name="set" scoped="" ref="0x2b67d28814b8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2881640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b67d2885968" loc="67:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b67d2885968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2885cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2885e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2884020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28841a8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2884330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28844b8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2884640"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28847c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b67d2895c78" loc="78:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b67d2895c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2894020"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28941a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2894330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28944b8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2894640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28947c8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2894950"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2894ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b67d2898c78" loc="89:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b67d2898c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2897020"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28971a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2897330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28974b8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2897640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28977c8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2897950"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2897ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b67d286ec78" loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b67d286ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d286d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d286d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d286d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d286d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b67d286d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d286d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b67d286d950"/>
        <function-ref name="clr" scoped="" ref="0x2b67d286dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b67d287fc78" loc="59:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b67d287fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d287e0f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d287e278"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d287e400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d287e588"/>
        <function-ref name="get" scoped="" ref="0x2b67d287e710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d287e898"/>
        <function-ref name="set" scoped="" ref="0x2b67d287ea20"/>
        <function-ref name="clr" scoped="" ref="0x2b67d287eba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b67d2882e00" loc="70:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b67d2882e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d288f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d288f330"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d288f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d288f640"/>
        <function-ref name="get" scoped="" ref="0x2b67d288f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d288f950"/>
        <function-ref name="set" scoped="" ref="0x2b67d288fad8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d288fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b67d28aa968" loc="98:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b67d28aa968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28aacb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28aae40"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28a9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28a91a8"/>
        <function-ref name="get" scoped="" ref="0x2b67d28a9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28a94b8"/>
        <function-ref name="set" scoped="" ref="0x2b67d28a9640"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28a97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b67d288c1a0" loc="73:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b67d288c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d288c6f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d288c878"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d288ca00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d288cb88"/>
        <function-ref name="get" scoped="" ref="0x2b67d288cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d288b020"/>
        <function-ref name="set" scoped="" ref="0x2b67d288b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d288b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b67d289d4d0" loc="84:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b67d289d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d289d820"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d289d9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d289db30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d289dcb8"/>
        <function-ref name="get" scoped="" ref="0x2b67d289de40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d289c020"/>
        <function-ref name="set" scoped="" ref="0x2b67d289c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d289c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b67d28a21a0" loc="93:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b67d28a21a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28a24f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28a2678"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28a2800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28a2988"/>
        <function-ref name="get" scoped="" ref="0x2b67d28a2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28a2c98"/>
        <function-ref name="set" scoped="" ref="0x2b67d28a2e20"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b67d28b2968" loc="104:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b67d28b2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28b2cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28b2e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28b1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28b11a8"/>
        <function-ref name="get" scoped="" ref="0x2b67d28b1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28b14b8"/>
        <function-ref name="set" scoped="" ref="0x2b67d28b1640"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28b17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b67d28781a0" loc="51:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b67d28781a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28784f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2878678"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2878800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2878988"/>
        <function-ref name="get" scoped="" ref="0x2b67d2878b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2878c98"/>
        <function-ref name="set" scoped="" ref="0x2b67d2878e20"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2877020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b67d287b348" loc="62:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b67d287b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d287b698"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d287b820"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d287b9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d287bb30"/>
        <function-ref name="get" scoped="" ref="0x2b67d287bcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d287be40"/>
        <function-ref name="set" scoped="" ref="0x2b67d2888020"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b67d2897e00" loc="91:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b67d2897e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28a41a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28a4330"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28a44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28a4640"/>
        <function-ref name="get" scoped="" ref="0x2b67d28a47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28a4950"/>
        <function-ref name="set" scoped="" ref="0x2b67d28a4ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28a4c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b67d2887658" loc="65:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b67d2887658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28879a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2887b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2887cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2887e40"/>
        <function-ref name="get" scoped="" ref="0x2b67d2886020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28861a8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2886330"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28864b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b67d2889968" loc="76:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b67d2889968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2889cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2889e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2896020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28961a8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2896330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28964b8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2896640"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28967c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b67d289a968" loc="87:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b67d289a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d289acb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d289ae40"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2899020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28991a8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2899330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28994b8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2899640"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28997c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b67d289f658" loc="96:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b67d289f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d289f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d289fb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d289fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d289fe40"/>
        <function-ref name="get" scoped="" ref="0x2b67d289e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d289e1a8"/>
        <function-ref name="set" scoped="" ref="0x2b67d289e330"/>
        <function-ref name="clr" scoped="" ref="0x2b67d289e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b67d2862870" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b67d2862870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2862bc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2862d48"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d286f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d286f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b67d286f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d286f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b67d286f640"/>
        <function-ref name="clr" scoped="" ref="0x2b67d286f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b67d2881968" loc="57:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b67d2881968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2881cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2881e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2880020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28801a8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2880330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28804b8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2880640"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28807c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b67d2884af0" loc="68:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b67d2884af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2884e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2883020"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28831a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2883330"/>
        <function-ref name="get" scoped="" ref="0x2b67d28834b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2883640"/>
        <function-ref name="set" scoped="" ref="0x2b67d28837c8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2883950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b67d2894e00" loc="79:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b67d2894e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28931a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2893330"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28934b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2893640"/>
        <function-ref name="get" scoped="" ref="0x2b67d28937c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2893950"/>
        <function-ref name="set" scoped="" ref="0x2b67d2893ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2893c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b67d28a6658" loc="102:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b67d28a6658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28a69a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28a6b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28a6cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28a6e40"/>
        <function-ref name="get" scoped="" ref="0x2b67d28a5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28a51a8"/>
        <function-ref name="set" scoped="" ref="0x2b67d28a5330"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28a54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b67d28911a0" loc="82:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b67d28911a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28914f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2891678"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2891800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2891988"/>
        <function-ref name="get" scoped="" ref="0x2b67d2891b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2891c98"/>
        <function-ref name="set" scoped="" ref="0x2b67d2891e20"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2890020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b67d288d020" loc="71:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b67d288d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d288d370"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d288d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d288d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d288d808"/>
        <function-ref name="get" scoped="" ref="0x2b67d288d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d288db18"/>
        <function-ref name="set" scoped="" ref="0x2b67d288dca0"/>
        <function-ref name="clr" scoped="" ref="0x2b67d288de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b67d286de00" loc="49:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b67d286de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d287a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d287a330"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d287a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d287a640"/>
        <function-ref name="get" scoped="" ref="0x2b67d287a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d287a950"/>
        <function-ref name="set" scoped="" ref="0x2b67d287aad8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d287ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b67d287d020" loc="60:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b67d287d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d287d370"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d287d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d287d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d287d808"/>
        <function-ref name="get" scoped="" ref="0x2b67d287d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d287db18"/>
        <function-ref name="set" scoped="" ref="0x2b67d287dca0"/>
        <function-ref name="clr" scoped="" ref="0x2b67d287de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b67d28f4120" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b67d28f4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28f4470"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28f45f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28f4780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28f4908"/>
        <function-ref name="get" scoped="" ref="0x2b67d28f4a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28f4c18"/>
        <function-ref name="set" scoped="" ref="0x2b67d28f4da0"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b67d29015b8" loc="49:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b67d29015b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2901908"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2901a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2901c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2901da0"/>
        <function-ref name="get" scoped="" ref="0x2b67d2900020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d29001a8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2900330"/>
        <function-ref name="clr" scoped="" ref="0x2b67d29004b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b67d28f7dc0" loc="44:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b67d28f7dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28f6170"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28f62f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28f6480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28f6608"/>
        <function-ref name="get" scoped="" ref="0x2b67d28f6790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28f6918"/>
        <function-ref name="set" scoped="" ref="0x2b67d28f6aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28f6c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b67d28f32a8" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b67d28f32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28f35f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28f3780"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28f3908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28f3a90"/>
        <function-ref name="get" scoped="" ref="0x2b67d28f3c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28f3da0"/>
        <function-ref name="set" scoped="" ref="0x2b67d28f2020"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28f21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b67d2900740" loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b67d2900740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2900a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2900c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2900da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28ff020"/>
        <function-ref name="get" scoped="" ref="0x2b67d28ff1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28ff330"/>
        <function-ref name="set" scoped="" ref="0x2b67d28ff4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28ff640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b67d28f5020" loc="45:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b67d28f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28f5370"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28f54f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28f5680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28f5808"/>
        <function-ref name="get" scoped="" ref="0x2b67d28f5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28f5b18"/>
        <function-ref name="set" scoped="" ref="0x2b67d28f5ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28f5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b67d28f2430" loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b67d28f2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28f2780"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28f2908"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28f2a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28f2c18"/>
        <function-ref name="get" scoped="" ref="0x2b67d28f2da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2901020"/>
        <function-ref name="set" scoped="" ref="0x2b67d29011a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2901330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b67d28ff8c8" loc="51:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b67d28ff8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d28ffc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d28ffda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d28fe020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d28fe1a8"/>
        <function-ref name="get" scoped="" ref="0x2b67d28fe330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d28fe4b8"/>
        <function-ref name="set" scoped="" ref="0x2b67d28fe640"/>
        <function-ref name="clr" scoped="" ref="0x2b67d28fe7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2b11258" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2b11258"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2b115a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2b11730"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2b118b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2b11a40"/>
        <function-ref name="get" scoped="" ref="0x2b67d2b11bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2b11d50"/>
        <function-ref name="set" scoped="" ref="0x2b67d2b10020"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2b101a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2b263e0" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2b263e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2b26730"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2b268b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2b26a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2b26bc8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2b26d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2b25020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2b251a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2b25330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2b23480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2b23480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2b237d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2b23958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2b23ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2b23c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2b23df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2b22020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2b221a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2b22330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2b20480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2b20480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2b207d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2b20958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2b20ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2b20c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2b20df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2b1f020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2b1f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2b1f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2b1d480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2b1d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2b1d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2b1d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2b1dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2b1dc68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2b1ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2b33020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2b331a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2b33330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2b31480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2b31480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2b317d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2b31958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2b31ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2b31c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2b31df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2b30020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2b301a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2b30330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2b2e480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2b2e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2b2e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2b2e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2b2eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2b2ec68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2b2edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2b2d020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2b2d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2b2d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2b2b480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2b2b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2b2b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2b2b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2b2bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2b2bc68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2b2bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2b2a020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2b2a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2b2a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b67d2906bd8" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b67d2906bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2905020"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d29051a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2905330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d29054b8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2905640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d29057c8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2905950"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2905ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b67d2902020" loc="49:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b67d2902020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2902370"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d29024f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2902680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2902808"/>
        <function-ref name="get" scoped="" ref="0x2b67d2902990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2902b18"/>
        <function-ref name="set" scoped="" ref="0x2b67d2902ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2902e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b67d2908930" loc="44:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b67d2908930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2908c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2908e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2907020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d29071a8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2907330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d29074b8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2907640"/>
        <function-ref name="clr" scoped="" ref="0x2b67d29077c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b67d2905d60" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b67d2905d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d29040d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2904260"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d29043e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2904570"/>
        <function-ref name="get" scoped="" ref="0x2b67d29046f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2904880"/>
        <function-ref name="set" scoped="" ref="0x2b67d2904a08"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2904b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b67d2911120" loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b67d2911120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2911470"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d29115f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2911780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2911908"/>
        <function-ref name="get" scoped="" ref="0x2b67d2911a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2911c18"/>
        <function-ref name="set" scoped="" ref="0x2b67d2911da0"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2910020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b67d2907a50" loc="45:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b67d2907a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2907da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2906020"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d29061a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2906330"/>
        <function-ref name="get" scoped="" ref="0x2b67d29064b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2906640"/>
        <function-ref name="set" scoped="" ref="0x2b67d29067c8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2906950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b67d2904e18" loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b67d2904e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d29031a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2903330"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d29034b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2903640"/>
        <function-ref name="get" scoped="" ref="0x2b67d29037c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2903950"/>
        <function-ref name="set" scoped="" ref="0x2b67d2903ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2903c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b67d29102a8" loc="51:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b67d29102a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d29105f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2910780"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2910908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2910a90"/>
        <function-ref name="get" scoped="" ref="0x2b67d2910c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2910da0"/>
        <function-ref name="set" scoped="" ref="0x2b67d290f020"/>
        <function-ref name="clr" scoped="" ref="0x2b67d290f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2b753e0" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2b753e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2b75730"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2b758b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2b75a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2b75bc8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2b75d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2b8e020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2b8e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2b8e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2b8c480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2b8c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2b8c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2b8c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2b8cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2b8cc68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2b8cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2b8b020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2b8b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2b8b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2b89480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2b89480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2b897d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2b89958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2b89ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2b89c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2b89df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2b88020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2b881a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2b88330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2b86480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2b86480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2b867d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2b86958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2b86ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2b86c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2b86df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2b85020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2b851a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2b85330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2b83480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2b83480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2b837d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2b83958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2b83ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2b83c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2b83df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2b82020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2b821a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2b82330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2b9a480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2b9a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2b9a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2b9a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2b9aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2b9ac68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2b9adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2b98020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2b981a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2b98330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2b96480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2b96480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2b967d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2b96958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2b96ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2b96c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2b96df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2b95020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2b951a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2b95330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2b93480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2b93480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2b937d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2b93958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2b93ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2b93c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2b93df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2b92020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2b921a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2b92330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b67d2917740" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b67d2917740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2917a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2917c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2917da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2916020"/>
        <function-ref name="get" scoped="" ref="0x2b67d29161a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2916330"/>
        <function-ref name="set" scoped="" ref="0x2b67d29164b8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2916640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b67d2914bd8" loc="49:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b67d2914bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2912020"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d29121a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2912330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d29124b8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2912640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d29127c8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2912950"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2912ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b67d2919500" loc="44:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b67d2919500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2919850"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d29199d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2919b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2919ce8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2919e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2918020"/>
        <function-ref name="set" scoped="" ref="0x2b67d29181a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2918330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b67d29168c8" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b67d29168c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2916c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2916da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2915020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d29151a8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2915330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d29154b8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2915640"/>
        <function-ref name="clr" scoped="" ref="0x2b67d29157c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b67d2912d60" loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b67d2912d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d29210d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2921260"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d29213e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2921570"/>
        <function-ref name="get" scoped="" ref="0x2b67d29216f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2921880"/>
        <function-ref name="set" scoped="" ref="0x2b67d2921a08"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2921b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b67d29185b8" loc="45:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b67d29185b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2918908"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2918a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2918c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2918da0"/>
        <function-ref name="get" scoped="" ref="0x2b67d2917020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d29171a8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2917330"/>
        <function-ref name="clr" scoped="" ref="0x2b67d29174b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b67d2915a50" loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b67d2915a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2915da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2914020"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d29141a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2914330"/>
        <function-ref name="get" scoped="" ref="0x2b67d29144b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2914640"/>
        <function-ref name="set" scoped="" ref="0x2b67d29147c8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2914950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b67d2921e18" loc="51:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b67d2921e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d29201a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2920330"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d29204b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2920640"/>
        <function-ref name="get" scoped="" ref="0x2b67d29207c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2920950"/>
        <function-ref name="set" scoped="" ref="0x2b67d2920ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2920c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2be53e0" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2be53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2be5730"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2be58b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2be5a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2be5bc8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2be5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2be4020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2be41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2be4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2be2480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2be2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2be27d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2be2958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2be2ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2be2c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2be2df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2be1020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2be11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2be1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2bfb480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2bfb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2bfb7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2bfb958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2bfbae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2bfbc68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2bfbdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2bfa020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2bfa1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2bfa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2bf8480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2bf8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2bf87d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2bf8958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2bf8ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2bf8c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2bf8df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2bf7020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2bf71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2bf7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2bf5480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2bf5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2bf57d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2bf5958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2bf5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2bf5c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2bf5df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2bf4020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2bf41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2bf4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2bf2480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2bf2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2bf27d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2bf2958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2bf2ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2bf2c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2bf2df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2bf0020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2bf01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2bf0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2bee480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2bee480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2bee7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2bee958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2beeae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2beec68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2beedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2c09020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2c091a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2c09330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2c07480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2c07480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2c077d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2c07958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2c07ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2c07c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2c07df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2c06020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2c061a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2c06330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b67d2928120" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b67d2928120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2928470"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d29285f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2928780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2928908"/>
        <function-ref name="get" scoped="" ref="0x2b67d2928a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2928c18"/>
        <function-ref name="set" scoped="" ref="0x2b67d2928da0"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2926020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b67d29245b8" loc="49:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b67d29245b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2924908"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2924a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2924c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2924da0"/>
        <function-ref name="get" scoped="" ref="0x2b67d2923020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d29231a8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2923330"/>
        <function-ref name="clr" scoped="" ref="0x2b67d29234b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b67d291be40" loc="44:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b67d291be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d291a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d291a348"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d291a4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d291a658"/>
        <function-ref name="get" scoped="" ref="0x2b67d291a7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d291a968"/>
        <function-ref name="set" scoped="" ref="0x2b67d291aaf0"/>
        <function-ref name="clr" scoped="" ref="0x2b67d291ac78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b67d29262a8" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b67d29262a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d29265f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2926780"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2926908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2926a90"/>
        <function-ref name="get" scoped="" ref="0x2b67d2926c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2926da0"/>
        <function-ref name="set" scoped="" ref="0x2b67d2925020"/>
        <function-ref name="clr" scoped="" ref="0x2b67d29251a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b67d2923740" loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b67d2923740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2923a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2923c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2923da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2922020"/>
        <function-ref name="get" scoped="" ref="0x2b67d29221a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2922330"/>
        <function-ref name="set" scoped="" ref="0x2b67d29224b8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2922640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b67d2929020" loc="45:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b67d2929020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2929370"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d29294f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2929680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2929808"/>
        <function-ref name="get" scoped="" ref="0x2b67d2929990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2929b18"/>
        <function-ref name="set" scoped="" ref="0x2b67d2929ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2929e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b67d2925430" loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b67d2925430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2925780"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2925908"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2925a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2925c18"/>
        <function-ref name="get" scoped="" ref="0x2b67d2925da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2924020"/>
        <function-ref name="set" scoped="" ref="0x2b67d29241a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2924330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b67d29228c8" loc="51:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b67d29228c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2922c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2922da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2931020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d29311a8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2931330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d29314b8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2931640"/>
        <function-ref name="clr" scoped="" ref="0x2b67d29317c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2c453e0" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2c453e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2c45730"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2c458b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2c45a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2c45bc8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2c45d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2c44020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2c441a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2c44330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2c60480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2c60480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2c607d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2c60958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2c60ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2c60c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2c60df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2c5f020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2c5f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2c5f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2c5d480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2c5d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2c5d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2c5d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2c5dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2c5dc68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2c5ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2c5c020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2c5c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2c5c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2c5a480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2c5a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2c5a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2c5a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2c5aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2c5ac68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2c5adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2c59020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2c591a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2c59330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2c57480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2c57480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2c577d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2c57958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2c57ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2c57c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2c57df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2c56020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2c561a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2c56330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2c54480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2c54480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2c547d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2c54958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2c54ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2c54c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2c54df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2c53020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2c531a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2c53330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2c6f480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2c6f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2c6f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2c6f958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2c6fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2c6fc68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2c6fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2c6d020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2c6d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2c6d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2c6b480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2c6b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2c6b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2c6b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2c6bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2c6bc68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2c6bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2c6a020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2c6a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2c6a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b67d2939bd8" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b67d2939bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2938020"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d29381a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2938330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d29384b8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2938640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d29387c8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2938950"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2938ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b67d2935020" loc="49:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b67d2935020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2935370"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d29354f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2935680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2935808"/>
        <function-ref name="get" scoped="" ref="0x2b67d2935990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2935b18"/>
        <function-ref name="set" scoped="" ref="0x2b67d2935ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2935e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b67d292b930" loc="44:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b67d292b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d292bc80"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d292be08"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d292a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d292a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b67d292a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d292a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b67d292a640"/>
        <function-ref name="clr" scoped="" ref="0x2b67d292a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b67d2938d60" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b67d2938d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d29370d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2937260"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d29373e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2937570"/>
        <function-ref name="get" scoped="" ref="0x2b67d29376f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2937880"/>
        <function-ref name="set" scoped="" ref="0x2b67d2937a08"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2937b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b67d2934120" loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b67d2934120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2934470"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d29345f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2934780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2934908"/>
        <function-ref name="get" scoped="" ref="0x2b67d2934a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2934c18"/>
        <function-ref name="set" scoped="" ref="0x2b67d2934da0"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2933020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b67d292aa50" loc="45:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b67d292aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d292ada0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2939020"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d29391a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2939330"/>
        <function-ref name="get" scoped="" ref="0x2b67d29394b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2939640"/>
        <function-ref name="set" scoped="" ref="0x2b67d29397c8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2939950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b67d2937e18" loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b67d2937e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d29361a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2936330"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d29364b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2936640"/>
        <function-ref name="get" scoped="" ref="0x2b67d29367c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2936950"/>
        <function-ref name="set" scoped="" ref="0x2b67d2936ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2936c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b67d29332a8" loc="51:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b67d29332a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d29335f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2933780"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2933908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2933a90"/>
        <function-ref name="get" scoped="" ref="0x2b67d2933c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2933da0"/>
        <function-ref name="set" scoped="" ref="0x2b67d2932020"/>
        <function-ref name="clr" scoped="" ref="0x2b67d29321a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2cb03e0" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2cb03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2cb0730"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2cb08b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2cb0a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2cb0bc8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2cb0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2caf020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2caf1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2caf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2cad480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2cad480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2cad7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2cad958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2cadae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2cadc68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2caddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2cac020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2cac1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2cac330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2cc9480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2cc9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2cc97d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2cc9958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2cc9ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2cc9c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2cc9df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2cc8020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2cc81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2cc8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2cc6480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2cc6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2cc67d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2cc6958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2cc6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2cc6c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2cc6df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2cc5020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2cc51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2cc5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2cc3480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2cc3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2cc37d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2cc3958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2cc3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2cc3c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2cc3df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2cc2020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2cc21a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2cc2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2cc0480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2cc0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2cc07d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2cc0958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2cc0ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2cc0c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2cc0df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2cbf020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2cbf1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2cbf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2cbd480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2cbd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2cbd7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2cbd958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2cbdae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2cbdc68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2cbddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2cbb020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2cbb1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2cbb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2cd9480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2cd9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2cd97d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2cd9958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2cd9ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2cd9c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2cd9df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2cd8020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2cd81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2cd8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b67d293b430" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b67d293b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d293b780"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d293b908"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d293ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d293bc18"/>
        <function-ref name="get" scoped="" ref="0x2b67d293bda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d293a020"/>
        <function-ref name="set" scoped="" ref="0x2b67d293a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d293a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b67d294a8c8" loc="49:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b67d294a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d294ac18"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d294ada0"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2949020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d29491a8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2949330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d29494b8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2949640"/>
        <function-ref name="clr" scoped="" ref="0x2b67d29497c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b67d293d1e8" loc="44:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b67d293d1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d293d538"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d293d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d293d848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d293d9d0"/>
        <function-ref name="get" scoped="" ref="0x2b67d293db58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d293dce0"/>
        <function-ref name="set" scoped="" ref="0x2b67d293de68"/>
        <function-ref name="clr" scoped="" ref="0x2b67d293c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b67d293a5b8" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b67d293a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d293a908"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d293aa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d293ac18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d293ada0"/>
        <function-ref name="get" scoped="" ref="0x2b67d294b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d294b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b67d294b330"/>
        <function-ref name="clr" scoped="" ref="0x2b67d294b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b67d2949a50" loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b67d2949a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2949da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2948020"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d29481a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2948330"/>
        <function-ref name="get" scoped="" ref="0x2b67d29484b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2948640"/>
        <function-ref name="set" scoped="" ref="0x2b67d29487c8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2948950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b67d293c2a8" loc="45:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b67d293c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d293c5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d293c780"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d293c908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d293ca90"/>
        <function-ref name="get" scoped="" ref="0x2b67d293cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d293cda0"/>
        <function-ref name="set" scoped="" ref="0x2b67d293b020"/>
        <function-ref name="clr" scoped="" ref="0x2b67d293b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b67d294b740" loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b67d294b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d294ba90"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d294bc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d294bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d294a020"/>
        <function-ref name="get" scoped="" ref="0x2b67d294a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d294a330"/>
        <function-ref name="set" scoped="" ref="0x2b67d294a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d294a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b67d2948bd8" loc="51:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b67d2948bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2946020"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d29461a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2946330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d29464b8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2946640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d29467c8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2946950"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2946ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2d283e0" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2d283e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2d28730"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2d288b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2d28a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2d28bc8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2d28d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2d27020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2d271a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2d27330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2d25480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2d25480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2d257d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2d25958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2d25ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2d25c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2d25df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2d24020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2d241a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2d24330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2d22480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2d22480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2d227d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2d22958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2d22ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2d22c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2d22df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2d21020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2d211a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2d21330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2d1f480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2d1f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2d1f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2d1f958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2d1fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2d1fc68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2d1fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2d1e020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2d1e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2d1e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2d1c480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2d1c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2d1c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2d1c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2d1cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2d1cc68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2d1cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2d1b020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2d1b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2d1b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2d39480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2d39480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2d397d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2d39958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2d39ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2d39c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2d39df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2d38020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2d381a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2d38330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2d36480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2d36480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2d367d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2d36958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2d36ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2d36c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2d36df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2d35020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2d351a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2d35330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2d33480" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2d33480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2d337d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2d33958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2d33ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2d33c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2d33df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2d31020"/>
        <function-ref name="set" scoped="" ref="0x2b67d2d311a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2d31330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2952ac0" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2952ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2952e10"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2960020"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d29601a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2960330"/>
        <function-ref name="get" scoped="" ref="0x2b67d29604b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2960640"/>
        <function-ref name="set" scoped="" ref="0x2b67d29607c8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2960950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d296fdb8" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d296fdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d296e170"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d296e2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d296e480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d296e608"/>
        <function-ref name="get" scoped="" ref="0x2b67d296e790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d296e918"/>
        <function-ref name="set" scoped="" ref="0x2b67d296eaa0"/>
        <function-ref name="clr" scoped="" ref="0x2b67d296ec28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d29693e0" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d29693e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2969730"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d29698b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2969a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2969bc8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2969d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2968020"/>
        <function-ref name="set" scoped="" ref="0x2b67d29681a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2968330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d29767e8" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d29767e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2976b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2976cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2976e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2975020"/>
        <function-ref name="get" scoped="" ref="0x2b67d29751a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2975330"/>
        <function-ref name="set" scoped="" ref="0x2b67d29754b8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2975640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2972c38" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2972c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2971020"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d29711a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2971330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d29714b8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2971640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d29717c8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2971950"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2971ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d297e020" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d297e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d297e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d297e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d297e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d297e808"/>
        <function-ref name="get" scoped="" ref="0x2b67d297e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d297eb18"/>
        <function-ref name="set" scoped="" ref="0x2b67d297eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b67d297ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2979480" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2979480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d29797d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2979958"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2979ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2979c68"/>
        <function-ref name="get" scoped="" ref="0x2b67d2979df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d298a020"/>
        <function-ref name="set" scoped="" ref="0x2b67d298a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d298a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d29877e8" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d29877e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2987b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2987cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2987e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2986020"/>
        <function-ref name="get" scoped="" ref="0x2b67d29861a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2986330"/>
        <function-ref name="set" scoped="" ref="0x2b67d29864b8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2986640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2982970" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2982970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2982cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d2982e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2993020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d29931a8"/>
        <function-ref name="get" scoped="" ref="0x2b67d2993330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d29934b8"/>
        <function-ref name="set" scoped="" ref="0x2b67d2993640"/>
        <function-ref name="clr" scoped="" ref="0x2b67d29937c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d298fab0" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d298fab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d298fe00"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d298e020"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d298e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d298e330"/>
        <function-ref name="get" scoped="" ref="0x2b67d298e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d298e640"/>
        <function-ref name="set" scoped="" ref="0x2b67d298e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b67d298e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d298bc38" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d298bc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d299c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d299c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d299c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d299c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b67d299c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d299c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b67d299c950"/>
        <function-ref name="clr" scoped="" ref="0x2b67d299cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d2997020" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d2997020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d2997370"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d29974f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d2997680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d2997808"/>
        <function-ref name="get" scoped="" ref="0x2b67d2997990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d2997b18"/>
        <function-ref name="set" scoped="" ref="0x2b67d2997ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b67d2997e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b67d29a4180" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b67d29a4180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b67d29a44d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b67d29a4658"/>
        <function-ref name="toggle" scoped="" ref="0x2b67d29a47e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b67d29a4968"/>
        <function-ref name="get" scoped="" ref="0x2b67d29a4af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b67d29a4c78"/>
        <function-ref name="set" scoped="" ref="0x2b67d29a4e00"/>
        <function-ref name="clr" scoped="" ref="0x2b67d29a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b67d29df2c0" loc="27:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b67d29df2c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b67d2750128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b67d2750128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b67d29df610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b67d29df8f0" loc="28:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b67d29df8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b67d29dfc40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b67d29dfdc8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b67d29de020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b67d29de1a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b67d29de330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b67d29fc898" loc="60:/homes/hglanzer/GIT/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b67d29fc898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b67d29fcbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b67d29fd198" loc="57:/homes/hglanzer/GIT/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b67d29fd198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b67d29fd4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b67d29fc1d0" loc="59:/homes/hglanzer/GIT/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b67d29fc1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b67d29fc520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b67d29fd7d0" loc="58:/homes/hglanzer/GIT/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b67d29fd7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b67d29fdb20"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b67d29fdca8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b67d29fde30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b67d27581c8" loc="48:/homes/hglanzer/GIT/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b67d27581c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b67d2758518"/>
        <function-ref name="runTask" scoped="" ref="0x2b67d27586a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b67d2755600" loc="47:/homes/hglanzer/GIT/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b67d2755600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b67d2755950"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b67d2755ad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b67d2755c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b67d280b2b0" loc="56:/homes/hglanzer/GIT/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b67d280b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b67d280b600"/>
        <function-ref name="runTask" scoped="" ref="0x2b67d280b788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b67d2814758" loc="57:/homes/hglanzer/GIT/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b67d2814758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b67d2814aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b67d280c448" loc="55:/homes/hglanzer/GIT/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b67d280c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b67d280c798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b67d280c920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b67d280caa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b67d28312b0" loc="54:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b67d28312b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b67d2831600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b67d282b660" loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b67d282b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b67d282b9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b67d2834a80" loc="51:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b67d2834a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b67d2834dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b67d2a05020" loc="41:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b67d2a05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b67d2a05370"/>
        <function-ref name="receive" scoped="" ref="0x2b67d2a054f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b67d29ff080" loc="42:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b67d29ff080"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b67d29ff3d0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b67d29ff558"/>
        <function-ref name="receive" scoped="" ref="0x2b67d29ff6e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b67d29ff868"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b67d29ff9f0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b67d29ffb78"/>
        <function-ref name="sendDone" scoped="" ref="0x2b67d29ffd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b67d2a1b108" loc="43:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b67d2a1b108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b67d27da430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b67d27da788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b67d2553db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b67d2a1be58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b67d2a18798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b67d2a18310"/>
        <function-ref name="overflow" scoped="" ref="0x2b67d2a18c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b67d2a02438" loc="40:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b67d2a02438"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b67d2a02788"/>
        <function-ref name="stop" scoped="" ref="0x2b67d2a02910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b67d2a52430" loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b67d2a52430"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b67d2a52780"/>
        <function-ref name="receive" scoped="" ref="0x2b67d2a52908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2b67d2a51c18" loc="53:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2b67d2a51c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b67d2a65020"/>
        <function-ref name="stop" scoped="" ref="0x2b67d2a651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b67d2a15610" loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b67d2a15610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b67d2a15960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b67d2a52b90" loc="51:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b67d2a52b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b67d2a51020"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b67d2a511a8"/>
        <function-ref name="receive" scoped="" ref="0x2b67d2a51330"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b67d2a514b8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b67d2a51640"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b67d2a517c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b67d2a51950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b67d2a632d0" loc="56:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b67d2a632d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b67d27da430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b67d27da788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b67d2553db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b67d2a62088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b67d2a62998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b67d2a62510"/>
        <function-ref name="overflow" scoped="" ref="0x2b67d2a62e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2b67d2a65c10" loc="55:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2b67d2a65c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b67d2a64020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b67d2a641a8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b67d2a64330"/>
        <function-ref name="txDone" scoped="" ref="0x2b67d2a644b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b67d2a64640"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b67d2a647c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b67d2a64950"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b67d2a64ad8"/>
        <function-ref name="tx" scoped="" ref="0x2b67d2a64c60"/>
        <function-ref name="rx" scoped="" ref="0x2b67d2a64de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b67d2a15be8" loc="49:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b67d2a15be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b67d2a52020"/>
        <function-ref name="stop" scoped="" ref="0x2b67d2a521a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2b67d2a65470" loc="54:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2b67d2a65470"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b67d2a657c0"/>
        <function-ref name="stop" scoped="" ref="0x2b67d2a65948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b67d2a71158" loc="49:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b67d2a71158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b67d2a714a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b67d2a71630"/>
        <function-ref name="rxDone" scoped="" ref="0x2b67d2a717b8"/>
        <function-ref name="txDone" scoped="" ref="0x2b67d2a71940"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b67d2a71ac8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b67d2a71c50"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b67d2a71dd8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b67d2a86020"/>
        <function-ref name="tx" scoped="" ref="0x2b67d2a861a8"/>
        <function-ref name="rx" scoped="" ref="0x2b67d2a86330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b67d2a85860" loc="53:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b67d2a85860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b67d2a85bb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b67d2a85d38"/>
        <function-ref name="rxDone" scoped="" ref="0x2b67d2a84020"/>
        <function-ref name="txDone" scoped="" ref="0x2b67d2a841a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b67d2a84330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b67d2a844b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b67d2a84640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b67d2a847c8"/>
        <function-ref name="tx" scoped="" ref="0x2b67d2a84950"/>
        <function-ref name="rx" scoped="" ref="0x2b67d2a84ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b67d2a728b8" loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b67d2a728b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b67d2a72c08"/>
        <function-ref name="stop" scoped="" ref="0x2b67d2a72d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b67d2a866b0" loc="51:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b67d2a866b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b67d2a86a00"/>
        <function-ref name="stop" scoped="" ref="0x2b67d2a86b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b67d2a85020" loc="52:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b67d2a85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b67d2a85370"/>
        <function-ref name="stop" scoped="" ref="0x2b67d2a854f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b67d2a72060" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b67d2a72060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b67d2a723b0"/>
        <function-ref name="stop" scoped="" ref="0x2b67d2a72538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2b67d2a82790" loc="80:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2b67d2a82790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b67d2a82ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b67d2a7e158" loc="83:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b67d2a7e158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b67d2a7e4a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b67d2a7e630"/>
        <function-ref name="rxDone" scoped="" ref="0x2b67d2a7e7b8"/>
        <function-ref name="txDone" scoped="" ref="0x2b67d2a7e940"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b67d2a7eac8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b67d2a7ec50"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b67d2a7edd8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b67d2a7d020"/>
        <function-ref name="tx" scoped="" ref="0x2b67d2a7d1a8"/>
        <function-ref name="rx" scoped="" ref="0x2b67d2a7d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2b67d2a7d688" loc="85:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2b67d2a7d688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b67d2a7d9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b67d2a91020" loc="88:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b67d2a91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b67d2a91370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b67d2a914f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b67d2a91680"/>
        <function-ref name="txDone" scoped="" ref="0x2b67d2a91808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b67d2a91990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b67d2a91b18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b67d2a91ca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b67d2a91e28"/>
        <function-ref name="tx" scoped="" ref="0x2b67d2a90020"/>
        <function-ref name="rx" scoped="" ref="0x2b67d2a901a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b67d2a7f8b8" loc="82:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b67d2a7f8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b67d2a7fc08"/>
        <function-ref name="stop" scoped="" ref="0x2b67d2a7fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b67d2a7dd98" loc="86:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b67d2a7dd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b67d2a7c170"/>
        <function-ref name="stop" scoped="" ref="0x2b67d2a7c2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b67d2a7c6b8" loc="87:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b67d2a7c6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b67d2a7ca08"/>
        <function-ref name="stop" scoped="" ref="0x2b67d2a7cb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b67d2a904c8" loc="90:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b67d2a904c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b67d2a90818"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b67d2a909a0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b67d2a90b28"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b67d2a90cb0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b67d2a90e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b67d2a8f1a8" loc="91:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b67d2a8f1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b67d2a8f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b67d2a7f020" loc="81:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b67d2a7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b67d2a7f370"/>
        <function-ref name="stop" scoped="" ref="0x2b67d2a7f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b67d2ae71b8" loc="17:MyPowersavingC.nc">
      <component-ref qname="MyPowersavingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b67d2ae71b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b67d2ae7508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2b67d2ae77f8" loc="18:MyPowersavingC.nc">
      <component-ref qname="MyPowersavingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b67d2ae77f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b67d2ae7b48"/>
        <function-ref name="stop" scoped="" ref="0x2b67d2ae7cd0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/homes/hglanzer/GIT/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b67d284c1d8" loc="62:/homes/hglanzer/GIT/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/homes/hglanzer/GIT/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b67d275bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/homes/hglanzer/GIT/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/homes/hglanzer/GIT/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b67d2844e58" loc="60:/homes/hglanzer/GIT/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/homes/hglanzer/GIT/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
      <documentation loc="11:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b67d2852290" loc="60:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="55:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b67d2553378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b67d2553db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b67d2852020" loc="60:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b67d2553db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b67d2856940" loc="31:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="27:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b67d2553378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b67d2855378" loc="39:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="33:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b67d2553db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b67d2553db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b67d2855108" loc="39:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b67d2553db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b67d2855e00" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="41:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b67d2553db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b67d2553db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b67d2855b90" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b67d2553db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b67d2854698" loc="53:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/homes/hglanzer/GIT/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b67d28690d8" loc="44:/homes/hglanzer/GIT/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b67d28697a0" loc="45:/homes/hglanzer/GIT/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b67d27524c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b67d286a328" loc="42:/homes/hglanzer/GIT/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b67d2868570" loc="47:/homes/hglanzer/GIT/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b67d27524c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b67d286a9c8" loc="43:/homes/hglanzer/GIT/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b67d27524c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b67d2869e58" loc="46:/homes/hglanzer/GIT/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b67d286c5a8" loc="40:/homes/hglanzer/GIT/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b67d286cc18" loc="41:/homes/hglanzer/GIT/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/homes/hglanzer/GIT/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/homes/hglanzer/GIT/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b67d27573a0" loc="57:/homes/hglanzer/GIT/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/homes/hglanzer/GIT/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b67d2755290" loc="72:/homes/hglanzer/GIT/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/homes/hglanzer/GIT/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b67d2757ab8" loc="65:/homes/hglanzer/GIT/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/homes/hglanzer/GIT/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b67d27524c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/homes/hglanzer/GIT/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b67d2761070" loc="67:/homes/hglanzer/GIT/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/homes/hglanzer/GIT/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b67d275bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b67d2761860" loc="75:/homes/hglanzer/GIT/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/homes/hglanzer/GIT/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b67d2814450" loc="76:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b67d282ad28" loc="62:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b67d27b01a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b67d28346d8" loc="52:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b67d2a01750" loc="46:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b67d275bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b67d2a014e0" loc="46:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b67d2a005d8" loc="56:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b67d275bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b67d2a00020" loc="56:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b67d2a00358" loc="56:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b67d2a116e0" loc="48:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b67d275bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b67d2553378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b67d2a11140" loc="48:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b67d2a11460" loc="48:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b67d2553378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b67d2a0c030" loc="79:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b67d2a0dd98" loc="79:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b67d2a0cd48" loc="90:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b67d275bae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b67d2553378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b67d2a0c7a8" loc="90:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b67d2a0cac8" loc="90:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b67d2553378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b67d2a10d80" loc="65:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b67d275bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b67d2a0a618" loc="99:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b67d2553378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b67d275bae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b67d2a0bcf0" loc="99:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b67d2a0a060" loc="99:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b67d2553378"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b67d2a0a388" loc="99:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b67d275bae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b67d2a0d638" loc="72:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b67d275bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b67d2a0fe80" loc="57:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b67d2553378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b67d275bae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b67d2a0f5a8" loc="57:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b67d2a0f8c8" loc="57:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b67d2553378"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b67d2a0fbf0" loc="57:/homes/hglanzer/GIT/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b67d275bae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b67d29fe890" loc="57:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b67d29fe890"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b67d29feac0" loc="57:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b67d29feac0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b67d2a1a3a0" loc="64:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b67d29feac0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b67d2a193e0" loc="76:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b67d2a1abb8" loc="71:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b67d27524c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b67d2a19ad0" loc="82:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/homes/hglanzer/GIT/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/homes/hglanzer/GIT/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b67d2a03700" loc="95:/homes/hglanzer/GIT/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/homes/hglanzer/GIT/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b67d275bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b67d2a02020" loc="105:/homes/hglanzer/GIT/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/homes/hglanzer/GIT/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b67d275bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b67d2a1f020" loc="44:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b67d27524c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b67d2a201d8" loc="42:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b67d275bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b67d2a1c670" loc="49:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b67d2a1c400" loc="49:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b67d2a1e6b0" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b67d2a22328" loc="40:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b67d275bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b67d2a22a48" loc="41:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b67d275bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b67d2a208f8" loc="43:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b67d275bae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2b67d2a1f700" loc="45:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b67d27524c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b67d2a1e020" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b67d2a1fd48" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b67d2a1ed60" loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b67d2551910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
