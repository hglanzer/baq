<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="13:MP3TestAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b9aa92b2338"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b9aa8e32220"/></to>
    </wire>
    <wire loc="72:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b9aa8e32220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b9aa8fe2198"/></to>
    </wire>
    <wire loc="14:MP3TestAppC.nc">
      <from><interface-ref name="Button0" scoped="" ref="0x2b9aa92cfb38"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x2b9aa8e62020"/></to>
    </wire>
    <wire loc="151:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b9aa8e62020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b9aa8ee7020"/></to>
    </wire>
    <wire loc="15:MP3TestAppC.nc">
      <from><interface-ref name="Button1" scoped="" ref="0x2b9aa92cee48"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x2b9aa8e611a0"/></to>
    </wire>
    <wire loc="152:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b9aa8e611a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9aa8ef6120"/></to>
    </wire>
    <wire loc="16:MP3TestAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b9aa92cc188"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9aa933d350"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b9aa933d350"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b9aa90f8e30"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:MP3TestAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x2b9aa92c7638"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9aa93378d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b9aa93378d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b9aa90f8e30"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:MP3TestAppC.nc">
      <from><interface-ref name="GLCD" scoped="" ref="0x2b9aa92ea7d0"/></from>
      <to><interface-ref name="GLCD" scoped="" ref="0x2b9aa9353720"/></to>
    </wire>
    <wire loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDC.nc">
      <from><interface-ref name="GLCD" scoped="" ref="0x2b9aa9353720"/></from>
      <to><interface-ref name="GLCD" scoped="" ref="0x2b9aa9349440"/></to>
    </wire>
    <wire loc="19:MP3TestAppC.nc">
      <from><interface-ref name="MMC" scoped="" ref="0x2b9aa92e20f0"/></from>
      <to><interface-ref name="MMC" scoped="" ref="0x2b9aa963faa8"/></to>
    </wire>
    <wire loc="12:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMCC.nc">
      <from><interface-ref name="MMC" scoped="" ref="0x2b9aa963faa8"/></from>
      <to><interface-ref name="MMC" scoped="" ref="0x2b9aa96328e8"/></to>
    </wire>
    <wire loc="20:MP3TestAppC.nc">
      <from><interface-ref name="MP3" scoped="" ref="0x2b9aa92b2950"/></from>
      <to><interface-ref name="MP3" scoped="" ref="0x2b9aa8fe35c0"/></to>
    </wire>
    <wire loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3C.nc">
      <from><interface-ref name="MP3" scoped="" ref="0x2b9aa8fe35c0"/></from>
      <to><interface-ref name="MP3" scoped="" ref="0x2b9aa9001d80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9aa8e31620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9aa9bb5660"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9aa8e31620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9aa9b44aa8"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9aa8e31620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9aa9107768"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9aa8e31620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9aa9a7a1a8"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b9aa8fe27d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b9aa8d3a600"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b9aa8d3a600"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b9aa8df1448"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b9aa8fe11d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9aa8e34620"/></to>
    </wire>
    <wire loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9aa8e34620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9aa8e43600"/></to>
    </wire>
    <wire loc="71:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9aa8fe1898"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b9aa8e31620"/></to>
    </wire>
    <wire loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b9aa8e2f380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9aa9423d48"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b9aa8e37618"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b9aa8fc48f0"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b9aa8e42398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9aa8fc42c0"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b9aa8e43ca0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b9aa8e3cb98"/></to>
    </wire>
    <wire loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b9aa8e3cb98"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b9aa8e46698"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b9aa8e49360"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b9aa8e2f380"/></to>
    </wire>
    <wire loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b9aa8e45b08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b9aa8e49360"/></to>
    </wire>
    <wire loc="191:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b9aa8e8eaf0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa8f67970"/></to>
    </wire>
    <wire loc="165:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b9aa8e70658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9aa8f0e020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9aa8f0e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa98e1100"/></to>
    </wire>
    <wire loc="176:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b9aa8e81658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b9aa8f1dd60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b9aa8f1dd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa9956100"/></to>
    </wire>
    <wire loc="185:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b9aa8e86348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b9aa8f1f5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b9aa8f1f5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa99db100"/></to>
    </wire>
    <wire loc="143:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b9aa8e5c348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9aa8ee5740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9aa8ee5740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa97b7c38"/></to>
    </wire>
    <wire loc="183:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b9aa8e88020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9aa8f212a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9aa8f212a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa99a5100"/></to>
    </wire>
    <wire loc="146:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b9aa8e5a658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9aa8eed930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9aa8eed930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa9833180"/></to>
    </wire>
    <wire loc="157:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b9aa8e6b7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9aa8efc740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9aa8efc740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa989d100"/></to>
    </wire>
    <wire loc="168:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b9aa8e7baf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9aa8f0a430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9aa8f0a430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa990f100"/></to>
    </wire>
    <wire loc="179:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b9aa8e7eaf0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9aa8f19120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9aa8f19120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa994d100"/></to>
    </wire>
    <wire loc="138:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b9aa8e54af0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9aa8eda020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9aa8eda020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa97c6c38"/></to>
    </wire>
    <wire loc="149:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b9aa8e65af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b9aa8eead60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b9aa8eead60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa9829100"/></to>
    </wire>
    <wire loc="160:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b9aa8e68c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b9aa8ef9bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b9aa8ef9bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa9894100"/></to>
    </wire>
    <wire loc="171:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b9aa8e77020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b9aa8f078c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b9aa8f078c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa9906100"/></to>
    </wire>
    <wire loc="188:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b9aa8e837e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9aa8f2ea50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9aa8f2ea50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa99d1100"/></to>
    </wire>
    <wire loc="194:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b9aa8e8a7e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa8f7c020"/></to>
    </wire>
    <wire loc="174:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b9aa8e75348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9aa8f0fa50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9aa8f0fa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa995d100"/></to>
    </wire>
    <wire loc="141:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b9aa8e5e020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9aa8ed7430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9aa8ed7430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa97bdc38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9aa8ef6120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa9820100"/></to>
    </wire>
    <wire loc="192:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b9aa8e8c4d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa8f74ab0"/></to>
    </wire>
    <wire loc="155:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b9aa8e6d4d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9aa8efe500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9aa8efe500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa986e180"/></to>
    </wire>
    <wire loc="166:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b9aa8e6f7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9aa8f0d120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9aa8f0d120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa98de100"/></to>
    </wire>
    <wire loc="177:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b9aa8e807e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9aa8f1ce18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9aa8f1ce18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa9953100"/></to>
    </wire>
    <wire loc="186:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b9aa8e854d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9aa8f30740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9aa8f30740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa99d7100"/></to>
    </wire>
    <wire loc="144:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b9aa8e5b4d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b9aa8ee48c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b9aa8ee48c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa97b4c38"/></to>
    </wire>
    <wire loc="147:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b9aa8e597e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9aa8eeca50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9aa8eeca50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa9830100"/></to>
    </wire>
    <wire loc="158:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b9aa8e6a968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b9aa8efb8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b9aa8efb8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa989a100"/></to>
    </wire>
    <wire loc="169:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b9aa8e7ac78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b9aa8f095b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b9aa8f095b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa990c100"/></to>
    </wire>
    <wire loc="180:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b9aa8e7dc78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b9aa8f182a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b9aa8f182a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa9984100"/></to>
    </wire>
    <wire loc="139:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b9aa8e53c78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9aa8ed9120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9aa8ed9120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa97c3c38"/></to>
    </wire>
    <wire loc="150:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b9aa8e64c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9aa8ee9e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9aa8ee9e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa9826100"/></to>
    </wire>
    <wire loc="161:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b9aa8e67e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9aa8ef7d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9aa8ef7d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa9891100"/></to>
    </wire>
    <wire loc="189:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b9aa8e8f968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b9aa8f2dbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b9aa8f2dbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa99ce100"/></to>
    </wire>
    <wire loc="164:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b9aa8e711a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9aa8f00e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9aa8f00e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa98e4180"/></to>
    </wire>
    <wire loc="175:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b9aa8e824d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9aa8f1ebd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9aa8f1ebd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa995a100"/></to>
    </wire>
    <wire loc="184:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b9aa8e871a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9aa8f20430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9aa8f20430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa99a2100"/></to>
    </wire>
    <wire loc="195:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b9aa8e97968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa8f89180"/></to>
    </wire>
    <wire loc="142:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b9aa8e5d1a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b9aa8ee65b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b9aa8ee65b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa97bac38"/></to>
    </wire>
    <wire loc="153:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b9aa8e60348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b9aa8ef52a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b9aa8ef52a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa981d100"/></to>
    </wire>
    <wire loc="182:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b9aa8e7ce00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9aa8f221e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9aa8f221e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa99a8180"/></to>
    </wire>
    <wire loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b9aa8e6c658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9aa8efd5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9aa8efd5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa98a1100"/></to>
    </wire>
    <wire loc="167:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b9aa8e6e968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b9aa8f0b2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b9aa8f0b2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa98da100"/></to>
    </wire>
    <wire loc="178:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b9aa8e7f968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b9aa8f1a020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b9aa8f1a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa9950100"/></to>
    </wire>
    <wire loc="187:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b9aa8e84658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b9aa8f2f8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b9aa8f2f8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa99d4100"/></to>
    </wire>
    <wire loc="137:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b9aa8e47878"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9aa8edcdc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9aa8edcdc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa97cac38"/></to>
    </wire>
    <wire loc="148:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b9aa8e66968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9aa8eebbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9aa8eebbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa982c100"/></to>
    </wire>
    <wire loc="159:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b9aa8e69af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9aa8efaa50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9aa8efaa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa9897100"/></to>
    </wire>
    <wire loc="170:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b9aa8e79e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9aa8f08740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9aa8f08740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa9909100"/></to>
    </wire>
    <wire loc="193:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b9aa8e8b658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa8f70c38"/></to>
    </wire>
    <wire loc="173:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b9aa8e761a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9aa8f10930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9aa8f10930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa9960180"/></to>
    </wire>
    <wire loc="162:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b9aa8e72020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b9aa8f06e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b9aa8f06e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa988e100"/></to>
    </wire>
    <wire loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b9aa8e52e00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b9aa8ed82a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b9aa8ed82a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa97c0c38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b9aa8ee7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9aa9823100"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b9aa8d3d1c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9aa8df02b0"/></to>
    </wire>
    <wire loc="55:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b9aa8df9758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b9aa8e10660"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b9aa8e162b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b9aa91c0268"/></to>
    </wire>
    <wire loc="16:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3C.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b9aa8ffe578"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9aa90fe420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b9aa90fe420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b9aa90f8e30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3C.nc">
      <from><interface-ref name="CS" scoped="" ref="0x2b9aa8ffb690"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x2b9aa8e70658"/></to>
    </wire>
    <wire loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3C.nc">
      <from><interface-ref name="RST" scoped="" ref="0x2b9aa8ffa810"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x2b9aa8e6f7e0"/></to>
    </wire>
    <wire loc="20:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3C.nc">
      <from><interface-ref name="DREQ" scoped="" ref="0x2b9aa8ff9998"/></from>
      <to><interface-ref name="PortF2" scoped="" ref="0x2b9aa8e871a0"/></to>
    </wire>
    <wire loc="21:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3C.nc">
      <from><interface-ref name="BSYNC" scoped="" ref="0x2b9aa8ff8b28"/></from>
      <to><interface-ref name="PortF3" scoped="" ref="0x2b9aa8e86348"/></to>
    </wire>
    <wire loc="22:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3C.nc">
      <from><interface-ref name="Measure0" scoped="" ref="0x2b9aa8ff7ce0"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x2b9aa8e6c658"/></to>
    </wire>
    <wire loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3C.nc">
      <from><interface-ref name="SPI0" scoped="" ref="0x2b9aa9008020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9aa903cd78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b9aa903cd78"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9aa9048978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3C.nc">
      <from><interface-ref name="SoftSPI0" scoped="" ref="0x2b9aa90015e0"/></from>
      <to><interface-ref name="SoftSPI" scoped="" ref="0x2b9aa903c618"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftSPI" scoped="" ref="0x2b9aa903c618"/></from>
      <to><interface-ref name="SoftSPI" scoped="" ref="0x2b9aa9038c18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9aa9102998"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9aa9047b58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa90469d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa9101120"/></to>
    </wire>
    <wire loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9aa9047b58"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9aa90c9398"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9aa90c9398"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9aa9abe698"/></to>
    </wire>
    <wire loc="22:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <from><interface-ref name="SoftSPI" scoped="" ref="0x2b9aa9038c18"/></from>
      <to><interface-ref name="SoftSPIMaster" scoped="" ref="0x2b9aa9042050"/></to>
    </wire>
    <wire loc="23:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9aa9048978"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9aa90ca670"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b9aa90ca670"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9aa9abf830"/></to>
    </wire>
    <wire loc="25:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa90de020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa90469d0"/></to>
    </wire>
    <wire loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa9053798"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa90c7700"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa90c7700"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa9abd9d8"/></to>
    </wire>
    <wire loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <from><interface-ref name="SoftSPI" scoped="" ref="0x2b9aa90427f8"/></from>
      <to><interface-ref name="SoftSPI" scoped="" ref="0x2b9aa90d7128"/></to>
    </wire>
    <wire loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <from><interface-ref name="spiSCK" scoped="" ref="0x2b9aa90ddad0"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x2b9aa8e6e968"/></to>
    </wire>
    <wire loc="31:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <from><interface-ref name="spiMISO" scoped="" ref="0x2b9aa90d8020"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b9aa8e7baf0"/></to>
    </wire>
    <wire loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <from><interface-ref name="spiMOSI" scoped="" ref="0x2b9aa90dacc0"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x2b9aa8e7ac78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9aa90c9ad8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9aa9abedd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa9abc3e8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa90de020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2b9aa9abcb68"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b9aa9a7a780"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b9aa9ab9020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9aa8d3d1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b9aa90f8e30"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b9aa91044a0"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b9aa91044a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9aa929e020"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9aa9107768"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9aa9110020"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b9aa9114980"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b9aa92afc38"/></to>
    </wire>
    <wire loc="43:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9aa9110020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9aa9228190"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b9aa9298208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9aa9255ab0"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9aa9250c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b9aa910f020"/></to>
    </wire>
    <wire loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b9aa910f020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9aa9228938"/></to>
    </wire>
    <wire loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9aa92a5e48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b9aa911d150"/></to>
    </wire>
    <wire loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b9aa911d150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9aa9224a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b9aa9224a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9aa9aff3d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b9aa9228190"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9aa9ac4ab0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9aa9228938"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9aa9ac3290"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b9aa9afc5a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9aa91a3e00"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9aa91a3e00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9aa91ae180"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b9aa9af74a0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b9aa91b7020"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b9aa91b7020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b9aa91c5160"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2b9aa9af63b0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9aa91b6020"/></to>
    </wire>
    <wire loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b9aa91b6020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9aa91c4190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b9aa9af2510"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b9aa91b2218"/></to>
    </wire>
    <wire loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b9aa91b2218"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b9aa91c0958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2b9aa924ccf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9aa8d3d1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b9aa92b1478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9aa8d3d1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:MP3TestC.nc">
      <from><interface-ref name="readMMCData" scoped="" ref="0x2b9aa92f8568"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9aa8d3d1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:MP3TestC.nc">
      <from><interface-ref name="writeMP3Data" scoped="" ref="0x2b9aa92f6590"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9aa8d3d1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDC.nc">
      <from><interface-ref name="LCD128x64" scoped="" ref="0x2b9aa9375bc8"/></from>
      <to><interface-ref name="LCD128x64" scoped="" ref="0x2b9aa954b900"/></to>
    </wire>
    <wire loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <from><interface-ref name="LCD128x64" scoped="" ref="0x2b9aa954b900"/></from>
      <to><interface-ref name="LCD128x64" scoped="" ref="0x2b9aa956e690"/></to>
    </wire>
    <wire loc="12:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDC.nc">
      <from><interface-ref name="TouchScreen" scoped="" ref="0x2b9aa93637a8"/></from>
      <to><interface-ref name="TouchScreen" scoped="" ref="0x2b9aa93ad5c0"/></to>
    </wire>
    <wire loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="TouchScreen" scoped="" ref="0x2b9aa93ad5c0"/></from>
      <to><interface-ref name="TouchScreen" scoped="" ref="0x2b9aa93c1318"/></to>
    </wire>
    <wire loc="13:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b9aa93c6dd8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b9aa93fbe30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x2b9aa93fbe30"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b9aa93f6b10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b9aa9527420"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b9aa93bd998"/></to>
    </wire>
    <wire loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="driveA" scoped="" ref="0x2b9aa93c74e0"/></from>
      <to><interface-ref name="PortG3" scoped="" ref="0x2b9aa8e8a7e0"/></to>
    </wire>
    <wire loc="16:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="driveB" scoped="" ref="0x2b9aa93c5698"/></from>
      <to><interface-ref name="PortG4" scoped="" ref="0x2b9aa8e97968"/></to>
    </wire>
    <wire loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="adcX" scoped="" ref="0x2b9aa93c4820"/></from>
      <to><interface-ref name="PortF0" scoped="" ref="0x2b9aa8e7ce00"/></to>
    </wire>
    <wire loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <from><interface-ref name="adcY" scoped="" ref="0x2b9aa93c39a8"/></from>
      <to><interface-ref name="PortF1" scoped="" ref="0x2b9aa8e88020"/></to>
    </wire>
    <wire loc="41:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <from><interface-ref name="checkTS" scoped="" ref="0x2b9aa93dc1c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9aa8d3d1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b9aa94143f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b9aa9527420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b9aa9410270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9aa940ed48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa9409890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa9527cc8"/></to>
    </wire>
    <wire loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x2b9aa93f6b10"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b9aa9520680"/></to>
    </wire>
    <wire loc="31:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x2b9aa94117c8"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x2b9aa94f6428"/></to>
    </wire>
    <wire loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9aa952f720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9aa9410270"/></to>
    </wire>
    <wire loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b9aa94f49a0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b9aa94143f0"/></to>
    </wire>
    <wire loc="35:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x2b9aa9530060"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x2b9aa94f96a0"/></to>
    </wire>
    <wire loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b9aa94f5b18"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b9aa940a020"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b9aa940a020"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b9aa941f488"/></to>
    </wire>
    <wire loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b9aa94249b0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b9aa941fde0"/></to>
    </wire>
    <wire loc="66:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9aa940ed48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9aa94cd6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b9aa94cd6b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9aa9b830c8"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa94ca140"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa9409890"/></to>
    </wire>
    <wire loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b9aa9433940"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b9aa9473020"/></to>
    </wire>
    <wire loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b9aa9473020"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b9aa946e1e8"/></to>
    </wire>
    <wire loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b9aa941bd30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b9aa8e37618"/></to>
    </wire>
    <wire loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9aa94c7060"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9aa941dc10"/></to>
    </wire>
    <wire loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9aa94c7d18"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9aa94ccc50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9aa94ccc50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9aa9b81540"/></to>
    </wire>
    <wire loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b9aa946c640"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b9aa8e19a80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9aa94cc510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9aa9b83dc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa94cb888"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa9b80268"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa9b80b08"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa94ca140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2b9aa9b7f2b8"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b9aa9b430c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b9aa9b7d470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9aa8d3d1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9aa9b8e470"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9aa94c7060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b9aa9b8eb90"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b9aa94c7780"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9aa9b8d268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9aa94c7d18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa9b8de20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa94d9908"/></to>
    </wire>
    <wire loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x2b9aa950b4d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9aa8d3d1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="182:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeRectangle" scoped="" ref="0x2b9aa95b0850"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9aa8d3d1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="231:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeString" scoped="" ref="0x2b9aa95c5d70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9aa8d3d1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="198:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeCircle" scoped="" ref="0x2b9aa95a85c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9aa8d3d1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="290:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeLine" scoped="" ref="0x2b9aa95db4d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9aa8d3d1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="wait4Controller" scoped="" ref="0x2b9aa9567d88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9aa8d3d1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="368:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeBar" scoped="" ref="0x2b9aa95efbe0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9aa8d3d1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="259:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="clearScreenNB" scoped="" ref="0x2b9aa95e4d58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9aa8d3d1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMCC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b9aa9637020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b9aa963ab70"/></to>
    </wire>
    <wire loc="94:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b9aa963ab70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b9aa9684080"/></to>
    </wire>
    <wire loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMCC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9aa9637650"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9aa9659e80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMCC.nc">
      <from><interface-ref name="ssMMC" scoped="" ref="0x2b9aa9636380"/></from>
      <to><interface-ref name="PortG1" scoped="" ref="0x2b9aa8e8c4d0"/></to>
    </wire>
    <wire loc="16:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMCC.nc">
      <from><interface-ref name="cdMMC" scoped="" ref="0x2b9aa9634518"/></from>
      <to><interface-ref name="PortG2" scoped="" ref="0x2b9aa8e8b658"/></to>
    </wire>
    <wire loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMCC.nc">
      <from><interface-ref name="ssB0" scoped="" ref="0x2b9aa9633810"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b9aa8e5a658"/></to>
    </wire>
    <wire loc="96:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b9aa96591d8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b9aa9683140"/></to>
    </wire>
    <wire loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9aa963a550"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9aa9660a20"/></to>
    </wire>
    <wire loc="95:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b9aa9661af8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b9aa9684688"/></to>
    </wire>
    <wire loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b9aa9659e80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9aa9683da8"/></to>
    </wire>
    <wire loc="99:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x2b9aa96933c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9aa9766748"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b9aa9766748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b9aa9bb2a28"/></to>
    </wire>
    <wire loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa9692020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa9764c50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa9764c50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa9bb0020"/></to>
    </wire>
    <wire loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2b9aa9695150"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2b9aa96d5100"/></to>
    </wire>
    <wire loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2b9aa96d5100"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2b9aa96cf020"/></to>
    </wire>
    <wire loc="102:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b9aa96927c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b9aa8e19a80"/></to>
    </wire>
    <wire loc="255:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2b9aa96a0ca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9aa8d3d1c8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2b9aa96f7af8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b9aa8e19a80"/></to>
    </wire>
    <wire loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2b9aa96cc508"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b9aa8e5a658"/></to>
    </wire>
    <wire loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2b9aa96fb648"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b9aa8e597e0"/></to>
    </wire>
    <wire loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2b9aa96fa7d0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b9aa8e66968"/></to>
    </wire>
    <wire loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2b9aa96f8958"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b9aa8e65af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b9aa9764510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b9aa9bb1820"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa9bb08c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa9763550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2b9aa9baf0a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b9aa9bb5c38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b9aa9bafb50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9aa8d3d1c8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc" safe="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc" safe="">
      <documentation loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MP3C" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3C.nc">
      <configuration/>
    </component>
    <component qname="MP3P" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3P.nc">
      <documentation loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3P.nc">
        <short>&#10; </short>
        <long>&#10; @author Markus Hartmann e988811@student.tuwien.ac.at&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MP3C.SPI0" loc="7(MP3C.SPI0):/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterC.nc">
      <instance number="0">
        <component-ref qname="SoftSPIMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SoftSPIMasterP" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <configuration/>
    </component>
    <component qname="SoftSPIImplP" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIImplP.nc">
      <module/>
    </component>
    <component qname="SoftSPIMasterP.Arbiter" loc="89(SoftSPIMasterP.Arbiter):/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:SoftSPIMaster.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SoftSPIMasterP.Arbiter.Queue" loc="42(SoftSPIMasterP.Arbiter.Queue):/homes/mhartmann/baq/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SoftSPIMasterP.Arbiter.Arbiter" loc="52(SoftSPIMasterP.Arbiter.Arbiter):/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SoftSPIP" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIP.nc">
      <documentation loc="4:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPI.h">
        <short>****************************************&#10; Check SoftSPIC.nc for correct PIN/PORT *&#10;*****************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="MP3C.Timer0" loc="44(MP3C.Timer0):/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="33:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b9aa912f068"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0SyncC" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0SyncP" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in SYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in SYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in SYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;--> CHANGED TO SYNC-Mode(CPL_CLK)&#9;hglanzer&#10;--> AS0=0 in ASSR&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MP3TestC" loc="1:MP3TestC.nc">
      <module/>
    </component>
    <component qname="MP3TestAppC.Timer0" loc="44(MP3TestAppC.Timer0):/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MP3TestAppC.Timer1" loc="44(MP3TestAppC.Timer1):/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="GLCDC" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDC.nc">
      <configuration/>
    </component>
    <component qname="GLCDP" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDP.nc">
      <module/>
    </component>
    <component qname="TouchScreenC" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <configuration/>
    </component>
    <component qname="TouchScreenP" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <module/>
    </component>
    <component qname="TouchScreenC.AdcReadClientC" loc="21(TouchScreenC.AdcReadClientC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LCD128x64C" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <configuration/>
    </component>
    <component qname="LCD128x64P" loc="23:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <module/>
    </component>
    <component qname="MMCC" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMCC.nc">
      <configuration/>
    </component>
    <component qname="MMCP" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMCP.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/homes/mhartmann/baq/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/homes/mhartmann/baq/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/homes/mhartmann/baq/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/homes/mhartmann/baq/tinyos/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b9aa8e94ba0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b9aa8e9e020" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b9aa8e9e368" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b9aa8ea2610" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b9aa8ea2978" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b9aa8ea2ce0" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b9aa8e9f060" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b9aa8f36020" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b9aa8f36388" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b9aa8f366f0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b9aa8f36a20" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SoftSPIMasterC" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b9aa9044b48" loc="89:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/homes/mhartmann/baq/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b9aa9056510" loc="42:/homes/mhartmann/baq/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b9aa907ea90" loc="52:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncC" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc" abstract="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b9aa912f068" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b9aa912f068"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b9aa912f358" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncP" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b9aa9140748" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b9aa9140748"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b9aa9140a38" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9aa9111c68" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9aa9111c68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9aa924acd0" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9aa924acd0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b9aa9264020" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9aa92ad510" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9aa92ad510"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b9aa94adb08" loc="89:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x2b9aa94a1060" loc="42:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x2b9aa951f370" loc="23:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x2b9aa951f370"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/homes/mhartmann/baq/tinyos/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/homes/mhartmann/baq/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b9aa9740578" loc="83:/homes/mhartmann/baq/tinyos/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/homes/mhartmann/baq/tinyos/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b9aa8e31620" loc="58:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b9aa8e31620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa8e31970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b9aa8e32220" loc="57:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b9aa8e32220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b9aa8e32570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b9aa8e2f380" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b9aa8e2f380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa8e2f6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9aa8e34620" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9aa8e34620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa8e34970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b9aa8e37618" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b9aa8e37618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b9aa8e37968"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b9aa8e37af0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b9aa8e37c78"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b9aa8e37e00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b9aa8e2f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b9aa8e43ca0" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b9aa8e43ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa8e42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9aa8e43600" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9aa8e43600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa8e43950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b9aa8e42398" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b9aa8e42398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa8e426e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b9aa8e49360" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b9aa8e49360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa8e496b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b9aa8e3cb98" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b9aa8e3cb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa8e49020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b9aa8e45b08" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b9aa8e45b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa8e45e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b9aa8e4d8d8" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b9aa8e4d8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e4dc28"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e4ddb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e45020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e451a8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e45330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e454b8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e45640"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e457c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b9aa8e46698" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b9aa8e46698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa8e469e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b9aa8e8eaf0" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b9aa8e8eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e8d5e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e8d770"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e8d8f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e8da80"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e8dc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e8dd90"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e8c020"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e8c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b9aa8e70658" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b9aa8e70658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e709a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e70b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e70cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e70e40"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e6f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e6f1a8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e6f330"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e6f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b9aa8e81658" loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b9aa8e81658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e819a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e81b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e81cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e81e40"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e80020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e801a8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e80330"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e804b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b9aa8e86348" loc="94:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b9aa8e86348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e86698"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e86820"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e869a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e86b30"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e86cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e86e40"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e85020"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e851a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b9aa8e5c348" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b9aa8e5c348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e5c698"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e5c820"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e5c9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e5cb30"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e5ccb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e5ce40"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e5b020"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e5b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b9aa8e88020" loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b9aa8e88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e88370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e884f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e88680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e88808"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e88990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e88b18"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e88ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e88e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b9aa8e5a658" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b9aa8e5a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e5a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e5ab30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e5acb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e5ae40"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e59020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e591a8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e59330"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e594b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b9aa8e6b7e0" loc="66:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b9aa8e6b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e6bb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e6bcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e6be40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e6a020"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e6a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e6a330"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e6a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e6a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b9aa8e7baf0" loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b9aa8e7baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e7be40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e7a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e7a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e7a330"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e7a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e7a640"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e7a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e7a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b9aa8e7eaf0" loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b9aa8e7eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e7ee40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e7d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e7d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e7d330"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e7d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e7d640"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e7d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e7d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b9aa8e54af0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b9aa8e54af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e54e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e53020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e531a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e53330"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e534b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e53640"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e537c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e53950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b9aa8e65af0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b9aa8e65af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e65e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e64020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e641a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e64330"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e644b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e64640"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e647c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e64950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b9aa8e68c78" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b9aa8e68c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e67020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e671a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e67330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e674b8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e67640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e677c8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e67950"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e67ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b9aa8e77020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b9aa8e77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e77370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e774f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e77680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e77808"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e77990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e77b18"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e77ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e77e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b9aa8e837e0" loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b9aa8e837e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e83b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e83cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e83e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e8f020"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e8f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e8f330"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e8f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e8f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b9aa8e8a7e0" loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b9aa8e8a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e8ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e8acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e8ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e97020"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e971a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e97330"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e974b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e97640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b9aa8e75348" loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b9aa8e75348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e75698"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e75820"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e759a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e75b30"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e75cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e75e40"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e82020"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e821a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b9aa8e5e020" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b9aa8e5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e5e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e5e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e5e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e5e808"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e5e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e5eb18"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e5eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e5ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b9aa8e611a0" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b9aa8e611a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e614f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e61678"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e61800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e61988"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e61b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e61c98"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e61e20"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e60020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b9aa8e8c4d0" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b9aa8e8c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e8c820"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e8c9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e8cb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e8ccb8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e8ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e8b020"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e8b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e8b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b9aa8e6d4d0" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b9aa8e6d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e6d820"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e6d9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e6db30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e6dcb8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e6de40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e6c020"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e6c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e6c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b9aa8e6f7e0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b9aa8e6f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e6fb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e6fcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e6fe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e6e020"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e6e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e6e330"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e6e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e6e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b9aa8e807e0" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b9aa8e807e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e80b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e80cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e80e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e7f020"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e7f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e7f330"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e7f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e7f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b9aa8e854d0" loc="95:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b9aa8e854d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e85820"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e859a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e85b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e85cb8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e85e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e84020"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e841a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e84330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b9aa8e5b4d0" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b9aa8e5b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e5b820"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e5b9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e5bb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e5bcb8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e5be40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e5a020"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e5a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e5a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b9aa8e597e0" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b9aa8e597e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e59b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e59cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e59e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e66020"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e661a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e66330"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e664b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e66640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b9aa8e6a968" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b9aa8e6a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e6acb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e6ae40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e69020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e691a8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e69330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e694b8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e69640"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e697c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b9aa8e7ac78" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b9aa8e7ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e79020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e791a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e79330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e794b8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e79640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e797c8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e79950"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e79ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b9aa8e7dc78" loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b9aa8e7dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e7c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e7c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e7c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e7c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e7c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e7c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e7c950"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e7cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b9aa8e53c78" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b9aa8e53c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e52020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e521a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e52330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e524b8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e52640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e527c8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e52950"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e52ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b9aa8e64c78" loc="59:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b9aa8e64c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e630f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e63278"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e63400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e63588"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e63710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e63898"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e63a20"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e63ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b9aa8e67e00" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b9aa8e67e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e741a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e74330"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e744b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e74640"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e747c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e74950"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e74ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e74c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b9aa8e8f968" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b9aa8e8f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e8fcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e8fe40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e8e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e8e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e8e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e8e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e8e640"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e8e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b9aa8e711a0" loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b9aa8e711a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e716f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e71878"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e71a00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e71b88"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e71d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e70020"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e701a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e70330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b9aa8e824d0" loc="84:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b9aa8e824d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e82820"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e829a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e82b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e82cb8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e82e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e81020"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e811a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e81330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b9aa8e871a0" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b9aa8e871a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e874f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e87678"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e87800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e87988"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e87b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e87c98"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e87e20"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b9aa8e97968" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b9aa8e97968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e97cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e97e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e96020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e961a8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e96330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e964b8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e96640"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e967c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b9aa8e5d1a0" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b9aa8e5d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e5d4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e5d678"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e5d800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e5d988"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e5db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e5dc98"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e5de20"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b9aa8e60348" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b9aa8e60348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e60698"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e60820"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e609a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e60b30"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e60cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e60e40"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e6d020"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e6d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b9aa8e7ce00" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b9aa8e7ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e891a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e89330"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e894b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e89640"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e897c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e89950"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e89ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e89c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b9aa8e6c658" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b9aa8e6c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e6c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e6cb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e6ccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e6ce40"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e6b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e6b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e6b330"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e6b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b9aa8e6e968" loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b9aa8e6e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e6ecb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e6ee40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e7b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e7b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e7b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e7b4b8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e7b640"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e7b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b9aa8e7f968" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b9aa8e7f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e7fcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e7fe40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e7e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e7e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e7e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e7e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e7e640"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e7e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b9aa8e84658" loc="96:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b9aa8e84658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e849a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e84b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e84cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e84e40"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e83020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e831a8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e83330"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e834b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b9aa8e47878" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b9aa8e47878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e47bc8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e47d50"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e54020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e541a8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e54330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e544b8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e54640"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e547c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b9aa8e66968" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b9aa8e66968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e66cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e66e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e65020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e651a8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e65330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e654b8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e65640"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e657c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b9aa8e69af0" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b9aa8e69af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e69e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e68020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e681a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e68330"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e684b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e68640"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e687c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e68950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b9aa8e79e00" loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b9aa8e79e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e781a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e78330"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e784b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e78640"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e787c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e78950"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e78ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e78c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b9aa8e8b658" loc="102:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b9aa8e8b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e8b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e8bb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e8bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e8be40"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e8a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e8a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e8a330"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e8a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b9aa8e761a0" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b9aa8e761a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e764f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e76678"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e76800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e76988"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e76b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e76c98"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e76e20"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b9aa8e72020" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b9aa8e72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e72370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e724f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e72680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e72808"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e72990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e72b18"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e72ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e72e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b9aa8e52e00" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b9aa8e52e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e5f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e5f330"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e5f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e5f640"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e5f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e5f950"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e5fad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e5fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b9aa8e62020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b9aa8e62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8e62370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8e624f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8e62680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8e62808"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8e62990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8e62b18"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8e62ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8e62e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9aa8ed9120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9aa8ed9120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8ed9470"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8ed95f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8ed9780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8ed9908"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8ed9a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8ed9c18"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8ed9da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8ed8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b9aa8ee65b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b9aa8ee65b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8ee6908"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8ee6a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8ee6c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8ee6da0"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8ee5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8ee51a8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8ee5330"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8ee54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9aa8edcdc0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9aa8edcdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8edb170"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8edb2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8edb480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8edb608"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8edb790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8edb918"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8edbaa0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8edbc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b9aa8ed82a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b9aa8ed82a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8ed85f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8ed8780"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8ed8908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8ed8a90"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8ed8c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8ed8da0"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8ed7020"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8ed71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9aa8ee5740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9aa8ee5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8ee5a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8ee5c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8ee5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8ee4020"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8ee41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8ee4330"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8ee44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8ee4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9aa8eda020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9aa8eda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8eda370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8eda4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8eda680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8eda808"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8eda990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8edab18"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8edaca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8edae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9aa8ed7430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9aa8ed7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8ed7780"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8ed7908"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8ed7a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8ed7c18"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8ed7da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8ee6020"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8ee61a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8ee6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b9aa8ee48c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b9aa8ee48c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8ee4c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8ee4da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8ee3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8ee31a8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8ee3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8ee34b8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8ee3640"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8ee37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa97cac38" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa97cac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa97c8020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa97c81a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa97c8330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa97c84b8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa97c8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa97c87c8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa97c8950"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa97c8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa97c6c38" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa97c6c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa97c5020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa97c51a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa97c5330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa97c54b8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa97c5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa97c57c8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa97c5950"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa97c5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa97c3c38" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa97c3c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa97c2020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa97c21a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa97c2330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa97c24b8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa97c2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa97c27c8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa97c2950"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa97c2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa97c0c38" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa97c0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa97bf020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa97bf1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa97bf330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa97bf4b8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa97bf640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa97bf7c8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa97bf950"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa97bfad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa97bdc38" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa97bdc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa97bc020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa97bc1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa97bc330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa97bc4b8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa97bc640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa97bc7c8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa97bc950"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa97bcad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa97bac38" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa97bac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa97b9020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa97b91a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa97b9330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa97b94b8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa97b9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa97b97c8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa97b9950"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa97b9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa97b7c38" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa97b7c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa97b6020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa97b61a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa97b6330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa97b64b8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa97b6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa97b67c8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa97b6950"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa97b6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa97b4c38" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa97b4c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa97b3020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa97b31a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa97b3330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa97b34b8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa97b3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa97b37c8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa97b3950"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa97b3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9aa8eebbd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9aa8eebbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8eea020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8eea1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8eea330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8eea4b8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8eea640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8eea7c8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8eea950"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8eeaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b9aa8ee7020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b9aa8ee7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8ee7370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8ee74f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8ee7680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8ee7808"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8ee7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8ee7b18"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8ee7ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8ee7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9aa8eed930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9aa8eed930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8eedc80"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8eede08"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8eec020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8eec1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8eec330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8eec4b8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8eec640"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8eec7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b9aa8eead60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b9aa8eead60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8ee90d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8ee9260"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8ee93e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8ee9570"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8ee96f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8ee9880"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8ee9a08"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8ee9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9aa8ef6120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9aa8ef6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8ef6470"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8ef65f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8ef6780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8ef6908"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8ef6a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8ef6c18"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8ef6da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8ef5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9aa8eeca50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9aa8eeca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8eecda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8eeb020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8eeb1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8eeb330"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8eeb4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8eeb640"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8eeb7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8eeb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9aa8ee9e18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9aa8ee9e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8ee81a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8ee8330"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8ee84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8ee8640"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8ee87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8ee8950"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8ee8ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8ee8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b9aa8ef52a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b9aa8ef52a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8ef55f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8ef5780"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8ef5908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8ef5a90"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8ef5c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8ef5da0"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8ef4020"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8ef41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa9833180" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa9833180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa98334d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa9833658"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa98337e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa9833968"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9833af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa9833c78"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9833e00"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa9832020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa9830100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa9830100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa9830450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa98305d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa9830760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa98308e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9830a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa9830bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9830d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa982e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa982c100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa982c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa982c450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa982c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa982c760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa982c8e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa982ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa982cbf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa982cd80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa982b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa9829100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa9829100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa9829450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa98295d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa9829760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa98298e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9829a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa9829bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9829d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa9828020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa9826100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa9826100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa9826450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa98265d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa9826760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa98268e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9826a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa9826bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9826d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa9825020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa9823100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa9823100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa9823450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa98235d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa9823760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa98238e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9823a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa9823bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9823d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa9822020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa9820100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa9820100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa9820450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa98205d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa9820760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa98208e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9820a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa9820bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9820d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa981f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa981d100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa981d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa981d450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa981d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa981d760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa981d8e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa981da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa981dbf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa981dd80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa981c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9aa8efc740" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9aa8efc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8efca90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8efcc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8efcda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8efb020"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8efb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8efb330"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8efb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8efb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b9aa8ef9bd8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b9aa8ef9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8ef7020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8ef71a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8ef7330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8ef74b8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8ef7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8ef77c8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8ef7950"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8ef7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9aa8efe500" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9aa8efe500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8efe850"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8efe9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8efeb60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8efece8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8efee70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8efd020"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8efd1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8efd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b9aa8efb8c8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b9aa8efb8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8efbc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8efbda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8efa020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8efa1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8efa330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8efa4b8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8efa640"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8efa7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9aa8ef7d60" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9aa8ef7d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f060d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f06260"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f063e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f06570"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f066f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f06880"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f06a08"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f06b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9aa8efd5b8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9aa8efd5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8efd908"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8efda90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8efdc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8efdda0"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8efc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8efc1a8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8efc330"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8efc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9aa8efaa50" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9aa8efaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8efada0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8ef9020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8ef91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8ef9330"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8ef94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8ef9640"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8ef97c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8ef9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b9aa8f06e18" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b9aa8f06e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f051a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f05330"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f054b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f05640"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f057c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f05950"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f05ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f05c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa986e180" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa986e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa986e4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa986e658"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa986e7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa986e968"/>
        <function-ref name="get" scoped="" ref="0x2b9aa986eaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa986ec78"/>
        <function-ref name="set" scoped="" ref="0x2b9aa986ee00"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa986d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa98a1100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa98a1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa98a1450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa98a15d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa98a1760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa98a18e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa98a1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa98a1bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa98a1d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa989f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa989d100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa989d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa989d450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa989d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa989d760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa989d8e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa989da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa989dbf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa989dd80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa989c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa989a100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa989a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa989a450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa989a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa989a760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa989a8e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa989aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa989abf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa989ad80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa9899020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa9897100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa9897100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa9897450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa98975d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa9897760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa98978e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9897a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa9897bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9897d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa9896020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa9894100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa9894100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa9894450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa98945d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa9894760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa98948e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9894a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa9894bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9894d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa9893020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa9891100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa9891100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa9891450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa98915d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa9891760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa98918e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9891a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa9891bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9891d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa9890020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa988e100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa988e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa988e450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa988e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa988e760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa988e8e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa988ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa988ebf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa988ed80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa988d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9aa8f0d120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9aa8f0d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f0d470"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f0d5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f0d780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f0d908"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f0da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f0dc18"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f0dda0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b9aa8f095b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b9aa8f095b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f09908"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f09a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f09c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f09da0"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f08020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f081a8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f08330"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f084b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9aa8f00e40" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9aa8f00e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8eff1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8eff348"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8eff4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8eff658"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8eff7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8eff968"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8effaf0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8effc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b9aa8f0b2a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b9aa8f0b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f0b5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f0b780"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f0b908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f0ba90"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f0bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f0bda0"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f0a020"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f0a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9aa8f08740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9aa8f08740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f08a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f08c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f08da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f07020"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f071a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f07330"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f074b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f07640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9aa8f0e020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9aa8f0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f0e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f0e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f0e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f0e808"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f0e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f0eb18"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f0eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f0ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9aa8f0a430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9aa8f0a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f0a780"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f0a908"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f0aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f0ac18"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f0ada0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f09020"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f091a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f09330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b9aa8f078c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b9aa8f078c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f07c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f07da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f16020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f161a8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f16330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f164b8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f16640"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f167c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa98e4180" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa98e4180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa98e44d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa98e4658"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa98e47e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa98e4968"/>
        <function-ref name="get" scoped="" ref="0x2b9aa98e4af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa98e4c78"/>
        <function-ref name="set" scoped="" ref="0x2b9aa98e4e00"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa98e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa98e1100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa98e1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa98e1450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa98e15d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa98e1760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa98e18e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa98e1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa98e1bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa98e1d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa98e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa98de100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa98de100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa98de450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa98de5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa98de760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa98de8e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa98dea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa98debf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa98ded80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa98dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa98da100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa98da100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa98da450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa98da5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa98da760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa98da8e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa98daa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa98dabf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa98dad80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa9911020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa990f100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa990f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa990f450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa990f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa990f760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa990f8e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa990fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa990fbf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa990fd80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa990e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa990c100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa990c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa990c450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa990c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa990c760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa990c8e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa990ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa990cbf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa990cd80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa990b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa9909100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa9909100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa9909450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa99095d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa9909760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa99098e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9909a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa9909bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9909d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa9908020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa9906100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa9906100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa9906450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa99065d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa9906760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa99068e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9906a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa9906bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9906d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa9905020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9aa8f1ebd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9aa8f1ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f1d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f1d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f1d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f1d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f1d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f1d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f1d950"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f1dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b9aa8f1a020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b9aa8f1a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f1a370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f1a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f1a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f1a808"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f1a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f1ab18"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f1aca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f1ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9aa8f10930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9aa8f10930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f10c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f10e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f0f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f0f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f0f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f0f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f0f640"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f0f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b9aa8f1dd60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b9aa8f1dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f1c0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f1c260"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f1c3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f1c570"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f1c6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f1c880"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f1ca08"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f1cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9aa8f19120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9aa8f19120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f19470"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f195f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f19780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f19908"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f19a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f19c18"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f19da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9aa8f0fa50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9aa8f0fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f0fda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f1e020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f1e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f1e330"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f1e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f1e640"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f1e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f1e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9aa8f1ce18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9aa8f1ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f1b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f1b330"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f1b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f1b640"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f1b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f1b950"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f1bad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f1bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b9aa8f182a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b9aa8f182a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f185f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f18780"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f18908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f18a90"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f18c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f18da0"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f17020"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f171a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa9960180" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa9960180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa99604d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa9960658"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa99607e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa9960968"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9960af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa9960c78"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9960e00"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa995f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa995d100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa995d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa995d450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa995d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa995d760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa995d8e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa995da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa995dbf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa995dd80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa995c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa995a100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa995a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa995a450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa995a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa995a760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa995a8e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa995aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa995abf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa995ad80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa9958020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa9956100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa9956100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa9956450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa99565d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa9956760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa99568e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9956a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa9956bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9956d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa9955020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa9953100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa9953100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa9953450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa99535d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa9953760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa99538e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9953a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa9953bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9953d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa9952020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa9950100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa9950100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa9950450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa99505d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa9950760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa99508e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9950a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa9950bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9950d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa994f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa994d100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa994d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa994d450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa994d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa994d760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa994d8e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa994da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa994dbf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa994dd80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa994c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa9984100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa9984100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa9984450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa99845d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa9984760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa99848e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9984a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa9984bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9984d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa9983020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9aa8f20430" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9aa8f20430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f20780"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f20908"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f20a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f20c18"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f20da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f1f020"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f1f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f1f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b9aa8f2f8c8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b9aa8f2f8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f2fc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f2fda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f2e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f2e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f2e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f2e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f2e640"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f2e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9aa8f221e8" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9aa8f221e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f22538"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f226c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f22848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f229d0"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f22b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f22ce0"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f22e68"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f21020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b9aa8f1f5b8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b9aa8f1f5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f1f908"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f1fa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f1fc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f1fda0"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f30020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f301a8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f30330"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f304b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9aa8f2ea50" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9aa8f2ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f2eda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f2d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f2d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f2d330"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f2d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f2d640"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f2d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f2d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9aa8f212a8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9aa8f212a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f215f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f21780"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f21908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f21a90"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f21c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f21da0"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f20020"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9aa8f30740" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9aa8f30740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f30a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f30c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f30da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f2f020"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f2f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f2f330"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f2f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f2f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b9aa8f2dbd8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b9aa8f2dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f2b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f2b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f2b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f2b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f2b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f2b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f2b950"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f2bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa99a8180" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa99a8180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa99a84d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa99a8658"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa99a87e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa99a8968"/>
        <function-ref name="get" scoped="" ref="0x2b9aa99a8af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa99a8c78"/>
        <function-ref name="set" scoped="" ref="0x2b9aa99a8e00"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa99a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa99a5100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa99a5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa99a5450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa99a55d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa99a5760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa99a58e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa99a5a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa99a5bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa99a5d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa99a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa99a2100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa99a2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa99a2450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa99a25d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa99a2760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa99a28e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa99a2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa99a2bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa99a2d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa99dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa99db100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa99db100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa99db450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa99db5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa99db760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa99db8e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa99dba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa99dbbf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa99dbd80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa99d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa99d7100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa99d7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa99d7450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa99d75d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa99d7760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa99d78e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa99d7a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa99d7bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa99d7d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa99d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa99d4100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa99d4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa99d4450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa99d45d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa99d4760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa99d48e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa99d4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa99d4bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa99d4d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa99d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa99d1100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa99d1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa99d1450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa99d15d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa99d1760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa99d18e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa99d1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa99d1bf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa99d1d80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa99d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa99ce100" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa99ce100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa99ce450"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa99ce5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa99ce760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa99ce8e8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa99cea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa99cebf8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa99ced80"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa99cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa8f37ac0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa8f37ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f37e10"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f45020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f451a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f45330"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f454b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f45640"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f457c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f45950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa8f54db8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa8f54db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f53170"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f532f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f53480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f53608"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f53790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f53918"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f53aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f53c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa8f4e3e0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa8f4e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f4e730"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f4e8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f4ea40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f4ebc8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f4ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f4d020"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f4d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f4d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa8f5b7e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa8f5b7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f5bb38"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f5bcc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f5be48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f5a020"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f5a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f5a330"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f5a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f5a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa8f57c38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa8f57c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f56020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f561a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f56330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f564b8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f56640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f567c8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f56950"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f56ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa8f63020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa8f63020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f63370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f634f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f63680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f63808"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f63990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f63b18"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f63ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f63e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa8f5e480" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa8f5e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f5e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f5e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f5eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f5ec68"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f5edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f6f020"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f6f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f6f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa8f6c7e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa8f6c7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f6cb38"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f6ccc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f6ce48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f6b020"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f6b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f6b330"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f6b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f6b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa8f67970" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa8f67970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f67cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f67e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f78020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f781a8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f78330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f784b8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f78640"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f787c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa8f74ab0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa8f74ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f74e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f73020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f731a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f73330"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f734b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f73640"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f737c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f73950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa8f70c38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa8f70c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f81020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f811a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f81330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f814b8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f81640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f817c8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f81950"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f81ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa8f7c020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa8f7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f7c370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f7c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f7c680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f7c808"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f7c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f7cb18"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f7cca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f7ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9aa8f89180" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9aa8f89180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8f894d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8f89658"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8f897e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8f89968"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8f89af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8f89c78"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8f89e00"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8f88020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9aa8fc42c0" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9aa8fc42c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b9aa8d35128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b9aa8d35128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa8fc4610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b9aa8fc48f0" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b9aa8fc48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b9aa8fc4c40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b9aa8fc4dc8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b9aa8fc3020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b9aa8fc31a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b9aa8fc3330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b9aa8fe1898" loc="60:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b9aa8fe1898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa8fe1be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b9aa8fe2198" loc="57:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b9aa8fe2198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b9aa8fe24e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b9aa8fe11d0" loc="59:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b9aa8fe11d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa8fe1520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b9aa8fe27d0" loc="58:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b9aa8fe27d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa8fe2b20"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b9aa8fe2ca8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b9aa8fe2e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b9aa8d3d1c8" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b9aa8d3d1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9aa8d3d518"/>
        <function-ref name="runTask" scoped="" ref="0x2b9aa8d3d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b9aa8d3a600" loc="47:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b9aa8d3a600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa8d3a950"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b9aa8d3aad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b9aa8d3ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b9aa8df02b0" loc="56:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b9aa8df02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9aa8df0600"/>
        <function-ref name="runTask" scoped="" ref="0x2b9aa8df0788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b9aa8df9758" loc="57:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b9aa8df9758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b9aa8df9aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b9aa8df1448" loc="55:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b9aa8df1448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa8df1798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b9aa8df1920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b9aa8df1aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b9aa8e162b0" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b9aa8e162b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b9aa8e16600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b9aa8e10660" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b9aa8e10660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b9aa8e109b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b9aa8e19a80" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b9aa8e19a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b9aa8e19dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MP3" ref="0x2b9aa8fe35c0" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3C.nc">
      <component-ref qname="MP3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MP3" scoped="" ref="0x2b9aa8fe35c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MP3"/>
      </instance>
      <interface-functions>
        <function-ref name="writeRegister" scoped="" ref="0x2b9aa8fe3910"/>
        <function-ref name="init" scoped="" ref="0x2b9aa8fe3a98"/>
        <function-ref name="writeData" scoped="" ref="0x2b9aa8fe3c20"/>
        <function-ref name="setVolume" scoped="" ref="0x2b9aa8fe3da8"/>
        <function-ref name="isReady" scoped="" ref="0x2b9aa8fea020"/>
        <function-ref name="sineTestStop" scoped="" ref="0x2b9aa8fea1a8"/>
        <function-ref name="sineTestStart" scoped="" ref="0x2b9aa8fea330"/>
        <function-ref name="readRegister" scoped="" ref="0x2b9aa8fea4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b9aa8ffe578" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3P.nc">
      <component-ref qname="MP3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b9aa8ffe578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9aa8ffc8f0"/>
        <function-ref name="fired" scoped="" ref="0x2b9aa8ff3020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9aa8ff3d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9aa8ff38c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9aa8ffb1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b9aa8ffcd40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9aa8ff3470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9aa8ff40f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9aa8ffc320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9aa8ff4598"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa8ff4a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DREQ" ref="0x2b9aa8ff9998" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3P.nc">
      <component-ref qname="MP3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DREQ" scoped="" ref="0x2b9aa8ff9998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8ff9ce8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8ff9e70"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8ff8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8ff81a8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8ff8330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8ff84b8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8ff8640"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8ff87c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RST" ref="0x2b9aa8ffa810" loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3P.nc">
      <component-ref qname="MP3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RST" scoped="" ref="0x2b9aa8ffa810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8ffab60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8fface8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8ffae70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8ff9020"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8ff91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8ff9330"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8ff94b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8ff9640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPI0" ref="0x2b9aa9008020" loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3P.nc">
      <component-ref qname="MP3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI0" scoped="" ref="0x2b9aa9008020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa9008370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9aa90084f8"/>
        <function-ref name="request" scoped="" ref="0x2b9aa9008680"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa9008808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa9008990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS" ref="0x2b9aa8ffb690" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3P.nc">
      <component-ref qname="MP3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS" scoped="" ref="0x2b9aa8ffb690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8ffb9e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8ffbb68"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8ffbcf0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8ffbe78"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8ffa030"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8ffa1b8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8ffa340"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8ffa4c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MP3" ref="0x2b9aa9001d80" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3P.nc">
      <component-ref qname="MP3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MP3" scoped="" ref="0x2b9aa9001d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MP3"/>
      </instance>
      <interface-functions>
        <function-ref name="writeRegister" scoped="" ref="0x2b9aa9007170"/>
        <function-ref name="init" scoped="" ref="0x2b9aa90072f8"/>
        <function-ref name="writeData" scoped="" ref="0x2b9aa9007480"/>
        <function-ref name="setVolume" scoped="" ref="0x2b9aa9007608"/>
        <function-ref name="isReady" scoped="" ref="0x2b9aa9007790"/>
        <function-ref name="sineTestStop" scoped="" ref="0x2b9aa9007918"/>
        <function-ref name="sineTestStart" scoped="" ref="0x2b9aa9007aa0"/>
        <function-ref name="readRegister" scoped="" ref="0x2b9aa9007c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftSPI0" ref="0x2b9aa90015e0" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3P.nc">
      <component-ref qname="MP3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftSPI0" scoped="" ref="0x2b9aa90015e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftSPI"/>
      </instance>
      <interface-functions>
        <function-ref name="receiveByte" scoped="" ref="0x2b9aa9001930"/>
        <function-ref name="sendByte" scoped="" ref="0x2b9aa9001ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Measure0" ref="0x2b9aa8ff7ce0" loc="12:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3P.nc">
      <component-ref qname="MP3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Measure0" scoped="" ref="0x2b9aa8ff7ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa900a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa900a228"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa900a3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa900a538"/>
        <function-ref name="get" scoped="" ref="0x2b9aa900a6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa900a848"/>
        <function-ref name="set" scoped="" ref="0x2b9aa900a9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa900ab58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BSYNC" ref="0x2b9aa8ff8b28" loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3P.nc">
      <component-ref qname="MP3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BSYNC" scoped="" ref="0x2b9aa8ff8b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa8ff8e78"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa8ff7030"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa8ff71b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa8ff7340"/>
        <function-ref name="get" scoped="" ref="0x2b9aa8ff74c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa8ff7650"/>
        <function-ref name="set" scoped="" ref="0x2b9aa8ff77d8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa8ff7960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9aa9102998" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterC.nc">
      <component-ref qname="MP3C.SPI0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9aa9102998"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9aa9102ce8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9aa9102e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9aa9101120" loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterC.nc">
      <component-ref qname="MP3C.SPI0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa9101120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9aa9101470"/>
        <function-ref name="configure" scoped="" ref="0x2b9aa91015f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftSPI" ref="0x2b9aa903c618" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterC.nc">
      <component-ref qname="MP3C.SPI0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftSPI" scoped="" ref="0x2b9aa903c618"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftSPI"/>
      </instance>
      <interface-functions>
        <function-ref name="receiveByte" scoped="" ref="0x2b9aa903c968"/>
        <function-ref name="sendByte" scoped="" ref="0x2b9aa903caf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9aa903cd78" loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterC.nc">
      <component-ref qname="MP3C.SPI0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b9aa903cd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa91020f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9aa9102278"/>
        <function-ref name="request" scoped="" ref="0x2b9aa9102400"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa9102588"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa9102710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9aa9047b58" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <component-ref qname="SoftSPIMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9aa9047b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9aa9046020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9aa90461a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9aa90469d0" loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <component-ref qname="SoftSPIMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa90469d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9aa9046d20"/>
        <function-ref name="configure" scoped="" ref="0x2b9aa9045020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftSPI" ref="0x2b9aa9038c18" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <component-ref qname="SoftSPIMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftSPI" scoped="" ref="0x2b9aa9038c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftSPI"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receiveByte" scoped="" ref="0x2b9aa9048020"/>
        <function-ref name="sendByte" scoped="" ref="0x2b9aa90481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9aa9048978" loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <component-ref qname="SoftSPIMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b9aa9048978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa9048cc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9aa9048e50"/>
        <function-ref name="request" scoped="" ref="0x2b9aa9047020"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa90471a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa9047330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftSPIMaster" ref="0x2b9aa9042050" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIImplP.nc">
      <component-ref qname="SoftSPIImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftSPIMaster" scoped="" ref="0x2b9aa9042050"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftSPI"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receiveByte" scoped="" ref="0x2b9aa90423a0"/>
        <function-ref name="sendByte" scoped="" ref="0x2b9aa9042528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftSPI" ref="0x2b9aa90427f8" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIImplP.nc">
      <component-ref qname="SoftSPIImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftSPI" scoped="" ref="0x2b9aa90427f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftSPI"/>
      </instance>
      <interface-functions>
        <function-ref name="receiveByte" scoped="" ref="0x2b9aa9042b48"/>
        <function-ref name="sendByte" scoped="" ref="0x2b9aa9042cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b9aa9053798" loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIImplP.nc">
      <component-ref qname="SoftSPIImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa9053798"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9aa9053ae8"/>
        <function-ref name="userId" scoped="" ref="0x2b9aa9053c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9aa90c9398" loc="92:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9aa90c9398"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9aa90c9708"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9aa90c9890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9aa90de020" loc="96:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa90de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9aa90de390"/>
        <function-ref name="configure" scoped="" ref="0x2b9aa90de518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b9aa90c9ad8" loc="93:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9aa90c9ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa90c9e28"/>
        <function-ref name="requested" scoped="" ref="0x2b9aa90c7020"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa90c71a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa90c7330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9aa90c74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9aa90ca670" loc="91:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b9aa90ca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa90ca9e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9aa90cab68"/>
        <function-ref name="request" scoped="" ref="0x2b9aa90cacf0"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa90cae78"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa90c9030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9aa90c7700" loc="94:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa90c7700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9aa90c7a50"/>
        <function-ref name="userId" scoped="" ref="0x2b9aa90c7bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9aa9a7a1a8" loc="44:/homes/mhartmann/baq/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9aa9a7a1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa9a7a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b9aa9a7a780" loc="45:/homes/mhartmann/baq/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b9aa9a7a780"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b9aa9a7aad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b9aa9a7ac58"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b9aa9a7ade0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b9aa9ac0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9aa9abe698" loc="55:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9aa9abe698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9aa9abea08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9aa9abeb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9aa9abc3e8" loc="60:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa9abc3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9aa9abc758"/>
        <function-ref name="configure" scoped="" ref="0x2b9aa9abc8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b9aa9abcb68" loc="61:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b9aa9abcb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b9aa9abb020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b9aa9abb1a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b9aa9abb330"/>
        <function-ref name="dequeue" scoped="" ref="0x2b9aa9abb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b9aa9abedd8" loc="56:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9aa9abedd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa9abd170"/>
        <function-ref name="requested" scoped="" ref="0x2b9aa9abd2f8"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa9abd480"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa9abd608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9aa9abd790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9aa9abb700" loc="62:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b9aa9abb700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9aa9abba50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9aa9abbbd8"/>
        <function-ref name="led1On" scoped="" ref="0x2b9aa9abbd60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9aa9aba020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9aa9aba1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9aba330"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9aa9aba4b8"/>
        <function-ref name="setPort" scoped="" ref="0x2b9aa9aba640"/>
        <function-ref name="led0On" scoped="" ref="0x2b9aa9abac60"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9aba950"/>
        <function-ref name="led2On" scoped="" ref="0x2b9aa9aba7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9aa9abaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9aa9abf830" loc="54:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b9aa9abf830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa9abfba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9aa9abfd28"/>
        <function-ref name="request" scoped="" ref="0x2b9aa9abe020"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa9abe1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa9abe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9aa9abd9d8" loc="57:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa9abd9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9aa9abdd28"/>
        <function-ref name="userId" scoped="" ref="0x2b9aa9abc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b9aa9ab9020" loc="75:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b9aa9ab9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9aa9ab9370"/>
        <function-ref name="runTask" scoped="" ref="0x2b9aa9ab94f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="spiMISO" ref="0x2b9aa90d8020" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIP.nc">
      <component-ref qname="SoftSPIP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="spiMISO" scoped="" ref="0x2b9aa90d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa90d8370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa90d84f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa90d8680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa90d8808"/>
        <function-ref name="get" scoped="" ref="0x2b9aa90d8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa90d8b18"/>
        <function-ref name="set" scoped="" ref="0x2b9aa90d8ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa90d8e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="spiMOSI" ref="0x2b9aa90dacc0" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIP.nc">
      <component-ref qname="SoftSPIP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="spiMOSI" scoped="" ref="0x2b9aa90dacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa90d90a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa90d9228"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa90d93b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa90d9538"/>
        <function-ref name="get" scoped="" ref="0x2b9aa90d96c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa90d9848"/>
        <function-ref name="set" scoped="" ref="0x2b9aa90d99d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa90d9b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftSPI" ref="0x2b9aa90d7128" loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIP.nc">
      <component-ref qname="SoftSPIP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftSPI" scoped="" ref="0x2b9aa90d7128"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftSPI"/>
      </instance>
      <interface-functions>
        <function-ref name="receiveByte" scoped="" ref="0x2b9aa90d7478"/>
        <function-ref name="sendByte" scoped="" ref="0x2b9aa90d7600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="spiSCK" ref="0x2b9aa90ddad0" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIP.nc">
      <component-ref qname="SoftSPIP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="spiSCK" scoped="" ref="0x2b9aa90ddad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa90dde20"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa90da020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa90da1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa90da330"/>
        <function-ref name="get" scoped="" ref="0x2b9aa90da4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa90da640"/>
        <function-ref name="set" scoped="" ref="0x2b9aa90da7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa90da950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9aa90fe420" loc="45:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="MP3C.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9aa90fe420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9aa92ba6c8"/>
        <function-ref name="fired" scoped="" ref="0x2b9aa92bddb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9aa92bcad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9aa92bc688"/>
        <function-ref name="getdt" scoped="" ref="0x2b9aa92b9020"/>
        <function-ref name="gett0" scoped="" ref="0x2b9aa92bab18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9aa92bc238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9aa92bd020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9aa92ba0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9aa92bd4c0"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa92bd960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b9aa90f8e30" loc="49:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b9aa90f8e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9aa91090c0"/>
        <function-ref name="fired" scoped="" ref="0x2b9aa910c798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9aa910b4d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9aa910b088"/>
        <function-ref name="getdt" scoped="" ref="0x2b9aa9109960"/>
        <function-ref name="gett0" scoped="" ref="0x2b9aa9109510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9aa910cbe8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9aa910d9e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9aa910baa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9aa910de80"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa910c348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b9aa91044a0" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b9aa91044a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9aa91196c8"/>
        <function-ref name="fired" scoped="" ref="0x2b9aa9103db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9aa911aad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9aa911a688"/>
        <function-ref name="getdt" scoped="" ref="0x2b9aa9117020"/>
        <function-ref name="gett0" scoped="" ref="0x2b9aa9119b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9aa911a238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9aa9103020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9aa91190f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9aa91034c0"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa9103960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b9aa9114980" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b9aa9114980"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9aa9116560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9aa9107768" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9aa9107768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa9107ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b9aa911d150" loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b9aa911d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9aa911c020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9aa911c930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9aa911c4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b9aa911cdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9aa9110020" loc="35:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9aa9110020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa9110370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b9aa910f020" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b9aa910f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9aa9120690"/>
        <function-ref name="fired" scoped="" ref="0x2b9aa91276f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b9aa9120088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9aa9127b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9aa9120b18"/>
        <function-ref name="start" scoped="" ref="0x2b9aa910fd70"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa9127270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9aa9228938" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b9aa9228938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9aa9224020"/>
        <function-ref name="fired" scoped="" ref="0x2b9aa9225088"/>
        <function-ref name="startAt" scoped="" ref="0x2b9aa9225998"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9aa9225510"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9aa92244a8"/>
        <function-ref name="start" scoped="" ref="0x2b9aa92266b0"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa9226b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9aa9228190" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9aa9228190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b9aa8d36d88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b9aa8d36d88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa92284e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9aa9224a90" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b9aa9224a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9aa9223828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9aa9221190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9aa9223cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9aa9221618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b9aa9af74a0" loc="38:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b9aa9af74a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b9aa9af77f0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b9aa9af7978"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b9aa9af7b00"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b9aa9af7c88"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b9aa9af7e10"/>
        <function-ref name="setControl" scoped="" ref="0x2b9aa9af6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9aa9ac3290" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b9aa9ac3290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9aa9b00918"/>
        <function-ref name="fired" scoped="" ref="0x2b9aa9ac1980"/>
        <function-ref name="startAt" scoped="" ref="0x2b9aa9b00310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9aa9ac1e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9aa9b00da0"/>
        <function-ref name="start" scoped="" ref="0x2b9aa9ac1020"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa9ac14f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9aa9ac4ab0" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9aa9ac4ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa9ac4e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9aa9aff3d0" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b9aa9aff3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9aa9afd150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9aa9afda60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9aa9afd5d8"/>
        <function-ref name="overflow" scoped="" ref="0x2b9aa9afc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x2b9aa9af2510" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b9aa9af2510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b9aa9af1030"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b9aa9af29e8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b9aa9af2b70"/>
        <function-ref name="countBusy" scoped="" ref="0x2b9aa9af2cf8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b9aa9af2e80"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b9aa9af2860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b9aa9af63b0" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b9aa9af63b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b9aa9af4c20"/>
        <function-ref name="fired" scoped="" ref="0x2b9aa9af5980"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9af5020"/>
        <function-ref name="reset" scoped="" ref="0x2b9aa9af5e08"/>
        <function-ref name="isOn" scoped="" ref="0x2b9aa9af20f8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9af54a8"/>
        <function-ref name="start" scoped="" ref="0x2b9aa9af4310"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa9af4798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9aa9afc5a0" loc="37:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9aa9afc5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b9aa9af86f8"/>
        <function-ref name="test" scoped="" ref="0x2b9aa9afadb8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9afb150"/>
        <function-ref name="setScale" scoped="" ref="0x2b9aa9af8b80"/>
        <function-ref name="getScale" scoped="" ref="0x2b9aa9af7088"/>
        <function-ref name="reset" scoped="" ref="0x2b9aa9afa020"/>
        <function-ref name="overflow" scoped="" ref="0x2b9aa9afbab0"/>
        <function-ref name="isOn" scoped="" ref="0x2b9aa9af8270"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9afb5d8"/>
        <function-ref name="start" scoped="" ref="0x2b9aa9afa4a8"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa9afa930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b9aa91b7020" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b9aa91b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b9aa91b7370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b9aa91b74f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b9aa91b7680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b9aa91b7808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b9aa91b7990"/>
        <function-ref name="setControl" scoped="" ref="0x2b9aa91b7b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b9aa91b2218" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b9aa91b2218"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b9aa91b2d10"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b9aa91b26f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b9aa91b2878"/>
        <function-ref name="countBusy" scoped="" ref="0x2b9aa91b2a00"/>
        <function-ref name="getAssr" scoped="" ref="0x2b9aa91b2b88"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b9aa91b2568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9aa91b6020" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b9aa91b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b9aa91b47a8"/>
        <function-ref name="fired" scoped="" ref="0x2b9aa91b5560"/>
        <function-ref name="get" scoped="" ref="0x2b9aa91b6ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b9aa91b59e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b9aa91b4c30"/>
        <function-ref name="set" scoped="" ref="0x2b9aa91b5088"/>
        <function-ref name="start" scoped="" ref="0x2b9aa91b5e70"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa91b4320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9aa91a3e00" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9aa91a3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b9aa91b80f8"/>
        <function-ref name="test" scoped="" ref="0x2b9aa919e798"/>
        <function-ref name="get" scoped="" ref="0x2b9aa91a0a18"/>
        <function-ref name="setScale" scoped="" ref="0x2b9aa91b8580"/>
        <function-ref name="getScale" scoped="" ref="0x2b9aa91b8a58"/>
        <function-ref name="reset" scoped="" ref="0x2b9aa919f980"/>
        <function-ref name="overflow" scoped="" ref="0x2b9aa919f4f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b9aa919ec20"/>
        <function-ref name="set" scoped="" ref="0x2b9aa919f020"/>
        <function-ref name="start" scoped="" ref="0x2b9aa919fe08"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa919e310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b9aa91c5160" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b9aa91c5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b9aa91c54b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b9aa91c5638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b9aa91c57c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b9aa91c5948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b9aa91c5ad0"/>
        <function-ref name="setControl" scoped="" ref="0x2b9aa91c5c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b9aa91c0268" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b9aa91c0268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b9aa91c05b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b9aa91c0958" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b9aa91c0958"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b9aa91bf4b8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b9aa91c0e30"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b9aa91bf020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b9aa91bf1a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b9aa91bf330"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b9aa91c0ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9aa91c4190" loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b9aa91c4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b9aa91c1930"/>
        <function-ref name="fired" scoped="" ref="0x2b9aa91c36d0"/>
        <function-ref name="get" scoped="" ref="0x2b9aa91c4d10"/>
        <function-ref name="reset" scoped="" ref="0x2b9aa91c3b58"/>
        <function-ref name="isOn" scoped="" ref="0x2b9aa91c1db8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa91c31f8"/>
        <function-ref name="start" scoped="" ref="0x2b9aa91c1020"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa91c14a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9aa91ae180" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9aa91ae180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b9aa91c6270"/>
        <function-ref name="test" scoped="" ref="0x2b9aa91ac930"/>
        <function-ref name="get" scoped="" ref="0x2b9aa91aed00"/>
        <function-ref name="setScale" scoped="" ref="0x2b9aa91c66f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b9aa91c6bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b9aa91adb58"/>
        <function-ref name="overflow" scoped="" ref="0x2b9aa91ad6d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b9aa91acdb8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa91ad1f8"/>
        <function-ref name="start" scoped="" ref="0x2b9aa91ac020"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa91ac4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b9aa924ccf0" loc="74:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b9aa924ccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9aa924b0a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b9aa924b228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b9aa9250c70" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b9aa9250c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9aa924c410"/>
        <function-ref name="fired" scoped="" ref="0x2b9aa924d4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b9aa924ddb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9aa924d930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9aa924c898"/>
        <function-ref name="start" scoped="" ref="0x2b9aa924e9f0"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa924d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9aa9255ab0" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9aa9255ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9aa9251d60"/>
        <function-ref name="fired" scoped="" ref="0x2b9aa9252470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9aa92511c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9aa9252d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b9aa9250648"/>
        <function-ref name="gett0" scoped="" ref="0x2b9aa92501f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9aa92528c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9aa9254620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9aa9251790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9aa9254ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa9252020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b9aa92b1478" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b9aa92b1478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9aa92b17c8"/>
        <function-ref name="runTask" scoped="" ref="0x2b9aa92b1950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b9aa9298208" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b9aa9298208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9aa92945f0"/>
        <function-ref name="fired" scoped="" ref="0x2b9aa9296b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9aa92958c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9aa9295470"/>
        <function-ref name="getdt" scoped="" ref="0x2b9aa92b1020"/>
        <function-ref name="gett0" scoped="" ref="0x2b9aa9294a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9aa9295020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9aa9298d50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9aa9294020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9aa9296238"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa92966d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9aa929e020" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9aa929e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9aa9299358"/>
        <function-ref name="fired" scoped="" ref="0x2b9aa929c9b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9aa929b748"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9aa929b2d8"/>
        <function-ref name="getdt" scoped="" ref="0x2b9aa9299c38"/>
        <function-ref name="gett0" scoped="" ref="0x2b9aa92997c8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9aa929ce28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9aa929eb88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9aa929bd38"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9aa929c088"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa929c548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b9aa92afc38" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b9aa92afc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9aa92a5820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b9aa92a5e48" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b9aa92a5e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9aa92a4be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9aa92a3548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9aa92a30c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9aa92a39d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b9aa92cc188" loc="7:MP3TestC.nc">
      <component-ref qname="MP3TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b9aa92cc188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9aa92c85f0"/>
        <function-ref name="fired" scoped="" ref="0x2b9aa92cba88"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9aa92c98c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9aa92c9470"/>
        <function-ref name="getdt" scoped="" ref="0x2b9aa92c7020"/>
        <function-ref name="gett0" scoped="" ref="0x2b9aa92c8a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9aa92c9020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9aa92cccd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9aa92c8020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9aa92cb198"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa92cb638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b9aa92b2338" loc="2:MP3TestC.nc">
      <component-ref qname="MP3TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b9aa92b2338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b9aa92b2688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readMMCData" ref="0x2b9aa92f8568" loc="47:MP3TestC.nc">
      <component-ref qname="MP3TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readMMCData" scoped="" ref="0x2b9aa92f8568"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9aa92f88b8"/>
        <function-ref name="runTask" scoped="" ref="0x2b9aa92f8a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button0" ref="0x2b9aa92cfb38" loc="5:MP3TestC.nc">
      <component-ref qname="MP3TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button0" scoped="" ref="0x2b9aa92cfb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa92ce020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa92ce1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa92ce330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa92ce4b8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa92ce640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa92ce7c8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa92ce950"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa92cead8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x2b9aa92c7638" loc="8:MP3TestC.nc">
      <component-ref qname="MP3TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x2b9aa92c7638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9aa92c38f0"/>
        <function-ref name="fired" scoped="" ref="0x2b9aa92c4020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9aa92c4d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9aa92c48c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9aa92c21c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b9aa92c3d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9aa92c4470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9aa92c61e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9aa92c3320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9aa92c6688"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa92c6b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MP3" ref="0x2b9aa92b2950" loc="4:MP3TestC.nc">
      <component-ref qname="MP3TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MP3" scoped="" ref="0x2b9aa92b2950"/></type-interface>
      <instance>
        <interfacedef-ref qname="MP3"/>
      </instance>
      <interface-functions>
        <function-ref name="writeRegister" scoped="" ref="0x2b9aa92b2ca0"/>
        <function-ref name="init" scoped="" ref="0x2b9aa92b2e28"/>
        <function-ref name="writeData" scoped="" ref="0x2b9aa92cf020"/>
        <function-ref name="setVolume" scoped="" ref="0x2b9aa92cf1a8"/>
        <function-ref name="isReady" scoped="" ref="0x2b9aa92cf330"/>
        <function-ref name="sineTestStop" scoped="" ref="0x2b9aa92cf4b8"/>
        <function-ref name="sineTestStart" scoped="" ref="0x2b9aa92cf640"/>
        <function-ref name="readRegister" scoped="" ref="0x2b9aa92cf7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MMC" ref="0x2b9aa92e20f0" loc="10:MP3TestC.nc">
      <component-ref qname="MP3TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MMC" scoped="" ref="0x2b9aa92e20f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MMC"/>
      </instance>
      <interface-functions>
        <function-ref name="readBlock" scoped="" ref="0x2b9aa92e2440"/>
        <function-ref name="initDone" scoped="" ref="0x2b9aa92e25c8"/>
        <function-ref name="error" scoped="" ref="0x2b9aa92e2750"/>
        <function-ref name="init" scoped="" ref="0x2b9aa92e28d8"/>
        <function-ref name="blockReady" scoped="" ref="0x2b9aa92e2a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GLCD" ref="0x2b9aa92ea7d0" loc="9:MP3TestC.nc">
      <component-ref qname="MP3TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GLCD" scoped="" ref="0x2b9aa92ea7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GLCD"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b9aa92eab20"/>
        <function-ref name="tsPressed" scoped="" ref="0x2b9aa92eaca8"/>
        <function-ref name="initDone" scoped="" ref="0x2b9aa92eae30"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b9aa92e1020"/>
        <function-ref name="isPressed" scoped="" ref="0x2b9aa92e11a8"/>
        <function-ref name="calibrated" scoped="" ref="0x2b9aa92e1330"/>
        <function-ref name="calibrateTouchScreen" scoped="" ref="0x2b9aa92e14b8"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b9aa92e1640"/>
        <function-ref name="getXY" scoped="" ref="0x2b9aa92e17c8"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b9aa92e1950"/>
        <function-ref name="barWritten" scoped="" ref="0x2b9aa92e1ad8"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b9aa92e1c60"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b9aa92e1de8"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b9aa92e0120"/>
        <function-ref name="xyReady" scoped="" ref="0x2b9aa92e02a8"/>
        <function-ref name="writeByte" scoped="" ref="0x2b9aa92e0430"/>
        <function-ref name="setPixel" scoped="" ref="0x2b9aa92e05b8"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b9aa92e0740"/>
        <function-ref name="getCalibration" scoped="" ref="0x2b9aa92e08c8"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b9aa92e0a50"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b9aa92e0bd8"/>
        <function-ref name="writePixel" scoped="" ref="0x2b9aa92e0d60"/>
        <function-ref name="initLCD" scoped="" ref="0x2b9aa92e8020"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b9aa92e81a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button1" ref="0x2b9aa92cee48" loc="6:MP3TestC.nc">
      <component-ref qname="MP3TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button1" scoped="" ref="0x2b9aa92cee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa92cd1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa92cd348"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa92cd4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa92cd658"/>
        <function-ref name="get" scoped="" ref="0x2b9aa92cd7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa92cd968"/>
        <function-ref name="set" scoped="" ref="0x2b9aa92cdaf0"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa92cdc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeMP3Data" ref="0x2b9aa92f6590" loc="53:MP3TestC.nc">
      <component-ref qname="MP3TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeMP3Data" scoped="" ref="0x2b9aa92f6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9aa92f68e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b9aa92f6a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9aa933d350" loc="45:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="MP3TestAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9aa933d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9aa933a6c8"/>
        <function-ref name="fired" scoped="" ref="0x2b9aa933cdb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9aa933bad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9aa933b688"/>
        <function-ref name="getdt" scoped="" ref="0x2b9aa9338020"/>
        <function-ref name="gett0" scoped="" ref="0x2b9aa933ab18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9aa933b238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9aa933c020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9aa933a0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9aa933c4c0"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa933c960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9aa93378d8" loc="45:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="MP3TestAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9aa93378d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9aa8db6530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9aa8db6888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9aa9334bc0"/>
        <function-ref name="fired" scoped="" ref="0x2b9aa9335238"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9aa9334020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9aa9335ad8"/>
        <function-ref name="getdt" scoped="" ref="0x2b9aa93544d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b9aa9354088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9aa9335688"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9aa9336458"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9aa93345f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9aa93368f8"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa9336d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GLCD" ref="0x2b9aa9353720" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDC.nc">
      <component-ref qname="GLCDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GLCD" scoped="" ref="0x2b9aa9353720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GLCD"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b9aa9353a70"/>
        <function-ref name="tsPressed" scoped="" ref="0x2b9aa9353bf8"/>
        <function-ref name="initDone" scoped="" ref="0x2b9aa9353d80"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b9aa9350020"/>
        <function-ref name="isPressed" scoped="" ref="0x2b9aa93501a8"/>
        <function-ref name="calibrated" scoped="" ref="0x2b9aa9350330"/>
        <function-ref name="calibrateTouchScreen" scoped="" ref="0x2b9aa93504b8"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b9aa9350640"/>
        <function-ref name="getXY" scoped="" ref="0x2b9aa93507c8"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b9aa9350950"/>
        <function-ref name="barWritten" scoped="" ref="0x2b9aa9350ad8"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b9aa9350c60"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b9aa9350de8"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b9aa934f120"/>
        <function-ref name="xyReady" scoped="" ref="0x2b9aa934f2a8"/>
        <function-ref name="writeByte" scoped="" ref="0x2b9aa934f430"/>
        <function-ref name="setPixel" scoped="" ref="0x2b9aa934f5b8"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b9aa934f740"/>
        <function-ref name="getCalibration" scoped="" ref="0x2b9aa934f8c8"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b9aa934fa50"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b9aa934fbd8"/>
        <function-ref name="writePixel" scoped="" ref="0x2b9aa934fd60"/>
        <function-ref name="initLCD" scoped="" ref="0x2b9aa934e020"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b9aa934e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LCD128x64" ref="0x2b9aa9375bc8" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDP.nc">
      <component-ref qname="GLCDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b9aa9375bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b9aa9344020"/>
        <function-ref name="initDone" scoped="" ref="0x2b9aa93441a8"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b9aa9344330"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b9aa93444b8"/>
        <function-ref name="barWritten" scoped="" ref="0x2b9aa9344640"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b9aa93447c8"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b9aa9344950"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b9aa9344ad8"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b9aa9344c60"/>
        <function-ref name="writeByte" scoped="" ref="0x2b9aa9344de8"/>
        <function-ref name="setPixel" scoped="" ref="0x2b9aa9362020"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b9aa93621a8"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b9aa9362330"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b9aa93625b8"/>
        <function-ref name="writePixel" scoped="" ref="0x2b9aa9362740"/>
        <function-ref name="initLCD" scoped="" ref="0x2b9aa93628c8"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b9aa9362a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GLCD" ref="0x2b9aa9349440" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDP.nc">
      <component-ref qname="GLCDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GLCD" scoped="" ref="0x2b9aa9349440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GLCD"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b9aa9349790"/>
        <function-ref name="tsPressed" scoped="" ref="0x2b9aa9349918"/>
        <function-ref name="initDone" scoped="" ref="0x2b9aa9349aa0"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b9aa9349c28"/>
        <function-ref name="isPressed" scoped="" ref="0x2b9aa9349db0"/>
        <function-ref name="calibrated" scoped="" ref="0x2b9aa9348020"/>
        <function-ref name="calibrateTouchScreen" scoped="" ref="0x2b9aa93481a8"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b9aa9348330"/>
        <function-ref name="getXY" scoped="" ref="0x2b9aa93484b8"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b9aa9348640"/>
        <function-ref name="barWritten" scoped="" ref="0x2b9aa93487c8"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b9aa9348950"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b9aa9348ad8"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b9aa9348d60"/>
        <function-ref name="xyReady" scoped="" ref="0x2b9aa9347020"/>
        <function-ref name="writeByte" scoped="" ref="0x2b9aa93471a8"/>
        <function-ref name="setPixel" scoped="" ref="0x2b9aa9347330"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b9aa93474b8"/>
        <function-ref name="getCalibration" scoped="" ref="0x2b9aa9347640"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b9aa93477c8"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b9aa9347950"/>
        <function-ref name="writePixel" scoped="" ref="0x2b9aa9347ad8"/>
        <function-ref name="initLCD" scoped="" ref="0x2b9aa9347c60"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b9aa9347de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TouchScreen" ref="0x2b9aa93637a8" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCDP.nc">
      <component-ref qname="GLCDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TouchScreen" scoped="" ref="0x2b9aa93637a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TouchScreen"/>
      </instance>
      <interface-functions>
        <function-ref name="tsPressed" scoped="" ref="0x2b9aa9363af8"/>
        <function-ref name="isPressed" scoped="" ref="0x2b9aa9363c80"/>
        <function-ref name="getXY" scoped="" ref="0x2b9aa9363e08"/>
        <function-ref name="xyReady" scoped="" ref="0x2b9aa9345020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TouchScreen" ref="0x2b9aa93ad5c0" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenC.nc">
      <component-ref qname="TouchScreenC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TouchScreen" scoped="" ref="0x2b9aa93ad5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TouchScreen"/>
      </instance>
      <interface-functions>
        <function-ref name="tsPressed" scoped="" ref="0x2b9aa93ad910"/>
        <function-ref name="isPressed" scoped="" ref="0x2b9aa93ada98"/>
        <function-ref name="getXY" scoped="" ref="0x2b9aa93adc20"/>
        <function-ref name="xyReady" scoped="" ref="0x2b9aa93adda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x2b9aa93c6dd8" loc="20:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b9aa93c6dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9aa93c89e0"/>
        <function-ref name="readDone" scoped="" ref="0x2b9aa93c8e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="driveA" ref="0x2b9aa93c74e0" loc="21:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="driveA" scoped="" ref="0x2b9aa93c74e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa93c7830"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa93c79b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa93c7b40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa93c7cc8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa93c7e50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa93c5020"/>
        <function-ref name="set" scoped="" ref="0x2b9aa93c51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa93c5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x2b9aa93bd998" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b9aa93bd998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b9aa93bdce8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b9aa93bde70"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b9aa93c1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="checkTS" ref="0x2b9aa93dc1c0" loc="41:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="checkTS" scoped="" ref="0x2b9aa93dc1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9aa93dc510"/>
        <function-ref name="runTask" scoped="" ref="0x2b9aa93dc698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="adcX" ref="0x2b9aa93c4820" loc="23:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="adcX" scoped="" ref="0x2b9aa93c4820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa93c4b70"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa93c4cf8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa93c4e80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa93c3030"/>
        <function-ref name="get" scoped="" ref="0x2b9aa93c31b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa93c3340"/>
        <function-ref name="set" scoped="" ref="0x2b9aa93c34c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa93c3650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="driveB" ref="0x2b9aa93c5698" loc="22:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="driveB" scoped="" ref="0x2b9aa93c5698"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa93c59e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa93c5b70"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa93c5cf8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa93c5e80"/>
        <function-ref name="get" scoped="" ref="0x2b9aa93c4030"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa93c41b8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa93c4340"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa93c44c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TouchScreen" ref="0x2b9aa93c1318" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TouchScreen" scoped="" ref="0x2b9aa93c1318"/></type-interface>
      <instance>
        <interfacedef-ref qname="TouchScreen"/>
      </instance>
      <interface-functions>
        <function-ref name="tsPressed" scoped="" ref="0x2b9aa93c1668"/>
        <function-ref name="isPressed" scoped="" ref="0x2b9aa93c17f0"/>
        <function-ref name="getXY" scoped="" ref="0x2b9aa93c1978"/>
        <function-ref name="xyReady" scoped="" ref="0x2b9aa93c1b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="adcY" ref="0x2b9aa93c39a8" loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreenP.nc">
      <component-ref qname="TouchScreenP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="adcY" scoped="" ref="0x2b9aa93c39a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa93c3cf8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa93c3e80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa93c2030"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa93c21b8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa93c2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa93c24c8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa93c2650"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa93c27d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9aa9527cc8" loc="25:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TouchScreenC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa9527cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9aa954f0a0"/>
        <function-ref name="configure" scoped="" ref="0x2b9aa954f228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b9aa93fbe30" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TouchScreenC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b9aa93fbe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9aa95289e0"/>
        <function-ref name="readDone" scoped="" ref="0x2b9aa9528e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b9aa9527420" loc="24:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="TouchScreenC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b9aa9527420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b9aa9527770"/>
        <function-ref name="getChannel" scoped="" ref="0x2b9aa95278f8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b9aa9527a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b9aa93f6b10" loc="18:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b9aa93f6b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9aa93f36f0"/>
        <function-ref name="readDone" scoped="" ref="0x2b9aa93f3b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b9aa94117c8" loc="19:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b9aa94117c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9aa94153a8"/>
        <function-ref name="readDone" scoped="" ref="0x2b9aa9415830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b9aa94143f0" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b9aa94143f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b9aa9414740"/>
        <function-ref name="getChannel" scoped="" ref="0x2b9aa94148c8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b9aa9414a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b9aa9410270" loc="23:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b9aa9410270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa94105c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9aa9410748"/>
        <function-ref name="request" scoped="" ref="0x2b9aa94108d0"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa9410a58"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa9410be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9aa9409890" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa9409890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9aa9409be0"/>
        <function-ref name="configure" scoped="" ref="0x2b9aa9409d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b9aa94249b0" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b9aa94249b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b9aa9424d00"/>
        <function-ref name="dataReady" scoped="" ref="0x2b9aa9409020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b9aa940a020" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b9aa940a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b9aa940a370"/>
        <function-ref name="cancel" scoped="" ref="0x2b9aa940a4f8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b9aa940a680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9aa940ed48" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b9aa940ed48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa940b0d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9aa940b260"/>
        <function-ref name="request" scoped="" ref="0x2b9aa940b3e8"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa940b570"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa940b6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9aa9423d48" loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9aa9423d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa94200d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b9aa941fde0" loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b9aa941fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b9aa941e170"/>
        <function-ref name="dataReady" scoped="" ref="0x2b9aa941e2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b9aa941f488" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b9aa941f488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b9aa941f7d8"/>
        <function-ref name="cancel" scoped="" ref="0x2b9aa941f960"/>
        <function-ref name="dataReady" scoped="" ref="0x2b9aa941fae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x2b9aa9433940" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b9aa9433940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b9aa9433c90"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b9aa9433e18"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b9aa941c020"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b9aa941c1a8"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b9aa941c330"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b9aa941c4b8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b9aa941c640"/>
        <function-ref name="isComplete" scoped="" ref="0x2b9aa941c7c8"/>
        <function-ref name="cancel" scoped="" ref="0x2b9aa941c950"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b9aa941cad8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b9aa941cc60"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b9aa941cde8"/>
        <function-ref name="startConversion" scoped="" ref="0x2b9aa941b020"/>
        <function-ref name="isStarted" scoped="" ref="0x2b9aa941b2a8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b9aa941b430"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b9aa941b5b8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b9aa941b740"/>
        <function-ref name="getValue" scoped="" ref="0x2b9aa941b8c8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b9aa941ba50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b9aa941dc10" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9aa941dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9aa941f020"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa941f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b9aa941bd30" loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b9aa941bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b9aa94320d8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b9aa9432260"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b9aa94323e8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b9aa9432570"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b9aa94326f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b9aa9473020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b9aa9473020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b9aa9473370"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b9aa94734f8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b9aa9473680"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b9aa9473808"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b9aa9473990"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b9aa9473b18"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b9aa9473ca0"/>
        <function-ref name="isComplete" scoped="" ref="0x2b9aa9473e28"/>
        <function-ref name="cancel" scoped="" ref="0x2b9aa9472020"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b9aa94721a8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b9aa9472330"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b9aa94724b8"/>
        <function-ref name="startConversion" scoped="" ref="0x2b9aa9472640"/>
        <function-ref name="isStarted" scoped="" ref="0x2b9aa94728c8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b9aa9472a50"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b9aa9472bd8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b9aa9472d60"/>
        <function-ref name="getValue" scoped="" ref="0x2b9aa9471020"/>
        <function-ref name="dataReady" scoped="" ref="0x2b9aa94711a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b9aa946e1e8" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b9aa946e1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b9aa946e538"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b9aa946e6c0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b9aa946e848"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b9aa946e9d0"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b9aa946eb58"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b9aa946ece0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b9aa946ee68"/>
        <function-ref name="isComplete" scoped="" ref="0x2b9aa946d020"/>
        <function-ref name="cancel" scoped="" ref="0x2b9aa946d1a8"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b9aa946d330"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b9aa946d4b8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b9aa946d640"/>
        <function-ref name="startConversion" scoped="" ref="0x2b9aa946d7c8"/>
        <function-ref name="isStarted" scoped="" ref="0x2b9aa946da50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b9aa946dbd8"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b9aa946dd60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b9aa946c020"/>
        <function-ref name="getValue" scoped="" ref="0x2b9aa946c1a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b9aa946c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b9aa946c640" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b9aa946c640"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b9aa946c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9aa94cc510" loc="92:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9aa94cc510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9aa94cc880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9aa94cca08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9aa94ca140" loc="96:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa94ca140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9aa94ca4b0"/>
        <function-ref name="configure" scoped="" ref="0x2b9aa94ca638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b9aa94ccc50" loc="93:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9aa94ccc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa94cb020"/>
        <function-ref name="requested" scoped="" ref="0x2b9aa94cb1a8"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa94cb330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa94cb4b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9aa94cb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9aa94cd6b0" loc="91:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b9aa94cd6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa94cda20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9aa94cdba8"/>
        <function-ref name="request" scoped="" ref="0x2b9aa94cdd30"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa94cc020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa94cc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9aa94cb888" loc="94:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa94cb888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9aa94cbbd8"/>
        <function-ref name="userId" scoped="" ref="0x2b9aa94cbd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9aa9b44aa8" loc="44:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9aa9b44aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa9b44df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b9aa9b430c0" loc="45:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b9aa9b430c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b9aa9b43410"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b9aa9b43598"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b9aa9b43720"/>
        <function-ref name="dequeue" scoped="" ref="0x2b9aa9b438a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9aa9b83dc0" loc="55:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9aa9b83dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9aa9b81170"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9aa9b812f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9aa9b80b08" loc="60:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa9b80b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9aa9b80e78"/>
        <function-ref name="configure" scoped="" ref="0x2b9aa9b7f030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b9aa9b7f2b8" loc="61:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b9aa9b7f2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b9aa9b7f608"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b9aa9b7f790"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b9aa9b7f918"/>
        <function-ref name="dequeue" scoped="" ref="0x2b9aa9b7faa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b9aa9b81540" loc="56:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9aa9b81540"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa9b81890"/>
        <function-ref name="requested" scoped="" ref="0x2b9aa9b81a18"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa9b81ba0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa9b81d28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9aa9b80020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9aa9b7fce8" loc="62:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b9aa9b7fce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9aa9b7e0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9aa9b7e228"/>
        <function-ref name="led1On" scoped="" ref="0x2b9aa9b7e3b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9aa9b7e538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9aa9b7e6c0"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9b7e848"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9aa9b7e9d0"/>
        <function-ref name="setPort" scoped="" ref="0x2b9aa9b7eb58"/>
        <function-ref name="led0On" scoped="" ref="0x2b9aa9b7d1a8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9b7ee68"/>
        <function-ref name="led2On" scoped="" ref="0x2b9aa9b7ece0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9aa9b7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9aa9b830c8" loc="54:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b9aa9b830c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa9b83438"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9aa9b835c0"/>
        <function-ref name="request" scoped="" ref="0x2b9aa9b83748"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa9b838d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa9b83a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9aa9b80268" loc="57:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa9b80268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9aa9b805b8"/>
        <function-ref name="userId" scoped="" ref="0x2b9aa9b80740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b9aa9b7d470" loc="75:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b9aa9b7d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9aa9b7d7c0"/>
        <function-ref name="runTask" scoped="" ref="0x2b9aa9b7d948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b9aa94c7780" loc="72:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b9aa94c7780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b9aa94c7ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b9aa94c7d18" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9aa94c7d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa94d90a0"/>
        <function-ref name="requested" scoped="" ref="0x2b9aa94d9228"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa94d93b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa94d9538"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9aa94d96c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b9aa94c7060" loc="70:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9aa94c7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9aa94c73b0"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa94c7538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b9aa94d9908" loc="74:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa94d9908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9aa94d9c58"/>
        <function-ref name="userId" scoped="" ref="0x2b9aa94d9de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b9aa9b8eb90" loc="62:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b9aa9b8eb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b9aa9b8d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b9aa9b8d268" loc="63:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b9aa9b8d268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa9b8d5b8"/>
        <function-ref name="requested" scoped="" ref="0x2b9aa9b8d740"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa9b8d8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa9b8da50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9aa9b8dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b9aa9b8e470" loc="60:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9aa9b8e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9aa9b8e7c0"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa9b8e948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b9aa9b8de20" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa9b8de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9aa9b8c1a8"/>
        <function-ref name="userId" scoped="" ref="0x2b9aa9b8c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b9aa94f96a0" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b9aa94f96a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9aa94f8370"/>
        <function-ref name="readDone" scoped="" ref="0x2b9aa94f87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x2b9aa94f6428" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x2b9aa94f6428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9aa94f5020"/>
        <function-ref name="readDone" scoped="" ref="0x2b9aa94f54a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x2b9aa94f49a0" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x2b9aa94f49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x2b9aa94f4cf0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b9aa94f4e78"/>
        <function-ref name="getPrescaler" scoped="" ref="0x2b9aa94f3030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x2b9aa94f5b18" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b9aa94f5b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b9aa94f5e68"/>
        <function-ref name="cancel" scoped="" ref="0x2b9aa94f4020"/>
        <function-ref name="dataReady" scoped="" ref="0x2b9aa94f41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x2b9aa950b4d8" loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x2b9aa950b4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9aa950b828"/>
        <function-ref name="runTask" scoped="" ref="0x2b9aa950b9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x2b9aa9520680" loc="24:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x2b9aa9520680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9aa9532370"/>
        <function-ref name="readDone" scoped="" ref="0x2b9aa95327e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x2b9aa9530060" loc="26:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x2b9aa9530060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b9aa9530bc8"/>
        <function-ref name="readDone" scoped="" ref="0x2b9aa952f088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b9aa952f720" loc="27:/homes/mhartmann/baq/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b9aa952f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa952fa90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9aa952fc18"/>
        <function-ref name="request" scoped="" ref="0x2b9aa952fda0"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa952e020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa952e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCD128x64" ref="0x2b9aa954b900" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <component-ref qname="LCD128x64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b9aa954b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b9aa954bc50"/>
        <function-ref name="initDone" scoped="" ref="0x2b9aa954bdd8"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b9aa9548020"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b9aa95481a8"/>
        <function-ref name="barWritten" scoped="" ref="0x2b9aa9548330"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b9aa95484b8"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b9aa9548640"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b9aa95487c8"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b9aa9548950"/>
        <function-ref name="writeByte" scoped="" ref="0x2b9aa9548ad8"/>
        <function-ref name="setPixel" scoped="" ref="0x2b9aa9548c60"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b9aa9548de8"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b9aa9547020"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b9aa95472a8"/>
        <function-ref name="writePixel" scoped="" ref="0x2b9aa9547430"/>
        <function-ref name="initLCD" scoped="" ref="0x2b9aa95475b8"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b9aa9547740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeRectangle" ref="0x2b9aa95b0850" loc="182:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeRectangle" scoped="" ref="0x2b9aa95b0850"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9aa95b0ba0"/>
        <function-ref name="runTask" scoped="" ref="0x2b9aa95b0d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCD128x64" ref="0x2b9aa956e690" loc="25:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b9aa956e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b9aa956e9e0"/>
        <function-ref name="initDone" scoped="" ref="0x2b9aa956eb68"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b9aa956ecf0"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b9aa956ee78"/>
        <function-ref name="barWritten" scoped="" ref="0x2b9aa956c030"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b9aa956c1b8"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b9aa956c340"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b9aa956c4c8"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b9aa956c650"/>
        <function-ref name="writeByte" scoped="" ref="0x2b9aa956c7d8"/>
        <function-ref name="setPixel" scoped="" ref="0x2b9aa956c960"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b9aa956cae8"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b9aa956cc70"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b9aa956b020"/>
        <function-ref name="writePixel" scoped="" ref="0x2b9aa956b1a8"/>
        <function-ref name="initLCD" scoped="" ref="0x2b9aa956b330"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b9aa956b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeString" ref="0x2b9aa95c5d70" loc="231:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeString" scoped="" ref="0x2b9aa95c5d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9aa95c40f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b9aa95c4278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeCircle" ref="0x2b9aa95a85c8" loc="198:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeCircle" scoped="" ref="0x2b9aa95a85c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9aa95a8918"/>
        <function-ref name="runTask" scoped="" ref="0x2b9aa95a8aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeLine" ref="0x2b9aa95db4d8" loc="290:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeLine" scoped="" ref="0x2b9aa95db4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9aa95db828"/>
        <function-ref name="runTask" scoped="" ref="0x2b9aa95db9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="wait4Controller" ref="0x2b9aa9567d88" loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="wait4Controller" scoped="" ref="0x2b9aa9567d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9aa9566170"/>
        <function-ref name="runTask" scoped="" ref="0x2b9aa95662f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeBar" ref="0x2b9aa95efbe0" loc="368:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeBar" scoped="" ref="0x2b9aa95efbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9aa95ee020"/>
        <function-ref name="runTask" scoped="" ref="0x2b9aa95ee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="clearScreenNB" ref="0x2b9aa95e4d58" loc="259:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="clearScreenNB" scoped="" ref="0x2b9aa95e4d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9aa95e30d8"/>
        <function-ref name="runTask" scoped="" ref="0x2b9aa95e3260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MMC" ref="0x2b9aa963faa8" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMCC.nc">
      <component-ref qname="MMCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MMC" scoped="" ref="0x2b9aa963faa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MMC"/>
      </instance>
      <interface-functions>
        <function-ref name="readBlock" scoped="" ref="0x2b9aa963fdf8"/>
        <function-ref name="initDone" scoped="" ref="0x2b9aa963c020"/>
        <function-ref name="error" scoped="" ref="0x2b9aa963c1a8"/>
        <function-ref name="init" scoped="" ref="0x2b9aa963c330"/>
        <function-ref name="blockReady" scoped="" ref="0x2b9aa963c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ssB0" ref="0x2b9aa9633810" loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMCP.nc">
      <component-ref qname="MMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ssB0" scoped="" ref="0x2b9aa9633810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa9633b60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa9633ce8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa9633e70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa9632020"/>
        <function-ref name="get" scoped="" ref="0x2b9aa96321a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa9632330"/>
        <function-ref name="set" scoped="" ref="0x2b9aa96324b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa9632640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2b9aa9637020" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMCP.nc">
      <component-ref qname="MMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b9aa9637020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b9aa9637370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ssMMC" ref="0x2b9aa9636380" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMCP.nc">
      <component-ref qname="MMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ssMMC" scoped="" ref="0x2b9aa9636380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa96366d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa9636858"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa96369e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa9636b68"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9636cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa9636e78"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9634030"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa96341b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MMC" ref="0x2b9aa96328e8" loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMCP.nc">
      <component-ref qname="MMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MMC" scoped="" ref="0x2b9aa96328e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MMC"/>
      </instance>
      <interface-functions>
        <function-ref name="readBlock" scoped="" ref="0x2b9aa9632c38"/>
        <function-ref name="initDone" scoped="" ref="0x2b9aa9632dc0"/>
        <function-ref name="error" scoped="" ref="0x2b9aa9631020"/>
        <function-ref name="init" scoped="" ref="0x2b9aa96311a8"/>
        <function-ref name="blockReady" scoped="" ref="0x2b9aa9631330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="cdMMC" ref="0x2b9aa9634518" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMCP.nc">
      <component-ref qname="MMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="cdMMC" scoped="" ref="0x2b9aa9634518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa9634868"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa96349f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa9634b78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa9634d00"/>
        <function-ref name="get" scoped="" ref="0x2b9aa9633020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa96331a8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa9633330"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa96334b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b9aa9637650" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMCP.nc">
      <component-ref qname="MMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b9aa9637650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa96379a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9aa9637b28"/>
        <function-ref name="request" scoped="" ref="0x2b9aa9637cb0"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa9637e38"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa9636020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b9aa96591d8" loc="84:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b9aa96591d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9aa9659528"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9aa96596b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b9aa963ab70" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b9aa963ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b9aa9667020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9aa963a550" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9aa963a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa963a8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b9aa9661af8" loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b9aa9661af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b9aa9661e48"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b9aa9666020"/>
        <function-ref name="splitRead" scoped="" ref="0x2b9aa96661a8"/>
        <function-ref name="write" scoped="" ref="0x2b9aa9666330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9aa9659e80" loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b9aa9659e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa96651f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9aa9665380"/>
        <function-ref name="request" scoped="" ref="0x2b9aa9665508"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa9665690"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa9665818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2b9aa96a0ca0" loc="255:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2b9aa96a0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9aa969f020"/>
        <function-ref name="runTask" scoped="" ref="0x2b9aa969f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b9aa9683140" loc="94:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b9aa9683140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b9aa9683490"/>
        <function-ref name="sendDone" scoped="" ref="0x2b9aa9683618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x2b9aa96933c8" loc="99:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x2b9aa96933c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa9693718"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9aa96938a0"/>
        <function-ref name="request" scoped="" ref="0x2b9aa9693a28"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa9693bb0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa9693d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b9aa9684080" loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b9aa9684080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b9aa96843d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9aa9660a20" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9aa9660a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa9660d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2b9aa9695150" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2b9aa9695150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b9aa96954a0"/>
        <function-ref name="sleep" scoped="" ref="0x2b9aa9680950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b9aa96957b0"/>
        <function-ref name="dataReady" scoped="" ref="0x2b9aa9680ad8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b9aa9695ac0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b9aa9695c48"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b9aa9695dd0"/>
        <function-ref name="read" scoped="" ref="0x2b9aa9681020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b9aa96811a8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b9aa9681330"/>
        <function-ref name="setClock" scoped="" ref="0x2b9aa96814b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9aa9681640"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b9aa96817c8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b9aa9681a50"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b9aa9681bd8"/>
        <function-ref name="write" scoped="" ref="0x2b9aa9681d60"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b9aa9680020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b9aa96801a8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b9aa9680330"/>
        <function-ref name="getClock" scoped="" ref="0x2b9aa96804b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b9aa9680640"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b9aa9695628"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b9aa9695938"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b9aa96807c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b9aa9684688" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b9aa9684688"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b9aa96849d8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b9aa9684b60"/>
        <function-ref name="splitRead" scoped="" ref="0x2b9aa9684ce8"/>
        <function-ref name="write" scoped="" ref="0x2b9aa9684e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9aa9683da8" loc="95:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b9aa9683da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa9682170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9aa96822f8"/>
        <function-ref name="request" scoped="" ref="0x2b9aa9682480"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa9682608"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa9682790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b9aa9692020" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa9692020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9aa9692370"/>
        <function-ref name="userId" scoped="" ref="0x2b9aa96924f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b9aa96927c8" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b9aa96927c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b9aa9692b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2b9aa96d5100" loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2b9aa96d5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b9aa96d5450"/>
        <function-ref name="sleep" scoped="" ref="0x2b9aa96d3950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b9aa96d5760"/>
        <function-ref name="dataReady" scoped="" ref="0x2b9aa96d3ad8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b9aa96d5a70"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b9aa96d5bf8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b9aa96d5d80"/>
        <function-ref name="read" scoped="" ref="0x2b9aa96d4020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b9aa96d41a8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b9aa96d4330"/>
        <function-ref name="setClock" scoped="" ref="0x2b9aa96d44b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9aa96d4640"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b9aa96d47c8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b9aa96d4a50"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b9aa96d4bd8"/>
        <function-ref name="write" scoped="" ref="0x2b9aa96d4d60"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b9aa96d3020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b9aa96d31a8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b9aa96d3330"/>
        <function-ref name="getClock" scoped="" ref="0x2b9aa96d34b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b9aa96d3640"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b9aa96d55d8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b9aa96d58e8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b9aa96d37c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2b9aa96f8958" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2b9aa96f8958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa96f8ca8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa96f8e30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa96f7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa96f71a8"/>
        <function-ref name="get" scoped="" ref="0x2b9aa96f7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa96f74b8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa96f7640"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa96f77c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2b9aa96fb648" loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b9aa96fb648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa96fb998"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa96fbb20"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa96fbca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa96fbe30"/>
        <function-ref name="get" scoped="" ref="0x2b9aa96fa020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa96fa1a8"/>
        <function-ref name="set" scoped="" ref="0x2b9aa96fa330"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa96fa4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b9aa96cc508" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b9aa96cc508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa96cc858"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa96cc9e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa96ccb68"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa96cccf0"/>
        <function-ref name="get" scoped="" ref="0x2b9aa96cce78"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa96fb030"/>
        <function-ref name="set" scoped="" ref="0x2b9aa96fb1b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa96fb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b9aa96cdc70" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b9aa96cdc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b9aa96cc020"/>
        <function-ref name="stop" scoped="" ref="0x2b9aa96cc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2b9aa96f7af8" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2b9aa96f7af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b9aa96f7e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2b9aa96cf020" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2b9aa96cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b9aa96cf370"/>
        <function-ref name="sleep" scoped="" ref="0x2b9aa96cd7c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b9aa96cf680"/>
        <function-ref name="dataReady" scoped="" ref="0x2b9aa96cd950"/>
        <function-ref name="initMaster" scoped="" ref="0x2b9aa96cf990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b9aa96cfb18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b9aa96cfca0"/>
        <function-ref name="read" scoped="" ref="0x2b9aa96cfe28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b9aa96ce020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b9aa96ce1a8"/>
        <function-ref name="setClock" scoped="" ref="0x2b9aa96ce330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b9aa96ce4b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b9aa96ce640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b9aa96ce8c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b9aa96cea50"/>
        <function-ref name="write" scoped="" ref="0x2b9aa96cebd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b9aa96ced60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b9aa96cd020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b9aa96cd1a8"/>
        <function-ref name="getClock" scoped="" ref="0x2b9aa96cd330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b9aa96cd4b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b9aa96cf4f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b9aa96cf808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b9aa96cd640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2b9aa96fa7d0" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2b9aa96fa7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9aa96fab20"/>
        <function-ref name="isInput" scoped="" ref="0x2b9aa96faca8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9aa96fae30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9aa96f8020"/>
        <function-ref name="get" scoped="" ref="0x2b9aa96f81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9aa96f8330"/>
        <function-ref name="set" scoped="" ref="0x2b9aa96f84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9aa96f8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9aa9764510" loc="86:/homes/mhartmann/baq/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9aa9764510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9aa9764880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9aa9764a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9aa9763550" loc="89:/homes/mhartmann/baq/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa9763550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9aa97638c0"/>
        <function-ref name="configure" scoped="" ref="0x2b9aa9763a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9aa9766748" loc="85:/homes/mhartmann/baq/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b9aa9766748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa9766ab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9aa9766c40"/>
        <function-ref name="request" scoped="" ref="0x2b9aa9766dc8"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa9764020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa97641a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9aa9764c50" loc="87:/homes/mhartmann/baq/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa9764c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9aa9763020"/>
        <function-ref name="userId" scoped="" ref="0x2b9aa97631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9aa9bb5660" loc="44:/homes/mhartmann/baq/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9aa9bb5660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9aa9bb59b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b9aa9bb5c38" loc="45:/homes/mhartmann/baq/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b9aa9bb5c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b9aa9bb4020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b9aa9bb41a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b9aa9bb4330"/>
        <function-ref name="dequeue" scoped="" ref="0x2b9aa9bb44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b9aa9bb1820" loc="52:/homes/mhartmann/baq/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b9aa9bb1820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b9aa9bb1b90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b9aa9bb1d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b9aa9bb08c0" loc="56:/homes/mhartmann/baq/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b9aa9bb08c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b9aa9bb0c30"/>
        <function-ref name="configure" scoped="" ref="0x2b9aa9bb0db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b9aa9baf0a0" loc="57:/homes/mhartmann/baq/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b9aa9baf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b9aa9baf3f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b9aa9baf578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b9aa9baf700"/>
        <function-ref name="dequeue" scoped="" ref="0x2b9aa9baf888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b9aa9bb2a28" loc="51:/homes/mhartmann/baq/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b9aa9bb2a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b9aa9bb2d98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b9aa9bb1020"/>
        <function-ref name="request" scoped="" ref="0x2b9aa9bb11a8"/>
        <function-ref name="granted" scoped="" ref="0x2b9aa9bb1330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b9aa9bb14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b9aa9bb0020" loc="53:/homes/mhartmann/baq/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b9aa9bb0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b9aa9bb0370"/>
        <function-ref name="userId" scoped="" ref="0x2b9aa9bb04f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b9aa9bafb50" loc="69:/homes/mhartmann/baq/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b9aa9bafb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9aa9bae020"/>
        <function-ref name="runTask" scoped="" ref="0x2b9aa9bae1a8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b9aa8e31178" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b9aa8e29e08" loc="60:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b9aa8e37290" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b9aa8e37020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b9aa8e3b940" loc="31:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="27:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b9aa8e3a378" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b9aa8e3a108" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b9aa8e3ae00" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b9aa8e3ab90" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b9aa8e39698" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b9aa8e4e0d8" loc="44:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b9aa8e4e7a0" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b9aa8e4f328" loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b9aa8e4d570" loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b9aa8e4f9c8" loc="43:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b9aa8e4ee58" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9aa8e515a8" loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b9aa8e51c18" loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b9aa8d3c3a0" loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b9aa8d3a290" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b9aa8d3cab8" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b9aa8d46070" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b9aa8d46860" loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b9aa8df9450" loc="76:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b9aa8e0fd28" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b9aa8d951a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b9aa8e196d8" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MP3" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3.nc">
      <function command="" provided="0" name="writeRegister" ref="0x2b9aa8fe8e68" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3.nc">
        <interfacedef-ref qname="MP3"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mp3Register" ref="0x2b9aa8fe88a8" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="mp3Cmd" ref="0x2b9aa8fe8be8" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b9aa8fe81a0" loc="2:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3.nc">
        <interfacedef-ref qname="MP3"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeData" ref="0x2b9aa8fe65b0" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3.nc">
        <interfacedef-ref qname="MP3"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9aa8fe6020" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9aa8fe6330" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setVolume" ref="0x2b9aa8fe4c48" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3.nc">
        <interfacedef-ref qname="MP3"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="volume" ref="0x2b9aa8fe49d8" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isReady" ref="0x2b9aa8fe3328" loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3.nc">
        <interfacedef-ref qname="MP3"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sineTestStop" ref="0x2b9aa8fe4328" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3.nc">
        <interfacedef-ref qname="MP3"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sineTestStart" ref="0x2b9aa8fe6c50" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3.nc">
        <interfacedef-ref qname="MP3"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="readRegister" ref="0x2b9aa8fe7818" loc="4:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3.nc">
        <interfacedef-ref qname="MP3"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mp3Register" ref="0x2b9aa8fe75a8" loc="4:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MP3/MP3.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9aa8ff55e8" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9aa8ff55e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b9aa8fff020" loc="136:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b9aa8ff09c8" loc="83:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b9aa8fee660" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b9aa8fee0c8" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b9aa8fee3e0" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b9aa8fef910" loc="98:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b9aa8ffe020" loc="151:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b9aa8fff740" loc="144:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b9aa8fef178" loc="92:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b9aa8ff2108" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b9aa8ff5e48" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b9aa8fed5b8" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b9aa8fed020" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b9aa8fed338" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b9aa8ff2b48" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b9aa8ff28d8" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9aa8ff0328" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b9aa90041d8" loc="120:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b9aa90062a8" loc="97:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b9aa9009990" loc="88:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b9aa9006a30" loc="102:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b9aa9004bc0" loc="128:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftSPI" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPI.nc">
      <function command="" provided="0" name="receiveByte" ref="0x2b9aa9001290" loc="12:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPI.nc">
        <interfacedef-ref qname="SoftSPI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9aa9001020" loc="12:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendByte" ref="0x2b9aa90027a0" loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPI.nc">
        <documentation loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPI.nc">
          <short>******************************************&#10; values are read/written on rising edge   *&#10; see SoftSPI.h for pin/port configuration *&#10;*******************************************</short>
        </documentation>
        <interfacedef-ref qname="SoftSPI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b9aa9002530" loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b9aa903aaf8" loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b9aa90373e0" loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b9aa9035450" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b9aa9039c40" loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b9aa9040bf8" loc="90:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b9aa9053420" loc="98:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b9aa905b110" loc="56:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b9aa905a110" loc="73:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b9aa905f8c0" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b9aa905b910" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b9aa905a9d8" loc="81:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b9aa9065c80" loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b9aa9056020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b9aa9065a10" loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b9aa9056020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b9aa906ae18" loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b9aa90668f0" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b9aa9056020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b9aa9066680" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b9aa9056020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b9aa90651d8" loc="70:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b9aa9056020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b9aa9087970" loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b9aa90850d8" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b9aa9085848" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b9aa9084758" loc="83:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b9aa9083e70" loc="100:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b9aa9097630" loc="117:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b9aa9084020" loc="77:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9aa9096290" loc="134:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b9aa9096020" loc="134:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPort" ref="0x2b9aa9095118" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b9aa9096b30" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="pval" ref="0x2b9aa9096e50" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b9aa9087258" loc="56:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b9aa9083020" loc="89:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b9aa9083738" loc="94:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9aa9117bf0" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9aa9117bf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b9aa91144c8" loc="61:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9aa911e7b8" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9aa911e7b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b9aa911e9e8" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9aa911e9e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b9aa911b2a8" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9aa911e9e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b9aa9134328" loc="76:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b9aa911bac0" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b9aa9134a18" loc="82:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9aa91263e8" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9aa91263e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b9aa9126618" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9aa9126618"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b9aa9121020" loc="109:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9aa9126618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b9aa9124070" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b9aa91235c0" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9aa9126618"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9aa9126618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b9aa9123020" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9aa9126618"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b9aa9123340" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9aa9126618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b9aa91247e0" loc="88:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b9aa91217a0" loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9aa9126618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b9aa9125108" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9aa9126618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b9aa9126e68" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9aa9126618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9aa91258d8" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b9aa9158020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9aa8dc2a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b9aa8dc2e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b9aa9156360" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9aa8dcf100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b9aa8dcf508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b9aa91571d8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9aa8dc6980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b9aa8dc6d88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b9aa9157b90" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9aa8dc6980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b9aa8dc6d88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b9aa9157920" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9aa8dc6980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b9aa8dc6d88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b9aa9156d18" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9aa8dcf100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b9aa8dcf508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b9aa9156aa8" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9aa8dcf100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b9aa8dcf508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b9aa91589f0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9aa8dc2a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b9aa8dc2e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b9aa9158780" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9aa8dc2a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b9aa8dc2e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerSync" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer0Synchronous" ref="0x2b9aa91624e8" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBusy" ref="0x2b9aa9162bf0" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b9aa91613e0" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b9aa9161b90" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b9aa9163328" loc="28:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="24:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9aa8dc9118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b9aa8dc9520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b9aa9163cd8" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9aa8dc9118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b9aa8dc9520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9aa9163a68" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9aa8dc9118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b9aa8dc9520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b9aa915a420" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9aa915a420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b9aa9150a40" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b9aa9152d88" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b9aa915acd8" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9aa915a420"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b9aa91514c0" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b9aa91681d8" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9aa9152648" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9aa915a420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b9aa91523d8" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9aa915a420"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b9aa9151bb8" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9aa9150328" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b9aa9135688" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b9aa9135688"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b9aa9148cf0" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b9aa9149e20" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b9aa914c020" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b9aa9135688"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b9aa9147690" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b9aa9147420" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b9aa9147e10" loc="110:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="106:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b9aa914b7f8" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b9aa914b0d8" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b9aa91485c8" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9aa914c958" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b9aa9135688"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b9aa914c6e8" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b9aa9135688"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b9aa9149020" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9aa9149708" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MMC" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMC.nc">
      <function command="" provided="0" name="readBlock" ref="0x2b9aa92e5588" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMC.nc">
        <interfacedef-ref qname="MMC"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b9aa92e5318" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMC.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9aa8b38db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x2b9aa92e5bf8" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMC.nc">
        <interfacedef-ref qname="MMC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="error" ref="0x2b9aa92e4e18" loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMC.nc">
        <interfacedef-ref qname="MMC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="errStr" ref="0x2b9aa92e4ba8" loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b9aa92e8c20" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMC.nc">
        <interfacedef-ref qname="MMC"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="blockReady" ref="0x2b9aa92e4530" loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMC.nc">
        <interfacedef-ref qname="MMC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9aa92e42c0" loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/mmc/MMC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GLCD" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
      <function command="" provided="0" name="startClearScreen" ref="0x2b9aa92ee648" loc="68:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b9aa92ee3d8" loc="68:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="tsPressed" ref="0x2b9aa92dad38" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x2b9aa92eecb8" loc="70:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteBar" ref="0x2b9aa92d45e8" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9aa92d5968" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9aa92d5c68" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b9aa92d4020" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="width" ref="0x2b9aa92d4348" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isPressed" ref="0x2b9aa92dc378" loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b9aa92dc108" loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="calibrated" ref="0x2b9aa92da6c0" loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateTouchScreen" ref="0x2b9aa92de020" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteLine" ref="0x2b9aa92efca8" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9aa92ef0c8" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9aa92ef3c8" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="xEnd" ref="0x2b9aa92ef6e8" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="yEnd" ref="0x2b9aa92efa08" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getXY" ref="0x2b9aa92ddaa8" loc="12:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteRectangle" ref="0x2b9aa92d38c0" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9aa92d4cc8" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9aa92d3020" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="a" ref="0x2b9aa92d3320" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="b" ref="0x2b9aa92d3620" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="barWritten" ref="0x2b9aa92ebe40" loc="80:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="lineWritten" ref="0x2b9aa92eb7c0" loc="78:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="screenCleared" ref="0x2b9aa92ea538" loc="82:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteString" ref="0x2b9aa92f0990" loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9aa92f0100" loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x2b9aa92f0400" loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9aa92f0700" loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="xyReady" ref="0x2b9aa92da020" loc="21:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9aa92dc9c8" loc="21:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9aa92dccd8" loc="21:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="writeByte" ref="0x2b9aa92d85d0" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9aa92d9ca0" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9aa92d8020" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b9aa92d8340" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x2b9aa92d52a0" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9aa92d7c08" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9aa92d5020" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="circleWritten" ref="0x2b9aa92ec3a0" loc="72:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCalibration" ref="0x2b9aa92dd458" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x_cmin" ref="0x2b9aa92de700" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="x_cmax" ref="0x2b9aa92dea78" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="y_cmin" ref="0x2b9aa92dedf0" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="y_cmax" ref="0x2b9aa92dd1b8" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteCircle" ref="0x2b9aa92d2a00" loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="xcenter" ref="0x2b9aa92d2108" loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="ycenter" ref="0x2b9aa92d2440" loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="radius" ref="0x2b9aa92d2770" loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rectangleWritten" ref="0x2b9aa92eb138" loc="76:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writePixel" ref="0x2b9aa92d75b8" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9aa92d8c30" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9aa92d7020" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="on" ref="0x2b9aa92d7328" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initLCD" ref="0x2b9aa92d9648" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b9aa92d93d8" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stringWritten" ref="0x2b9aa92eca40" loc="74:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/GLCD/GLCD.nc">
        <interfacedef-ref qname="GLCD"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LCD128x64" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
      <function command="" provided="0" name="startClearScreen" ref="0x2b9aa9357948" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b9aa93576d8" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x2b9aa9356020" loc="38:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteBar" ref="0x2b9aa935da90" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9aa935fe50" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9aa935d198" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b9aa935d4c8" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="width" ref="0x2b9aa935d7f0" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteLine" ref="0x2b9aa9357020" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9aa93582e8" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9aa93585e8" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="xEnd" ref="0x2b9aa9358908" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="yEnd" ref="0x2b9aa9358c28" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="barWritten" ref="0x2b9aa9375290" loc="48:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteRectangle" ref="0x2b9aa935ccf0" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9aa935c150" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9aa935c450" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="a" ref="0x2b9aa935c750" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="b" ref="0x2b9aa935ca50" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="screenCleared" ref="0x2b9aa9375930" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="lineWritten" ref="0x2b9aa9376be0" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteString" ref="0x2b9aa9359c40" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9aa93593b0" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x2b9aa93596b0" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9aa93599b0" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="writeByte" ref="0x2b9aa9361cb0" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9aa9361400" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9aa9361700" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b9aa9361a20" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x2b9aa935f7d0" loc="20:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9aa935f250" loc="20:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9aa935f550" loc="20:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="circleWritten" ref="0x2b9aa93566c0" loc="40:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteCircle" ref="0x2b9aa935bcd0" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="xcenter" ref="0x2b9aa935b3d8" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="ycenter" ref="0x2b9aa935b710" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="radius" ref="0x2b9aa935ba40" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rectangleWritten" ref="0x2b9aa9376558" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writePixel" ref="0x2b9aa9360bd0" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9aa9360338" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9aa9360638" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="on" ref="0x2b9aa9360940" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initLCD" ref="0x2b9aa9345d60" loc="4:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b9aa9345af0" loc="4:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stringWritten" ref="0x2b9aa9356d60" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TouchScreen" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
      <function event="" provided="0" name="tsPressed" ref="0x2b9aa9363510" loc="13:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
        <interfacedef-ref qname="TouchScreen"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isPressed" ref="0x2b9aa9365290" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
        <interfacedef-ref qname="TouchScreen"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b9aa9365020" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getXY" ref="0x2b9aa9346920" loc="4:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
        <interfacedef-ref qname="TouchScreen"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="xyReady" ref="0x2b9aa9365e70" loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
        <interfacedef-ref qname="TouchScreen"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9aa93658e0" loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9aa9365bf0" loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/TouchScreen/TouchScreen.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b9aa93c9410" loc="49:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b9aa93c9410"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b9aa93c9c48" loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b9aa93c6910" loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b9aa93c9410"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b9aa93c6390" loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b9aa93c6690" loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b9aa93c9410"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x2b9aa93bfe00" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b9aa93bf618" loc="25:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x2b9aa93bd658" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b9aa9416808" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b9aa9416808"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b9aa94130d8" loc="58:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b9aa9413da0" loc="66:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b9aa9416808"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b9aa9413820" loc="66:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b9aa9413b20" loc="66:/homes/mhartmann/baq/tinyos/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b9aa9416808"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b9aa9426768" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b9aa9427a60" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b9aa9427db8" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b9aa9426178" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b9aa94264c8" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b9aa94243f0" loc="119:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9aa9425368" loc="119:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b9aa9425688" loc="119:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x2b9aa94259c0" loc="119:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x2b9aa9425d70" loc="120:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x2b9aa9424140" loc="120:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b9aa94072c0" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b9aa9408488" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b9aa94087e0" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b9aa9408b48" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b9aa9407020" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b9aa9406b18" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b9aa94062a0" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9aa9407cc8" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b9aa9406020" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x2b9aa94370d8" loc="114:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x2b9aa941a1d8" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9aa8daf478"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x2b9aa8daf930"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x2b9aa9435338" loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b9aa94350c8" loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2b9aa9437918" loc="122:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x2b9aa9417d18" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x2b9aa941abb0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9aa8daf478"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b9aa8daf930"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x2b9aa941a940" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9aa8daf478"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b9aa8daf930"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x2b9aa943bb88" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x2b9aa9436870" loc="133:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b9aa9435ad0" loc="150:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x2b9aa943b448" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x2b9aa943aa48" loc="99:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x2b9aa943a328" loc="95:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x2b9aa94381d8" loc="106:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x2b9aa94360d8" loc="127:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x2b9aa9419dd0" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9aa8db7020"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b9aa8db76e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x2b9aa9419b60" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9aa8db7020"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b9aa8db76e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x2b9aa9438990" loc="110:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x2b9aa94193e0" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b9aa8db7020"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b9aa8db76e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b9aa94175b8" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b9aa9433640" loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9aa94333d0" loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b9aa941d020" loc="95:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9aa941d7f8" loc="105:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/homes/mhartmann/baq/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2b9aa94c5c20" loc="62:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/homes/mhartmann/baq/tinyos/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b9aa9638ba0" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b9aa9638930" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b9aa965fb88" loc="70:/homes/mhartmann/baq/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/homes/mhartmann/baq/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b9aa965f278" loc="70:/homes/mhartmann/baq/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b9aa965f5d8" loc="70:/homes/mhartmann/baq/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9aa965f8f8" loc="70:/homes/mhartmann/baq/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b9aa965b020" loc="82:/homes/mhartmann/baq/tinyos/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b9aa965d2b0" loc="82:/homes/mhartmann/baq/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b9aa965d610" loc="82:/homes/mhartmann/baq/tinyos/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b9aa965d930" loc="82:/homes/mhartmann/baq/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b9aa8b38378"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b9aa965dc78" loc="83:/homes/mhartmann/baq/tinyos/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b9aa8d40ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;call FastSpiByte.spiSplitWrite(data[0]); // start the first byte&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  call FastSpiByte.spiSplitReadWrite(data[i]);&#10;&#9;}&#10;&#9;call FastSpiByte.spiSlitRead(); // finish the last byte&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b9aa96649e8" loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9aa9664778" loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b9aa9662cf0" loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9aa9662a80" loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b9aa9662258" loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b9aa9661720" loc="76:/homes/mhartmann/baq/tinyos/tos/interfaces/FastSpiByte.nc">
        <documentation loc="71:/homes/mhartmann/baq/tinyos/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9aa96614b0" loc="76:/homes/mhartmann/baq/tinyos/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2b9aa9676328" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2b9aa969bc40" loc="126:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2b9aa96717a8" loc="117:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2b9aa969a610" loc="128:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2b9aa969a3a0" loc="128:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2b9aa9677ba8" loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2b9aa966e338" loc="122:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2b9aa966e0c8" loc="122:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b9aa9672020" loc="113:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2b9aa9673c88" loc="113:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b9aa96751d8" loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2b9aa9696de0" loc="142:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b9aa9696b70" loc="142:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b9aa9672758" loc="114:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2b9aa9698690" loc="131:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2b9aa9698420" loc="131:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b9aa9697538" loc="137:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2b9aa969b518" loc="125:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2b9aa969b2a8" loc="125:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2b9aa96964a0" loc="141:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2b9aa9670290" loc="119:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2b9aa9670020" loc="119:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b9aa9675b30" loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9aa96758c0" loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b9aa96710a8" loc="116:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2b9aa9672df8" loc="116:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2b9aa966eb48" loc="123:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2b9aa969ad18" loc="129:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2b9aa9698d80" loc="132:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b9aa9697c80" loc="139:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2b9aa96709a8" loc="120:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9aa8d374c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2b9aa9676a40" loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b9aa96734e0" loc="109:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9aa9673270" loc="109:/homes/mhartmann/baq/tinyos/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9aa8b36910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
