<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="23:LedAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ab41d417460"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ab41d261220"/></to>
    </wire>
    <wire loc="72:/homes/hglanzer/GIT/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ab41d261220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ab41d25f878"/></to>
    </wire>
    <wire loc="24:LedAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ab41d421c30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ab41d45d478"/></to>
    </wire>
    <wire loc="51:/homes/hglanzer/GIT/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ab41d45d478"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ab41d459e08"/></to>
    </wire>
    <wire loc="25:LedAppC.nc">
      <from><interface-ref name="LCD128x64" scoped="" ref="0x2ab41d437470"/></from>
      <to><interface-ref name="Lcd128x64" scoped="" ref="0x2ab41d4ca478"/></to>
    </wire>
    <wire loc="9:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <from><interface-ref name="Lcd128x64" scoped="" ref="0x2ab41d4ca478"/></from>
      <to><interface-ref name="LCD128x64" scoped="" ref="0x2ab41d4fdd68"/></to>
    </wire>
    <wire loc="27:LedAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2ab41d43f578"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab41d592420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2ab41d592420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ab41d5a31c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:LedAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x2ab41d43c7d8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab41d7668d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2ab41d7668d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ab41d5a31c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/homes/hglanzer/GIT/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab41d260620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab41d59ede0"/></to>
    </wire>
    <wire loc="67:/homes/hglanzer/GIT/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ab41d410020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ab41d169600"/></to>
    </wire>
    <wire loc="53:/homes/hglanzer/GIT/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ab41d169600"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ab41d220448"/></to>
    </wire>
    <wire loc="68:/homes/hglanzer/GIT/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ab41d4109f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab41d263620"/></to>
    </wire>
    <wire loc="58:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ab41d263620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab41d272600"/></to>
    </wire>
    <wire loc="71:/homes/hglanzer/GIT/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab41d40f140"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2ab41d260620"/></to>
    </wire>
    <wire loc="59:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ab41d266618"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ab41d3f38f0"/></to>
    </wire>
    <wire loc="61:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2ab41d271398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab41d3f32c0"/></to>
    </wire>
    <wire loc="91:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2ab41d272ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab41d4b72d8"/></to>
    </wire>
    <wire loc="62:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2ab41d272ca0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2ab41d26bb98"/></to>
    </wire>
    <wire loc="24:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ab41d26bb98"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2ab41d275698"/></to>
    </wire>
    <wire loc="63:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2ab41d278360"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2ab41d25e380"/></to>
    </wire>
    <wire loc="29:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2ab41d274b08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2ab41d278360"/></to>
    </wire>
    <wire loc="191:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2ab41d2bdaf0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d396970"/></to>
    </wire>
    <wire loc="165:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2ab41d29f658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ab41d33d020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2ab41d33d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d8d7710"/></to>
    </wire>
    <wire loc="176:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2ab41d2b0658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ab41d34cd60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2ab41d34cd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d932710"/></to>
    </wire>
    <wire loc="185:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2ab41d2b5348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ab41d34e5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2ab41d34e5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d99a710"/></to>
    </wire>
    <wire loc="143:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2ab41d28b348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ab41d314740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2ab41d314740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d7b2710"/></to>
    </wire>
    <wire loc="183:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2ab41d2b7020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ab41d3502a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2ab41d3502a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d9a1710"/></to>
    </wire>
    <wire loc="146:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2ab41d289658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ab41d31c930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2ab41d31c930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d80e6a8"/></to>
    </wire>
    <wire loc="157:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2ab41d29a7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ab41d32b740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2ab41d32b740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d87c710"/></to>
    </wire>
    <wire loc="168:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2ab41d2aaaf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ab41d339430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2ab41d339430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d8ce710"/></to>
    </wire>
    <wire loc="179:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2ab41d2adaf0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ab41d348120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2ab41d348120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d951710"/></to>
    </wire>
    <wire loc="138:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2ab41d283af0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ab41d309020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2ab41d309020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d79f710"/></to>
    </wire>
    <wire loc="149:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2ab41d294af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ab41d319d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2ab41d319d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d805710"/></to>
    </wire>
    <wire loc="160:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2ab41d297c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ab41d328bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2ab41d328bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d873710"/></to>
    </wire>
    <wire loc="171:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2ab41d2a6020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ab41d3368c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2ab41d3368c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d8ed710"/></to>
    </wire>
    <wire loc="188:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2ab41d2b27e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ab41d35da50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2ab41d35da50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d9bb710"/></to>
    </wire>
    <wire loc="194:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2ab41d2b97e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d3ab020"/></to>
    </wire>
    <wire loc="174:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2ab41d2a4348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ab41d33ea50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2ab41d33ea50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d939710"/></to>
    </wire>
    <wire loc="141:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2ab41d28d020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ab41d306430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2ab41d306430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d796710"/></to>
    </wire>
    <wire loc="152:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2ab41d2901a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ab41d325120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2ab41d325120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d820710"/></to>
    </wire>
    <wire loc="192:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2ab41d2bb4d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d3a3ab0"/></to>
    </wire>
    <wire loc="155:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2ab41d29c4d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ab41d32d500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2ab41d32d500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d85d6a8"/></to>
    </wire>
    <wire loc="166:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2ab41d29e7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ab41d33c120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2ab41d33c120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d8d4710"/></to>
    </wire>
    <wire loc="177:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2ab41d2af7e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ab41d34be18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2ab41d34be18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d92f710"/></to>
    </wire>
    <wire loc="186:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2ab41d2b44d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ab41d35f740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2ab41d35f740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d997710"/></to>
    </wire>
    <wire loc="144:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2ab41d28a4d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ab41d3138c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2ab41d3138c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d7af710"/></to>
    </wire>
    <wire loc="147:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2ab41d2887e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ab41d31ba50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2ab41d31ba50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d80b710"/></to>
    </wire>
    <wire loc="158:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2ab41d299968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ab41d32a8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2ab41d32a8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d879710"/></to>
    </wire>
    <wire loc="169:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2ab41d2a9c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ab41d3385b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2ab41d3385b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d8cb710"/></to>
    </wire>
    <wire loc="180:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2ab41d2acc78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ab41d3472a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2ab41d3472a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d94e710"/></to>
    </wire>
    <wire loc="139:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2ab41d282c78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ab41d308120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2ab41d308120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d79c710"/></to>
    </wire>
    <wire loc="150:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2ab41d293c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ab41d318e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2ab41d318e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d802710"/></to>
    </wire>
    <wire loc="161:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2ab41d296e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ab41d326d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2ab41d326d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d870710"/></to>
    </wire>
    <wire loc="189:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2ab41d2be968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ab41d35cbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2ab41d35cbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d9b8710"/></to>
    </wire>
    <wire loc="164:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2ab41d2a01a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ab41d32fe40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2ab41d32fe40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d8db6a8"/></to>
    </wire>
    <wire loc="175:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2ab41d2b14d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ab41d34dbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2ab41d34dbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d935710"/></to>
    </wire>
    <wire loc="184:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2ab41d2b61a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ab41d34f430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2ab41d34f430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d99d710"/></to>
    </wire>
    <wire loc="195:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2ab41d2c6968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d3b8180"/></to>
    </wire>
    <wire loc="142:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2ab41d28c1a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ab41d3155b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2ab41d3155b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d7b5710"/></to>
    </wire>
    <wire loc="153:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2ab41d28f348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ab41d3242a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2ab41d3242a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d81d710"/></to>
    </wire>
    <wire loc="182:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2ab41d2abe00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ab41d3511e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2ab41d3511e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d9a46a8"/></to>
    </wire>
    <wire loc="156:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2ab41d29b658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ab41d32c5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2ab41d32c5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d859710"/></to>
    </wire>
    <wire loc="167:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2ab41d29d968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ab41d33a2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2ab41d33a2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d8d1710"/></to>
    </wire>
    <wire loc="178:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2ab41d2ae968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ab41d349020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2ab41d349020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d954710"/></to>
    </wire>
    <wire loc="187:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2ab41d2b3658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ab41d35e8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2ab41d35e8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d9be710"/></to>
    </wire>
    <wire loc="137:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2ab41d276870"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ab41d30bdc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2ab41d30bdc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d7a26a8"/></to>
    </wire>
    <wire loc="148:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2ab41d295968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ab41d31abd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2ab41d31abd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d808710"/></to>
    </wire>
    <wire loc="159:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2ab41d298af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ab41d329a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2ab41d329a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d876710"/></to>
    </wire>
    <wire loc="170:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2ab41d2a8e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ab41d337740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2ab41d337740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d8f0710"/></to>
    </wire>
    <wire loc="193:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2ab41d2ba658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d39fc38"/></to>
    </wire>
    <wire loc="173:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2ab41d2a51a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ab41d33f930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2ab41d33f930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d93c6a8"/></to>
    </wire>
    <wire loc="162:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2ab41d2a1020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ab41d335e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2ab41d335e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d86d710"/></to>
    </wire>
    <wire loc="140:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2ab41d281e00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ab41d3072a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2ab41d3072a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d799710"/></to>
    </wire>
    <wire loc="151:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2ab41d291020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ab41d316020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2ab41d316020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab41d7ff710"/></to>
    </wire>
    <wire loc="54:/homes/hglanzer/GIT/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2ab41d16c1c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab41d21f2b0"/></to>
    </wire>
    <wire loc="55:/homes/hglanzer/GIT/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2ab41d228758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2ab41d23f660"/></to>
    </wire>
    <wire loc="65:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2ab41d2452b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2ab41d66c268"/></to>
    </wire>
    <wire loc="35:LedC.nc">
      <from><interface-ref name="runTasks" scoped="" ref="0x2ab41d448020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab41d16c1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/homes/hglanzer/GIT/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ab41d4b72d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab41d459840"/></to>
    </wire>
    <wire loc="54:/homes/hglanzer/GIT/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2ab41d46a6c8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2ab41d46d488"/></to>
    </wire>
    <wire loc="93:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2ab41d46d488"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2ab41d276870"/></to>
    </wire>
    <wire loc="55:/homes/hglanzer/GIT/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2ab41d469958"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2ab41d488688"/></to>
    </wire>
    <wire loc="94:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2ab41d488688"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2ab41d283af0"/></to>
    </wire>
    <wire loc="56:/homes/hglanzer/GIT/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2ab41d468ae0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2ab41d487810"/></to>
    </wire>
    <wire loc="95:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2ab41d487810"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2ab41d282c78"/></to>
    </wire>
    <wire loc="103:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA6" scoped="" ref="0x2ab41d494518"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2ab41d28b348"/></to>
    </wire>
    <wire loc="107:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB1" scoped="" ref="0x2ab41d491cb0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2ab41d2887e0"/></to>
    </wire>
    <wire loc="112:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB6" scoped="" ref="0x2ab41d4a1818"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x2ab41d2901a0"/></to>
    </wire>
    <wire loc="118:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC3" scoped="" ref="0x2ab41d49b380"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x2ab41d299968"/></to>
    </wire>
    <wire loc="129:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD5" scoped="" ref="0x2ab41d4bbcb0"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x2ab41d2a9c78"/></to>
    </wire>
    <wire loc="98:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA1" scoped="" ref="0x2ab41d49ab38"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2ab41d283af0"/></to>
    </wire>
    <wire loc="124:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD0" scoped="" ref="0x2ab41d4aa1b8"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x2ab41d2a01a0"/></to>
    </wire>
    <wire loc="116:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC1" scoped="" ref="0x2ab41d49d020"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x2ab41d29b658"/></to>
    </wire>
    <wire loc="101:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA4" scoped="" ref="0x2ab41d4961b8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2ab41d28d020"/></to>
    </wire>
    <wire loc="110:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB4" scoped="" ref="0x2ab41d4a3380"/></from>
      <to><interface-ref name="PortB4" scoped="" ref="0x2ab41d293c78"/></to>
    </wire>
    <wire loc="121:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC6" scoped="" ref="0x2ab41d4aecb0"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x2ab41d296e00"/></to>
    </wire>
    <wire loc="127:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD3" scoped="" ref="0x2ab41d4a7818"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x2ab41d29d968"/></to>
    </wire>
    <wire loc="104:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA7" scoped="" ref="0x2ab41d493818"/></from>
      <to><interface-ref name="PortA7" scoped="" ref="0x2ab41d28a4d0"/></to>
    </wire>
    <wire loc="113:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB7" scoped="" ref="0x2ab41d4a09b0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2ab41d28f348"/></to>
    </wire>
    <wire loc="125:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD1" scoped="" ref="0x2ab41d4a9380"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x2ab41d29f658"/></to>
    </wire>
    <wire loc="99:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA2" scoped="" ref="0x2ab41d499e38"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2ab41d282c78"/></to>
    </wire>
    <wire loc="108:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB2" scoped="" ref="0x2ab41d4a5020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2ab41d295968"/></to>
    </wire>
    <wire loc="119:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC4" scoped="" ref="0x2ab41d4b0518"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x2ab41d298af0"/></to>
    </wire>
    <wire loc="130:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD6" scoped="" ref="0x2ab41d4b9020"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2ab41d2a8e00"/></to>
    </wire>
    <wire loc="106:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB0" scoped="" ref="0x2ab41d4929b0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2ab41d289658"/></to>
    </wire>
    <wire loc="102:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA5" scoped="" ref="0x2ab41d495380"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x2ab41d28c1a0"/></to>
    </wire>
    <wire loc="111:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB5" scoped="" ref="0x2ab41d4a2518"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x2ab41d291020"/></to>
    </wire>
    <wire loc="117:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC2" scoped="" ref="0x2ab41d49c1b8"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x2ab41d29a7e0"/></to>
    </wire>
    <wire loc="122:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC7" scoped="" ref="0x2ab41d4ab020"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x2ab41d2a1020"/></to>
    </wire>
    <wire loc="128:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD4" scoped="" ref="0x2ab41d4a69b0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2ab41d2aaaf0"/></to>
    </wire>
    <wire loc="97:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA0" scoped="" ref="0x2ab41d4859a0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2ab41d276870"/></to>
    </wire>
    <wire loc="100:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA3" scoped="" ref="0x2ab41d497020"/></from>
      <to><interface-ref name="PortA3" scoped="" ref="0x2ab41d281e00"/></to>
    </wire>
    <wire loc="109:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB3" scoped="" ref="0x2ab41d4a41b8"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2ab41d294af0"/></to>
    </wire>
    <wire loc="115:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC0" scoped="" ref="0x2ab41d49fcb0"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x2ab41d29c4d0"/></to>
    </wire>
    <wire loc="120:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC5" scoped="" ref="0x2ab41d4af818"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x2ab41d297c78"/></to>
    </wire>
    <wire loc="126:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD2" scoped="" ref="0x2ab41d4a8518"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x2ab41d29e7e0"/></to>
    </wire>
    <wire loc="131:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD7" scoped="" ref="0x2ab41d4b81b8"/></from>
      <to><interface-ref name="PortD7" scoped="" ref="0x2ab41d2a6020"/></to>
    </wire>
    <wire loc="182:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeRectangle" scoped="" ref="0x2ab41d54f1c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab41d16c1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="262:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="clearScreen" scoped="" ref="0x2ab41d55e8c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab41d16c1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="230:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeString" scoped="" ref="0x2ab41d551020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab41d16c1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="198:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeCircle" scoped="" ref="0x2ab41d548be0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab41d16c1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeLine" scoped="" ref="0x2ab41d573020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab41d16c1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="wait4Controller" scoped="" ref="0x2ab41d50e020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab41d16c1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/homes/hglanzer/GIT/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2ab41d5a31c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ab41d5b5b18"/></to>
    </wire>
    <wire loc="61:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2ab41d5b5b18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab41d7280c8"/></to>
    </wire>
    <wire loc="59:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ab41d59ede0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab41d5c46f0"/></to>
    </wire>
    <wire loc="65:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2ab41d5ae108"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ab41d739c38"/></to>
    </wire>
    <wire loc="35:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ab41d5c46f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab41d6c3190"/></to>
    </wire>
    <wire loc="62:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2ab41d7425a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab41d6b9d88"/></to>
    </wire>
    <wire loc="63:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ab41d6ef020"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2ab41d5c1020"/></to>
    </wire>
    <wire loc="36:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2ab41d5c1020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ab41d6c3938"/></to>
    </wire>
    <wire loc="66:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ab41d751e48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2ab41d5d0150"/></to>
    </wire>
    <wire loc="37:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2ab41d5d0150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ab41d6bfa90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2ab41d6bfa90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ab41da7ba90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2ab41d6c3190"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab41da7f0e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2ab41d6c3938"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ab41da7f888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2ab41daa6b98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab41d64ce00"/></to>
    </wire>
    <wire loc="67:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ab41d64ce00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab41d658180"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2ab41daa1b60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ab41d644020"/></to>
    </wire>
    <wire loc="68:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2ab41d644020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ab41d653160"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2ab41daa0b58"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ab41d643020"/></to>
    </wire>
    <wire loc="69:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ab41d643020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ab41d652190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerSync" scoped="" ref="0x2ab41da9dbb0"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2ab41d65c218"/></to>
    </wire>
    <wire loc="70:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x2ab41d65c218"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2ab41d66c958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2ab41d6eb020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab41d16c1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2ab41d73d618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab41d16c1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/homes/hglanzer/GIT/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/homes/hglanzer/GIT/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformP.nc" safe="">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <documentation loc="10:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc" safe="">
      <documentation loc="10:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc" safe="">
      <documentation loc="14:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/homes/hglanzer/GIT/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/homes/hglanzer/GIT/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/homes/hglanzer/GIT/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/homes/hglanzer/GIT/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedC" loc="13:LedC.nc" safe="">
      <documentation loc="6:LedC.nc">
        <short>&#10;*</short>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/homes/hglanzer/GIT/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/homes/hglanzer/GIT/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/homes/hglanzer/GIT/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LCD128x64C" loc="1:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <configuration/>
    </component>
    <component qname="LCD128x64P" loc="4:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <module/>
    </component>
    <component qname="LedAppC.Timer0" loc="44(LedAppC.Timer0):/homes/hglanzer/GIT/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/hglanzer/GIT/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/homes/hglanzer/GIT/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <documentation loc="11:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <documentation loc="11:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP):/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <documentation loc="11:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ab41d5c8068"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0SyncC" loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <documentation loc="33:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0SyncP" loc="58:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc" safe="">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in SYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in SYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in SYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;--> CHANGED TO SYNC-Mode(CPL_CLK)&#9;hglanzer&#10;--> AS0=0 in ASSR&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/homes/hglanzer/GIT/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/homes/hglanzer/GIT/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/homes/hglanzer/GIT/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/homes/hglanzer/GIT/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/homes/hglanzer/GIT/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedAppC.Timer1" loc="44(LedAppC.Timer1):/homes/hglanzer/GIT/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/hglanzer/GIT/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ab41d2c3ba0" loc="40:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ab41d2cd020" loc="40:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ab41d2cd368" loc="40:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ab41d2d1610" loc="41:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ab41d2d1978" loc="42:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ab41d2d1ce0" loc="43:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2ab41d2ce060" loc="44:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ab41d365020" loc="42:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ab41d365388" loc="43:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ab41d3656f0" loc="44:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2ab41d365a20" loc="45:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/homes/hglanzer/GIT/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/homes/hglanzer/GIT/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncC" loc="30:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc" abstract="">
      <documentation loc="11:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2ab41d5c8068" loc="30:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ab41d5c8068"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2ab41d5c8358" loc="30:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncP" loc="30:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2ab41d5da748" loc="30:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ab41d5da748"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2ab41d5daa38" loc="30:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/homes/hglanzer/GIT/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/homes/hglanzer/GIT/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ab41d6d70a8" loc="46:/homes/hglanzer/GIT/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab41d6d70a8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/homes/hglanzer/GIT/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ab41d707020" loc="46:/homes/hglanzer/GIT/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab41d707020"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2ab41d707330" loc="46:/homes/hglanzer/GIT/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/homes/hglanzer/GIT/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/homes/hglanzer/GIT/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ab41d73a728" loc="46:/homes/hglanzer/GIT/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab41d73a728"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2ab41d260620" loc="58:/homes/hglanzer/GIT/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2ab41d260620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41d260970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ab41d261220" loc="57:/homes/hglanzer/GIT/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ab41d261220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ab41d261570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ab41d25e380" loc="52:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2ab41d25e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41d25e6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab41d263620" loc="46:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab41d263620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41d263970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2ab41d266618" loc="50:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ab41d266618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2ab41d266968"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2ab41d266af0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2ab41d266c78"/>
        <function-ref name="actualMicro" scoped="" ref="0x2ab41d266e00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2ab41d25e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2ab41d272ca0" loc="45:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2ab41d272ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41d271020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab41d272600" loc="44:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab41d272600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41d272950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2ab41d271398" loc="46:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2ab41d271398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41d2716e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ab41d278360" loc="18:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2ab41d278360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41d2786b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2ab41d26bb98" loc="17:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ab41d26bb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41d278020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ab41d274b08" loc="19:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2ab41d274b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41d274e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2ab41d27c8d8" loc="18:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2ab41d27c8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d27cc28"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d27cdb0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d274020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2741a8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d274330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2744b8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d274640"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2747c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2ab41d275698" loc="17:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ab41d275698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41d2759e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2ab41d2bdaf0" loc="100:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2ab41d2bdaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2bc5e8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2bc770"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2bc8f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2bca80"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2bcc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2bcd90"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2bb020"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2bb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2ab41d29f658" loc="74:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2ab41d29f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d29f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d29fb30"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d29fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d29fe40"/>
        <function-ref name="get" scoped="" ref="0x2ab41d29e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d29e1a8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d29e330"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d29e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2ab41d2b0658" loc="85:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2ab41d2b0658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2b09a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2b0b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2b0cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2b0e40"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2af020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2af1a8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2af330"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2af4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2ab41d2b5348" loc="94:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2ab41d2b5348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2b5698"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2b5820"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2b59a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2b5b30"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2b5cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2b5e40"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2b4020"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2b41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2ab41d28b348" loc="52:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2ab41d28b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d28b698"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d28b820"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d28b9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d28bb30"/>
        <function-ref name="get" scoped="" ref="0x2ab41d28bcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d28be40"/>
        <function-ref name="set" scoped="" ref="0x2ab41d28a020"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d28a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2ab41d2b7020" loc="92:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2ab41d2b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2b7370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2b74f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2b7680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2b7808"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2b7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2b7b18"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2b7ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2b7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2ab41d289658" loc="55:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2ab41d289658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2899a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d289b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d289cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d289e40"/>
        <function-ref name="get" scoped="" ref="0x2ab41d288020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2881a8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d288330"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2884b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2ab41d29a7e0" loc="66:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2ab41d29a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d29ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d29acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d29ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d299020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2991a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d299330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2994b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d299640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2ab41d2aaaf0" loc="77:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2ab41d2aaaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2aae40"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2a9020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2a91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2a9330"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2a94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2a9640"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2a97c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2a9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2ab41d2adaf0" loc="88:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2ab41d2adaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2ade40"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2ac020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2ac1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2ac330"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2ac4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2ac640"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2ac7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2ac950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2ab41d283af0" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2ab41d283af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d283e40"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d282020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2821a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d282330"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2824b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d282640"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2827c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d282950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2ab41d294af0" loc="58:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2ab41d294af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d294e40"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d293020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2931a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d293330"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2934b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d293640"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2937c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d293950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2ab41d297c78" loc="69:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2ab41d297c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d296020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2961a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d296330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2964b8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d296640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2967c8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d296950"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d296ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2ab41d2a6020" loc="80:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2ab41d2a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2a6370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2a64f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2a6680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2a6808"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2a6990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2a6b18"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2a6ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2a6e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2ab41d2b27e0" loc="97:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2ab41d2b27e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2b2b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2b2cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2b2e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2be020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2be1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2be330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2be4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2be640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2ab41d2b97e0" loc="103:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2ab41d2b97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2b9b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2b9cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2b9e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2c6020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2c61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2c6330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2c64b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2c6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2ab41d2a4348" loc="83:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2ab41d2a4348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2a4698"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2a4820"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2a49a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2a4b30"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2a4cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2a4e40"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2b1020"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2b11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2ab41d28d020" loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2ab41d28d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d28d370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d28d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d28d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d28d808"/>
        <function-ref name="get" scoped="" ref="0x2ab41d28d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d28db18"/>
        <function-ref name="set" scoped="" ref="0x2ab41d28dca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d28de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2ab41d2901a0" loc="61:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2ab41d2901a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2904f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d290678"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d290800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d290988"/>
        <function-ref name="get" scoped="" ref="0x2ab41d290b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d290c98"/>
        <function-ref name="set" scoped="" ref="0x2ab41d290e20"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d28f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2ab41d2bb4d0" loc="101:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2ab41d2bb4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2bb820"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2bb9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2bbb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2bbcb8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2bbe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2ba020"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2ba1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2ba330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2ab41d29c4d0" loc="64:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2ab41d29c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d29c820"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d29c9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d29cb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d29ccb8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d29ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d29b020"/>
        <function-ref name="set" scoped="" ref="0x2ab41d29b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d29b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2ab41d29e7e0" loc="75:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2ab41d29e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d29eb30"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d29ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d29ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d29d020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d29d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d29d330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d29d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d29d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2ab41d2af7e0" loc="86:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2ab41d2af7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2afb30"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2afcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2afe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2ae020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2ae1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2ae330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2ae4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2ae640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2ab41d2b44d0" loc="95:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2ab41d2b44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2b4820"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2b49a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2b4b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2b4cb8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2b4e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2b3020"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2b31a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2b3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2ab41d28a4d0" loc="53:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2ab41d28a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d28a820"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d28a9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d28ab30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d28acb8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d28ae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d289020"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2891a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d289330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2ab41d2887e0" loc="56:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2ab41d2887e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d288b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d288cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d288e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d295020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2951a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d295330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2954b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d295640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2ab41d299968" loc="67:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2ab41d299968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d299cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d299e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d298020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2981a8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d298330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2984b8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d298640"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2987c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2ab41d2a9c78" loc="78:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2ab41d2a9c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2a8020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2a81a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2a8330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2a84b8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2a8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2a87c8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2a8950"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2a8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2ab41d2acc78" loc="89:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2ab41d2acc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2ab020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2ab1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2ab330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2ab4b8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2ab640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2ab7c8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2ab950"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2abad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2ab41d282c78" loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2ab41d282c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d281020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2811a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d281330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2814b8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d281640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2817c8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d281950"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d281ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2ab41d293c78" loc="59:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2ab41d293c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2920f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d292278"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d292400"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d292588"/>
        <function-ref name="get" scoped="" ref="0x2ab41d292710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d292898"/>
        <function-ref name="set" scoped="" ref="0x2ab41d292a20"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d292ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2ab41d296e00" loc="70:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2ab41d296e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2a31a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2a3330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2a34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2a3640"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2a37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2a3950"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2a3ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2a3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2ab41d2be968" loc="98:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2ab41d2be968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2becb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2bee40"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2bd020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2bd1a8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2bd330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2bd4b8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2bd640"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2bd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2ab41d2a01a0" loc="73:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2ab41d2a01a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2a06f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2a0878"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2a0a00"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2a0b88"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2a0d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d29f020"/>
        <function-ref name="set" scoped="" ref="0x2ab41d29f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d29f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2ab41d2b14d0" loc="84:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2ab41d2b14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2b1820"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2b19a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2b1b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2b1cb8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2b1e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2b0020"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2b01a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2b0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2ab41d2b61a0" loc="93:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2ab41d2b61a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2b64f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2b6678"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2b6800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2b6988"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2b6b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2b6c98"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2b6e20"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2ab41d2c6968" loc="104:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2ab41d2c6968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2c6cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2c6e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2c5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2c51a8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2c5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2c54b8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2c5640"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2c57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2ab41d28c1a0" loc="51:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2ab41d28c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d28c4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d28c678"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d28c800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d28c988"/>
        <function-ref name="get" scoped="" ref="0x2ab41d28cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d28cc98"/>
        <function-ref name="set" scoped="" ref="0x2ab41d28ce20"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d28b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2ab41d28f348" loc="62:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2ab41d28f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d28f698"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d28f820"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d28f9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d28fb30"/>
        <function-ref name="get" scoped="" ref="0x2ab41d28fcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d28fe40"/>
        <function-ref name="set" scoped="" ref="0x2ab41d29c020"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d29c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2ab41d2abe00" loc="91:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2ab41d2abe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2b81a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2b8330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2b84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2b8640"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2b87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2b8950"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2b8ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2b8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2ab41d29b658" loc="65:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2ab41d29b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d29b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d29bb30"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d29bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d29be40"/>
        <function-ref name="get" scoped="" ref="0x2ab41d29a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d29a1a8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d29a330"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d29a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2ab41d29d968" loc="76:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2ab41d29d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d29dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d29de40"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2aa020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2aa1a8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2aa330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2aa4b8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2aa640"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2aa7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2ab41d2ae968" loc="87:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2ab41d2ae968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2aecb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2aee40"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2ad020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2ad1a8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2ad330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2ad4b8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2ad640"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2ad7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2ab41d2b3658" loc="96:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2ab41d2b3658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2b39a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2b3b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2b3cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2b3e40"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2b2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2b21a8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2b2330"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2b24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2ab41d276870" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2ab41d276870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d276bc0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d276d48"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d283020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2831a8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d283330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2834b8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d283640"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2837c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2ab41d295968" loc="57:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2ab41d295968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d295cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d295e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d294020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2941a8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d294330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2944b8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d294640"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2947c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2ab41d298af0" loc="68:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2ab41d298af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d298e40"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d297020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2971a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d297330"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2974b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d297640"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2977c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d297950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2ab41d2a8e00" loc="79:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2ab41d2a8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2a71a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2a7330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2a74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2a7640"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2a77c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2a7950"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2a7ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2a7c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2ab41d2ba658" loc="102:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2ab41d2ba658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2ba9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2bab30"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2bacb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2bae40"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2b9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2b91a8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2b9330"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2b94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2ab41d2a51a0" loc="82:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2ab41d2a51a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2a54f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2a5678"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2a5800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2a5988"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2a5b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2a5c98"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2a5e20"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2ab41d2a1020" loc="71:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2ab41d2a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d2a1370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2a14f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d2a1680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d2a1808"/>
        <function-ref name="get" scoped="" ref="0x2ab41d2a1990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d2a1b18"/>
        <function-ref name="set" scoped="" ref="0x2ab41d2a1ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d2a1e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2ab41d281e00" loc="49:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2ab41d281e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d28e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d28e330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d28e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d28e640"/>
        <function-ref name="get" scoped="" ref="0x2ab41d28e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d28e950"/>
        <function-ref name="set" scoped="" ref="0x2ab41d28ead8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d28ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2ab41d291020" loc="60:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2ab41d291020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d291370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d2914f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d291680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d291808"/>
        <function-ref name="get" scoped="" ref="0x2ab41d291990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d291b18"/>
        <function-ref name="set" scoped="" ref="0x2ab41d291ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d291e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ab41d308120" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ab41d308120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d308470"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d3085f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d308780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d308908"/>
        <function-ref name="get" scoped="" ref="0x2ab41d308a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d308c18"/>
        <function-ref name="set" scoped="" ref="0x2ab41d308da0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d307020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ab41d3155b8" loc="49:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ab41d3155b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d315908"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d315a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d315c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d315da0"/>
        <function-ref name="get" scoped="" ref="0x2ab41d314020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d3141a8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d314330"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d3144b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ab41d30bdc0" loc="44:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ab41d30bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d30a170"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d30a2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d30a480"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d30a608"/>
        <function-ref name="get" scoped="" ref="0x2ab41d30a790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d30a918"/>
        <function-ref name="set" scoped="" ref="0x2ab41d30aaa0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d30ac28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ab41d3072a8" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ab41d3072a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d3075f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d307780"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d307908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d307a90"/>
        <function-ref name="get" scoped="" ref="0x2ab41d307c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d307da0"/>
        <function-ref name="set" scoped="" ref="0x2ab41d306020"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d3061a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ab41d314740" loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ab41d314740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d314a90"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d314c18"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d314da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d313020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d3131a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d313330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d3134b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d313640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ab41d309020" loc="45:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ab41d309020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d309370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d3094f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d309680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d309808"/>
        <function-ref name="get" scoped="" ref="0x2ab41d309990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d309b18"/>
        <function-ref name="set" scoped="" ref="0x2ab41d309ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d309e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ab41d306430" loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ab41d306430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d306780"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d306908"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d306a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d306c18"/>
        <function-ref name="get" scoped="" ref="0x2ab41d306da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d315020"/>
        <function-ref name="set" scoped="" ref="0x2ab41d3151a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d315330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ab41d3138c8" loc="51:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ab41d3138c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d313c18"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d313da0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d312020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d3121a8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d312330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d3124b8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d312640"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d3127c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d7a26a8" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d7a26a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d7a29f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d7a2b80"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d7a2d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d7a1020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d7a11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d7a1330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d7a14b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d7a1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d79f710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d79f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d79fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d79fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d79fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d79e020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d79e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d79e330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d79e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d79e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d79c710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d79c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d79ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d79cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d79cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d79b020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d79b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d79b330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d79b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d79b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d799710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d799710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d799a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d799be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d799d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d798020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d7981a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d798330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d7984b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d798640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d796710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d796710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d796a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d796be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d796d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d7b7020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d7b71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d7b7330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d7b74b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d7b7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d7b5710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d7b5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d7b5a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d7b5be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d7b5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d7b4020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d7b41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d7b4330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d7b44b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d7b4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d7b2710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d7b2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d7b2a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d7b2be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d7b2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d7b1020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d7b11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d7b1330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d7b14b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d7b1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d7af710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d7af710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d7afa60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d7afbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d7afd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d7ae020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d7ae1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d7ae330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d7ae4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d7ae640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ab41d31abd8" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ab41d31abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d319020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d3191a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d319330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d3194b8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d319640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d3197c8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d319950"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d319ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ab41d316020" loc="49:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ab41d316020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d316370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d3164f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d316680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d316808"/>
        <function-ref name="get" scoped="" ref="0x2ab41d316990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d316b18"/>
        <function-ref name="set" scoped="" ref="0x2ab41d316ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d316e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ab41d31c930" loc="44:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ab41d31c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d31cc80"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d31ce08"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d31b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d31b1a8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d31b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d31b4b8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d31b640"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d31b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ab41d319d60" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ab41d319d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d3180d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d318260"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d3183e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d318570"/>
        <function-ref name="get" scoped="" ref="0x2ab41d3186f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d318880"/>
        <function-ref name="set" scoped="" ref="0x2ab41d318a08"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d318b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ab41d325120" loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ab41d325120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d325470"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d3255f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d325780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d325908"/>
        <function-ref name="get" scoped="" ref="0x2ab41d325a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d325c18"/>
        <function-ref name="set" scoped="" ref="0x2ab41d325da0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d324020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ab41d31ba50" loc="45:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ab41d31ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d31bda0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d31a020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d31a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d31a330"/>
        <function-ref name="get" scoped="" ref="0x2ab41d31a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d31a640"/>
        <function-ref name="set" scoped="" ref="0x2ab41d31a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d31a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ab41d318e18" loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ab41d318e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d3171a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d317330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d3174b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d317640"/>
        <function-ref name="get" scoped="" ref="0x2ab41d3177c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d317950"/>
        <function-ref name="set" scoped="" ref="0x2ab41d317ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d317c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ab41d3242a8" loc="51:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ab41d3242a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d3245f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d324780"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d324908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d324a90"/>
        <function-ref name="get" scoped="" ref="0x2ab41d324c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d324da0"/>
        <function-ref name="set" scoped="" ref="0x2ab41d323020"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d3231a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d80e6a8" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d80e6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d80e9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d80eb80"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d80ed08"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d80d020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d80d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d80d330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d80d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d80d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d80b710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d80b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d80ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d80bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d80bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d80a020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d80a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d80a330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d80a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d80a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d808710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d808710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d808a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d808be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d808d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d807020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d8071a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d807330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d8074b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d807640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d805710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d805710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d805a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d805be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d805d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d804020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d8041a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d804330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d8044b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d804640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d802710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d802710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d802a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d802be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d802d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d801020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d8011a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d801330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d8014b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d801640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d7ff710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d7ff710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d7ffa60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d7ffbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d7ffd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d822020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d8221a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d822330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d8224b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d822640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d820710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d820710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d820a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d820be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d820d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d81f020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d81f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d81f330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d81f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d81f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d81d710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d81d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d81da60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d81dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d81dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d81c020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d81c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d81c330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d81c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d81c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ab41d32b740" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ab41d32b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d32ba90"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d32bc18"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d32bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d32a020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d32a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d32a330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d32a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d32a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ab41d328bd8" loc="49:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ab41d328bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d326020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d3261a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d326330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d3264b8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d326640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d3267c8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d326950"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d326ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ab41d32d500" loc="44:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ab41d32d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d32d850"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d32d9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d32db60"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d32dce8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d32de70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d32c020"/>
        <function-ref name="set" scoped="" ref="0x2ab41d32c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d32c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ab41d32a8c8" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ab41d32a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d32ac18"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d32ada0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d329020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d3291a8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d329330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d3294b8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d329640"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d3297c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ab41d326d60" loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ab41d326d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d3350d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d335260"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d3353e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d335570"/>
        <function-ref name="get" scoped="" ref="0x2ab41d3356f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d335880"/>
        <function-ref name="set" scoped="" ref="0x2ab41d335a08"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d335b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ab41d32c5b8" loc="45:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ab41d32c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d32c908"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d32ca90"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d32cc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d32cda0"/>
        <function-ref name="get" scoped="" ref="0x2ab41d32b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d32b1a8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d32b330"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d32b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ab41d329a50" loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ab41d329a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d329da0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d328020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d3281a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d328330"/>
        <function-ref name="get" scoped="" ref="0x2ab41d3284b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d328640"/>
        <function-ref name="set" scoped="" ref="0x2ab41d3287c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d328950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ab41d335e18" loc="51:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ab41d335e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d3341a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d334330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d3344b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d334640"/>
        <function-ref name="get" scoped="" ref="0x2ab41d3347c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d334950"/>
        <function-ref name="set" scoped="" ref="0x2ab41d334ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d334c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d85d6a8" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d85d6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d85d9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d85db80"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d85dd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d85b020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d85b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d85b330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d85b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d85b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d859710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d859710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d859a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d859be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d859d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d87e020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d87e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d87e330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d87e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d87e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d87c710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d87c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d87ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d87cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d87cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d87b020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d87b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d87b330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d87b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d87b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d879710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d879710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d879a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d879be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d879d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d878020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d8781a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d878330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d8784b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d878640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d876710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d876710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d876a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d876be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d876d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d875020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d8751a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d875330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d8754b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d875640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d873710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d873710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d873a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d873be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d873d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d872020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d8721a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d872330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d8724b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d872640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d870710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d870710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d870a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d870be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d870d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d86f020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d86f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d86f330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d86f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d86f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d86d710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d86d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d86da60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d86dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d86dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d86c020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d86c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d86c330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d86c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d86c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ab41d33c120" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ab41d33c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d33c470"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d33c5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d33c780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d33c908"/>
        <function-ref name="get" scoped="" ref="0x2ab41d33ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d33cc18"/>
        <function-ref name="set" scoped="" ref="0x2ab41d33cda0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d33a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ab41d3385b8" loc="49:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ab41d3385b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d338908"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d338a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d338c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d338da0"/>
        <function-ref name="get" scoped="" ref="0x2ab41d337020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d3371a8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d337330"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d3374b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ab41d32fe40" loc="44:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ab41d32fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d32e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d32e348"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d32e4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d32e658"/>
        <function-ref name="get" scoped="" ref="0x2ab41d32e7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d32e968"/>
        <function-ref name="set" scoped="" ref="0x2ab41d32eaf0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d32ec78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ab41d33a2a8" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ab41d33a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d33a5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d33a780"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d33a908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d33aa90"/>
        <function-ref name="get" scoped="" ref="0x2ab41d33ac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d33ada0"/>
        <function-ref name="set" scoped="" ref="0x2ab41d339020"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d3391a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ab41d337740" loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ab41d337740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d337a90"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d337c18"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d337da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d336020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d3361a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d336330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d3364b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d336640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ab41d33d020" loc="45:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ab41d33d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d33d370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d33d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d33d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d33d808"/>
        <function-ref name="get" scoped="" ref="0x2ab41d33d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d33db18"/>
        <function-ref name="set" scoped="" ref="0x2ab41d33dca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d33de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ab41d339430" loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ab41d339430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d339780"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d339908"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d339a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d339c18"/>
        <function-ref name="get" scoped="" ref="0x2ab41d339da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d338020"/>
        <function-ref name="set" scoped="" ref="0x2ab41d3381a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d338330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ab41d3368c8" loc="51:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ab41d3368c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d336c18"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d336da0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d345020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d3451a8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d345330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d3454b8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d345640"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d3457c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d8db6a8" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d8db6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d8db9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d8dbb80"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d8dbd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d8d9020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d8d91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d8d9330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d8d94b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d8d9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d8d7710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d8d7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d8d7a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d8d7be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d8d7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d8d6020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d8d61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d8d6330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d8d64b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d8d6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d8d4710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d8d4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d8d4a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d8d4be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d8d4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d8d3020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d8d31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d8d3330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d8d34b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d8d3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d8d1710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d8d1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d8d1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d8d1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d8d1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d8d0020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d8d01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d8d0330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d8d04b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d8d0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d8ce710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d8ce710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d8cea60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d8cebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d8ced70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d8cd020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d8cd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d8cd330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d8cd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d8cd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d8cb710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d8cb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d8cba60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d8cbbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d8cbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d8f2020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d8f21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d8f2330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d8f24b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d8f2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d8f0710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d8f0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d8f0a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d8f0be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d8f0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d8ef020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d8ef1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d8ef330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d8ef4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d8ef640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d8ed710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d8ed710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d8eda60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d8edbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d8edd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d8ec020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d8ec1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d8ec330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d8ec4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d8ec640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ab41d34dbd8" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ab41d34dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d34c020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d34c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d34c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d34c4b8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d34c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d34c7c8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d34c950"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d34cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ab41d349020" loc="49:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ab41d349020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d349370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d3494f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d349680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d349808"/>
        <function-ref name="get" scoped="" ref="0x2ab41d349990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d349b18"/>
        <function-ref name="set" scoped="" ref="0x2ab41d349ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d349e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ab41d33f930" loc="44:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ab41d33f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d33fc80"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d33fe08"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d33e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d33e1a8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d33e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d33e4b8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d33e640"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d33e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ab41d34cd60" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ab41d34cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d34b0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d34b260"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d34b3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d34b570"/>
        <function-ref name="get" scoped="" ref="0x2ab41d34b6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d34b880"/>
        <function-ref name="set" scoped="" ref="0x2ab41d34ba08"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d34bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ab41d348120" loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ab41d348120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d348470"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d3485f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d348780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d348908"/>
        <function-ref name="get" scoped="" ref="0x2ab41d348a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d348c18"/>
        <function-ref name="set" scoped="" ref="0x2ab41d348da0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d347020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ab41d33ea50" loc="45:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ab41d33ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d33eda0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d34d020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d34d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d34d330"/>
        <function-ref name="get" scoped="" ref="0x2ab41d34d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d34d640"/>
        <function-ref name="set" scoped="" ref="0x2ab41d34d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d34d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ab41d34be18" loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ab41d34be18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d34a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d34a330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d34a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d34a640"/>
        <function-ref name="get" scoped="" ref="0x2ab41d34a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d34a950"/>
        <function-ref name="set" scoped="" ref="0x2ab41d34aad8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d34ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ab41d3472a8" loc="51:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ab41d3472a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d3475f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d347780"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d347908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d347a90"/>
        <function-ref name="get" scoped="" ref="0x2ab41d347c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d347da0"/>
        <function-ref name="set" scoped="" ref="0x2ab41d346020"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d3461a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d93c6a8" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d93c6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d93c9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d93cb80"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d93cd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d93b020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d93b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d93b330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d93b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d93b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d939710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d939710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d939a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d939be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d939d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d937020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d9371a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d937330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d9374b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d937640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d935710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d935710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d935a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d935be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d935d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d934020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d9341a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d934330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d9344b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d934640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d932710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d932710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d932a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d932be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d932d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d931020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d9311a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d931330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d9314b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d931640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d92f710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d92f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d92fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d92fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d92fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d956020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d9561a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d956330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d9564b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d956640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d954710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d954710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d954a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d954be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d954d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d953020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d9531a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d953330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d9534b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d953640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d951710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d951710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d951a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d951be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d951d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d950020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d9501a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d950330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d9504b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d950640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d94e710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d94e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d94ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d94ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d94ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d94d020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d94d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d94d330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d94d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d94d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ab41d34f430" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ab41d34f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d34f780"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d34f908"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d34fa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d34fc18"/>
        <function-ref name="get" scoped="" ref="0x2ab41d34fda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d34e020"/>
        <function-ref name="set" scoped="" ref="0x2ab41d34e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d34e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ab41d35e8c8" loc="49:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ab41d35e8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d35ec18"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d35eda0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d35d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d35d1a8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d35d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d35d4b8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d35d640"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d35d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ab41d3511e8" loc="44:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ab41d3511e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d351538"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d3516c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d351848"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d3519d0"/>
        <function-ref name="get" scoped="" ref="0x2ab41d351b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d351ce0"/>
        <function-ref name="set" scoped="" ref="0x2ab41d351e68"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d350020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ab41d34e5b8" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ab41d34e5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d34e908"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d34ea90"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d34ec18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d34eda0"/>
        <function-ref name="get" scoped="" ref="0x2ab41d35f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d35f1a8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d35f330"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d35f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ab41d35da50" loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ab41d35da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d35dda0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d35c020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d35c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d35c330"/>
        <function-ref name="get" scoped="" ref="0x2ab41d35c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d35c640"/>
        <function-ref name="set" scoped="" ref="0x2ab41d35c7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d35c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ab41d3502a8" loc="45:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ab41d3502a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d3505f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d350780"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d350908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d350a90"/>
        <function-ref name="get" scoped="" ref="0x2ab41d350c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d350da0"/>
        <function-ref name="set" scoped="" ref="0x2ab41d34f020"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d34f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ab41d35f740" loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ab41d35f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d35fa90"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d35fc18"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d35fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d35e020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d35e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d35e330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d35e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d35e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ab41d35cbd8" loc="51:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ab41d35cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d35a020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d35a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d35a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d35a4b8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d35a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d35a7c8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d35a950"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d35aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d9a46a8" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d9a46a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d9a49f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d9a4b80"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d9a4d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d9a3020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d9a31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d9a3330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d9a34b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d9a3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d9a1710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d9a1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d9a1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d9a1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d9a1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d99f020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d99f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d99f330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d99f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d99f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d99d710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d99d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d99da60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d99dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d99dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d99c020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d99c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d99c330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d99c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d99c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d99a710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d99a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d99aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d99abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d99ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d999020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d9991a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d999330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d9994b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d999640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d997710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d997710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d997a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d997be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d997d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d996020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d9961a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d996330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d9964b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d996640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d9be710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d9be710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d9bea60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d9bebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d9bed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d9bd020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d9bd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d9bd330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d9bd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d9bd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d9bb710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d9bb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d9bba60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d9bbbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d9bbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d9ba020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d9ba1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d9ba330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d9ba4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d9ba640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d9b8710" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d9b8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d9b8a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d9b8be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d9b8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d9b7020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d9b71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d9b7330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d9b74b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d9b7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d366ac0" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d366ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d366e10"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d374020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d3741a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d374330"/>
        <function-ref name="get" scoped="" ref="0x2ab41d3744b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d374640"/>
        <function-ref name="set" scoped="" ref="0x2ab41d3747c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d374950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d383db8" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d383db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d382170"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d3822f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d382480"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d382608"/>
        <function-ref name="get" scoped="" ref="0x2ab41d382790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d382918"/>
        <function-ref name="set" scoped="" ref="0x2ab41d382aa0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d382c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d37d3e0" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d37d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d37d730"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d37d8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d37da40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d37dbc8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d37dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d37c020"/>
        <function-ref name="set" scoped="" ref="0x2ab41d37c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d37c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d38a7e8" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d38a7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d38ab38"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d38acc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d38ae48"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d389020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d3891a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d389330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d3894b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d389640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d386c38" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d386c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d385020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d3851a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d385330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d3854b8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d385640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d3857c8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d385950"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d385ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d392020" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d392020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d392370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d3924f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d392680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d392808"/>
        <function-ref name="get" scoped="" ref="0x2ab41d392990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d392b18"/>
        <function-ref name="set" scoped="" ref="0x2ab41d392ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d392e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d38d480" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d38d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d38d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d38d958"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d38dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d38dc68"/>
        <function-ref name="get" scoped="" ref="0x2ab41d38ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d39e020"/>
        <function-ref name="set" scoped="" ref="0x2ab41d39e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d39e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d39b7e8" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d39b7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d39bb38"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d39bcc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d39be48"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d39a020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d39a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d39a330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d39a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d39a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d396970" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d396970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d396cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d396e48"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d3a7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d3a71a8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d3a7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d3a74b8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d3a7640"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d3a77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d3a3ab0" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d3a3ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d3a3e00"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d3a2020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d3a21a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d3a2330"/>
        <function-ref name="get" scoped="" ref="0x2ab41d3a24b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d3a2640"/>
        <function-ref name="set" scoped="" ref="0x2ab41d3a27c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d3a2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d39fc38" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d39fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d3b0020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d3b01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d3b0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d3b04b8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d3b0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d3b07c8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d3b0950"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d3b0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d3ab020" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d3ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d3ab370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d3ab4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d3ab680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d3ab808"/>
        <function-ref name="get" scoped="" ref="0x2ab41d3ab990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d3abb18"/>
        <function-ref name="set" scoped="" ref="0x2ab41d3abca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d3abe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab41d3b8180" loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab41d3b8180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d3b84d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d3b8658"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d3b87e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d3b8968"/>
        <function-ref name="get" scoped="" ref="0x2ab41d3b8af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d3b8c78"/>
        <function-ref name="set" scoped="" ref="0x2ab41d3b8e00"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d3b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab41d3f32c0" loc="27:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab41d3f32c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2ab41d164128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2ab41d164128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41d3f3610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2ab41d3f38f0" loc="28:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ab41d3f38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2ab41d3f3c40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2ab41d3f3dc8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2ab41d3f2020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2ab41d3f21a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2ab41d3f2330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2ab41d40f140" loc="60:/homes/hglanzer/GIT/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2ab41d40f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41d40f490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ab41d25f878" loc="57:/homes/hglanzer/GIT/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ab41d25f878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ab41d25fbc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2ab41d4109f8" loc="59:/homes/hglanzer/GIT/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ab41d4109f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41d410d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2ab41d410020" loc="58:/homes/hglanzer/GIT/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ab41d410020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41d410370"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ab41d4104f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ab41d410680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ab41d16c1c8" loc="48:/homes/hglanzer/GIT/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2ab41d16c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab41d16c518"/>
        <function-ref name="runTask" scoped="" ref="0x2ab41d16c6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ab41d169600" loc="47:/homes/hglanzer/GIT/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ab41d169600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41d169950"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ab41d169ad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ab41d169c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ab41d21f2b0" loc="56:/homes/hglanzer/GIT/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2ab41d21f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab41d21f600"/>
        <function-ref name="runTask" scoped="" ref="0x2ab41d21f788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2ab41d228758" loc="57:/homes/hglanzer/GIT/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2ab41d228758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ab41d228aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ab41d220448" loc="55:/homes/hglanzer/GIT/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ab41d220448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41d220798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ab41d220920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ab41d220aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2ab41d2452b0" loc="54:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ab41d2452b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ab41d245600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2ab41d23f660" loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2ab41d23f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ab41d23f9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2ab41d248a80" loc="51:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2ab41d248a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ab41d248dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2ab41d43f578" loc="19:LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2ab41d43f578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab41d43e8f0"/>
        <function-ref name="fired" scoped="" ref="0x2ab41d435020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab41d435d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab41d4358c0"/>
        <function-ref name="getdt" scoped="" ref="0x2ab41d43c1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2ab41d43ed40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab41d435470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab41d4360f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab41d43e320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab41d436598"/>
        <function-ref name="stop" scoped="" ref="0x2ab41d436a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2ab41d417460" loc="16:LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ab41d417460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ab41d4177b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x2ab41d43c7d8" loc="20:LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x2ab41d43c7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab41d44da18"/>
        <function-ref name="fired" scoped="" ref="0x2ab41d43a158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab41d43ae48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab41d43a9f8"/>
        <function-ref name="getdt" scoped="" ref="0x2ab41d44b2e8"/>
        <function-ref name="gett0" scoped="" ref="0x2ab41d44de68"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab41d43a5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab41d43b370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab41d44d448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab41d43b810"/>
        <function-ref name="stop" scoped="" ref="0x2ab41d43bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LCD128x64" ref="0x2ab41d437470" loc="18:LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2ab41d437470"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2ab41d4377c0"/>
        <function-ref name="initDone" scoped="" ref="0x2ab41d437948"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2ab41d437ad0"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2ab41d437c58"/>
        <function-ref name="startWriteString" scoped="" ref="0x2ab41d437de0"/>
        <function-ref name="writeByte" scoped="" ref="0x2ab41d41f020"/>
        <function-ref name="setPixel" scoped="" ref="0x2ab41d41f1a8"/>
        <function-ref name="circleWritten" scoped="" ref="0x2ab41d41f330"/>
        <function-ref name="writeBar" scoped="" ref="0x2ab41d41f4b8"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2ab41d41f640"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2ab41d41f7c8"/>
        <function-ref name="writePixel" scoped="" ref="0x2ab41d41f950"/>
        <function-ref name="initLCD" scoped="" ref="0x2ab41d41fad8"/>
        <function-ref name="stringWritten" scoped="" ref="0x2ab41d41fd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="runTasks" ref="0x2ab41d448020" loc="35:LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="runTasks" scoped="" ref="0x2ab41d448020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab41d448370"/>
        <function-ref name="runTask" scoped="" ref="0x2ab41d4484f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ab41d421c30" loc="15:LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ab41d421c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ab41d418020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ab41d4181a8"/>
        <function-ref name="led1On" scoped="" ref="0x2ab41d418330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ab41d4184b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ab41d418640"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4187c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ab41d418950"/>
        <function-ref name="setPort" scoped="" ref="0x2ab41d418c60"/>
        <function-ref name="led2Off" scoped="" ref="0x2ab41d4171a8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d418ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2ab41d418de8"/>
        <function-ref name="led2On" scoped="" ref="0x2ab41d417020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2ab41d45d478" loc="46:/homes/hglanzer/GIT/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ab41d45d478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ab41d45d7c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ab41d45d950"/>
        <function-ref name="led1On" scoped="" ref="0x2ab41d45dad8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ab41d45dc60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ab41d45dde8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d45a020"/>
        <function-ref name="led1Off" scoped="" ref="0x2ab41d45a1a8"/>
        <function-ref name="setPort" scoped="" ref="0x2ab41d45a4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ab41d45a950"/>
        <function-ref name="set" scoped="" ref="0x2ab41d45a330"/>
        <function-ref name="led0On" scoped="" ref="0x2ab41d45a640"/>
        <function-ref name="led2On" scoped="" ref="0x2ab41d45a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2ab41d46a6c8" loc="50:/homes/hglanzer/GIT/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2ab41d46a6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d46aa18"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d46aba0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d46ad28"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d469020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4691a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d469330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4694b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d469640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab41d459840" loc="46:/homes/hglanzer/GIT/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab41d459840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41d459b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2ab41d469958" loc="51:/homes/hglanzer/GIT/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2ab41d469958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d469ca8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d469e30"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d468020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d4681a8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d468330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d4684b8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d468640"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4687c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2ab41d459e08" loc="47:/homes/hglanzer/GIT/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ab41d459e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ab41d46b1a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ab41d46b330"/>
        <function-ref name="led1On" scoped="" ref="0x2ab41d46b4b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ab41d46b640"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ab41d46b7c8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d46b950"/>
        <function-ref name="led1Off" scoped="" ref="0x2ab41d46bad8"/>
        <function-ref name="setPort" scoped="" ref="0x2ab41d46bde8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ab41d46a330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d46bc60"/>
        <function-ref name="led0On" scoped="" ref="0x2ab41d46a020"/>
        <function-ref name="led2On" scoped="" ref="0x2ab41d46a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2ab41d468ae0" loc="52:/homes/hglanzer/GIT/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2ab41d468ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d468e30"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d467020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d4671a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d467330"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4674b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d467640"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4677c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d467950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA6" ref="0x2ab41d494518" loc="54:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA6" scoped="" ref="0x2ab41d494518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d494868"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d4949f0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d494b78"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d494d00"/>
        <function-ref name="get" scoped="" ref="0x2ab41d493020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d4931a8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d493330"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4934b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB1" ref="0x2ab41d491cb0" loc="58:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB1" scoped="" ref="0x2ab41d491cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d490170"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d4902f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d490480"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d490608"/>
        <function-ref name="get" scoped="" ref="0x2ab41d490790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d490918"/>
        <function-ref name="set" scoped="" ref="0x2ab41d490aa0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d490c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB6" ref="0x2ab41d4a1818" loc="63:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB6" scoped="" ref="0x2ab41d4a1818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d4a1b68"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d4a1cf0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d4a1e78"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d4a0030"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4a01b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d4a0340"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4a04c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4a0650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC3" ref="0x2ab41d49b380" loc="69:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC3" scoped="" ref="0x2ab41d49b380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d49b6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d49b858"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d49b9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d49bb68"/>
        <function-ref name="get" scoped="" ref="0x2ab41d49bcf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d49be78"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4b0030"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4b01b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2ab41d46d488" loc="44:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2ab41d46d488"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d46d7d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d46d960"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d46dae8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d46dc70"/>
        <function-ref name="get" scoped="" ref="0x2ab41d46ddf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d488020"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4881a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d488330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD5" ref="0x2ab41d4bbcb0" loc="80:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD5" scoped="" ref="0x2ab41d4bbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d4ba0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d4ba228"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d4ba3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d4ba538"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4ba6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d4ba848"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4ba9d0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4bab58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA1" ref="0x2ab41d49ab38" loc="49:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA1" scoped="" ref="0x2ab41d49ab38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d499020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d4991a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d499330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d4994b8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d499640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d4997c8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d499950"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d499ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD0" ref="0x2ab41d4aa1b8" loc="75:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD0" scoped="" ref="0x2ab41d4aa1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d4aa508"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d4aa690"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d4aa818"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d4aa9a0"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4aab28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d4aacb0"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4aae38"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC1" ref="0x2ab41d49d020" loc="67:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC1" scoped="" ref="0x2ab41d49d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d49d370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d49d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d49d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d49d808"/>
        <function-ref name="get" scoped="" ref="0x2ab41d49d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d49db18"/>
        <function-ref name="set" scoped="" ref="0x2ab41d49dca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d49de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA4" ref="0x2ab41d4961b8" loc="52:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA4" scoped="" ref="0x2ab41d4961b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d496508"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d496690"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d496818"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d4969a0"/>
        <function-ref name="get" scoped="" ref="0x2ab41d496b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d496cb0"/>
        <function-ref name="set" scoped="" ref="0x2ab41d496e38"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d495020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB4" ref="0x2ab41d4a3380" loc="61:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB4" scoped="" ref="0x2ab41d4a3380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d4a36d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d4a3858"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d4a39e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d4a3b68"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4a3cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d4a3e78"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4a2030"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4a21b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC6" ref="0x2ab41d4aecb0" loc="72:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC6" scoped="" ref="0x2ab41d4aecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d4ac0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d4ac228"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d4ac3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d4ac538"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4ac6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d4ac848"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4ac9d0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4acb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD3" ref="0x2ab41d4a7818" loc="78:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD3" scoped="" ref="0x2ab41d4a7818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d4a7b68"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d4a7cf0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d4a7e78"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d4a6030"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4a61b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d4a6340"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4a64c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4a6650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA7" ref="0x2ab41d493818" loc="55:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA7" scoped="" ref="0x2ab41d493818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d493b68"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d493cf0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d493e78"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d492030"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4921b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d492340"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4924c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d492650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB7" ref="0x2ab41d4a09b0" loc="64:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB7" scoped="" ref="0x2ab41d4a09b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d4a0d00"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d49f020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d49f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d49f330"/>
        <function-ref name="get" scoped="" ref="0x2ab41d49f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d49f640"/>
        <function-ref name="set" scoped="" ref="0x2ab41d49f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d49f950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2ab41d4b72d8" loc="84:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab41d4b72d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41d4b7628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2ab41d488688" loc="45:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2ab41d488688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d4889d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d488b60"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d488ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d488e70"/>
        <function-ref name="get" scoped="" ref="0x2ab41d487020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d4871a8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d487330"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4874b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD1" ref="0x2ab41d4a9380" loc="76:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD1" scoped="" ref="0x2ab41d4a9380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d4a96d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d4a9858"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d4a99e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d4a9b68"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4a9cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d4a9e78"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4a8030"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4a81b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA2" ref="0x2ab41d499e38" loc="50:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA2" scoped="" ref="0x2ab41d499e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d4981c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d498348"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d4984d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d498658"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4987e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d498968"/>
        <function-ref name="set" scoped="" ref="0x2ab41d498af0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d498c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB2" ref="0x2ab41d4a5020" loc="59:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB2" scoped="" ref="0x2ab41d4a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d4a5370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d4a54f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d4a5680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d4a5808"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4a5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d4a5b18"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4a5ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4a5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC4" ref="0x2ab41d4b0518" loc="70:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC4" scoped="" ref="0x2ab41d4b0518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d4b0868"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d4b09f0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d4b0b78"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d4b0d00"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4af020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d4af1a8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4af330"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4af4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD6" ref="0x2ab41d4b9020" loc="81:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD6" scoped="" ref="0x2ab41d4b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d4b9370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d4b94f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d4b9680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d4b9808"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4b9990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d4b9b18"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4b9ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4b9e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB0" ref="0x2ab41d4929b0" loc="57:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB0" scoped="" ref="0x2ab41d4929b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d492d00"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d491020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d4911a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d491330"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4914b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d491640"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4917c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d491950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA5" ref="0x2ab41d495380" loc="53:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA5" scoped="" ref="0x2ab41d495380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d4956d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d495858"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d4959e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d495b68"/>
        <function-ref name="get" scoped="" ref="0x2ab41d495cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d495e78"/>
        <function-ref name="set" scoped="" ref="0x2ab41d494030"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4941b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB5" ref="0x2ab41d4a2518" loc="62:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB5" scoped="" ref="0x2ab41d4a2518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d4a2868"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d4a29f0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d4a2b78"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d4a2d00"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4a1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d4a11a8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4a1330"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4a14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC2" ref="0x2ab41d49c1b8" loc="68:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC2" scoped="" ref="0x2ab41d49c1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d49c508"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d49c690"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d49c818"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d49c9a0"/>
        <function-ref name="get" scoped="" ref="0x2ab41d49cb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d49ccb0"/>
        <function-ref name="set" scoped="" ref="0x2ab41d49ce38"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d49b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC7" ref="0x2ab41d4ab020" loc="73:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC7" scoped="" ref="0x2ab41d4ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d4ab370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d4ab4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d4ab680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d4ab808"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4ab990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d4abb18"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4abca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4abe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD4" ref="0x2ab41d4a69b0" loc="79:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD4" scoped="" ref="0x2ab41d4a69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d4a6d00"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d4bb020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d4bb1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d4bb330"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4bb4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d4bb640"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4bb7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4bb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2ab41d487810" loc="46:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2ab41d487810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d487b60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d487ce8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d487e70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d485020"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4851a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d485330"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4854b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d485640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA0" ref="0x2ab41d4859a0" loc="48:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA0" scoped="" ref="0x2ab41d4859a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d485cf0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d485e78"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d49a030"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d49a1b8"/>
        <function-ref name="get" scoped="" ref="0x2ab41d49a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d49a4c8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d49a650"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d49a7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA3" ref="0x2ab41d497020" loc="51:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA3" scoped="" ref="0x2ab41d497020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d497370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d4974f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d497680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d497808"/>
        <function-ref name="get" scoped="" ref="0x2ab41d497990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d497b18"/>
        <function-ref name="set" scoped="" ref="0x2ab41d497ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d497e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB3" ref="0x2ab41d4a41b8" loc="60:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB3" scoped="" ref="0x2ab41d4a41b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d4a4508"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d4a4690"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d4a4818"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d4a49a0"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4a4b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d4a4cb0"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4a4e38"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC0" ref="0x2ab41d49fcb0" loc="66:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC0" scoped="" ref="0x2ab41d49fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d49e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d49e228"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d49e3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d49e538"/>
        <function-ref name="get" scoped="" ref="0x2ab41d49e6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d49e848"/>
        <function-ref name="set" scoped="" ref="0x2ab41d49e9d0"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d49eb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC5" ref="0x2ab41d4af818" loc="71:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC5" scoped="" ref="0x2ab41d4af818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d4afd68"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d4ae020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d4ae1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d4ae330"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4ae4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d4ae640"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4ae7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4ae950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD2" ref="0x2ab41d4a8518" loc="77:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD2" scoped="" ref="0x2ab41d4a8518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d4a8868"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d4a89f0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d4a8b78"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d4a8d00"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4a7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d4a71a8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4a7330"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4a74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD7" ref="0x2ab41d4b81b8" loc="82:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD7" scoped="" ref="0x2ab41d4b81b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab41d4b8508"/>
        <function-ref name="isInput" scoped="" ref="0x2ab41d4b8690"/>
        <function-ref name="toggle" scoped="" ref="0x2ab41d4b8818"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab41d4b89a0"/>
        <function-ref name="get" scoped="" ref="0x2ab41d4b8b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab41d4b8cb0"/>
        <function-ref name="set" scoped="" ref="0x2ab41d4b8e38"/>
        <function-ref name="clr" scoped="" ref="0x2ab41d4b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Lcd128x64" ref="0x2ab41d4ca478" loc="3:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <component-ref qname="LCD128x64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lcd128x64" scoped="" ref="0x2ab41d4ca478"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2ab41d4ca7c8"/>
        <function-ref name="initDone" scoped="" ref="0x2ab41d4ca950"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2ab41d4caad8"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2ab41d4cac60"/>
        <function-ref name="startWriteString" scoped="" ref="0x2ab41d4cade8"/>
        <function-ref name="writeByte" scoped="" ref="0x2ab41d4e2020"/>
        <function-ref name="setPixel" scoped="" ref="0x2ab41d4e21a8"/>
        <function-ref name="circleWritten" scoped="" ref="0x2ab41d4e2330"/>
        <function-ref name="writeBar" scoped="" ref="0x2ab41d4e24b8"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2ab41d4e2640"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2ab41d4e27c8"/>
        <function-ref name="writePixel" scoped="" ref="0x2ab41d4e2950"/>
        <function-ref name="initLCD" scoped="" ref="0x2ab41d4e2ad8"/>
        <function-ref name="stringWritten" scoped="" ref="0x2ab41d4e2d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeRectangle" ref="0x2ab41d54f1c8" loc="182:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeRectangle" scoped="" ref="0x2ab41d54f1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab41d54f518"/>
        <function-ref name="runTask" scoped="" ref="0x2ab41d54f6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="clearScreen" ref="0x2ab41d55e8c0" loc="262:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="clearScreen" scoped="" ref="0x2ab41d55e8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab41d55ec10"/>
        <function-ref name="runTask" scoped="" ref="0x2ab41d55ed98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCD128x64" ref="0x2ab41d4fdd68" loc="6:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2ab41d4fdd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2ab41d4fc0f0"/>
        <function-ref name="initDone" scoped="" ref="0x2ab41d4fc278"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2ab41d4fc400"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2ab41d4fc588"/>
        <function-ref name="startWriteString" scoped="" ref="0x2ab41d4fc710"/>
        <function-ref name="writeByte" scoped="" ref="0x2ab41d4fc898"/>
        <function-ref name="setPixel" scoped="" ref="0x2ab41d4fca20"/>
        <function-ref name="circleWritten" scoped="" ref="0x2ab41d4fcba8"/>
        <function-ref name="writeBar" scoped="" ref="0x2ab41d4fcd30"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2ab41d513020"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2ab41d5131a8"/>
        <function-ref name="writePixel" scoped="" ref="0x2ab41d513330"/>
        <function-ref name="initLCD" scoped="" ref="0x2ab41d5134b8"/>
        <function-ref name="stringWritten" scoped="" ref="0x2ab41d513740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeString" ref="0x2ab41d551020" loc="230:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeString" scoped="" ref="0x2ab41d551020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab41d551370"/>
        <function-ref name="runTask" scoped="" ref="0x2ab41d5514f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeCircle" ref="0x2ab41d548be0" loc="198:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeCircle" scoped="" ref="0x2ab41d548be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab41d547020"/>
        <function-ref name="runTask" scoped="" ref="0x2ab41d5471a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeLine" ref="0x2ab41d573020" loc="275:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeLine" scoped="" ref="0x2ab41d573020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab41d573370"/>
        <function-ref name="runTask" scoped="" ref="0x2ab41d5734f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="wait4Controller" ref="0x2ab41d50e020" loc="18:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="wait4Controller" scoped="" ref="0x2ab41d50e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab41d50e370"/>
        <function-ref name="runTask" scoped="" ref="0x2ab41d50e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab41d592420" loc="45:/homes/hglanzer/GIT/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="LedAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab41d592420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab41d7686c8"/>
        <function-ref name="fired" scoped="" ref="0x2ab41d749db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab41d748ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab41d748688"/>
        <function-ref name="getdt" scoped="" ref="0x2ab41d767020"/>
        <function-ref name="gett0" scoped="" ref="0x2ab41d768b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab41d748238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab41d749020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab41d7680f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab41d7494c0"/>
        <function-ref name="stop" scoped="" ref="0x2ab41d749960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2ab41d5a31c8" loc="49:/homes/hglanzer/GIT/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2ab41d5a31c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab41d59f5f0"/>
        <function-ref name="fired" scoped="" ref="0x2ab41d5a2af0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab41d5a18c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab41d5a1470"/>
        <function-ref name="getdt" scoped="" ref="0x2ab41d59e020"/>
        <function-ref name="gett0" scoped="" ref="0x2ab41d59fa40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab41d5a1020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab41d5a3d10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab41d59f020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab41d5a2200"/>
        <function-ref name="stop" scoped="" ref="0x2ab41d5a26a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2ab41d5b5b18" loc="46:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2ab41d5b5b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab41d5b1d98"/>
        <function-ref name="fired" scoped="" ref="0x2ab41d5b24d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab41d5b11f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab41d5b2d78"/>
        <function-ref name="getdt" scoped="" ref="0x2ab41d5b0688"/>
        <function-ref name="gett0" scoped="" ref="0x2ab41d5b0238"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab41d5b2928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab41d5b36f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab41d5b17c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab41d5b3b90"/>
        <function-ref name="stop" scoped="" ref="0x2ab41d5b2088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ab41d5ae108" loc="47:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ab41d5ae108"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab41d5aec88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab41d59ede0" loc="45:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab41d59ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41d5b5170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2ab41d5d0150" loc="29:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2ab41d5d0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab41d5cc020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ab41d5cc930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ab41d5cc4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2ab41d5ccdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab41d5c46f0" loc="27:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab41d5c46f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41d5c4a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2ab41d5c1020" loc="28:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2ab41d5c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab41d5b9690"/>
        <function-ref name="fired" scoped="" ref="0x2ab41d5c06f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ab41d5b9088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab41d5c0b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ab41d5b9b18"/>
        <function-ref name="start" scoped="" ref="0x2ab41d5c1d70"/>
        <function-ref name="stop" scoped="" ref="0x2ab41d5c0270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ab41d6c3938" loc="33:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ab41d6c3938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab41d6bf020"/>
        <function-ref name="fired" scoped="" ref="0x2ab41d6c0088"/>
        <function-ref name="startAt" scoped="" ref="0x2ab41d6c0998"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab41d6c0510"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ab41d6bf4a8"/>
        <function-ref name="start" scoped="" ref="0x2ab41d6c26b0"/>
        <function-ref name="stop" scoped="" ref="0x2ab41d6c2b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab41d6c3190" loc="32:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab41d6c3190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2ab41d165d88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2ab41d165d88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41d6c34e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ab41d6bfa90" loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ab41d6bfa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab41d6be828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ab41d6bd190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ab41d6becb0"/>
        <function-ref name="overflow" scoped="" ref="0x2ab41d6bd618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2ab41daa1b60" loc="38:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ab41daa1b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2ab41daa0020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ab41daa01a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ab41daa0330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ab41daa04b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ab41daa0640"/>
        <function-ref name="setControl" scoped="" ref="0x2ab41daa07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ab41da7f888" loc="33:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ab41da7f888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab41da7b020"/>
        <function-ref name="fired" scoped="" ref="0x2ab41da7c020"/>
        <function-ref name="startAt" scoped="" ref="0x2ab41da7c930"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab41da7c4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ab41da7b4a8"/>
        <function-ref name="start" scoped="" ref="0x2ab41da7e660"/>
        <function-ref name="stop" scoped="" ref="0x2ab41da7eb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab41da7f0e0" loc="32:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab41da7f0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab41da7f430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ab41da7ba90" loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ab41da7ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab41daa8828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ab41daa6190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ab41daa8cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2ab41daa6618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x2ab41da9dbb0" loc="40:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2ab41da9dbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2ab41da9b7c8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2ab41da9b1a8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2ab41da9b330"/>
        <function-ref name="countBusy" scoped="" ref="0x2ab41da9b4b8"/>
        <function-ref name="getAssr" scoped="" ref="0x2ab41da9b640"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2ab41da9b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2ab41daa0b58" loc="39:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ab41daa0b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ab41da9d310"/>
        <function-ref name="fired" scoped="" ref="0x2ab41da9e0c0"/>
        <function-ref name="get" scoped="" ref="0x2ab41da9f728"/>
        <function-ref name="reset" scoped="" ref="0x2ab41da9e548"/>
        <function-ref name="isOn" scoped="" ref="0x2ab41da9d798"/>
        <function-ref name="set" scoped="" ref="0x2ab41da9fbb0"/>
        <function-ref name="start" scoped="" ref="0x2ab41da9e9d0"/>
        <function-ref name="stop" scoped="" ref="0x2ab41da9ee58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ab41daa6b98" loc="37:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab41daa6b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ab41daa3db8"/>
        <function-ref name="test" scoped="" ref="0x2ab41daa34a8"/>
        <function-ref name="get" scoped="" ref="0x2ab41daa5760"/>
        <function-ref name="setScale" scoped="" ref="0x2ab41daa1270"/>
        <function-ref name="getScale" scoped="" ref="0x2ab41daa1748"/>
        <function-ref name="reset" scoped="" ref="0x2ab41daa4580"/>
        <function-ref name="overflow" scoped="" ref="0x2ab41daa40f8"/>
        <function-ref name="isOn" scoped="" ref="0x2ab41daa3930"/>
        <function-ref name="set" scoped="" ref="0x2ab41daa5be8"/>
        <function-ref name="start" scoped="" ref="0x2ab41daa4a08"/>
        <function-ref name="stop" scoped="" ref="0x2ab41daa3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ab41d644020" loc="55:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ab41d644020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2ab41d644370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ab41d6444f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ab41d644680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ab41d644808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ab41d644990"/>
        <function-ref name="setControl" scoped="" ref="0x2ab41d644b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2ab41d65c218" loc="57:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2ab41d65c218"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2ab41d65cd10"/>
        <function-ref name="controlBusy" scoped="" ref="0x2ab41d65c6f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2ab41d65c878"/>
        <function-ref name="countBusy" scoped="" ref="0x2ab41d65ca00"/>
        <function-ref name="getAssr" scoped="" ref="0x2ab41d65cb88"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2ab41d65c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ab41d643020" loc="56:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ab41d643020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ab41d65e7a8"/>
        <function-ref name="fired" scoped="" ref="0x2ab41d642560"/>
        <function-ref name="get" scoped="" ref="0x2ab41d643ba0"/>
        <function-ref name="reset" scoped="" ref="0x2ab41d6429e8"/>
        <function-ref name="isOn" scoped="" ref="0x2ab41d65ec30"/>
        <function-ref name="set" scoped="" ref="0x2ab41d642088"/>
        <function-ref name="start" scoped="" ref="0x2ab41d642e70"/>
        <function-ref name="stop" scoped="" ref="0x2ab41d65e320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab41d64ce00" loc="54:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab41d64ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ab41d6460f8"/>
        <function-ref name="test" scoped="" ref="0x2ab41d647798"/>
        <function-ref name="get" scoped="" ref="0x2ab41d649a18"/>
        <function-ref name="setScale" scoped="" ref="0x2ab41d646580"/>
        <function-ref name="getScale" scoped="" ref="0x2ab41d646a58"/>
        <function-ref name="reset" scoped="" ref="0x2ab41d648980"/>
        <function-ref name="overflow" scoped="" ref="0x2ab41d6484f8"/>
        <function-ref name="isOn" scoped="" ref="0x2ab41d647c20"/>
        <function-ref name="set" scoped="" ref="0x2ab41d648020"/>
        <function-ref name="start" scoped="" ref="0x2ab41d648e08"/>
        <function-ref name="stop" scoped="" ref="0x2ab41d647310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ab41d653160" loc="62:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ab41d653160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2ab41d6534b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ab41d653638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ab41d6537c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ab41d653948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ab41d653ad0"/>
        <function-ref name="setControl" scoped="" ref="0x2ab41d653c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2ab41d66c268" loc="64:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ab41d66c268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ab41d66c5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2ab41d66c958" loc="65:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2ab41d66c958"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2ab41d66b4b8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2ab41d66ce30"/>
        <function-ref name="compareBusy" scoped="" ref="0x2ab41d66b020"/>
        <function-ref name="countBusy" scoped="" ref="0x2ab41d66b1a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2ab41d66b330"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2ab41d66cca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ab41d652190" loc="63:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ab41d652190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ab41d66d930"/>
        <function-ref name="fired" scoped="" ref="0x2ab41d6516d0"/>
        <function-ref name="get" scoped="" ref="0x2ab41d652d10"/>
        <function-ref name="reset" scoped="" ref="0x2ab41d651b58"/>
        <function-ref name="isOn" scoped="" ref="0x2ab41d66ddb8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d6511f8"/>
        <function-ref name="start" scoped="" ref="0x2ab41d66d020"/>
        <function-ref name="stop" scoped="" ref="0x2ab41d66d4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab41d658180" loc="61:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab41d658180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ab41d654270"/>
        <function-ref name="test" scoped="" ref="0x2ab41d656930"/>
        <function-ref name="get" scoped="" ref="0x2ab41d658d00"/>
        <function-ref name="setScale" scoped="" ref="0x2ab41d6546f8"/>
        <function-ref name="getScale" scoped="" ref="0x2ab41d654bd0"/>
        <function-ref name="reset" scoped="" ref="0x2ab41d657b58"/>
        <function-ref name="overflow" scoped="" ref="0x2ab41d6576d0"/>
        <function-ref name="isOn" scoped="" ref="0x2ab41d656db8"/>
        <function-ref name="set" scoped="" ref="0x2ab41d6571f8"/>
        <function-ref name="start" scoped="" ref="0x2ab41d656020"/>
        <function-ref name="stop" scoped="" ref="0x2ab41d6564a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2ab41d6eb020" loc="74:/homes/hglanzer/GIT/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2ab41d6eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab41d6eb370"/>
        <function-ref name="runTask" scoped="" ref="0x2ab41d6eb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2ab41d6ef020" loc="49:/homes/hglanzer/GIT/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ab41d6ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab41d6ec690"/>
        <function-ref name="fired" scoped="" ref="0x2ab41d6ed6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ab41d6ec088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab41d6edb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ab41d6ecb18"/>
        <function-ref name="start" scoped="" ref="0x2ab41d6efd70"/>
        <function-ref name="stop" scoped="" ref="0x2ab41d6ed270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab41d6b9d88" loc="48:/homes/hglanzer/GIT/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab41d6b9d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab41d6f0088"/>
        <function-ref name="fired" scoped="" ref="0x2ab41d6f26c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab41d6f1470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab41d6f1020"/>
        <function-ref name="getdt" scoped="" ref="0x2ab41d6f0928"/>
        <function-ref name="gett0" scoped="" ref="0x2ab41d6f04d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab41d6f2b18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab41d6f4908"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab41d6f1a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab41d6f4da8"/>
        <function-ref name="stop" scoped="" ref="0x2ab41d6f2278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2ab41d73d618" loc="71:/homes/hglanzer/GIT/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2ab41d73d618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab41d73d968"/>
        <function-ref name="runTask" scoped="" ref="0x2ab41d73daf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2ab41d7425a0" loc="49:/homes/hglanzer/GIT/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2ab41d7425a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab41d73e8f0"/>
        <function-ref name="fired" scoped="" ref="0x2ab41d73f020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab41d73fd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab41d73f8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2ab41d73d1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2ab41d73ed40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab41d73f470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab41d740118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab41d73e320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab41d7405b8"/>
        <function-ref name="stop" scoped="" ref="0x2ab41d740a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab41d7280c8" loc="48:/homes/hglanzer/GIT/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab41d7280c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab41d743610"/>
        <function-ref name="fired" scoped="" ref="0x2ab41d746a48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab41d745900"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab41d745490"/>
        <function-ref name="getdt" scoped="" ref="0x2ab41d742020"/>
        <function-ref name="gett0" scoped="" ref="0x2ab41d743a80"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab41d745020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab41d728c30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab41d743020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab41d746118"/>
        <function-ref name="stop" scoped="" ref="0x2ab41d7465d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ab41d739c38" loc="48:/homes/hglanzer/GIT/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ab41d739c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab41d751820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ab41d751e48" loc="49:/homes/hglanzer/GIT/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ab41d751e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab41d750be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ab41d74f548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ab41d74f0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2ab41d74f9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab41d7668d8" loc="45:/homes/hglanzer/GIT/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="LedAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab41d7668d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab41d1e5530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab41d1e5888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab41d762bc0"/>
        <function-ref name="fired" scoped="" ref="0x2ab41d764238"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab41d762020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab41d764ad8"/>
        <function-ref name="getdt" scoped="" ref="0x2ab41d7614d8"/>
        <function-ref name="gett0" scoped="" ref="0x2ab41d761088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab41d764688"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab41d765458"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab41d7625f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab41d7658f8"/>
        <function-ref name="stop" scoped="" ref="0x2ab41d765d98"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/homes/hglanzer/GIT/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ab41d260178" loc="62:/homes/hglanzer/GIT/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/homes/hglanzer/GIT/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab41d16fae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/homes/hglanzer/GIT/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/homes/hglanzer/GIT/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2ab41d258e08" loc="60:/homes/hglanzer/GIT/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/homes/hglanzer/GIT/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
      <documentation loc="11:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2ab41d266290" loc="60:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="55:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab41cf67378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2ab41d266020" loc="60:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2ab41d26a940" loc="31:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="27:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab41cf67378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2ab41d269378" loc="39:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="33:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ab41d269108" loc="39:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2ab41d269e00" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="41:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ab41d269b90" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2ab41d268698" loc="53:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/homes/hglanzer/GIT/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2ab41d27d0d8" loc="44:/homes/hglanzer/GIT/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2ab41d27d7a0" loc="45:/homes/hglanzer/GIT/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab41d1664c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2ab41d27e328" loc="42:/homes/hglanzer/GIT/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2ab41d27c570" loc="47:/homes/hglanzer/GIT/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab41d1664c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ab41d27e9c8" loc="43:/homes/hglanzer/GIT/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab41d1664c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2ab41d27de58" loc="46:/homes/hglanzer/GIT/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ab41d2805a8" loc="40:/homes/hglanzer/GIT/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2ab41d280c18" loc="41:/homes/hglanzer/GIT/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/homes/hglanzer/GIT/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/homes/hglanzer/GIT/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ab41d16b3a0" loc="57:/homes/hglanzer/GIT/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/homes/hglanzer/GIT/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2ab41d169290" loc="72:/homes/hglanzer/GIT/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/homes/hglanzer/GIT/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2ab41d16bab8" loc="65:/homes/hglanzer/GIT/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/homes/hglanzer/GIT/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab41d1664c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/homes/hglanzer/GIT/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2ab41d175070" loc="67:/homes/hglanzer/GIT/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/homes/hglanzer/GIT/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab41d16fae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2ab41d175860" loc="75:/homes/hglanzer/GIT/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/homes/hglanzer/GIT/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2ab41d228450" loc="76:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2ab41d23ed28" loc="62:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2ab41d1c41a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2ab41d2486d8" loc="52:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/homes/hglanzer/GIT/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ab41d41e7a8" loc="53:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab41d41e7a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ab41d441020" loc="136:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ab41d432ba0" loc="83:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2ab41d443800" loc="114:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ab41d443268" loc="114:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ab41d443580" loc="114:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2ab41d430af8" loc="98:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab41d1664c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2ab41d43f020" loc="151:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2ab41d441740" loc="144:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ab41d430360" loc="92:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab41d1664c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2ab41d4332d0" loc="64:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ab41d433060" loc="64:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2ab41d4426f0" loc="129:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ab41d442158" loc="129:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ab41d442470" loc="129:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2ab41d433d10" loc="73:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ab41d433aa0" loc="73:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ab41d432500" loc="78:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LCD128x64" loc="1:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
      <function command="" provided="0" name="startClearScreen" ref="0x2ab41d426590" loc="26:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2ab41d426320" loc="26:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x2ab41d426c00" loc="28:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteLine" ref="0x2ab41d427c00" loc="24:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2ab41d427020" loc="24:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2ab41d427320" loc="24:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
          <variable name="xEnd" ref="0x2ab41d427640" loc="24:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
          <variable name="yEnd" ref="0x2ab41d427960" loc="24:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteRectangle" ref="0x2ab41d42b8c0" loc="18:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2ab41d42cc88" loc="18:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2ab41d42b020" loc="18:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
          <variable name="a" ref="0x2ab41d42b320" loc="18:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
          <variable name="b" ref="0x2ab41d42b620" loc="18:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteString" ref="0x2ab41d4298b0" loc="22:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ab41d429020" loc="22:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x2ab41d429320" loc="22:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2ab41d429620" loc="22:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="writeByte" ref="0x2ab41d41c5d0" loc="10:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2ab41d41dbe8" loc="10:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2ab41d41c020" loc="10:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2ab41d41c340" loc="10:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x2ab41d42e2a0" loc="14:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2ab41d42fbe8" loc="14:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2ab41d42e020" loc="14:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="circleWritten" ref="0x2ab41d439328" loc="30:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeBar" ref="0x2ab41d42c5f0" loc="16:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2ab41d42e8d0" loc="16:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2ab41d42ebd0" loc="16:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
          <variable name="width" ref="0x2ab41d42c020" loc="16:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2ab41d42c350" loc="16:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteCircle" ref="0x2ab41d42a918" loc="20:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="xcenter" ref="0x2ab41d42a020" loc="20:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
          <variable name="ycenter" ref="0x2ab41d42a358" loc="20:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
          <variable name="radius" ref="0x2ab41d42a688" loc="20:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rectangleWritten" ref="0x2ab41d4371d8" loc="34:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writePixel" ref="0x2ab41d42f5b8" loc="12:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2ab41d41cc10" loc="12:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2ab41d42f020" loc="12:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
          <variable name="on" ref="0x2ab41d42f328" loc="12:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initLCD" ref="0x2ab41d41d590" loc="4:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2ab41d41d320" loc="4:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stringWritten" ref="0x2ab41d4399c8" loc="32:/homes/hglanzer/GIT/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/homes/hglanzer/GIT/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2ab41d413428" loc="61:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2ab41d413b60" loc="67:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2ab41d412328" loc="72:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2ab41d4251d8" loc="83:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2ab41d423810" loc="100:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ab41d422020" loc="117:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2ab41d412a40" loc="77:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ab41d422b20" loc="134:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2ab41d4228b0" loc="134:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPort" ref="0x2ab41d421998" loc="137:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2ab41d4213f8" loc="137:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
          <variable name="pval" ref="0x2ab41d421718" loc="137:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2ab41d414cd8" loc="56:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2ab41d425948" loc="89:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2ab41d4230d8" loc="94:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/homes/hglanzer/GIT/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/homes/hglanzer/GIT/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/homes/hglanzer/GIT/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ab41d5ac340" loc="53:/homes/hglanzer/GIT/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab41d5ac340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ab41d5acbd0" loc="61:/homes/hglanzer/GIT/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/homes/hglanzer/GIT/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab41cf67db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ab41d5d17b8" loc="57:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab41d5d17b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ab41d5d19e8" loc="57:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab41d5d19e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ab41d5ce2a8" loc="64:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab41d5d19e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2ab41d5cd328" loc="76:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2ab41d5ceac0" loc="71:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab41d1664c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ab41d5cda18" loc="82:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ab41d5bf528" loc="56:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab41d5bf528"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ab41d5bf758" loc="56:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab41d5bf758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ab41d5ba020" loc="109:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab41d5bf758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ab41d5bd1d8" loc="78:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2ab41d5bc6c0" loc="103:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab41d5bf758"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab41d5bf758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ab41d5bc120" loc="103:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab41d5bf758"/></type-var>
          </variable>
          <variable name="dt" ref="0x2ab41d5bc440" loc="103:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab41d5bf758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ab41d5bd948" loc="88:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab41d1664c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2ab41d5ba7a0" loc="116:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab41d5bf758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ab41d5be290" loc="66:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab41d5bf758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ab41d5be020" loc="66:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab41d5bf758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ab41d5bea60" loc="73:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/homes/hglanzer/GIT/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2ab41d5f6020" loc="45:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab41d1f1a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ab41d1f1e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2ab41d5f4360" loc="53:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab41d1fe100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ab41d1fe508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2ab41d5f51d8" loc="49:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab41d1f5980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ab41d1f5d88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2ab41d5f5b90" loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab41d1f5980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ab41d1f5d88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2ab41d5f5920" loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab41d1f5980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ab41d1f5d88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2ab41d5f4d18" loc="54:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab41d1fe100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ab41d1fe508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2ab41d5f4aa8" loc="54:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab41d1fe100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ab41d1fe508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2ab41d5f69f0" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab41d1f1a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ab41d1f1e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ab41d5f6780" loc="46:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab41d1f1a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ab41d1f1e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerSync" loc="22:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
      <documentation loc="11:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer0Synchronous" ref="0x2ab41d6024e8" loc="39:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="36:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBusy" ref="0x2ab41d602bf0" loc="45:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="41:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2ab41d6013e0" loc="51:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="47:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2ab41d601b90" loc="57:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="53:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2ab41d603328" loc="28:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="24:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab41d1f8118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2ab41d1f8520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2ab41d603cd8" loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="30:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab41d1f8118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2ab41d1f8520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2ab41d603a68" loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab41d1f8118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2ab41d1f8520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2ab41d5f3420" loc="41:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab41d5f3420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2ab41d5eea40" loc="74:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="70:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab41d1664c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ab41d5f0d88" loc="58:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="57:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ab41d5f3cd8" loc="48:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="44:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab41d5f3420"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ab41d5ef4c0" loc="62:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="61:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ab41d6081d8" loc="80:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="76:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab41d1664c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ab41d5f0648" loc="54:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="50:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab41d5f3420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ab41d5f03d8" loc="54:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab41d5f3420"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ab41d5efbb8" loc="65:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="64:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ab41d5ee328" loc="68:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="67:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
      <documentation loc="34:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2ab41d5ea680" loc="55:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ab41d5ea680"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2ab41d5e3cf0" loc="98:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="97:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2ab41d5e4e20" loc="87:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="83:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab41d1664c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ab41d5e7020" loc="61:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="57:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ab41d5ea680"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2ab41d5e2690" loc="104:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="100:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2ab41d5e2420" loc="104:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2ab41d5e2e10" loc="110:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="106:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab41cf65910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ab41d5e67f8" loc="75:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="74:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ab41d5e60d8" loc="70:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="69:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ab41d5e35c8" loc="93:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="89:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab41d1664c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ab41d5e7958" loc="67:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="63:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ab41d5ea680"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ab41d5e76e8" loc="67:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ab41d5ea680"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ab41d5e4020" loc="78:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="77:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ab41d5e4708" loc="81:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="80:/homes/hglanzer/GIT/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
