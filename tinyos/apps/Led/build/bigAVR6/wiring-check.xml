<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="23:LedAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b9ef00e9460"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b9eefeb2220"/></to>
    </wire>
    <wire loc="72:/homes/hglanzer/SVN/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b9eefeb2220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b9eefeb0878"/></to>
    </wire>
    <wire loc="24:LedAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9ef00f3c30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9ef012f478"/></to>
    </wire>
    <wire loc="51:/homes/hglanzer/SVN/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b9ef012f478"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b9ef012be08"/></to>
    </wire>
    <wire loc="25:LedAppC.nc">
      <from><interface-ref name="LCD128x64" scoped="" ref="0x2b9ef0109470"/></from>
      <to><interface-ref name="Lcd128x64" scoped="" ref="0x2b9ef019c478"/></to>
    </wire>
    <wire loc="9:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <from><interface-ref name="Lcd128x64" scoped="" ref="0x2b9ef019c478"/></from>
      <to><interface-ref name="LCD128x64" scoped="" ref="0x2b9ef01cfd68"/></to>
    </wire>
    <wire loc="27:LedAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b9ef0111578"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9ef0264420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b9ef0264420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b9ef02751c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:LedAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x2b9ef010e7d8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9ef04388d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b9ef04388d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b9ef02751c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/homes/hglanzer/SVN/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9eefeb1620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9ef0270de0"/></to>
    </wire>
    <wire loc="67:/homes/hglanzer/SVN/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b9ef00e2020"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b9eefdba600"/></to>
    </wire>
    <wire loc="53:/homes/hglanzer/SVN/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b9eefdba600"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b9eefe71448"/></to>
    </wire>
    <wire loc="68:/homes/hglanzer/SVN/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b9ef00e29f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9eefeb4620"/></to>
    </wire>
    <wire loc="58:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9eefeb4620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9eefec3600"/></to>
    </wire>
    <wire loc="71:/homes/hglanzer/SVN/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b9ef00e1140"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b9eefeb1620"/></to>
    </wire>
    <wire loc="59:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b9eefeb7618"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b9ef00c58f0"/></to>
    </wire>
    <wire loc="61:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b9eefec2398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9ef00c52c0"/></to>
    </wire>
    <wire loc="91:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b9eefec3ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9ef01892d8"/></to>
    </wire>
    <wire loc="62:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b9eefec3ca0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b9eefebcb98"/></to>
    </wire>
    <wire loc="24:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b9eefebcb98"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b9eefec6698"/></to>
    </wire>
    <wire loc="63:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b9eefec9360"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b9eefeaf380"/></to>
    </wire>
    <wire loc="29:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b9eefec5b08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b9eefec9360"/></to>
    </wire>
    <wire loc="191:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b9eeff0eaf0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9eeffe7970"/></to>
    </wire>
    <wire loc="165:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b9eefef0658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9eeff8e020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9eeff8e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef05a9710"/></to>
    </wire>
    <wire loc="176:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b9eeff01658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b9eeff9dd60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b9eeff9dd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef0604710"/></to>
    </wire>
    <wire loc="185:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b9eeff06348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b9eeff9f5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b9eeff9f5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef066c710"/></to>
    </wire>
    <wire loc="143:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b9eefedc348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9eeff65740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9eeff65740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef0484710"/></to>
    </wire>
    <wire loc="183:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b9eeff08020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9eeffa12a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9eeffa12a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef0673710"/></to>
    </wire>
    <wire loc="146:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b9eefeda658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9eeff6d930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9eeff6d930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef04e06a8"/></to>
    </wire>
    <wire loc="157:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b9eefeeb7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9eeff7c740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9eeff7c740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef054e710"/></to>
    </wire>
    <wire loc="168:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b9eefefbaf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9eeff8a430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9eeff8a430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef05a0710"/></to>
    </wire>
    <wire loc="179:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b9eefefeaf0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9eeff99120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9eeff99120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef0623710"/></to>
    </wire>
    <wire loc="138:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b9eefed4af0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9eeff5a020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9eeff5a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef0471710"/></to>
    </wire>
    <wire loc="149:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b9eefee5af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b9eeff6ad60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b9eeff6ad60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef04d7710"/></to>
    </wire>
    <wire loc="160:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b9eefee8c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b9eeff79bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b9eeff79bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef0545710"/></to>
    </wire>
    <wire loc="171:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b9eefef7020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b9eeff878c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b9eeff878c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef05bf710"/></to>
    </wire>
    <wire loc="188:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b9eeff037e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9eeffaea50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9eeffaea50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef068d710"/></to>
    </wire>
    <wire loc="194:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b9eeff0a7e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9eefffc020"/></to>
    </wire>
    <wire loc="174:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b9eefef5348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9eeff8fa50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9eeff8fa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef060b710"/></to>
    </wire>
    <wire loc="141:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b9eefede020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9eeff57430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9eeff57430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef0468710"/></to>
    </wire>
    <wire loc="152:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b9eefee11a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9eeff76120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9eeff76120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef04f2710"/></to>
    </wire>
    <wire loc="192:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b9eeff0c4d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9eefff4ab0"/></to>
    </wire>
    <wire loc="155:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b9eefeed4d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9eeff7e500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9eeff7e500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef052f6a8"/></to>
    </wire>
    <wire loc="166:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b9eefeef7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9eeff8d120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9eeff8d120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef05a6710"/></to>
    </wire>
    <wire loc="177:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b9eeff007e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9eeff9ce18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9eeff9ce18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef0601710"/></to>
    </wire>
    <wire loc="186:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b9eeff054d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9eeffb0740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9eeffb0740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef0669710"/></to>
    </wire>
    <wire loc="144:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b9eefedb4d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b9eeff648c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b9eeff648c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef0481710"/></to>
    </wire>
    <wire loc="147:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b9eefed97e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9eeff6ca50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9eeff6ca50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef04dd710"/></to>
    </wire>
    <wire loc="158:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b9eefeea968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b9eeff7b8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b9eeff7b8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef054b710"/></to>
    </wire>
    <wire loc="169:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b9eefefac78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b9eeff895b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b9eeff895b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef059d710"/></to>
    </wire>
    <wire loc="180:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b9eefefdc78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b9eeff982a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b9eeff982a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef0620710"/></to>
    </wire>
    <wire loc="139:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b9eefed3c78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9eeff59120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9eeff59120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef046e710"/></to>
    </wire>
    <wire loc="150:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b9eefee4c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9eeff69e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9eeff69e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef04d4710"/></to>
    </wire>
    <wire loc="161:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b9eefee7e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9eeff77d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9eeff77d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef0542710"/></to>
    </wire>
    <wire loc="189:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b9eeff0f968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b9eeffadbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b9eeffadbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef068a710"/></to>
    </wire>
    <wire loc="164:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b9eefef11a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9eeff80e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9eeff80e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef05ad6a8"/></to>
    </wire>
    <wire loc="175:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b9eeff024d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9eeff9ebd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9eeff9ebd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef0607710"/></to>
    </wire>
    <wire loc="184:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b9eeff071a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9eeffa0430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9eeffa0430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef066f710"/></to>
    </wire>
    <wire loc="195:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b9eeff17968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef008a180"/></to>
    </wire>
    <wire loc="142:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b9eefedd1a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b9eeff665b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b9eeff665b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef0487710"/></to>
    </wire>
    <wire loc="153:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b9eefee0348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b9eeff752a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b9eeff752a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef04ef710"/></to>
    </wire>
    <wire loc="182:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b9eefefce00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9eeffa21e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9eeffa21e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef06766a8"/></to>
    </wire>
    <wire loc="156:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b9eefeec658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b9eeff7d5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b9eeff7d5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef052b710"/></to>
    </wire>
    <wire loc="167:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b9eefeee968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b9eeff8b2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b9eeff8b2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef05a3710"/></to>
    </wire>
    <wire loc="178:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b9eefeff968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b9eeff9a020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b9eeff9a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef0626710"/></to>
    </wire>
    <wire loc="187:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b9eeff04658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b9eeffaf8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b9eeffaf8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef0690710"/></to>
    </wire>
    <wire loc="137:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b9eefec7870"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9eeff5cdc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9eeff5cdc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef04746a8"/></to>
    </wire>
    <wire loc="148:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b9eefee6968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b9eeff6bbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b9eeff6bbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef04da710"/></to>
    </wire>
    <wire loc="159:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b9eefee9af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b9eeff7aa50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b9eeff7aa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef0548710"/></to>
    </wire>
    <wire loc="170:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b9eefef9e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b9eeff88740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b9eeff88740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef05c2710"/></to>
    </wire>
    <wire loc="193:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b9eeff0b658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9eefff0c38"/></to>
    </wire>
    <wire loc="173:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b9eefef61a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b9eeff90930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b9eeff90930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef060e6a8"/></to>
    </wire>
    <wire loc="162:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b9eefef2020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b9eeff86e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b9eeff86e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef053f710"/></to>
    </wire>
    <wire loc="140:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b9eefed2e00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b9eeff582a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b9eeff582a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef046b710"/></to>
    </wire>
    <wire loc="151:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b9eefee2020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b9eeff67020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b9eeff67020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b9ef04d1710"/></to>
    </wire>
    <wire loc="54:/homes/hglanzer/SVN/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b9eefdbd1c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9eefe702b0"/></to>
    </wire>
    <wire loc="55:/homes/hglanzer/SVN/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b9eefe79758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b9eefe90660"/></to>
    </wire>
    <wire loc="65:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b9eefe962b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b9ef033e268"/></to>
    </wire>
    <wire loc="35:LedC.nc">
      <from><interface-ref name="runTasks" scoped="" ref="0x2b9ef011a020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9eefdbd1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/homes/hglanzer/SVN/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9ef01892d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9ef012b840"/></to>
    </wire>
    <wire loc="54:/homes/hglanzer/SVN/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b9ef013c6c8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b9ef013f488"/></to>
    </wire>
    <wire loc="93:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b9ef013f488"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b9eefec7870"/></to>
    </wire>
    <wire loc="55:/homes/hglanzer/SVN/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b9ef013b958"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b9ef015a688"/></to>
    </wire>
    <wire loc="94:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b9ef015a688"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b9eefed4af0"/></to>
    </wire>
    <wire loc="56:/homes/hglanzer/SVN/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b9ef013aae0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b9ef0159810"/></to>
    </wire>
    <wire loc="95:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b9ef0159810"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b9eefed3c78"/></to>
    </wire>
    <wire loc="103:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA6" scoped="" ref="0x2b9ef0166518"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b9eefedc348"/></to>
    </wire>
    <wire loc="107:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB1" scoped="" ref="0x2b9ef0163cb0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b9eefed97e0"/></to>
    </wire>
    <wire loc="112:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB6" scoped="" ref="0x2b9ef0173818"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x2b9eefee11a0"/></to>
    </wire>
    <wire loc="118:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC3" scoped="" ref="0x2b9ef016d380"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x2b9eefeea968"/></to>
    </wire>
    <wire loc="129:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD5" scoped="" ref="0x2b9ef018dcb0"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x2b9eefefac78"/></to>
    </wire>
    <wire loc="98:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA1" scoped="" ref="0x2b9ef016cb38"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b9eefed4af0"/></to>
    </wire>
    <wire loc="124:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD0" scoped="" ref="0x2b9ef017c1b8"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x2b9eefef11a0"/></to>
    </wire>
    <wire loc="116:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC1" scoped="" ref="0x2b9ef016f020"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x2b9eefeec658"/></to>
    </wire>
    <wire loc="101:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA4" scoped="" ref="0x2b9ef01681b8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b9eefede020"/></to>
    </wire>
    <wire loc="110:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB4" scoped="" ref="0x2b9ef0175380"/></from>
      <to><interface-ref name="PortB4" scoped="" ref="0x2b9eefee4c78"/></to>
    </wire>
    <wire loc="121:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC6" scoped="" ref="0x2b9ef0180cb0"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x2b9eefee7e00"/></to>
    </wire>
    <wire loc="127:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD3" scoped="" ref="0x2b9ef0179818"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x2b9eefeee968"/></to>
    </wire>
    <wire loc="104:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA7" scoped="" ref="0x2b9ef0165818"/></from>
      <to><interface-ref name="PortA7" scoped="" ref="0x2b9eefedb4d0"/></to>
    </wire>
    <wire loc="113:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB7" scoped="" ref="0x2b9ef01729b0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b9eefee0348"/></to>
    </wire>
    <wire loc="125:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD1" scoped="" ref="0x2b9ef017b380"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x2b9eefef0658"/></to>
    </wire>
    <wire loc="99:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA2" scoped="" ref="0x2b9ef016be38"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b9eefed3c78"/></to>
    </wire>
    <wire loc="108:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB2" scoped="" ref="0x2b9ef0177020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b9eefee6968"/></to>
    </wire>
    <wire loc="119:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC4" scoped="" ref="0x2b9ef0182518"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x2b9eefee9af0"/></to>
    </wire>
    <wire loc="130:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD6" scoped="" ref="0x2b9ef018b020"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b9eefef9e00"/></to>
    </wire>
    <wire loc="106:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB0" scoped="" ref="0x2b9ef01649b0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b9eefeda658"/></to>
    </wire>
    <wire loc="102:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA5" scoped="" ref="0x2b9ef0167380"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x2b9eefedd1a0"/></to>
    </wire>
    <wire loc="111:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB5" scoped="" ref="0x2b9ef0174518"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x2b9eefee2020"/></to>
    </wire>
    <wire loc="117:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC2" scoped="" ref="0x2b9ef016e1b8"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x2b9eefeeb7e0"/></to>
    </wire>
    <wire loc="122:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC7" scoped="" ref="0x2b9ef017d020"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x2b9eefef2020"/></to>
    </wire>
    <wire loc="128:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD4" scoped="" ref="0x2b9ef01789b0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b9eefefbaf0"/></to>
    </wire>
    <wire loc="97:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA0" scoped="" ref="0x2b9ef01579a0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b9eefec7870"/></to>
    </wire>
    <wire loc="100:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA3" scoped="" ref="0x2b9ef0169020"/></from>
      <to><interface-ref name="PortA3" scoped="" ref="0x2b9eefed2e00"/></to>
    </wire>
    <wire loc="109:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB3" scoped="" ref="0x2b9ef01761b8"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b9eefee5af0"/></to>
    </wire>
    <wire loc="115:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC0" scoped="" ref="0x2b9ef0171cb0"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x2b9eefeed4d0"/></to>
    </wire>
    <wire loc="120:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC5" scoped="" ref="0x2b9ef0181818"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x2b9eefee8c78"/></to>
    </wire>
    <wire loc="126:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD2" scoped="" ref="0x2b9ef017a518"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x2b9eefeef7e0"/></to>
    </wire>
    <wire loc="131:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD7" scoped="" ref="0x2b9ef018a1b8"/></from>
      <to><interface-ref name="PortD7" scoped="" ref="0x2b9eefef7020"/></to>
    </wire>
    <wire loc="182:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeRectangle" scoped="" ref="0x2b9ef02211c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9eefdbd1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="262:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="clearScreen" scoped="" ref="0x2b9ef02308c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9eefdbd1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="230:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeString" scoped="" ref="0x2b9ef0223020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9eefdbd1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="198:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeCircle" scoped="" ref="0x2b9ef021abe0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9eefdbd1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeLine" scoped="" ref="0x2b9ef0245020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9eefdbd1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="wait4Controller" scoped="" ref="0x2b9ef01e0020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9eefdbd1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/homes/hglanzer/SVN/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b9ef02751c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b9ef0287b18"/></to>
    </wire>
    <wire loc="61:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b9ef0287b18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9ef03fa0c8"/></to>
    </wire>
    <wire loc="59:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9ef0270de0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9ef02966f0"/></to>
    </wire>
    <wire loc="65:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b9ef0280108"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b9ef040bc38"/></to>
    </wire>
    <wire loc="35:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b9ef02966f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9ef0395190"/></to>
    </wire>
    <wire loc="62:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b9ef04145a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9ef038bd88"/></to>
    </wire>
    <wire loc="63:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9ef03c1020"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b9ef0293020"/></to>
    </wire>
    <wire loc="36:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b9ef0293020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9ef0395938"/></to>
    </wire>
    <wire loc="66:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b9ef0423e48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b9ef02a2150"/></to>
    </wire>
    <wire loc="37:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b9ef02a2150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9ef0391a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b9ef0391a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b9ef074da90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b9ef0395190"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b9ef07510e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b9ef0395938"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b9ef0751888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b9ef0778b98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9ef031ee00"/></to>
    </wire>
    <wire loc="67:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b9ef031ee00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b9ef032a180"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b9ef0773b60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b9ef0316020"/></to>
    </wire>
    <wire loc="68:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b9ef0316020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b9ef0325160"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2b9ef0772b58"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9ef0315020"/></to>
    </wire>
    <wire loc="69:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b9ef0315020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b9ef0324190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b9ef076fbb0"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b9ef032e218"/></to>
    </wire>
    <wire loc="70:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b9ef032e218"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b9ef033e958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2b9ef03bd020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9eefdbd1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b9ef040f618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b9eefdbd1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/homes/hglanzer/SVN/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/homes/hglanzer/SVN/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformP.nc" safe="">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <documentation loc="10:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc" safe="">
      <documentation loc="10:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc" safe="">
      <documentation loc="14:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/homes/hglanzer/SVN/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/homes/hglanzer/SVN/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/homes/hglanzer/SVN/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/homes/hglanzer/SVN/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedC" loc="13:LedC.nc" safe="">
      <documentation loc="6:LedC.nc">
        <short>&#10;*</short>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/homes/hglanzer/SVN/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/homes/hglanzer/SVN/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/homes/hglanzer/SVN/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LCD128x64C" loc="1:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <configuration/>
    </component>
    <component qname="LCD128x64P" loc="4:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <module/>
    </component>
    <component qname="LedAppC.Timer0" loc="44(LedAppC.Timer0):/homes/hglanzer/SVN/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/hglanzer/SVN/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/homes/hglanzer/SVN/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <documentation loc="11:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <documentation loc="11:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP):/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <documentation loc="11:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b9ef029a068"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0SyncC" loc="50:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <documentation loc="33:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0SyncP" loc="58:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc" safe="">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in SYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in SYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in SYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;--> CHANGED TO SYNC-Mode(CPL_CLK)&#9;hglanzer&#10;--> AS0=0 in ASSR&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/homes/hglanzer/SVN/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/homes/hglanzer/SVN/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/homes/hglanzer/SVN/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/homes/hglanzer/SVN/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/homes/hglanzer/SVN/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedAppC.Timer1" loc="44(LedAppC.Timer1):/homes/hglanzer/SVN/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/hglanzer/SVN/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b9eeff14ba0" loc="40:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b9eeff1e020" loc="40:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b9eeff1e368" loc="40:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b9eeff22610" loc="41:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b9eeff22978" loc="42:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b9eeff22ce0" loc="43:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b9eeff1f060" loc="44:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b9eeffb6020" loc="42:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b9eeffb6388" loc="43:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b9eeffb66f0" loc="44:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b9eeffb6a20" loc="45:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/homes/hglanzer/SVN/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/homes/hglanzer/SVN/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncC" loc="30:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc" abstract="">
      <documentation loc="11:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b9ef029a068" loc="30:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b9ef029a068"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b9ef029a358" loc="30:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncP" loc="30:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b9ef02ac748" loc="30:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b9ef02ac748"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b9ef02aca38" loc="30:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/homes/hglanzer/SVN/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/homes/hglanzer/SVN/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9ef03a90a8" loc="46:/homes/hglanzer/SVN/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9ef03a90a8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/homes/hglanzer/SVN/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9ef03d9020" loc="46:/homes/hglanzer/SVN/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9ef03d9020"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b9ef03d9330" loc="46:/homes/hglanzer/SVN/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/homes/hglanzer/SVN/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/homes/hglanzer/SVN/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9ef040c728" loc="46:/homes/hglanzer/SVN/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9ef040c728"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b9eefeb1620" loc="58:/homes/hglanzer/SVN/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b9eefeb1620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9eefeb1970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b9eefeb2220" loc="57:/homes/hglanzer/SVN/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b9eefeb2220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b9eefeb2570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b9eefeaf380" loc="52:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b9eefeaf380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9eefeaf6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9eefeb4620" loc="46:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9eefeb4620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9eefeb4970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b9eefeb7618" loc="50:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b9eefeb7618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b9eefeb7968"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b9eefeb7af0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b9eefeb7c78"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b9eefeb7e00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b9eefeaf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b9eefec3ca0" loc="45:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b9eefec3ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9eefec2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9eefec3600" loc="44:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9eefec3600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9eefec3950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b9eefec2398" loc="46:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b9eefec2398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9eefec26e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b9eefec9360" loc="18:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b9eefec9360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9eefec96b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b9eefebcb98" loc="17:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b9eefebcb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9eefec9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b9eefec5b08" loc="19:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b9eefec5b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9eefec5e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b9eefecd8d8" loc="18:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b9eefecd8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefecdc28"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefecddb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefec5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefec51a8"/>
        <function-ref name="get" scoped="" ref="0x2b9eefec5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefec54b8"/>
        <function-ref name="set" scoped="" ref="0x2b9eefec5640"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefec57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b9eefec6698" loc="17:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b9eefec6698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9eefec69e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b9eeff0eaf0" loc="100:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b9eeff0eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff0d5e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff0d770"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff0d8f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff0da80"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff0dc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff0dd90"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff0c020"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff0c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b9eefef0658" loc="74:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b9eefef0658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefef09a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefef0b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefef0cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefef0e40"/>
        <function-ref name="get" scoped="" ref="0x2b9eefeef020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefeef1a8"/>
        <function-ref name="set" scoped="" ref="0x2b9eefeef330"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefeef4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b9eeff01658" loc="85:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b9eeff01658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff019a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff01b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff01cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff01e40"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff00020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff001a8"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff00330"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff004b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b9eeff06348" loc="94:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b9eeff06348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff06698"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff06820"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff069a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff06b30"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff06cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff06e40"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff05020"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff051a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b9eefedc348" loc="52:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b9eefedc348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefedc698"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefedc820"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefedc9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefedcb30"/>
        <function-ref name="get" scoped="" ref="0x2b9eefedccb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefedce40"/>
        <function-ref name="set" scoped="" ref="0x2b9eefedb020"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefedb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b9eeff08020" loc="92:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b9eeff08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff08370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff084f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff08680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff08808"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff08990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff08b18"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff08ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff08e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b9eefeda658" loc="55:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b9eefeda658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefeda9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefedab30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefedacb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefedae40"/>
        <function-ref name="get" scoped="" ref="0x2b9eefed9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefed91a8"/>
        <function-ref name="set" scoped="" ref="0x2b9eefed9330"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefed94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b9eefeeb7e0" loc="66:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b9eefeeb7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefeebb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefeebcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefeebe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefeea020"/>
        <function-ref name="get" scoped="" ref="0x2b9eefeea1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefeea330"/>
        <function-ref name="set" scoped="" ref="0x2b9eefeea4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefeea640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b9eefefbaf0" loc="77:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b9eefefbaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefefbe40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefefa020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefefa1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefefa330"/>
        <function-ref name="get" scoped="" ref="0x2b9eefefa4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefefa640"/>
        <function-ref name="set" scoped="" ref="0x2b9eefefa7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefefa950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b9eefefeaf0" loc="88:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b9eefefeaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefefee40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefefd020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefefd1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefefd330"/>
        <function-ref name="get" scoped="" ref="0x2b9eefefd4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefefd640"/>
        <function-ref name="set" scoped="" ref="0x2b9eefefd7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefefd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b9eefed4af0" loc="47:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b9eefed4af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefed4e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefed3020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefed31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefed3330"/>
        <function-ref name="get" scoped="" ref="0x2b9eefed34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefed3640"/>
        <function-ref name="set" scoped="" ref="0x2b9eefed37c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefed3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b9eefee5af0" loc="58:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b9eefee5af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefee5e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefee4020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefee41a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefee4330"/>
        <function-ref name="get" scoped="" ref="0x2b9eefee44b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefee4640"/>
        <function-ref name="set" scoped="" ref="0x2b9eefee47c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefee4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b9eefee8c78" loc="69:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b9eefee8c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefee7020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefee71a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefee7330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefee74b8"/>
        <function-ref name="get" scoped="" ref="0x2b9eefee7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefee77c8"/>
        <function-ref name="set" scoped="" ref="0x2b9eefee7950"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefee7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b9eefef7020" loc="80:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b9eefef7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefef7370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefef74f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefef7680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefef7808"/>
        <function-ref name="get" scoped="" ref="0x2b9eefef7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefef7b18"/>
        <function-ref name="set" scoped="" ref="0x2b9eefef7ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefef7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b9eeff037e0" loc="97:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b9eeff037e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff03b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff03cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff03e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff0f020"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff0f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff0f330"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff0f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff0f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b9eeff0a7e0" loc="103:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b9eeff0a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff0ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff0acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff0ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff17020"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff171a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff17330"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff174b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff17640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b9eefef5348" loc="83:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b9eefef5348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefef5698"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefef5820"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefef59a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefef5b30"/>
        <function-ref name="get" scoped="" ref="0x2b9eefef5cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefef5e40"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff02020"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff021a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b9eefede020" loc="50:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b9eefede020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefede370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefede4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefede680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefede808"/>
        <function-ref name="get" scoped="" ref="0x2b9eefede990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefedeb18"/>
        <function-ref name="set" scoped="" ref="0x2b9eefedeca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefedee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b9eefee11a0" loc="61:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b9eefee11a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefee14f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefee1678"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefee1800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefee1988"/>
        <function-ref name="get" scoped="" ref="0x2b9eefee1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefee1c98"/>
        <function-ref name="set" scoped="" ref="0x2b9eefee1e20"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefee0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b9eeff0c4d0" loc="101:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b9eeff0c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff0c820"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff0c9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff0cb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff0ccb8"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff0ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff0b020"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff0b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff0b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b9eefeed4d0" loc="64:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b9eefeed4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefeed820"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefeed9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefeedb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefeedcb8"/>
        <function-ref name="get" scoped="" ref="0x2b9eefeede40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefeec020"/>
        <function-ref name="set" scoped="" ref="0x2b9eefeec1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefeec330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b9eefeef7e0" loc="75:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b9eefeef7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefeefb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefeefcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefeefe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefeee020"/>
        <function-ref name="get" scoped="" ref="0x2b9eefeee1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefeee330"/>
        <function-ref name="set" scoped="" ref="0x2b9eefeee4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefeee640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b9eeff007e0" loc="86:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b9eeff007e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff00b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff00cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff00e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefeff020"/>
        <function-ref name="get" scoped="" ref="0x2b9eefeff1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefeff330"/>
        <function-ref name="set" scoped="" ref="0x2b9eefeff4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefeff640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b9eeff054d0" loc="95:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b9eeff054d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff05820"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff059a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff05b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff05cb8"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff05e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff04020"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff041a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff04330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b9eefedb4d0" loc="53:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b9eefedb4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefedb820"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefedb9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefedbb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefedbcb8"/>
        <function-ref name="get" scoped="" ref="0x2b9eefedbe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefeda020"/>
        <function-ref name="set" scoped="" ref="0x2b9eefeda1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefeda330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b9eefed97e0" loc="56:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b9eefed97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefed9b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefed9cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefed9e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefee6020"/>
        <function-ref name="get" scoped="" ref="0x2b9eefee61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefee6330"/>
        <function-ref name="set" scoped="" ref="0x2b9eefee64b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefee6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b9eefeea968" loc="67:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b9eefeea968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefeeacb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefeeae40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefee9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefee91a8"/>
        <function-ref name="get" scoped="" ref="0x2b9eefee9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefee94b8"/>
        <function-ref name="set" scoped="" ref="0x2b9eefee9640"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefee97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b9eefefac78" loc="78:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b9eefefac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefef9020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefef91a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefef9330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefef94b8"/>
        <function-ref name="get" scoped="" ref="0x2b9eefef9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefef97c8"/>
        <function-ref name="set" scoped="" ref="0x2b9eefef9950"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefef9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b9eefefdc78" loc="89:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b9eefefdc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefefc020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefefc1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefefc330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefefc4b8"/>
        <function-ref name="get" scoped="" ref="0x2b9eefefc640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefefc7c8"/>
        <function-ref name="set" scoped="" ref="0x2b9eefefc950"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefefcad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b9eefed3c78" loc="48:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b9eefed3c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefed2020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefed21a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefed2330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefed24b8"/>
        <function-ref name="get" scoped="" ref="0x2b9eefed2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefed27c8"/>
        <function-ref name="set" scoped="" ref="0x2b9eefed2950"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefed2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b9eefee4c78" loc="59:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b9eefee4c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefee30f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefee3278"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefee3400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefee3588"/>
        <function-ref name="get" scoped="" ref="0x2b9eefee3710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefee3898"/>
        <function-ref name="set" scoped="" ref="0x2b9eefee3a20"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefee3ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b9eefee7e00" loc="70:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b9eefee7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefef41a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefef4330"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefef44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefef4640"/>
        <function-ref name="get" scoped="" ref="0x2b9eefef47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefef4950"/>
        <function-ref name="set" scoped="" ref="0x2b9eefef4ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefef4c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b9eeff0f968" loc="98:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b9eeff0f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff0fcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff0fe40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff0e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff0e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff0e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff0e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff0e640"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff0e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b9eefef11a0" loc="73:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b9eefef11a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefef16f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefef1878"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefef1a00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefef1b88"/>
        <function-ref name="get" scoped="" ref="0x2b9eefef1d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefef0020"/>
        <function-ref name="set" scoped="" ref="0x2b9eefef01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefef0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b9eeff024d0" loc="84:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b9eeff024d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff02820"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff029a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff02b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff02cb8"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff02e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff01020"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff011a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff01330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b9eeff071a0" loc="93:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b9eeff071a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff074f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff07678"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff07800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff07988"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff07b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff07c98"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff07e20"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b9eeff17968" loc="104:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b9eeff17968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff17cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff17e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff16020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff161a8"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff16330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff164b8"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff16640"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff167c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b9eefedd1a0" loc="51:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b9eefedd1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefedd4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefedd678"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefedd800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefedd988"/>
        <function-ref name="get" scoped="" ref="0x2b9eefeddb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefeddc98"/>
        <function-ref name="set" scoped="" ref="0x2b9eefedde20"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefedc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b9eefee0348" loc="62:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b9eefee0348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefee0698"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefee0820"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefee09a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefee0b30"/>
        <function-ref name="get" scoped="" ref="0x2b9eefee0cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefee0e40"/>
        <function-ref name="set" scoped="" ref="0x2b9eefeed020"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefeed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b9eefefce00" loc="91:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b9eefefce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff091a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff09330"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff094b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff09640"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff097c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff09950"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff09ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff09c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b9eefeec658" loc="65:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b9eefeec658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefeec9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefeecb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefeeccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefeece40"/>
        <function-ref name="get" scoped="" ref="0x2b9eefeeb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefeeb1a8"/>
        <function-ref name="set" scoped="" ref="0x2b9eefeeb330"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefeeb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b9eefeee968" loc="76:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b9eefeee968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefeeecb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefeeee40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefefb020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefefb1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9eefefb330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefefb4b8"/>
        <function-ref name="set" scoped="" ref="0x2b9eefefb640"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefefb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b9eefeff968" loc="87:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b9eefeff968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefeffcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefeffe40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefefe020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefefe1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9eefefe330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefefe4b8"/>
        <function-ref name="set" scoped="" ref="0x2b9eefefe640"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefefe7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b9eeff04658" loc="96:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b9eeff04658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff049a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff04b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff04cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff04e40"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff03020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff031a8"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff03330"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff034b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b9eefec7870" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b9eefec7870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefec7bc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefec7d48"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefed4020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefed41a8"/>
        <function-ref name="get" scoped="" ref="0x2b9eefed4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefed44b8"/>
        <function-ref name="set" scoped="" ref="0x2b9eefed4640"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefed47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b9eefee6968" loc="57:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b9eefee6968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefee6cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefee6e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefee5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefee51a8"/>
        <function-ref name="get" scoped="" ref="0x2b9eefee5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefee54b8"/>
        <function-ref name="set" scoped="" ref="0x2b9eefee5640"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefee57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b9eefee9af0" loc="68:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b9eefee9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefee9e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefee8020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefee81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefee8330"/>
        <function-ref name="get" scoped="" ref="0x2b9eefee84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefee8640"/>
        <function-ref name="set" scoped="" ref="0x2b9eefee87c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefee8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b9eefef9e00" loc="79:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b9eefef9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefef81a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefef8330"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefef84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefef8640"/>
        <function-ref name="get" scoped="" ref="0x2b9eefef87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefef8950"/>
        <function-ref name="set" scoped="" ref="0x2b9eefef8ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefef8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b9eeff0b658" loc="102:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b9eeff0b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff0b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff0bb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff0bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff0be40"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff0a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff0a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff0a330"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff0a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b9eefef61a0" loc="82:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b9eefef61a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefef64f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefef6678"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefef6800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefef6988"/>
        <function-ref name="get" scoped="" ref="0x2b9eefef6b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefef6c98"/>
        <function-ref name="set" scoped="" ref="0x2b9eefef6e20"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefef5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b9eefef2020" loc="71:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b9eefef2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefef2370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefef24f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefef2680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefef2808"/>
        <function-ref name="get" scoped="" ref="0x2b9eefef2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefef2b18"/>
        <function-ref name="set" scoped="" ref="0x2b9eefef2ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefef2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b9eefed2e00" loc="49:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b9eefed2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefedf1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefedf330"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefedf4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefedf640"/>
        <function-ref name="get" scoped="" ref="0x2b9eefedf7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefedf950"/>
        <function-ref name="set" scoped="" ref="0x2b9eefedfad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefedfc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b9eefee2020" loc="60:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b9eefee2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefee2370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefee24f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefee2680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefee2808"/>
        <function-ref name="get" scoped="" ref="0x2b9eefee2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefee2b18"/>
        <function-ref name="set" scoped="" ref="0x2b9eefee2ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefee2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9eeff59120" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9eeff59120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff59470"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff595f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff59780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff59908"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff59a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff59c18"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff59da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff58020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b9eeff665b8" loc="49:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b9eeff665b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff66908"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff66a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff66c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff66da0"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff65020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff651a8"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff65330"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff654b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9eeff5cdc0" loc="44:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9eeff5cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff5b170"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff5b2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff5b480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff5b608"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff5b790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff5b918"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff5baa0"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff5bc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b9eeff582a8" loc="47:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b9eeff582a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff585f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff58780"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff58908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff58a90"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff58c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff58da0"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff57020"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff571a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9eeff65740" loc="50:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9eeff65740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff65a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff65c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff65da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff64020"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff641a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff64330"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff644b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff64640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9eeff5a020" loc="45:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9eeff5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff5a370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff5a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff5a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff5a808"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff5a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff5ab18"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff5aca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff5ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9eeff57430" loc="48:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9eeff57430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff57780"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff57908"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff57a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff57c18"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff57da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff66020"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff661a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff66330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b9eeff648c8" loc="51:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b9eeff648c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff64c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff64da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff63020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff631a8"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff63330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff634b8"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff63640"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff637c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef04746a8" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef04746a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef04749f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0474b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0474d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0473020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef04731a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0473330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef04734b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0473640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef0471710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef0471710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0471a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0471be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0471d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0470020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef04701a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0470330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef04704b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0470640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef046e710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef046e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef046ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef046ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef046ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef046d020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef046d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef046d330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef046d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef046d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef046b710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef046b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef046ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef046bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef046bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef046a020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef046a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef046a330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef046a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef046a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef0468710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef0468710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0468a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0468be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0468d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0489020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef04891a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0489330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef04894b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0489640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef0487710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef0487710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0487a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0487be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0487d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0486020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef04861a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0486330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef04864b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0486640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef0484710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef0484710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0484a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0484be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0484d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0483020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef04831a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0483330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef04834b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0483640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef0481710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef0481710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0481a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0481be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0481d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0480020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef04801a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0480330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef04804b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0480640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9eeff6bbd8" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9eeff6bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff6a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff6a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff6a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff6a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff6a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff6a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff6a950"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff6aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b9eeff67020" loc="49:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b9eeff67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff67370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff674f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff67680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff67808"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff67990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff67b18"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff67ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff67e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9eeff6d930" loc="44:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9eeff6d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff6dc80"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff6de08"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff6c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff6c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff6c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff6c4b8"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff6c640"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff6c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b9eeff6ad60" loc="47:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b9eeff6ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff690d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff69260"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff693e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff69570"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff696f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff69880"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff69a08"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff69b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9eeff76120" loc="50:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9eeff76120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff76470"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff765f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff76780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff76908"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff76a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff76c18"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff76da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9eeff6ca50" loc="45:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9eeff6ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff6cda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff6b020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff6b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff6b330"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff6b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff6b640"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff6b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff6b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9eeff69e18" loc="48:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9eeff69e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff681a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff68330"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff684b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff68640"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff687c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff68950"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff68ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff68c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b9eeff752a8" loc="51:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b9eeff752a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff755f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff75780"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff75908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff75a90"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff75c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff75da0"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff74020"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff741a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef04e06a8" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef04e06a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef04e09f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef04e0b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef04e0d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef04df020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef04df1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef04df330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef04df4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef04df640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef04dd710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef04dd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef04dda60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef04ddbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef04ddd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef04dc020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef04dc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef04dc330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef04dc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef04dc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef04da710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef04da710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef04daa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef04dabe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef04dad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef04d9020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef04d91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef04d9330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef04d94b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef04d9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef04d7710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef04d7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef04d7a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef04d7be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef04d7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef04d6020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef04d61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef04d6330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef04d64b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef04d6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef04d4710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef04d4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef04d4a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef04d4be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef04d4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef04d3020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef04d31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef04d3330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef04d34b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef04d3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef04d1710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef04d1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef04d1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef04d1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef04d1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef04f4020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef04f41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef04f4330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef04f44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef04f4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef04f2710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef04f2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef04f2a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef04f2be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef04f2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef04f1020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef04f11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef04f1330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef04f14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef04f1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef04ef710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef04ef710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef04efa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef04efbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef04efd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef04ee020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef04ee1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef04ee330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef04ee4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef04ee640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9eeff7c740" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9eeff7c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff7ca90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff7cc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff7cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff7b020"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff7b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff7b330"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff7b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff7b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b9eeff79bd8" loc="49:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b9eeff79bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff77020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff771a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff77330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff774b8"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff77640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff777c8"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff77950"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff77ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9eeff7e500" loc="44:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9eeff7e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff7e850"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff7e9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff7eb60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff7ece8"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff7ee70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff7d020"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff7d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff7d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b9eeff7b8c8" loc="47:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b9eeff7b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff7bc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff7bda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff7a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff7a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff7a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff7a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff7a640"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff7a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9eeff77d60" loc="50:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9eeff77d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff860d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff86260"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff863e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff86570"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff866f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff86880"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff86a08"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff86b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9eeff7d5b8" loc="45:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9eeff7d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff7d908"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff7da90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff7dc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff7dda0"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff7c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff7c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff7c330"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff7c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9eeff7aa50" loc="48:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9eeff7aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff7ada0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff79020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff791a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff79330"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff794b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff79640"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff797c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff79950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b9eeff86e18" loc="51:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b9eeff86e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff851a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff85330"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff854b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff85640"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff857c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff85950"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff85ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff85c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef052f6a8" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef052f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef052f9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef052fb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef052fd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef052d020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef052d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef052d330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef052d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef052d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef052b710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef052b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef052ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef052bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef052bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0550020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef05501a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0550330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef05504b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0550640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef054e710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef054e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef054ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef054ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef054ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef054d020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef054d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef054d330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef054d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef054d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef054b710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef054b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef054ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef054bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef054bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef054a020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef054a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef054a330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef054a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef054a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef0548710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef0548710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0548a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0548be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0548d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0547020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef05471a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0547330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef05474b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0547640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef0545710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef0545710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0545a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0545be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0545d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0544020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef05441a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0544330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef05444b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0544640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef0542710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef0542710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0542a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0542be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0542d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0541020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef05411a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0541330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef05414b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0541640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef053f710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef053f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef053fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef053fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef053fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef053e020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef053e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef053e330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef053e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef053e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9eeff8d120" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9eeff8d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff8d470"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff8d5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff8d780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff8d908"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff8da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff8dc18"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff8dda0"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff8b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b9eeff895b8" loc="49:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b9eeff895b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff89908"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff89a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff89c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff89da0"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff88020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff881a8"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff88330"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff884b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9eeff80e40" loc="44:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9eeff80e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff7f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff7f348"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff7f4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff7f658"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff7f7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff7f968"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff7faf0"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff7fc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b9eeff8b2a8" loc="47:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b9eeff8b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff8b5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff8b780"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff8b908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff8ba90"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff8bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff8bda0"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff8a020"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff8a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9eeff88740" loc="50:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9eeff88740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff88a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff88c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff88da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff87020"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff871a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff87330"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff874b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff87640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9eeff8e020" loc="45:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9eeff8e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff8e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff8e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff8e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff8e808"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff8e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff8eb18"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff8eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff8ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9eeff8a430" loc="48:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9eeff8a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff8a780"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff8a908"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff8aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff8ac18"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff8ada0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff89020"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff891a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff89330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b9eeff878c8" loc="51:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b9eeff878c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff87c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff87da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff96020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff961a8"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff96330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff964b8"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff96640"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff967c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef05ad6a8" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef05ad6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef05ad9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef05adb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef05add08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef05ab020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef05ab1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef05ab330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef05ab4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef05ab640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef05a9710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef05a9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef05a9a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef05a9be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef05a9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef05a8020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef05a81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef05a8330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef05a84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef05a8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef05a6710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef05a6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef05a6a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef05a6be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef05a6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef05a5020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef05a51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef05a5330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef05a54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef05a5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef05a3710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef05a3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef05a3a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef05a3be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef05a3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef05a2020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef05a21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef05a2330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef05a24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef05a2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef05a0710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef05a0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef05a0a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef05a0be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef05a0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef059f020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef059f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef059f330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef059f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef059f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef059d710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef059d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef059da60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef059dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef059dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef05c4020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef05c41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef05c4330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef05c44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef05c4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef05c2710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef05c2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef05c2a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef05c2be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef05c2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef05c1020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef05c11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef05c1330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef05c14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef05c1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef05bf710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef05bf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef05bfa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef05bfbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef05bfd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef05be020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef05be1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef05be330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef05be4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef05be640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9eeff9ebd8" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9eeff9ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff9d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff9d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff9d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff9d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff9d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff9d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff9d950"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff9dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b9eeff9a020" loc="49:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b9eeff9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff9a370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff9a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff9a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff9a808"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff9a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff9ab18"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff9aca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff9ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9eeff90930" loc="44:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9eeff90930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff90c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff90e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff8f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff8f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff8f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff8f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff8f640"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff8f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b9eeff9dd60" loc="47:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b9eeff9dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff9c0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff9c260"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff9c3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff9c570"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff9c6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff9c880"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff9ca08"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff9cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9eeff99120" loc="50:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9eeff99120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff99470"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff995f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff99780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff99908"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff99a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff99c18"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff99da0"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9eeff8fa50" loc="45:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9eeff8fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff8fda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff9e020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff9e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff9e330"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff9e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff9e640"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff9e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff9e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9eeff9ce18" loc="48:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9eeff9ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff9b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff9b330"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff9b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff9b640"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff9b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff9b950"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff9bad8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff9bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b9eeff982a8" loc="51:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b9eeff982a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff985f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff98780"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff98908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff98a90"/>
        <function-ref name="get" scoped="" ref="0x2b9eeff98c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff98da0"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff97020"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff971a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef060e6a8" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef060e6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef060e9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef060eb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef060ed08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef060d020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef060d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef060d330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef060d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef060d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef060b710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef060b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef060ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef060bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef060bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0609020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef06091a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0609330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef06094b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0609640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef0607710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef0607710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0607a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0607be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0607d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0606020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef06061a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0606330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef06064b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0606640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef0604710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef0604710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0604a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0604be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0604d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0603020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef06031a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0603330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef06034b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0603640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef0601710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef0601710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0601a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0601be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0601d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0628020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef06281a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0628330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef06284b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0628640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef0626710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef0626710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0626a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0626be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0626d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0625020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef06251a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0625330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef06254b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0625640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef0623710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef0623710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0623a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0623be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0623d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0622020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef06221a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0622330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef06224b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0622640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef0620710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef0620710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0620a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0620be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0620d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef061f020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef061f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef061f330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef061f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef061f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b9eeffa0430" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b9eeffa0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeffa0780"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeffa0908"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeffa0a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeffa0c18"/>
        <function-ref name="get" scoped="" ref="0x2b9eeffa0da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeff9f020"/>
        <function-ref name="set" scoped="" ref="0x2b9eeff9f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeff9f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b9eeffaf8c8" loc="49:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b9eeffaf8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeffafc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeffafda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeffae020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeffae1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9eeffae330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeffae4b8"/>
        <function-ref name="set" scoped="" ref="0x2b9eeffae640"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeffae7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b9eeffa21e8" loc="44:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b9eeffa21e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeffa2538"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeffa26c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeffa2848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeffa29d0"/>
        <function-ref name="get" scoped="" ref="0x2b9eeffa2b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeffa2ce0"/>
        <function-ref name="set" scoped="" ref="0x2b9eeffa2e68"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeffa1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b9eeff9f5b8" loc="47:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b9eeff9f5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeff9f908"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeff9fa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeff9fc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeff9fda0"/>
        <function-ref name="get" scoped="" ref="0x2b9eeffb0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeffb01a8"/>
        <function-ref name="set" scoped="" ref="0x2b9eeffb0330"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeffb04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b9eeffaea50" loc="50:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b9eeffaea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeffaeda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeffad020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeffad1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeffad330"/>
        <function-ref name="get" scoped="" ref="0x2b9eeffad4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeffad640"/>
        <function-ref name="set" scoped="" ref="0x2b9eeffad7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeffad950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b9eeffa12a8" loc="45:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b9eeffa12a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeffa15f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeffa1780"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeffa1908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeffa1a90"/>
        <function-ref name="get" scoped="" ref="0x2b9eeffa1c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeffa1da0"/>
        <function-ref name="set" scoped="" ref="0x2b9eeffa0020"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeffa01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b9eeffb0740" loc="48:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b9eeffb0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeffb0a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeffb0c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeffb0da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeffaf020"/>
        <function-ref name="get" scoped="" ref="0x2b9eeffaf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeffaf330"/>
        <function-ref name="set" scoped="" ref="0x2b9eeffaf4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeffaf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b9eeffadbd8" loc="51:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b9eeffadbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeffab020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeffab1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeffab330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeffab4b8"/>
        <function-ref name="get" scoped="" ref="0x2b9eeffab640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeffab7c8"/>
        <function-ref name="set" scoped="" ref="0x2b9eeffab950"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeffabad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef06766a8" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef06766a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef06769f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0676b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0676d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0675020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef06751a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0675330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef06754b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0675640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef0673710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef0673710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0673a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0673be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0673d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0671020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef06711a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0671330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef06714b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0671640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef066f710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef066f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef066fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef066fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef066fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef066e020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef066e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef066e330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef066e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef066e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef066c710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef066c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef066ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef066cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef066cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef066b020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef066b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef066b330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef066b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef066b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef0669710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef0669710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0669a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0669be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0669d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0668020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef06681a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0668330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef06684b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0668640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef0690710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef0690710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0690a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0690be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0690d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef068f020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef068f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef068f330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef068f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef068f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef068d710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef068d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef068da60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef068dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef068dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef068c020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef068c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef068c330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef068c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef068c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef068a710" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef068a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef068aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef068abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef068ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0689020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef06891a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0689330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef06894b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0689640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9eeffb7ac0" loc="47:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9eeffb7ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeffb7e10"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeffc5020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeffc51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeffc5330"/>
        <function-ref name="get" scoped="" ref="0x2b9eeffc54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeffc5640"/>
        <function-ref name="set" scoped="" ref="0x2b9eeffc57c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeffc5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9eeffd4db8" loc="47:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9eeffd4db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeffd3170"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeffd32f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeffd3480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeffd3608"/>
        <function-ref name="get" scoped="" ref="0x2b9eeffd3790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeffd3918"/>
        <function-ref name="set" scoped="" ref="0x2b9eeffd3aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeffd3c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9eeffce3e0" loc="47:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9eeffce3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeffce730"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeffce8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeffcea40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeffcebc8"/>
        <function-ref name="get" scoped="" ref="0x2b9eeffced50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeffcd020"/>
        <function-ref name="set" scoped="" ref="0x2b9eeffcd1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeffcd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9eeffdb7e8" loc="47:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9eeffdb7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeffdbb38"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeffdbcc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeffdbe48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeffda020"/>
        <function-ref name="get" scoped="" ref="0x2b9eeffda1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeffda330"/>
        <function-ref name="set" scoped="" ref="0x2b9eeffda4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeffda640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9eeffd7c38" loc="47:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9eeffd7c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeffd6020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeffd61a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeffd6330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeffd64b8"/>
        <function-ref name="get" scoped="" ref="0x2b9eeffd6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeffd67c8"/>
        <function-ref name="set" scoped="" ref="0x2b9eeffd6950"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeffd6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9eeffe3020" loc="47:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9eeffe3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeffe3370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeffe34f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeffe3680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeffe3808"/>
        <function-ref name="get" scoped="" ref="0x2b9eeffe3990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeffe3b18"/>
        <function-ref name="set" scoped="" ref="0x2b9eeffe3ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeffe3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9eeffde480" loc="47:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9eeffde480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeffde7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeffde958"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeffdeae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeffdec68"/>
        <function-ref name="get" scoped="" ref="0x2b9eeffdedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeffef020"/>
        <function-ref name="set" scoped="" ref="0x2b9eeffef1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeffef330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9eeffec7e8" loc="47:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9eeffec7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeffecb38"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeffeccc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eeffece48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eeffeb020"/>
        <function-ref name="get" scoped="" ref="0x2b9eeffeb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eeffeb330"/>
        <function-ref name="set" scoped="" ref="0x2b9eeffeb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eeffeb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9eeffe7970" loc="47:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9eeffe7970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eeffe7cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eeffe7e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefff8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefff81a8"/>
        <function-ref name="get" scoped="" ref="0x2b9eefff8330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefff84b8"/>
        <function-ref name="set" scoped="" ref="0x2b9eefff8640"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefff87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9eefff4ab0" loc="47:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9eefff4ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefff4e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefff3020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefff31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefff3330"/>
        <function-ref name="get" scoped="" ref="0x2b9eefff34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefff3640"/>
        <function-ref name="set" scoped="" ref="0x2b9eefff37c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefff3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9eefff0c38" loc="47:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9eefff0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0001020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef00011a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0001330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef00014b8"/>
        <function-ref name="get" scoped="" ref="0x2b9ef0001640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef00017c8"/>
        <function-ref name="set" scoped="" ref="0x2b9ef0001950"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0001ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9eefffc020" loc="47:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9eefffc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9eefffc370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9eefffc4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9eefffc680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9eefffc808"/>
        <function-ref name="get" scoped="" ref="0x2b9eefffc990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9eefffcb18"/>
        <function-ref name="set" scoped="" ref="0x2b9eefffcca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9eefffce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b9ef008a180" loc="47:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b9ef008a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef008a4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef008a658"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef008a7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef008a968"/>
        <function-ref name="get" scoped="" ref="0x2b9ef008aaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef008ac78"/>
        <function-ref name="set" scoped="" ref="0x2b9ef008ae00"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0089020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9ef00c52c0" loc="27:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9ef00c52c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b9eefdb5128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b9eefdb5128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef00c5610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b9ef00c58f0" loc="28:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b9ef00c58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b9ef00c5c40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b9ef00c5dc8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b9ef00c4020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b9ef00c41a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b9ef00c4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b9ef00e1140" loc="60:/homes/hglanzer/SVN/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b9ef00e1140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef00e1490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b9eefeb0878" loc="57:/homes/hglanzer/SVN/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b9eefeb0878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b9eefeb0bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b9ef00e29f8" loc="59:/homes/hglanzer/SVN/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b9ef00e29f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef00e2d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b9ef00e2020" loc="58:/homes/hglanzer/SVN/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b9ef00e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef00e2370"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b9ef00e24f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b9ef00e2680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b9eefdbd1c8" loc="48:/homes/hglanzer/SVN/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b9eefdbd1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9eefdbd518"/>
        <function-ref name="runTask" scoped="" ref="0x2b9eefdbd6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b9eefdba600" loc="47:/homes/hglanzer/SVN/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b9eefdba600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9eefdba950"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b9eefdbaad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b9eefdbac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b9eefe702b0" loc="56:/homes/hglanzer/SVN/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b9eefe702b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9eefe70600"/>
        <function-ref name="runTask" scoped="" ref="0x2b9eefe70788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b9eefe79758" loc="57:/homes/hglanzer/SVN/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b9eefe79758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b9eefe79aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b9eefe71448" loc="55:/homes/hglanzer/SVN/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b9eefe71448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9eefe71798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b9eefe71920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b9eefe71aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b9eefe962b0" loc="54:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b9eefe962b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b9eefe96600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b9eefe90660" loc="50:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b9eefe90660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b9eefe909b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b9eefe99a80" loc="51:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b9eefe99a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b9eefe99dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b9ef0111578" loc="19:LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b9ef0111578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9ef01108f0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef0107020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9ef0107d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9ef01078c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9ef010e1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b9ef0110d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9ef0107470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9ef01080f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9ef0110320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9ef0108598"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef0108a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b9ef00e9460" loc="16:LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b9ef00e9460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b9ef00e97b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x2b9ef010e7d8" loc="20:LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x2b9ef010e7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9ef011fa18"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef010c158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9ef010ce48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9ef010c9f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b9ef011d2e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b9ef011fe68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9ef010c5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9ef010d370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9ef011f448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9ef010d810"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef010dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LCD128x64" ref="0x2b9ef0109470" loc="18:LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b9ef0109470"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b9ef01097c0"/>
        <function-ref name="initDone" scoped="" ref="0x2b9ef0109948"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b9ef0109ad0"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b9ef0109c58"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b9ef0109de0"/>
        <function-ref name="writeByte" scoped="" ref="0x2b9ef00f1020"/>
        <function-ref name="setPixel" scoped="" ref="0x2b9ef00f11a8"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b9ef00f1330"/>
        <function-ref name="writeBar" scoped="" ref="0x2b9ef00f14b8"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b9ef00f1640"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b9ef00f17c8"/>
        <function-ref name="writePixel" scoped="" ref="0x2b9ef00f1950"/>
        <function-ref name="initLCD" scoped="" ref="0x2b9ef00f1ad8"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b9ef00f1d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="runTasks" ref="0x2b9ef011a020" loc="35:LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="runTasks" scoped="" ref="0x2b9ef011a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef011a370"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef011a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b9ef00f3c30" loc="15:LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b9ef00f3c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9ef00ea020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9ef00ea1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b9ef00ea330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9ef00ea4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9ef00ea640"/>
        <function-ref name="get" scoped="" ref="0x2b9ef00ea7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9ef00ea950"/>
        <function-ref name="setPort" scoped="" ref="0x2b9ef00eac60"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9ef00e91a8"/>
        <function-ref name="set" scoped="" ref="0x2b9ef00eaad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b9ef00eade8"/>
        <function-ref name="led2On" scoped="" ref="0x2b9ef00e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b9ef012f478" loc="46:/homes/hglanzer/SVN/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b9ef012f478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9ef012f7c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9ef012f950"/>
        <function-ref name="led1On" scoped="" ref="0x2b9ef012fad8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9ef012fc60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9ef012fde8"/>
        <function-ref name="get" scoped="" ref="0x2b9ef012c020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9ef012c1a8"/>
        <function-ref name="setPort" scoped="" ref="0x2b9ef012c4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9ef012c950"/>
        <function-ref name="set" scoped="" ref="0x2b9ef012c330"/>
        <function-ref name="led0On" scoped="" ref="0x2b9ef012c640"/>
        <function-ref name="led2On" scoped="" ref="0x2b9ef012c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b9ef013c6c8" loc="50:/homes/hglanzer/SVN/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b9ef013c6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef013ca18"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef013cba0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef013cd28"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef013b020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef013b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef013b330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef013b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef013b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9ef012b840" loc="46:/homes/hglanzer/SVN/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9ef012b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef012bb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b9ef013b958" loc="51:/homes/hglanzer/SVN/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b9ef013b958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef013bca8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef013be30"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef013a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef013a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b9ef013a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef013a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b9ef013a640"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef013a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b9ef012be08" loc="47:/homes/hglanzer/SVN/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b9ef012be08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b9ef013d1a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b9ef013d330"/>
        <function-ref name="led1On" scoped="" ref="0x2b9ef013d4b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b9ef013d640"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b9ef013d7c8"/>
        <function-ref name="get" scoped="" ref="0x2b9ef013d950"/>
        <function-ref name="led1Off" scoped="" ref="0x2b9ef013dad8"/>
        <function-ref name="setPort" scoped="" ref="0x2b9ef013dde8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b9ef013c330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef013dc60"/>
        <function-ref name="led0On" scoped="" ref="0x2b9ef013c020"/>
        <function-ref name="led2On" scoped="" ref="0x2b9ef013c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b9ef013aae0" loc="52:/homes/hglanzer/SVN/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b9ef013aae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef013ae30"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0139020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef01391a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0139330"/>
        <function-ref name="get" scoped="" ref="0x2b9ef01394b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0139640"/>
        <function-ref name="set" scoped="" ref="0x2b9ef01397c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0139950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA6" ref="0x2b9ef0166518" loc="54:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA6" scoped="" ref="0x2b9ef0166518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0166868"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef01669f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0166b78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0166d00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef0165020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef01651a8"/>
        <function-ref name="set" scoped="" ref="0x2b9ef0165330"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef01654b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB1" ref="0x2b9ef0163cb0" loc="58:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB1" scoped="" ref="0x2b9ef0163cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0162170"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef01622f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0162480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0162608"/>
        <function-ref name="get" scoped="" ref="0x2b9ef0162790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0162918"/>
        <function-ref name="set" scoped="" ref="0x2b9ef0162aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0162c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB6" ref="0x2b9ef0173818" loc="63:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB6" scoped="" ref="0x2b9ef0173818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0173b68"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0173cf0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0173e78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0172030"/>
        <function-ref name="get" scoped="" ref="0x2b9ef01721b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0172340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef01724c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0172650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC3" ref="0x2b9ef016d380" loc="69:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC3" scoped="" ref="0x2b9ef016d380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef016d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef016d858"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef016d9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef016db68"/>
        <function-ref name="get" scoped="" ref="0x2b9ef016dcf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef016de78"/>
        <function-ref name="set" scoped="" ref="0x2b9ef0182030"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef01821b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b9ef013f488" loc="44:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b9ef013f488"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef013f7d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef013f960"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef013fae8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef013fc70"/>
        <function-ref name="get" scoped="" ref="0x2b9ef013fdf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef015a020"/>
        <function-ref name="set" scoped="" ref="0x2b9ef015a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef015a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD5" ref="0x2b9ef018dcb0" loc="80:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD5" scoped="" ref="0x2b9ef018dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef018c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef018c228"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef018c3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef018c538"/>
        <function-ref name="get" scoped="" ref="0x2b9ef018c6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef018c848"/>
        <function-ref name="set" scoped="" ref="0x2b9ef018c9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef018cb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA1" ref="0x2b9ef016cb38" loc="49:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA1" scoped="" ref="0x2b9ef016cb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef016b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef016b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef016b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef016b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b9ef016b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef016b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b9ef016b950"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef016bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD0" ref="0x2b9ef017c1b8" loc="75:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD0" scoped="" ref="0x2b9ef017c1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef017c508"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef017c690"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef017c818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef017c9a0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef017cb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef017ccb0"/>
        <function-ref name="set" scoped="" ref="0x2b9ef017ce38"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef017b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC1" ref="0x2b9ef016f020" loc="67:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC1" scoped="" ref="0x2b9ef016f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef016f370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef016f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef016f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef016f808"/>
        <function-ref name="get" scoped="" ref="0x2b9ef016f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef016fb18"/>
        <function-ref name="set" scoped="" ref="0x2b9ef016fca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef016fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA4" ref="0x2b9ef01681b8" loc="52:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA4" scoped="" ref="0x2b9ef01681b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0168508"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0168690"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0168818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef01689a0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef0168b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0168cb0"/>
        <function-ref name="set" scoped="" ref="0x2b9ef0168e38"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0167020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB4" ref="0x2b9ef0175380" loc="61:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB4" scoped="" ref="0x2b9ef0175380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef01756d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0175858"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef01759e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0175b68"/>
        <function-ref name="get" scoped="" ref="0x2b9ef0175cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0175e78"/>
        <function-ref name="set" scoped="" ref="0x2b9ef0174030"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef01741b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC6" ref="0x2b9ef0180cb0" loc="72:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC6" scoped="" ref="0x2b9ef0180cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef017e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef017e228"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef017e3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef017e538"/>
        <function-ref name="get" scoped="" ref="0x2b9ef017e6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef017e848"/>
        <function-ref name="set" scoped="" ref="0x2b9ef017e9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef017eb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD3" ref="0x2b9ef0179818" loc="78:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD3" scoped="" ref="0x2b9ef0179818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0179b68"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0179cf0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0179e78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0178030"/>
        <function-ref name="get" scoped="" ref="0x2b9ef01781b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0178340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef01784c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0178650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA7" ref="0x2b9ef0165818" loc="55:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA7" scoped="" ref="0x2b9ef0165818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0165b68"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0165cf0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0165e78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0164030"/>
        <function-ref name="get" scoped="" ref="0x2b9ef01641b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0164340"/>
        <function-ref name="set" scoped="" ref="0x2b9ef01644c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0164650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB7" ref="0x2b9ef01729b0" loc="64:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB7" scoped="" ref="0x2b9ef01729b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0172d00"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0171020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef01711a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0171330"/>
        <function-ref name="get" scoped="" ref="0x2b9ef01714b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0171640"/>
        <function-ref name="set" scoped="" ref="0x2b9ef01717c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0171950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b9ef01892d8" loc="84:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9ef01892d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef0189628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b9ef015a688" loc="45:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b9ef015a688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef015a9d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef015ab60"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef015ace8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef015ae70"/>
        <function-ref name="get" scoped="" ref="0x2b9ef0159020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef01591a8"/>
        <function-ref name="set" scoped="" ref="0x2b9ef0159330"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef01594b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD1" ref="0x2b9ef017b380" loc="76:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD1" scoped="" ref="0x2b9ef017b380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef017b6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef017b858"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef017b9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef017bb68"/>
        <function-ref name="get" scoped="" ref="0x2b9ef017bcf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef017be78"/>
        <function-ref name="set" scoped="" ref="0x2b9ef017a030"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef017a1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA2" ref="0x2b9ef016be38" loc="50:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA2" scoped="" ref="0x2b9ef016be38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef016a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef016a348"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef016a4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef016a658"/>
        <function-ref name="get" scoped="" ref="0x2b9ef016a7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef016a968"/>
        <function-ref name="set" scoped="" ref="0x2b9ef016aaf0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef016ac78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB2" ref="0x2b9ef0177020" loc="59:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB2" scoped="" ref="0x2b9ef0177020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0177370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef01774f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0177680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0177808"/>
        <function-ref name="get" scoped="" ref="0x2b9ef0177990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0177b18"/>
        <function-ref name="set" scoped="" ref="0x2b9ef0177ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0177e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC4" ref="0x2b9ef0182518" loc="70:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC4" scoped="" ref="0x2b9ef0182518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0182868"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef01829f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0182b78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0182d00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef0181020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef01811a8"/>
        <function-ref name="set" scoped="" ref="0x2b9ef0181330"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef01814b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD6" ref="0x2b9ef018b020" loc="81:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD6" scoped="" ref="0x2b9ef018b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef018b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef018b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef018b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef018b808"/>
        <function-ref name="get" scoped="" ref="0x2b9ef018b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef018bb18"/>
        <function-ref name="set" scoped="" ref="0x2b9ef018bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef018be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB0" ref="0x2b9ef01649b0" loc="57:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB0" scoped="" ref="0x2b9ef01649b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0164d00"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0163020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef01631a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0163330"/>
        <function-ref name="get" scoped="" ref="0x2b9ef01634b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0163640"/>
        <function-ref name="set" scoped="" ref="0x2b9ef01637c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0163950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA5" ref="0x2b9ef0167380" loc="53:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA5" scoped="" ref="0x2b9ef0167380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef01676d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0167858"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef01679e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0167b68"/>
        <function-ref name="get" scoped="" ref="0x2b9ef0167cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0167e78"/>
        <function-ref name="set" scoped="" ref="0x2b9ef0166030"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef01661b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB5" ref="0x2b9ef0174518" loc="62:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB5" scoped="" ref="0x2b9ef0174518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0174868"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef01749f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0174b78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0174d00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef0173020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef01731a8"/>
        <function-ref name="set" scoped="" ref="0x2b9ef0173330"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef01734b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC2" ref="0x2b9ef016e1b8" loc="68:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC2" scoped="" ref="0x2b9ef016e1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef016e508"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef016e690"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef016e818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef016e9a0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef016eb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef016ecb0"/>
        <function-ref name="set" scoped="" ref="0x2b9ef016ee38"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef016d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC7" ref="0x2b9ef017d020" loc="73:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC7" scoped="" ref="0x2b9ef017d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef017d370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef017d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef017d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef017d808"/>
        <function-ref name="get" scoped="" ref="0x2b9ef017d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef017db18"/>
        <function-ref name="set" scoped="" ref="0x2b9ef017dca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef017de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD4" ref="0x2b9ef01789b0" loc="79:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD4" scoped="" ref="0x2b9ef01789b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0178d00"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef018d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef018d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef018d330"/>
        <function-ref name="get" scoped="" ref="0x2b9ef018d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef018d640"/>
        <function-ref name="set" scoped="" ref="0x2b9ef018d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef018d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b9ef0159810" loc="46:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b9ef0159810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0159b60"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0159ce8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0159e70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0157020"/>
        <function-ref name="get" scoped="" ref="0x2b9ef01571a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0157330"/>
        <function-ref name="set" scoped="" ref="0x2b9ef01574b8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0157640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA0" ref="0x2b9ef01579a0" loc="48:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA0" scoped="" ref="0x2b9ef01579a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0157cf0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0157e78"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef016c030"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef016c1b8"/>
        <function-ref name="get" scoped="" ref="0x2b9ef016c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef016c4c8"/>
        <function-ref name="set" scoped="" ref="0x2b9ef016c650"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef016c7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA3" ref="0x2b9ef0169020" loc="51:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA3" scoped="" ref="0x2b9ef0169020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0169370"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef01694f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0169680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0169808"/>
        <function-ref name="get" scoped="" ref="0x2b9ef0169990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0169b18"/>
        <function-ref name="set" scoped="" ref="0x2b9ef0169ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0169e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB3" ref="0x2b9ef01761b8" loc="60:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB3" scoped="" ref="0x2b9ef01761b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0176508"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0176690"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef0176818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef01769a0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef0176b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0176cb0"/>
        <function-ref name="set" scoped="" ref="0x2b9ef0176e38"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0175020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC0" ref="0x2b9ef0171cb0" loc="66:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC0" scoped="" ref="0x2b9ef0171cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef01700a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0170228"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef01703b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0170538"/>
        <function-ref name="get" scoped="" ref="0x2b9ef01706c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0170848"/>
        <function-ref name="set" scoped="" ref="0x2b9ef01709d0"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0170b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC5" ref="0x2b9ef0181818" loc="71:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC5" scoped="" ref="0x2b9ef0181818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef0181d68"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef0180020"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef01801a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef0180330"/>
        <function-ref name="get" scoped="" ref="0x2b9ef01804b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef0180640"/>
        <function-ref name="set" scoped="" ref="0x2b9ef01807c8"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0180950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD2" ref="0x2b9ef017a518" loc="77:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD2" scoped="" ref="0x2b9ef017a518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef017a868"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef017a9f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef017ab78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef017ad00"/>
        <function-ref name="get" scoped="" ref="0x2b9ef0179020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef01791a8"/>
        <function-ref name="set" scoped="" ref="0x2b9ef0179330"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef01794b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD7" ref="0x2b9ef018a1b8" loc="82:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD7" scoped="" ref="0x2b9ef018a1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b9ef018a508"/>
        <function-ref name="isInput" scoped="" ref="0x2b9ef018a690"/>
        <function-ref name="toggle" scoped="" ref="0x2b9ef018a818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b9ef018a9a0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef018ab28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b9ef018acb0"/>
        <function-ref name="set" scoped="" ref="0x2b9ef018ae38"/>
        <function-ref name="clr" scoped="" ref="0x2b9ef0189020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Lcd128x64" ref="0x2b9ef019c478" loc="3:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <component-ref qname="LCD128x64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lcd128x64" scoped="" ref="0x2b9ef019c478"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b9ef019c7c8"/>
        <function-ref name="initDone" scoped="" ref="0x2b9ef019c950"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b9ef019cad8"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b9ef019cc60"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b9ef019cde8"/>
        <function-ref name="writeByte" scoped="" ref="0x2b9ef01b4020"/>
        <function-ref name="setPixel" scoped="" ref="0x2b9ef01b41a8"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b9ef01b4330"/>
        <function-ref name="writeBar" scoped="" ref="0x2b9ef01b44b8"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b9ef01b4640"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b9ef01b47c8"/>
        <function-ref name="writePixel" scoped="" ref="0x2b9ef01b4950"/>
        <function-ref name="initLCD" scoped="" ref="0x2b9ef01b4ad8"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b9ef01b4d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeRectangle" ref="0x2b9ef02211c8" loc="182:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeRectangle" scoped="" ref="0x2b9ef02211c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef0221518"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef02216a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="clearScreen" ref="0x2b9ef02308c0" loc="262:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="clearScreen" scoped="" ref="0x2b9ef02308c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef0230c10"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef0230d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCD128x64" ref="0x2b9ef01cfd68" loc="6:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b9ef01cfd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b9ef01ce0f0"/>
        <function-ref name="initDone" scoped="" ref="0x2b9ef01ce278"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b9ef01ce400"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b9ef01ce588"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b9ef01ce710"/>
        <function-ref name="writeByte" scoped="" ref="0x2b9ef01ce898"/>
        <function-ref name="setPixel" scoped="" ref="0x2b9ef01cea20"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b9ef01ceba8"/>
        <function-ref name="writeBar" scoped="" ref="0x2b9ef01ced30"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b9ef01e5020"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b9ef01e51a8"/>
        <function-ref name="writePixel" scoped="" ref="0x2b9ef01e5330"/>
        <function-ref name="initLCD" scoped="" ref="0x2b9ef01e54b8"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b9ef01e5740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeString" ref="0x2b9ef0223020" loc="230:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeString" scoped="" ref="0x2b9ef0223020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef0223370"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef02234f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeCircle" ref="0x2b9ef021abe0" loc="198:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeCircle" scoped="" ref="0x2b9ef021abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef0219020"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef02191a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeLine" ref="0x2b9ef0245020" loc="275:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeLine" scoped="" ref="0x2b9ef0245020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef0245370"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef02454f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="wait4Controller" ref="0x2b9ef01e0020" loc="18:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="wait4Controller" scoped="" ref="0x2b9ef01e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef01e0370"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef01e04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9ef0264420" loc="45:/homes/hglanzer/SVN/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="LedAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9ef0264420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9ef043a6c8"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef041bdb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9ef041aad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9ef041a688"/>
        <function-ref name="getdt" scoped="" ref="0x2b9ef0439020"/>
        <function-ref name="gett0" scoped="" ref="0x2b9ef043ab18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9ef041a238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9ef041b020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9ef043a0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9ef041b4c0"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef041b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b9ef02751c8" loc="49:/homes/hglanzer/SVN/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b9ef02751c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9ef02715f0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef0274af0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9ef02738c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9ef0273470"/>
        <function-ref name="getdt" scoped="" ref="0x2b9ef0270020"/>
        <function-ref name="gett0" scoped="" ref="0x2b9ef0271a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9ef0273020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9ef0275d10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9ef0271020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9ef0274200"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef02746a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b9ef0287b18" loc="46:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b9ef0287b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9ef0283d98"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef02844d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9ef02831f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9ef0284d78"/>
        <function-ref name="getdt" scoped="" ref="0x2b9ef0282688"/>
        <function-ref name="gett0" scoped="" ref="0x2b9ef0282238"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9ef0284928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9ef02856f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9ef02837c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9ef0285b90"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef0284088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b9ef0280108" loc="47:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b9ef0280108"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9ef0280c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9ef0270de0" loc="45:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9ef0270de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef0287170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b9ef02a2150" loc="29:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b9ef02a2150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9ef029e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef029e930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef029e4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef029edb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9ef02966f0" loc="27:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9ef02966f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef0296a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b9ef0293020" loc="28:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b9ef0293020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9ef028b690"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef02926f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b9ef028b088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9ef0292b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9ef028bb18"/>
        <function-ref name="start" scoped="" ref="0x2b9ef0293d70"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef0292270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9ef0395938" loc="33:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b9ef0395938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9ef0391020"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef0392088"/>
        <function-ref name="startAt" scoped="" ref="0x2b9ef0392998"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9ef0392510"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9ef03914a8"/>
        <function-ref name="start" scoped="" ref="0x2b9ef03946b0"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef0394b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9ef0395190" loc="32:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9ef0395190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b9eefdb6d88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b9eefdb6d88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef03954e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9ef0391a90" loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b9ef0391a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9ef0390828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef038f190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef0390cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef038f618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b9ef0773b60" loc="38:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b9ef0773b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b9ef0772020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b9ef07721a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b9ef0772330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b9ef07724b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b9ef0772640"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef07727c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b9ef0751888" loc="33:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b9ef0751888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9ef074d020"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef074e020"/>
        <function-ref name="startAt" scoped="" ref="0x2b9ef074e930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9ef074e4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9ef074d4a8"/>
        <function-ref name="start" scoped="" ref="0x2b9ef0750660"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef0750b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b9ef07510e0" loc="32:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b9ef07510e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b9ef0751430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b9ef074da90" loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b9ef074da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9ef077a828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef0778190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef077acb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef0778618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x2b9ef076fbb0" loc="40:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b9ef076fbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b9ef076d7c8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b9ef076d1a8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b9ef076d330"/>
        <function-ref name="countBusy" scoped="" ref="0x2b9ef076d4b8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b9ef076d640"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b9ef076d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b9ef0772b58" loc="39:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b9ef0772b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b9ef076f310"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef07700c0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef0771728"/>
        <function-ref name="reset" scoped="" ref="0x2b9ef0770548"/>
        <function-ref name="isOn" scoped="" ref="0x2b9ef076f798"/>
        <function-ref name="set" scoped="" ref="0x2b9ef0771bb0"/>
        <function-ref name="start" scoped="" ref="0x2b9ef07709d0"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef0770e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b9ef0778b98" loc="37:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9ef0778b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b9ef0775db8"/>
        <function-ref name="test" scoped="" ref="0x2b9ef07754a8"/>
        <function-ref name="get" scoped="" ref="0x2b9ef0777760"/>
        <function-ref name="setScale" scoped="" ref="0x2b9ef0773270"/>
        <function-ref name="getScale" scoped="" ref="0x2b9ef0773748"/>
        <function-ref name="reset" scoped="" ref="0x2b9ef0776580"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef07760f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b9ef0775930"/>
        <function-ref name="set" scoped="" ref="0x2b9ef0777be8"/>
        <function-ref name="start" scoped="" ref="0x2b9ef0776a08"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef0775020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b9ef0316020" loc="55:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b9ef0316020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b9ef0316370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b9ef03164f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b9ef0316680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b9ef0316808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b9ef0316990"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef0316b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b9ef032e218" loc="57:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b9ef032e218"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b9ef032ed10"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b9ef032e6f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b9ef032e878"/>
        <function-ref name="countBusy" scoped="" ref="0x2b9ef032ea00"/>
        <function-ref name="getAssr" scoped="" ref="0x2b9ef032eb88"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b9ef032e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9ef0315020" loc="56:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b9ef0315020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b9ef03307a8"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef0314560"/>
        <function-ref name="get" scoped="" ref="0x2b9ef0315ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b9ef03149e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b9ef0330c30"/>
        <function-ref name="set" scoped="" ref="0x2b9ef0314088"/>
        <function-ref name="start" scoped="" ref="0x2b9ef0314e70"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef0330320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9ef031ee00" loc="54:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9ef031ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b9ef03180f8"/>
        <function-ref name="test" scoped="" ref="0x2b9ef0319798"/>
        <function-ref name="get" scoped="" ref="0x2b9ef031ba18"/>
        <function-ref name="setScale" scoped="" ref="0x2b9ef0318580"/>
        <function-ref name="getScale" scoped="" ref="0x2b9ef0318a58"/>
        <function-ref name="reset" scoped="" ref="0x2b9ef031a980"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef031a4f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b9ef0319c20"/>
        <function-ref name="set" scoped="" ref="0x2b9ef031a020"/>
        <function-ref name="start" scoped="" ref="0x2b9ef031ae08"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef0319310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b9ef0325160" loc="62:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b9ef0325160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b9ef03254b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b9ef0325638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b9ef03257c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b9ef0325948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b9ef0325ad0"/>
        <function-ref name="setControl" scoped="" ref="0x2b9ef0325c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b9ef033e268" loc="64:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b9ef033e268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b9ef033e5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b9ef033e958" loc="65:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b9ef033e958"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b9ef033d4b8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b9ef033ee30"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b9ef033d020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b9ef033d1a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b9ef033d330"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b9ef033eca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b9ef0324190" loc="63:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b9ef0324190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b9ef033f930"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef03236d0"/>
        <function-ref name="get" scoped="" ref="0x2b9ef0324d10"/>
        <function-ref name="reset" scoped="" ref="0x2b9ef0323b58"/>
        <function-ref name="isOn" scoped="" ref="0x2b9ef033fdb8"/>
        <function-ref name="set" scoped="" ref="0x2b9ef03231f8"/>
        <function-ref name="start" scoped="" ref="0x2b9ef033f020"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef033f4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9ef032a180" loc="61:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9ef032a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b9ef0326270"/>
        <function-ref name="test" scoped="" ref="0x2b9ef0328930"/>
        <function-ref name="get" scoped="" ref="0x2b9ef032ad00"/>
        <function-ref name="setScale" scoped="" ref="0x2b9ef03266f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b9ef0326bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b9ef0329b58"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef03296d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b9ef0328db8"/>
        <function-ref name="set" scoped="" ref="0x2b9ef03291f8"/>
        <function-ref name="start" scoped="" ref="0x2b9ef0328020"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef03284a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b9ef03bd020" loc="74:/homes/hglanzer/SVN/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b9ef03bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef03bd370"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef03bd4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b9ef03c1020" loc="49:/homes/hglanzer/SVN/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b9ef03c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9ef03be690"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef03bf6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b9ef03be088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9ef03bfb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b9ef03beb18"/>
        <function-ref name="start" scoped="" ref="0x2b9ef03c1d70"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef03bf270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9ef038bd88" loc="48:/homes/hglanzer/SVN/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9ef038bd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9ef03c2088"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef03c46c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9ef03c3470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9ef03c3020"/>
        <function-ref name="getdt" scoped="" ref="0x2b9ef03c2928"/>
        <function-ref name="gett0" scoped="" ref="0x2b9ef03c24d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9ef03c4b18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9ef03c6908"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9ef03c3a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9ef03c6da8"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef03c4278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b9ef040f618" loc="71:/homes/hglanzer/SVN/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b9ef040f618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b9ef040f968"/>
        <function-ref name="runTask" scoped="" ref="0x2b9ef040faf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b9ef04145a0" loc="49:/homes/hglanzer/SVN/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b9ef04145a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9ef04108f0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef0411020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9ef0411d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9ef04118c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b9ef040f1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b9ef0410d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9ef0411470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9ef0412118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9ef0410320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9ef04125b8"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef0412a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9ef03fa0c8" loc="48:/homes/hglanzer/SVN/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9ef03fa0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9ef0415610"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef0418a48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9ef0417900"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9ef0417490"/>
        <function-ref name="getdt" scoped="" ref="0x2b9ef0414020"/>
        <function-ref name="gett0" scoped="" ref="0x2b9ef0415a80"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9ef0417020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9ef03fac30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9ef0415020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9ef0418118"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef04185d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b9ef040bc38" loc="48:/homes/hglanzer/SVN/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b9ef040bc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9ef0423820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b9ef0423e48" loc="49:/homes/hglanzer/SVN/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b9ef0423e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b9ef0422be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b9ef0421548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b9ef04210c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b9ef04219d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b9ef04388d8" loc="45:/homes/hglanzer/SVN/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="LedAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b9ef04388d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b9eefe36530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b9eefe36888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b9ef0434bc0"/>
        <function-ref name="fired" scoped="" ref="0x2b9ef0436238"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b9ef0434020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b9ef0436ad8"/>
        <function-ref name="getdt" scoped="" ref="0x2b9ef04334d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b9ef0433088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b9ef0436688"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b9ef0437458"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b9ef04345f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b9ef04378f8"/>
        <function-ref name="stop" scoped="" ref="0x2b9ef0437d98"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/homes/hglanzer/SVN/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b9eefeb1178" loc="62:/homes/hglanzer/SVN/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/homes/hglanzer/SVN/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9eefdc0ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/homes/hglanzer/SVN/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/homes/hglanzer/SVN/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b9eefea9e08" loc="60:/homes/hglanzer/SVN/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/homes/hglanzer/SVN/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
      <documentation loc="11:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b9eefeb7290" loc="60:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="55:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b9eefbb8378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b9eefeb7020" loc="60:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b9eefebb940" loc="31:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="27:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b9eefbb8378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b9eefeba378" loc="39:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="33:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b9eefeba108" loc="39:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b9eefebae00" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="41:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b9eefebab90" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b9eefeb9698" loc="53:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="48:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/homes/hglanzer/SVN/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b9eefece0d8" loc="44:/homes/hglanzer/SVN/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b9eefece7a0" loc="45:/homes/hglanzer/SVN/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9eefdb74c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b9eefecf328" loc="42:/homes/hglanzer/SVN/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b9eefecd570" loc="47:/homes/hglanzer/SVN/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9eefdb74c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b9eefecf9c8" loc="43:/homes/hglanzer/SVN/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9eefdb74c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b9eefecee58" loc="46:/homes/hglanzer/SVN/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9eefed15a8" loc="40:/homes/hglanzer/SVN/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b9eefed1c18" loc="41:/homes/hglanzer/SVN/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/homes/hglanzer/SVN/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/homes/hglanzer/SVN/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b9eefdbc3a0" loc="57:/homes/hglanzer/SVN/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/homes/hglanzer/SVN/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b9eefdba290" loc="72:/homes/hglanzer/SVN/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/homes/hglanzer/SVN/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b9eefdbcab8" loc="65:/homes/hglanzer/SVN/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/homes/hglanzer/SVN/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9eefdb74c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/homes/hglanzer/SVN/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b9eefdc6070" loc="67:/homes/hglanzer/SVN/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/homes/hglanzer/SVN/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b9eefdc0ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b9eefdc6860" loc="75:/homes/hglanzer/SVN/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/homes/hglanzer/SVN/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/homes/hglanzer/SVN/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/homes/hglanzer/SVN/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b9eefe79450" loc="76:/homes/hglanzer/SVN/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/homes/hglanzer/SVN/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/homes/hglanzer/SVN/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/homes/hglanzer/SVN/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b9eefe8fd28" loc="62:/homes/hglanzer/SVN/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/homes/hglanzer/SVN/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b9eefe151a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/homes/hglanzer/SVN/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/homes/hglanzer/SVN/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b9eefe996d8" loc="52:/homes/hglanzer/SVN/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/homes/hglanzer/SVN/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9ef00f07a8" loc="53:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9ef00f07a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b9ef0113020" loc="136:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b9ef0104ba0" loc="83:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b9ef0115800" loc="114:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b9ef0115268" loc="114:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b9ef0115580" loc="114:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b9ef0102af8" loc="98:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9eefdb74c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b9ef0111020" loc="151:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b9ef0113740" loc="144:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b9ef0102360" loc="92:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9eefdb74c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b9ef01052d0" loc="64:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b9ef0105060" loc="64:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b9ef01146f0" loc="129:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b9ef0114158" loc="129:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b9ef0114470" loc="129:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b9ef0105d10" loc="73:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b9ef0105aa0" loc="73:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9ef0104500" loc="78:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LCD128x64" loc="1:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
      <function command="" provided="0" name="startClearScreen" ref="0x2b9ef00f8590" loc="26:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b9ef00f8320" loc="26:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x2b9ef00f8c00" loc="28:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteLine" ref="0x2b9ef00f9c00" loc="24:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9ef00f9020" loc="24:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9ef00f9320" loc="24:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
          <variable name="xEnd" ref="0x2b9ef00f9640" loc="24:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
          <variable name="yEnd" ref="0x2b9ef00f9960" loc="24:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteRectangle" ref="0x2b9ef00fd8c0" loc="18:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9ef00fec88" loc="18:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9ef00fd020" loc="18:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
          <variable name="a" ref="0x2b9ef00fd320" loc="18:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
          <variable name="b" ref="0x2b9ef00fd620" loc="18:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteString" ref="0x2b9ef00fb8b0" loc="22:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b9ef00fb020" loc="22:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x2b9ef00fb320" loc="22:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9ef00fb620" loc="22:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="writeByte" ref="0x2b9ef00ee5d0" loc="10:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9ef00efbe8" loc="10:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9ef00ee020" loc="10:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b9ef00ee340" loc="10:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x2b9ef01002a0" loc="14:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9ef0101be8" loc="14:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9ef0100020" loc="14:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="circleWritten" ref="0x2b9ef010b328" loc="30:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeBar" ref="0x2b9ef00fe5f0" loc="16:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9ef01008d0" loc="16:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9ef0100bd0" loc="16:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
          <variable name="width" ref="0x2b9ef00fe020" loc="16:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b9ef00fe350" loc="16:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteCircle" ref="0x2b9ef00fc918" loc="20:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="xcenter" ref="0x2b9ef00fc020" loc="20:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
          <variable name="ycenter" ref="0x2b9ef00fc358" loc="20:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
          <variable name="radius" ref="0x2b9ef00fc688" loc="20:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rectangleWritten" ref="0x2b9ef01091d8" loc="34:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writePixel" ref="0x2b9ef01015b8" loc="12:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9ef00eec10" loc="12:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b9ef0101020" loc="12:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
          <variable name="on" ref="0x2b9ef0101328" loc="12:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initLCD" ref="0x2b9ef00ef590" loc="4:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b9ef00ef320" loc="4:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stringWritten" ref="0x2b9ef010b9c8" loc="32:/homes/hglanzer/SVN/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/homes/hglanzer/SVN/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b9ef00e5428" loc="61:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b9ef00e5b60" loc="67:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b9ef00e4328" loc="72:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b9ef00f71d8" loc="83:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b9ef00f5810" loc="100:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b9ef00f4020" loc="117:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b9ef00e4a40" loc="77:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9ef00f4b20" loc="134:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b9ef00f48b0" loc="134:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPort" ref="0x2b9ef00f3998" loc="137:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b9ef00f33f8" loc="137:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
          <variable name="pval" ref="0x2b9ef00f3718" loc="137:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b9ef00e6cd8" loc="56:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b9ef00f7948" loc="89:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b9ef00f50d8" loc="94:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/homes/hglanzer/SVN/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/homes/hglanzer/SVN/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/homes/hglanzer/SVN/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9ef027e340" loc="53:/homes/hglanzer/SVN/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9ef027e340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b9ef027ebd0" loc="61:/homes/hglanzer/SVN/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/homes/hglanzer/SVN/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b9eefbb8db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9ef02a37b8" loc="57:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9ef02a37b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b9ef02a39e8" loc="57:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef02a39e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b9ef02a02a8" loc="64:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef02a39e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b9ef029f328" loc="76:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b9ef02a0ac0" loc="71:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9eefdb74c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b9ef029fa18" loc="82:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b9ef0291528" loc="56:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b9ef0291528"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b9ef0291758" loc="56:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef0291758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b9ef028c020" loc="109:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef0291758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b9ef028f1d8" loc="78:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b9ef028e6c0" loc="103:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef0291758"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef0291758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b9ef028e120" loc="103:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef0291758"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b9ef028e440" loc="103:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef0291758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b9ef028f948" loc="88:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9eefdb74c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b9ef028c7a0" loc="116:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef0291758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b9ef0290290" loc="66:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef0291758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b9ef0290020" loc="66:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef0291758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9ef0290a60" loc="73:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/homes/hglanzer/SVN/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b9ef02c8020" loc="45:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9eefe42a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b9eefe42e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b9ef02c6360" loc="53:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9eefe4f100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b9eefe4f508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b9ef02c71d8" loc="49:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9eefe46980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b9eefe46d88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b9ef02c7b90" loc="50:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9eefe46980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b9eefe46d88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b9ef02c7920" loc="50:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9eefe46980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b9eefe46d88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b9ef02c6d18" loc="54:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9eefe4f100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b9eefe4f508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b9ef02c6aa8" loc="54:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9eefe4f100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b9eefe4f508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b9ef02c89f0" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9eefe42a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b9eefe42e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b9ef02c8780" loc="46:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9eefe42a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b9eefe42e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerSync" loc="22:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
      <documentation loc="11:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer0Synchronous" ref="0x2b9ef02d44e8" loc="39:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="36:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBusy" ref="0x2b9ef02d4bf0" loc="45:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="41:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b9ef02d33e0" loc="51:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="47:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b9ef02d3b90" loc="57:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="53:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b9ef02d5328" loc="28:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="24:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9eefe49118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b9eefe49520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b9ef02d5cd8" loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="30:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9eefe49118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b9eefe49520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b9ef02d5a68" loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b9eefe49118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b9eefe49520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b9ef02c5420" loc="41:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef02c5420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b9ef02c0a40" loc="74:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="70:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9eefdb74c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b9ef02c2d88" loc="58:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="57:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b9ef02c5cd8" loc="48:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="44:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef02c5420"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b9ef02c14c0" loc="62:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="61:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b9ef02da1d8" loc="80:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="76:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9eefdb74c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9ef02c2648" loc="54:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="50:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef02c5420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b9ef02c23d8" loc="54:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b9ef02c5420"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b9ef02c1bb8" loc="65:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="64:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9ef02c0328" loc="68:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="67:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
      <documentation loc="34:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b9ef02bc680" loc="55:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b9ef02bc680"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b9ef02b5cf0" loc="98:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="97:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b9ef02b6e20" loc="87:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="83:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9eefdb74c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b9ef02b9020" loc="61:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="57:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b9ef02bc680"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b9ef02b4690" loc="104:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="100:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b9ef02b4420" loc="104:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b9ef02b4e10" loc="110:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="106:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b9eefbb6910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b9ef02b87f8" loc="75:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="74:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b9ef02b80d8" loc="70:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="69:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b9ef02b55c8" loc="93:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="89:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b9eefdb74c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b9ef02b9958" loc="67:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="63:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b9ef02bc680"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b9ef02b96e8" loc="67:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b9ef02bc680"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b9ef02b6020" loc="78:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="77:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b9ef02b6708" loc="81:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="80:/homes/hglanzer/SVN/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
