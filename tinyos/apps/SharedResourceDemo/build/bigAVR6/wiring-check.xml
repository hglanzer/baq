<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="70:SharedResourceDemoAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b2cda65d0f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b2cda41aaf8"/></to>
    </wire>
    <wire loc="72:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b2cda41aaf8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b2cda5c8198"/></to>
    </wire>
    <wire loc="71:SharedResourceDemoAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b2cda65d6b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b2cda5d9ca0"/></to>
    </wire>
    <wire loc="51:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b2cda5d9ca0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b2cda5d6648"/></to>
    </wire>
    <wire loc="72:SharedResourceDemoAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b2cda666578"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b2cda695420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b2cda695420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b2cda6a41c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:SharedResourceDemoAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x2b2cda663798"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b2cda85e8d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b2cda85e8d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b2cda6a41c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:SharedResourceDemoAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x2b2cda6748c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b2cda858da8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b2cda858da8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b2cda6a41c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:SharedResourceDemoAppC.nc">
      <from><interface-ref name="Resource0" scoped="" ref="0x2b2cda67fc98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b2cda86d560"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b2cda86d560"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b2cda8635b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:SharedResourceDemoAppC.nc">
      <from><interface-ref name="Resource1" scoped="" ref="0x2b2cda66d938"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b2cda94b020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b2cda94b020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b2cda8635b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:SharedResourceDemoAppC.nc">
      <from><interface-ref name="Resource2" scoped="" ref="0x2b2cda67b020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b2cda948960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b2cda948960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b2cda8635b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:SharedResourceDemoAppC.nc">
      <from><interface-ref name="ResourceOperations0" scoped="" ref="0x2b2cda66d120"/></from>
      <to><interface-ref name="ResourceOperations" scoped="" ref="0x2b2cda94ea08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceOperations" scoped="" ref="0x2b2cda94ea08"/></from>
      <to><interface-ref name="ResourceOperations" scoped="" ref="0x2b2cda8615b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:SharedResourceDemoAppC.nc">
      <from><interface-ref name="ResourceOperations1" scoped="" ref="0x2b2cda67c730"/></from>
      <to><interface-ref name="ResourceOperations" scoped="" ref="0x2b2cda94a430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceOperations" scoped="" ref="0x2b2cda94a430"/></from>
      <to><interface-ref name="ResourceOperations" scoped="" ref="0x2b2cda8615b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:SharedResourceDemoAppC.nc">
      <from><interface-ref name="ResourceOperations2" scoped="" ref="0x2b2cda67bd90"/></from>
      <to><interface-ref name="ResourceOperations" scoped="" ref="0x2b2cda947d18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceOperations" scoped="" ref="0x2b2cda947d18"/></from>
      <to><interface-ref name="ResourceOperations" scoped="" ref="0x2b2cda8615b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b2cda418020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2cdacf8d90"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b2cda418020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2cda69fde0"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b2cda5c87d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b2cda320600"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b2cda320600"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b2cda3d7448"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b2cda5c71d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2cda415020"/></to>
    </wire>
    <wire loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b2cda415020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2cda428020"/></to>
    </wire>
    <wire loc="71:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b2cda5c7898"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b2cda418020"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b2cda422020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b2cda5aa8f0"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b2cda428d88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2cda5aa2c0"/></to>
    </wire>
    <wire loc="100:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b2cda4286c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2cda63a110"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b2cda4286c0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b2cda41c690"/></to>
    </wire>
    <wire loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b2cda41c690"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b2cda42b0e0"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b2cda41cd20"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b2cda422cf0"/></to>
    </wire>
    <wire loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b2cda42a4f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b2cda41cd20"/></to>
    </wire>
    <wire loc="191:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b2cda473348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cda54d970"/></to>
    </wire>
    <wire loc="165:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b2cda456e80"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b2cda4f4020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b2cda4f4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdaaca710"/></to>
    </wire>
    <wire loc="176:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b2cda467e00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b2cda503d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b2cda503d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdab28710"/></to>
    </wire>
    <wire loc="185:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b2cda46caf0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b2cda5055b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b2cda5055b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdab94710"/></to>
    </wire>
    <wire loc="143:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b2cda442c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b2cda4cb740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b2cda4cb740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cda995a10"/></to>
    </wire>
    <wire loc="183:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b2cda46e7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b2cda5072a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b2cda5072a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdab9a710"/></to>
    </wire>
    <wire loc="146:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b2cda43f020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b2cda4d3930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b2cda4d3930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cda9f5970"/></to>
    </wire>
    <wire loc="157:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b2cda4501a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b2cda4e2740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b2cda4e2740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdaa69710"/></to>
    </wire>
    <wire loc="168:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b2cda460348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b2cda4f0430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b2cda4f0430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdaac0710"/></to>
    </wire>
    <wire loc="179:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b2cda463348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b2cda4ff120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b2cda4ff120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdab48710"/></to>
    </wire>
    <wire loc="138:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b2cda4394d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b2cda4c0020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b2cda4c0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cda981a10"/></to>
    </wire>
    <wire loc="149:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b2cda44a4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b2cda4d0d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b2cda4d0d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdaa0f970"/></to>
    </wire>
    <wire loc="160:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b2cda44d658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b2cda4dfbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b2cda4dfbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdaa5f710"/></to>
    </wire>
    <wire loc="171:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b2cda45d7e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b2cda4ed8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b2cda4ed8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdaadf710"/></to>
    </wire>
    <wire loc="188:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b2cda475020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b2cda514a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b2cda514a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdabb6710"/></to>
    </wire>
    <wire loc="194:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b2cda470c78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cda562020"/></to>
    </wire>
    <wire loc="174:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b2cda45baf0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b2cda4f5a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b2cda4f5a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdab2e710"/></to>
    </wire>
    <wire loc="141:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b2cda444968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b2cda4bd430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b2cda4bd430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cda99ba10"/></to>
    </wire>
    <wire loc="152:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b2cda447af0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b2cda4dc120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b2cda4dc120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdaa06970"/></to>
    </wire>
    <wire loc="192:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b2cda472968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cda55aab0"/></to>
    </wire>
    <wire loc="155:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b2cda453e00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b2cda4e4500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b2cda4e4500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdaa496a8"/></to>
    </wire>
    <wire loc="166:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b2cda454020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b2cda4f3120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b2cda4f3120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdaac7710"/></to>
    </wire>
    <wire loc="177:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b2cda465020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b2cda502e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b2cda502e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdab25710"/></to>
    </wire>
    <wire loc="186:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b2cda46bc78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b2cda516740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b2cda516740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdab91710"/></to>
    </wire>
    <wire loc="144:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b2cda441e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b2cda4ca8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b2cda4ca8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cda992a10"/></to>
    </wire>
    <wire loc="147:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b2cda44c1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b2cda4d2a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b2cda4d2a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cda9f2970"/></to>
    </wire>
    <wire loc="158:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b2cda44f348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b2cda4e18c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b2cda4e18c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdaa66710"/></to>
    </wire>
    <wire loc="169:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b2cda45f4d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b2cda4ef5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b2cda4ef5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdaae5710"/></to>
    </wire>
    <wire loc="180:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b2cda4624d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b2cda4fe2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b2cda4fe2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdab45710"/></to>
    </wire>
    <wire loc="139:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b2cda438658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b2cda4bf120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b2cda4bf120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cda9a2a10"/></to>
    </wire>
    <wire loc="150:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b2cda449658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b2cda4cfe18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b2cda4cfe18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdaa0c970"/></to>
    </wire>
    <wire loc="161:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b2cda45a7e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b2cda4ddd60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b2cda4ddd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdaa5c710"/></to>
    </wire>
    <wire loc="189:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b2cda4741a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b2cda513bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b2cda513bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdabb3710"/></to>
    </wire>
    <wire loc="164:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b2cda457af0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b2cda4e6e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b2cda4e6e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdaacd6a8"/></to>
    </wire>
    <wire loc="175:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b2cda468c78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b2cda504bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b2cda504bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdab2b710"/></to>
    </wire>
    <wire loc="184:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b2cda46d968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b2cda506430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b2cda506430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdab97710"/></to>
    </wire>
    <wire loc="195:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b2cda47de00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cda56f180"/></to>
    </wire>
    <wire loc="142:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b2cda443af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b2cda4cc5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b2cda4cc5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cda998a10"/></to>
    </wire>
    <wire loc="153:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b2cda446c78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b2cda4db2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b2cda4db2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdaa03970"/></to>
    </wire>
    <wire loc="182:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b2cda46f658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b2cda5081e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b2cda5081e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdab9d6a8"/></to>
    </wire>
    <wire loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b2cda451020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b2cda4e35b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b2cda4e35b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdaa6c710"/></to>
    </wire>
    <wire loc="167:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b2cda4611a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b2cda4f12a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b2cda4f12a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdaac4710"/></to>
    </wire>
    <wire loc="178:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b2cda4641a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b2cda500020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b2cda500020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdab4b710"/></to>
    </wire>
    <wire loc="187:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b2cda46ae00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b2cda5158c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b2cda5158c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdab8d710"/></to>
    </wire>
    <wire loc="137:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b2cda43a290"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b2cda4c2dc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b2cda4c2dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cda984ab0"/></to>
    </wire>
    <wire loc="148:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b2cda44b348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b2cda4d1bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b2cda4d1bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cda9ef970"/></to>
    </wire>
    <wire loc="159:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b2cda44e4d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b2cda4e0a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b2cda4e0a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdaa62710"/></to>
    </wire>
    <wire loc="170:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b2cda45e658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b2cda4ee740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b2cda4ee740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdaae2710"/></to>
    </wire>
    <wire loc="193:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b2cda471af0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cda556c38"/></to>
    </wire>
    <wire loc="173:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b2cda45c968"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b2cda4f6930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b2cda4f6930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdab316a8"/></to>
    </wire>
    <wire loc="162:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b2cda459968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b2cda4ece18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b2cda4ece18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdaa7f710"/></to>
    </wire>
    <wire loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b2cda4457e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b2cda4be2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b2cda4be2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cda99ea10"/></to>
    </wire>
    <wire loc="151:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b2cda448968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b2cda4cd020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b2cda4cd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b2cdaa09970"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b2cda3231c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2cda3d62b0"/></to>
    </wire>
    <wire loc="55:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b2cda3df758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b2cda3f6660"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b2cda3fc2b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b2cda75e268"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b2cda63a110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2cda5d6080"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b2cda5d5e70"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b2cda5d7dc8"/></to>
    </wire>
    <wire loc="102:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b2cda5d7dc8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b2cda43a290"/></to>
    </wire>
    <wire loc="55:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b2cda5d3020"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b2cda5ff020"/></to>
    </wire>
    <wire loc="103:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b2cda5ff020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b2cda4394d0"/></to>
    </wire>
    <wire loc="56:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b2cda5e5190"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b2cda5fe1b0"/></to>
    </wire>
    <wire loc="104:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b2cda5fe1b0"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b2cda438658"/></to>
    </wire>
    <wire loc="112:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA6" scoped="" ref="0x2b2cda60a1b8"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b2cda442c78"/></to>
    </wire>
    <wire loc="116:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB1" scoped="" ref="0x2b2cda607818"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b2cda44c1a0"/></to>
    </wire>
    <wire loc="121:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB6" scoped="" ref="0x2b2cda617380"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x2b2cda447af0"/></to>
    </wire>
    <wire loc="127:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC3" scoped="" ref="0x2b2cda611020"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x2b2cda44f348"/></to>
    </wire>
    <wire loc="138:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD5" scoped="" ref="0x2b2cda61b818"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x2b2cda45f4d0"/></to>
    </wire>
    <wire loc="107:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA1" scoped="" ref="0x2b2cda5fc518"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b2cda4394d0"/></to>
    </wire>
    <wire loc="133:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD0" scoped="" ref="0x2b2cda622cb0"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x2b2cda457af0"/></to>
    </wire>
    <wire loc="144:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE2" scoped="" ref="0x2b2cda62b380"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x2b2cda468c78"/></to>
    </wire>
    <wire loc="149:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE7" scoped="" ref="0x2b2cda63b020"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x2b2cda4624d0"/></to>
    </wire>
    <wire loc="125:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC1" scoped="" ref="0x2b2cda6149b0"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x2b2cda451020"/></to>
    </wire>
    <wire loc="110:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA4" scoped="" ref="0x2b2cda60dcb0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b2cda444968"/></to>
    </wire>
    <wire loc="119:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB4" scoped="" ref="0x2b2cda619020"/></from>
      <to><interface-ref name="PortB4" scoped="" ref="0x2b2cda449658"/></to>
    </wire>
    <wire loc="130:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC6" scoped="" ref="0x2b2cda624818"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x2b2cda45a7e0"/></to>
    </wire>
    <wire loc="136:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD3" scoped="" ref="0x2b2cda61d380"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x2b2cda4611a0"/></to>
    </wire>
    <wire loc="147:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE5" scoped="" ref="0x2b2cda6289b0"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x2b2cda4641a0"/></to>
    </wire>
    <wire loc="142:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE0" scoped="" ref="0x2b2cda62d020"/></from>
      <to><interface-ref name="PortE0" scoped="" ref="0x2b2cda45c968"/></to>
    </wire>
    <wire loc="113:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA7" scoped="" ref="0x2b2cda609380"/></from>
      <to><interface-ref name="PortA7" scoped="" ref="0x2b2cda441e00"/></to>
    </wire>
    <wire loc="122:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB7" scoped="" ref="0x2b2cda616518"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b2cda446c78"/></to>
    </wire>
    <wire loc="134:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD1" scoped="" ref="0x2b2cda61f020"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x2b2cda456e80"/></to>
    </wire>
    <wire loc="108:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA2" scoped="" ref="0x2b2cda5fb818"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b2cda438658"/></to>
    </wire>
    <wire loc="117:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB2" scoped="" ref="0x2b2cda606b28"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b2cda44b348"/></to>
    </wire>
    <wire loc="128:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC4" scoped="" ref="0x2b2cda6101b8"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x2b2cda44e4d0"/></to>
    </wire>
    <wire loc="139:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD6" scoped="" ref="0x2b2cda6309b0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b2cda45e658"/></to>
    </wire>
    <wire loc="145:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE3" scoped="" ref="0x2b2cda62a518"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x2b2cda467e00"/></to>
    </wire>
    <wire loc="115:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB0" scoped="" ref="0x2b2cda608518"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b2cda43f020"/></to>
    </wire>
    <wire loc="111:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA5" scoped="" ref="0x2b2cda60b020"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x2b2cda443af0"/></to>
    </wire>
    <wire loc="120:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB5" scoped="" ref="0x2b2cda6181b8"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x2b2cda448968"/></to>
    </wire>
    <wire loc="126:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC2" scoped="" ref="0x2b2cda613cb0"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x2b2cda4501a0"/></to>
    </wire>
    <wire loc="131:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC7" scoped="" ref="0x2b2cda6239b0"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x2b2cda459968"/></to>
    </wire>
    <wire loc="137:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD4" scoped="" ref="0x2b2cda61c518"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b2cda460348"/></to>
    </wire>
    <wire loc="143:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE1" scoped="" ref="0x2b2cda62c1b8"/></from>
      <to><interface-ref name="PortE1" scoped="" ref="0x2b2cda45baf0"/></to>
    </wire>
    <wire loc="106:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA0" scoped="" ref="0x2b2cda5fd380"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b2cda43a290"/></to>
    </wire>
    <wire loc="148:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE6" scoped="" ref="0x2b2cda627cb0"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x2b2cda463348"/></to>
    </wire>
    <wire loc="109:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA3" scoped="" ref="0x2b2cda60e9b0"/></from>
      <to><interface-ref name="PortA3" scoped="" ref="0x2b2cda4457e0"/></to>
    </wire>
    <wire loc="118:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB3" scoped="" ref="0x2b2cda605cc0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b2cda44a4d0"/></to>
    </wire>
    <wire loc="124:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC0" scoped="" ref="0x2b2cda615818"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x2b2cda453e00"/></to>
    </wire>
    <wire loc="129:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC5" scoped="" ref="0x2b2cda625380"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x2b2cda44d658"/></to>
    </wire>
    <wire loc="135:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD2" scoped="" ref="0x2b2cda61e1b8"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x2b2cda454020"/></to>
    </wire>
    <wire loc="140:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD7" scoped="" ref="0x2b2cda62fcb0"/></from>
      <to><interface-ref name="PortD7" scoped="" ref="0x2b2cda45d7e0"/></to>
    </wire>
    <wire loc="146:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE4" scoped="" ref="0x2b2cda629818"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x2b2cda465020"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b2cda6a41c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b2cda69cb18"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b2cda69cb18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b2cda8290c8"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b2cda69fde0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2cda6aa6f0"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b2cda6ad108"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b2cda838c38"/></to>
    </wire>
    <wire loc="35:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b2cda6aa6f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2cda7be190"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b2cda8415a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b2cda7e5ab0"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b2cda7e0c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b2cda6be020"/></to>
    </wire>
    <wire loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b2cda6be020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b2cda7be938"/></to>
    </wire>
    <wire loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b2cda837e48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b2cda6ca150"/></to>
    </wire>
    <wire loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b2cda6ca150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b2cda7baa90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b2cda7baa90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b2cdac7e3d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b2cda7be190"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b2cdac83ab0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b2cda7be938"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b2cdac82290"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b2cdac7c5a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b2cda746e00"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b2cda746e00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b2cda74e180"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b2cdac774a0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b2cda73d020"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b2cda73d020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b2cda749160"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2b2cdaca43b0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b2cda73c020"/></to>
    </wire>
    <wire loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b2cda73c020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b2cda748190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b2cdaca1510"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b2cda752218"/></to>
    </wire>
    <wire loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b2cda752218"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b2cda75e958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2b2cda7f8cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2cda3231c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b2cda83c618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2cda3231c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b2cda94e2a8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b2cda862848"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2cda87e300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2cda94d2a8"/></to>
    </wire>
    <wire loc="57:SharedResourceP.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b2cda862848"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b2cda8e2510"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b2cda8e2510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b2cdacf4200"/></to>
    </wire>
    <wire loc="56:SharedResourceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b2cda8635b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b2cda8e36b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2b2cda8e36b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b2cdacf54b0"/></to>
    </wire>
    <wire loc="55:SharedResourceP.nc">
      <from><interface-ref name="ResourceOperations" scoped="" ref="0x2b2cda8615b0"/></from>
      <to><interface-ref name="SharedResourceOperations" scoped="" ref="0x2b2cda93b2b0"/></to>
    </wire>
    <wire loc="58:SharedResourceP.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2cda8e0140"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2cda87e300"/></to>
    </wire>
    <wire loc="59:SharedResourceP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b2cda93bac0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b2cda8e1888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b2cda8e1888"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b2cdacf3578"/></to>
    </wire>
    <wire loc="60:SharedResourceP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b2cda931800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b2cda8e2c50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b2cda8e2c50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b2cdacf4940"/></to>
    </wire>
    <wire loc="62:SharedResourceP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b2cda8fd6d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b2cda92fd50"/></to>
    </wire>
    <wire loc="63:SharedResourceP.nc">
      <from><interface-ref name="ResourceOperations" scoped="" ref="0x2b2cda93a320"/></from>
      <to><interface-ref name="ResourceOperations" scoped="" ref="0x2b2cda92c870"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2cdacf3e18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2cda8e0140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2b2cdacf25d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b2cdacf73f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b2cdacef780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2cda3231c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b2cdad21df0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b2cda8fd6d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b2cdad20850"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b2cda931268"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b2cdad20de8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b2cda931800"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b2cdad1f9d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b2cda9303f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="stopTask" scoped="" ref="0x2b2cdad502e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2cda3231c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="startTask" scoped="" ref="0x2b2cdad50a88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2cda3231c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:ResourceP.nc">
      <from><interface-ref name="operationDone" scoped="" ref="0x2b2cda926830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2cda3231c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:ResourceP.nc">
      <from><interface-ref name="startDone" scoped="" ref="0x2b2cda92bd98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2cda3231c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:ResourceP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x2b2cda928c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b2cda3231c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b2cda94bc18"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b2cda862848"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2cda87e300"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2cda94ab90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b2cda9475b8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b2cda862848"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2cda87e300"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2cda9454b0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc" safe="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc" safe="">
      <documentation loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/homes/mhartmann/baq/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SharedResourceDemoC" loc="65:SharedResourceDemoC.nc">
      <documentation loc="35:SharedResourceDemoC.nc">
        <short>&#10;&#10; This application is used to test the use of Shared Resources.</short>
        <long>&#10;&#10; This application is used to test the use of Shared Resources.  &#10; Three Resource users are created and all three request&#10; control of the resource before any one of them is granted it.&#10; Once the first user is granted control of the resource, it performs&#10; some operation on it.  Once this operation has completed, a timer&#10; is set to allow this user to have control of it for a specific&#10; amount of time.  Once this timer expires, the resource is released&#10; and then immediately requested again.  Upon releasing the resource&#10; control will be granted to the next user that has requested it in &#10; round robin order.  Initial requests are made by the three resource &#10; users in the following order.&#60;br>&#10; &#60;li> Resource 0&#10; &#60;li> Resource 2&#10; &#60;li> Resource 1&#10; &#60;br>&#10; It is expected then that using a round robin policy, control of the&#10; resource will be granted in the order of 0,1,2 and the Leds&#10; corresponding to each resource will flash whenever this occurs.&#60;br>&#10; &#60;li> Led 0 -> Resource 0&#10; &#60;li> Led 1 -> Resource 1&#10; &#60;li> Led 2 -> Resource 2&#10; &#60;br>&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.2 $&#10; @date $Date: 2010-06-29 22:07:40 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SharedResourceDemoAppC.Timer0" loc="44(SharedResourceDemoAppC.Timer0):/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b2cda6c2068"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0SyncC" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0SyncP" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in SYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in SYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in SYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;--> CHANGED TO SYNC-Mode(CPL_CLK)&#9;hglanzer&#10;--> AS0=0 in ASSR&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SharedResourceDemoAppC.Timer1" loc="44(SharedResourceDemoAppC.Timer1):/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SharedResourceDemoAppC.Timer2" loc="44(SharedResourceDemoAppC.Timer2):/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SharedResourceDemoAppC.Resource0" loc="46(SharedResourceDemoAppC.Resource0):SharedResourceC.nc">
      <documentation loc="33:SharedResourceC.nc">
        <short>&#10; SharedResourceC is used to provide a generic configuration around &#10; the SharedResourceP component so that new instantiations of &#10; it provide a single set of interfaces that are all properly associated &#10; with one another rather than requiring the user to deal with the complexity&#10; of doing this themselves.</short>
        <long>&#10; SharedResourceC is used to provide a generic configuration around &#10; the SharedResourceP component so that new instantiations of &#10; it provide a single set of interfaces that are all properly associated &#10; with one another rather than requiring the user to deal with the complexity&#10; of doing this themselves.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.2 $&#10; @date $Date: 2010-06-29 22:07:40 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SharedResourceC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SharedResourceP" loc="43:SharedResourceP.nc">
      <documentation loc="33:SharedResourceP.nc">
        <short>&#10; The SharedResourceP component is used to create a shared resource&#10; out of a dedicated one.</short>
        <long>&#10; The SharedResourceP component is used to create a shared resource&#10; out of a dedicated one.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.2 $&#10; @date $Date: 2010-06-29 22:07:40 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SharedResourceP.Arbiter" loc="89(SharedResourceP.Arbiter):/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Shared.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SharedResourceP.Arbiter.Queue" loc="42(SharedResourceP.Arbiter.Queue):/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SharedResourceP.Arbiter.Arbiter" loc="52(SharedResourceP.Arbiter.Arbiter):/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SharedResourceP.PowerManager" loc="67(SharedResourceP.PowerManager):/homes/mhartmann/baq/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SharedResourceP.PowerManager.PowerManager" loc="58(SharedResourceP.PowerManager.PowerManager):/homes/mhartmann/baq/tinyos/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ResourceP" loc="44:ResourceP.nc">
      <documentation loc="33:ResourceP.nc">
        <short>&#10; This is an example implementation of a dedicated resource.</short>
        <long>&#10; This is an example implementation of a dedicated resource.  &#10; It provides the SplitControl interface for power management&#10; of the resource and an EXAMPLE ResourceOperations interface&#10; for performing operations on it.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.2 $&#10; @date $Date: 2010-06-29 22:07:40 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SharedResourceImplP" loc="44:SharedResourceImplP.nc">
      <documentation loc="33:SharedResourceImplP.nc">
        <short>&#10; The SharedResourceImplP component is used to wrap all of the operations&#10; from a dedicated resource so that access to them is protected when &#10; it is used as a shared resource.</short>
        <long>&#10; The SharedResourceImplP component is used to wrap all of the operations&#10; from a dedicated resource so that access to them is protected when &#10; it is used as a shared resource.  It uses the ArbiterInfo interface &#10; provided by an Arbiter to accomplish this.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.2 $&#10; @date $Date: 2010-06-29 22:07:40 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SharedResourceDemoAppC.Resource1" loc="46(SharedResourceDemoAppC.Resource1):SharedResourceC.nc">
      <documentation loc="33:SharedResourceC.nc">
        <short>&#10; SharedResourceC is used to provide a generic configuration around &#10; the SharedResourceP component so that new instantiations of &#10; it provide a single set of interfaces that are all properly associated &#10; with one another rather than requiring the user to deal with the complexity&#10; of doing this themselves.</short>
        <long>&#10; SharedResourceC is used to provide a generic configuration around &#10; the SharedResourceP component so that new instantiations of &#10; it provide a single set of interfaces that are all properly associated &#10; with one another rather than requiring the user to deal with the complexity&#10; of doing this themselves.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.2 $&#10; @date $Date: 2010-06-29 22:07:40 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SharedResourceC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SharedResourceDemoAppC.Resource2" loc="46(SharedResourceDemoAppC.Resource2):SharedResourceC.nc">
      <documentation loc="33:SharedResourceC.nc">
        <short>&#10; SharedResourceC is used to provide a generic configuration around &#10; the SharedResourceP component so that new instantiations of &#10; it provide a single set of interfaces that are all properly associated &#10; with one another rather than requiring the user to deal with the complexity&#10; of doing this themselves.</short>
        <long>&#10; SharedResourceC is used to provide a generic configuration around &#10; the SharedResourceP component so that new instantiations of &#10; it provide a single set of interfaces that are all properly associated &#10; with one another rather than requiring the user to deal with the complexity&#10; of doing this themselves.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.2 $&#10; @date $Date: 2010-06-29 22:07:40 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SharedResourceC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b2cda4840c8" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b2cda484410" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b2cda484758" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b2cda488950" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b2cda488cb8" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b2cda485060" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b2cda485390" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b2cda51c020" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b2cda51c388" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b2cda51c6f0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b2cda51ca20" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncC" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc" abstract="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b2cda6c2068" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b2cda6c2068"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b2cda6c2358" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncP" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b2cda6d1748" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b2cda6d1748"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b2cda6d1a38" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b2cda6a8c68" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b2cda6a8c68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b2cda7f3110" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b2cda7f3110"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b2cda7f3420" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b2cda839730" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b2cda839730"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SharedResourceC" loc="46:SharedResourceC.nc" abstract="">
      <documentation loc="33:SharedResourceC.nc">
        <short>&#10; SharedResourceC is used to provide a generic configuration around &#10; the SharedResourceP component so that new instantiations of &#10; it provide a single set of interfaces that are all properly associated &#10; with one another rather than requiring the user to deal with the complexity&#10; of doing this themselves.</short>
        <long>&#10; SharedResourceC is used to provide a generic configuration around &#10; the SharedResourceP component so that new instantiations of &#10; it provide a single set of interfaces that are all properly associated &#10; with one another rather than requiring the user to deal with the complexity&#10; of doing this themselves.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.2 $&#10; @date $Date: 2010-06-29 22:07:40 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b2cda87ce40" loc="89:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b2cda889020" loc="42:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b2cda8aeda8" loc="52:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/homes/mhartmann/baq/tinyos/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b2cda418020" loc="58:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b2cda418020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cda418370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b2cda41aaf8" loc="57:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b2cda41aaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b2cda41ae48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b2cda422cf0" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b2cda422cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cda4210a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2cda415020" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2cda415020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cda415370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b2cda422020" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b2cda422020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b2cda422370"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b2cda4224f8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b2cda422680"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b2cda422808"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b2cda422990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b2cda4286c0" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b2cda4286c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cda428a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2cda428020" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2cda428020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cda428370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b2cda428d88" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b2cda428d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cda427170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b2cda41cd20" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b2cda41cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cda42e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b2cda41c690" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b2cda41c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cda41c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b2cda42a4f8" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b2cda42a4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cda42a848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b2cda432388" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b2cda432388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4326d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda432860"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4329e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda432b70"/>
        <function-ref name="get" scoped="" ref="0x2b2cda432cf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda432e80"/>
        <function-ref name="set" scoped="" ref="0x2b2cda42a030"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda42a1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b2cda42b0e0" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b2cda42b0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cda42b430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b2cda473348" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b2cda473348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda473a98"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda473c20"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda473da8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda472020"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4721a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda472330"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4724b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda472640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b2cda456e80" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b2cda456e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4551f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda455380"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda455508"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda455690"/>
        <function-ref name="get" scoped="" ref="0x2b2cda455818"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4559a0"/>
        <function-ref name="set" scoped="" ref="0x2b2cda455b28"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda455cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b2cda467e00" loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b2cda467e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4661a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda466330"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4664b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda466640"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4667c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda466950"/>
        <function-ref name="set" scoped="" ref="0x2b2cda466ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda466c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b2cda46caf0" loc="94:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b2cda46caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda46ce40"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda46b020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda46b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda46b330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda46b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda46b640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda46b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda46b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b2cda442c78" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b2cda442c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda441020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4411a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda441330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4414b8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda441640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4417c8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda441950"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda441ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b2cda46e7e0" loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b2cda46e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda46eb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda46ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda46ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda46d020"/>
        <function-ref name="get" scoped="" ref="0x2b2cda46d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda46d330"/>
        <function-ref name="set" scoped="" ref="0x2b2cda46d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda46d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b2cda43f020" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b2cda43f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda43f370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda43f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda43f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda43f808"/>
        <function-ref name="get" scoped="" ref="0x2b2cda43f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda43fb18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda43fca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda43fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b2cda4501a0" loc="66:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b2cda4501a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4504f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda450678"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda450800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda450988"/>
        <function-ref name="get" scoped="" ref="0x2b2cda450b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda450c98"/>
        <function-ref name="set" scoped="" ref="0x2b2cda450e20"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda44f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b2cda460348" loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b2cda460348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda460698"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda460820"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4609a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda460b30"/>
        <function-ref name="get" scoped="" ref="0x2b2cda460cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda460e40"/>
        <function-ref name="set" scoped="" ref="0x2b2cda45f020"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda45f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b2cda463348" loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b2cda463348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda463698"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda463820"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4639a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda463b30"/>
        <function-ref name="get" scoped="" ref="0x2b2cda463cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda463e40"/>
        <function-ref name="set" scoped="" ref="0x2b2cda462020"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4621a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b2cda4394d0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b2cda4394d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda439820"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4399a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda439b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda439cb8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda439e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda438020"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4381a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda438330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b2cda44a4d0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b2cda44a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda44a820"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda44a9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda44ab30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda44acb8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda44ae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda449020"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4491a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda449330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b2cda44d658" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b2cda44d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda44d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda44db30"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda44dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda44de40"/>
        <function-ref name="get" scoped="" ref="0x2b2cda45a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda45a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda45a330"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda45a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b2cda45d7e0" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b2cda45d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda45db30"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda45dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda45de40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda45c020"/>
        <function-ref name="get" scoped="" ref="0x2b2cda45c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda45c330"/>
        <function-ref name="set" scoped="" ref="0x2b2cda45c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda45c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b2cda475020" loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b2cda475020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda475370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4754f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda475680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda475808"/>
        <function-ref name="get" scoped="" ref="0x2b2cda475990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda475b18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda475ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda475e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b2cda470c78" loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b2cda470c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda47d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda47d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda47d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda47d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda47d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda47d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda47d950"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda47dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b2cda45baf0" loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b2cda45baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda45be40"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda468020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4681a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda468330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4684b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda468640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4687c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda468950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b2cda444968" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b2cda444968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda444cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda444e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda443020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4431a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda443330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4434b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda443640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4437c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b2cda447af0" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b2cda447af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda447e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda446020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4461a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda446330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4464b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda446640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4467c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda446950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b2cda472968" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b2cda472968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda472cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda472e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda471020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4711a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda471330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4714b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda471640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4717c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b2cda453e00" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b2cda453e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4521a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda452330"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4524b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda452640"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4527c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda452950"/>
        <function-ref name="set" scoped="" ref="0x2b2cda452ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda452c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b2cda454020" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b2cda454020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda454370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4544f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda454680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda454808"/>
        <function-ref name="get" scoped="" ref="0x2b2cda454990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda454b18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda454ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda454e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b2cda465020" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b2cda465020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda465370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4654f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda465680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda465808"/>
        <function-ref name="get" scoped="" ref="0x2b2cda465990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda465b18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda465ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda465e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b2cda46bc78" loc="95:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b2cda46bc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda46a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda46a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda46a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda46a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda46a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda46a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda46a950"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda46aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b2cda441e00" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b2cda441e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4401a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda440330"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4404b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda440640"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4407c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda440950"/>
        <function-ref name="set" scoped="" ref="0x2b2cda440ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda440c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b2cda44c1a0" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b2cda44c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda44c4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda44c678"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda44c800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda44c988"/>
        <function-ref name="get" scoped="" ref="0x2b2cda44cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda44cc98"/>
        <function-ref name="set" scoped="" ref="0x2b2cda44ce20"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda44b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b2cda44f348" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b2cda44f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda44f698"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda44f820"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda44f9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda44fb30"/>
        <function-ref name="get" scoped="" ref="0x2b2cda44fcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda44fe40"/>
        <function-ref name="set" scoped="" ref="0x2b2cda44e020"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda44e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b2cda45f4d0" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b2cda45f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda45f820"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda45f9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda45fb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda45fcb8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda45fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda45e020"/>
        <function-ref name="set" scoped="" ref="0x2b2cda45e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda45e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b2cda4624d0" loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b2cda4624d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda462820"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4629a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda462b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda462cb8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda462e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda46f020"/>
        <function-ref name="set" scoped="" ref="0x2b2cda46f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda46f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b2cda438658" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b2cda438658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4389a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda438b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda438cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda438e40"/>
        <function-ref name="get" scoped="" ref="0x2b2cda445020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4451a8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda445330"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4454b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b2cda449658" loc="59:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b2cda449658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda449aa8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda449c30"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda449db8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda448020"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4481a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda448330"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4484b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda448640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b2cda45a7e0" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b2cda45a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda45ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda45acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda45ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda459020"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4591a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda459330"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4594b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda459640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b2cda4741a0" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b2cda4741a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4744f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda474678"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda474800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda474988"/>
        <function-ref name="get" scoped="" ref="0x2b2cda474b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda474c98"/>
        <function-ref name="set" scoped="" ref="0x2b2cda474e20"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda473020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b2cda457af0" loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b2cda457af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4560a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda456228"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4563b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda456538"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4566c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda456848"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4569d0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda456b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b2cda468c78" loc="84:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b2cda468c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda467020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4671a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda467330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4674b8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda467640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4677c8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda467950"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda467ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b2cda46d968" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b2cda46d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda46dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda46de40"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda46c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda46c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda46c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda46c4b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda46c640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda46c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b2cda47de00" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b2cda47de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda47c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda47c330"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda47c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda47c640"/>
        <function-ref name="get" scoped="" ref="0x2b2cda47c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda47c950"/>
        <function-ref name="set" scoped="" ref="0x2b2cda47cad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda47cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b2cda443af0" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b2cda443af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda443e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda442020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4421a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda442330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4424b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda442640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4427c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda442950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b2cda446c78" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b2cda446c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda453020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4531a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda453330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4534b8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda453640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4537c8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda453950"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda453ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b2cda46f658" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b2cda46f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda46f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda46fb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda46fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda46fe40"/>
        <function-ref name="get" scoped="" ref="0x2b2cda46e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda46e1a8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda46e330"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda46e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b2cda451020" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b2cda451020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda451370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4514f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda451680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda451808"/>
        <function-ref name="get" scoped="" ref="0x2b2cda451990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda451b18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda451ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda451e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b2cda4611a0" loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b2cda4611a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4614f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda461678"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda461800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda461988"/>
        <function-ref name="get" scoped="" ref="0x2b2cda461b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda461c98"/>
        <function-ref name="set" scoped="" ref="0x2b2cda461e20"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda460020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b2cda4641a0" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b2cda4641a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4644f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda464678"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda464800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda464988"/>
        <function-ref name="get" scoped="" ref="0x2b2cda464b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda464c98"/>
        <function-ref name="set" scoped="" ref="0x2b2cda464e20"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda463020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b2cda46ae00" loc="96:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b2cda46ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4691a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda469330"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4694b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda469640"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4697c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda469950"/>
        <function-ref name="set" scoped="" ref="0x2b2cda469ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda469c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b2cda43a290" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b2cda43a290"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda43a5e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda43a768"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda43a8f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda43aa78"/>
        <function-ref name="get" scoped="" ref="0x2b2cda43ac00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda43ad88"/>
        <function-ref name="set" scoped="" ref="0x2b2cda439020"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4391a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b2cda44b348" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b2cda44b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda44b698"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda44b820"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda44b9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda44bb30"/>
        <function-ref name="get" scoped="" ref="0x2b2cda44bcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda44be40"/>
        <function-ref name="set" scoped="" ref="0x2b2cda44a020"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda44a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b2cda44e4d0" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b2cda44e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda44e820"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda44e9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda44eb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda44ecb8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda44ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda44d020"/>
        <function-ref name="set" scoped="" ref="0x2b2cda44d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda44d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b2cda45e658" loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b2cda45e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda45e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda45eb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda45ecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda45ee40"/>
        <function-ref name="get" scoped="" ref="0x2b2cda45d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda45d1a8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda45d330"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda45d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b2cda471af0" loc="102:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b2cda471af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda471e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda470020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4701a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda470330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4704b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda470640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4707c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda470950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b2cda45c968" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b2cda45c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda45ccb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda45ce40"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda45b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda45b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda45b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda45b4b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda45b640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda45b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b2cda459968" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b2cda459968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda459cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda459e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda457020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4571a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda457330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4574b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda457640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4577c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b2cda4457e0" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b2cda4457e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda445b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda445cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda445e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda444020"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4441a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda444330"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4444b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda444640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b2cda448968" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b2cda448968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda448cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda448e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda447020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4471a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda447330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4474b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda447640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4477c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b2cda4bf120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b2cda4bf120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4bf470"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4bf5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4bf780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4bf908"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4bfa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4bfc18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4bfda0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b2cda4cc5b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b2cda4cc5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4cc908"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4cca90"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4ccc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4ccda0"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4cb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4cb1a8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4cb330"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4cb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b2cda4c2dc0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b2cda4c2dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4c1170"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4c12f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4c1480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4c1608"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4c1790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4c1918"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4c1aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4c1c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b2cda4be2a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b2cda4be2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4be5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4be780"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4be908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4bea90"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4bec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4beda0"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4bd020"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4bd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b2cda4cb740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b2cda4cb740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4cba90"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4cbc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4cbda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4ca020"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4ca1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4ca330"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4ca4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4ca640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b2cda4c0020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b2cda4c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4c0370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4c04f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4c0680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4c0808"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4c0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4c0b18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4c0ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4c0e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b2cda4bd430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b2cda4bd430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4bd780"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4bd908"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4bda90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4bdc18"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4bdda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4cc020"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4cc1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4cc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b2cda4ca8c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b2cda4ca8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4cac18"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4cada0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4c9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4c91a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4c9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4c94b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4c9640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4c97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda984ab0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda984ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda984e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda983020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda9831a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda983330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda9834b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda983640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda9837c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda983950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda981a10" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda981a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda981d60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda980020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda9801a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda980330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda9804b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda980640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda9807c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda980950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda9a2a10" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda9a2a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda9a2d60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda9a0020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda9a01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda9a0330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda9a04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda9a0640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda9a07c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda9a0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda99ea10" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda99ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda99ed60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda99d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda99d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda99d330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda99d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda99d640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda99d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda99d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda99ba10" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda99ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda99bd60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda99a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda99a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda99a330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda99a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda99a640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda99a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda99a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda998a10" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda998a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda998d60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda997020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda9971a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda997330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda9974b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda997640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda9977c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda997950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda995a10" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda995a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda995d60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda994020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda9941a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda994330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda9944b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda994640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda9947c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda994950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda992a10" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda992a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda992d60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda9b5020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda9b51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda9b5330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda9b54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda9b5640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda9b57c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda9b5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b2cda4d1bd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b2cda4d1bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4d0020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4d01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4d0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4d04b8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4d0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4d07c8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4d0950"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4d0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b2cda4cd020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b2cda4cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4cd370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4cd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4cd680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4cd808"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4cd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4cdb18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4cdca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4cde28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b2cda4d3930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b2cda4d3930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4d3c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4d3e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4d2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4d21a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4d2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4d24b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4d2640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4d27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b2cda4d0d60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b2cda4d0d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4cf0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4cf260"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4cf3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4cf570"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4cf6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4cf880"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4cfa08"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4cfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b2cda4dc120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b2cda4dc120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4dc470"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4dc5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4dc780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4dc908"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4dca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4dcc18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4dcda0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b2cda4d2a50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b2cda4d2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4d2da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4d1020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4d11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4d1330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4d14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4d1640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4d17c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4d1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b2cda4cfe18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b2cda4cfe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4ce1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4ce330"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4ce4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4ce640"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4ce7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4ce950"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4cead8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4cec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b2cda4db2a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b2cda4db2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4db5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4db780"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4db908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4dba90"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4dbc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4dbda0"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4da020"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4da1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda9f5970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda9f5970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda9f5cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda9f5e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda9f4020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda9f41a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda9f4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda9f44b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda9f4640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda9f47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda9f2970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda9f2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda9f2cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda9f2e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda9f1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda9f11a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda9f1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda9f14b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda9f1640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda9f17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda9ef970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda9ef970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda9efcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda9efe48"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda9ed020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda9ed1a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda9ed330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda9ed4b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda9ed640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda9ed7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdaa0f970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdaa0f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdaa0fcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdaa0fe48"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdaa0e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdaa0e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaa0e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdaa0e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaa0e640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdaa0e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdaa0c970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdaa0c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdaa0ccc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdaa0ce48"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdaa0b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdaa0b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaa0b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdaa0b4b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaa0b640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdaa0b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdaa09970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdaa09970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdaa09cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdaa09e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdaa08020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdaa081a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaa08330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdaa084b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaa08640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdaa087c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdaa06970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdaa06970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdaa06cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdaa06e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdaa05020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdaa051a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaa05330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdaa054b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaa05640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdaa057c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdaa03970" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdaa03970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdaa03cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdaa03e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdaa02020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdaa021a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaa02330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdaa024b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaa02640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdaa027c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b2cda4e2740" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b2cda4e2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4e2a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4e2c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4e2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4e1020"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4e11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4e1330"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4e14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4e1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b2cda4dfbd8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b2cda4dfbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4dd020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4dd1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4dd330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4dd4b8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4dd640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4dd7c8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4dd950"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4ddad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b2cda4e4500" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b2cda4e4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4e4850"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4e49d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4e4b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4e4ce8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4e4e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4e3020"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4e31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4e3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b2cda4e18c8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b2cda4e18c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4e1c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4e1da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4e0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4e01a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4e0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4e04b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4e0640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4e07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b2cda4ddd60" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b2cda4ddd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4ec0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4ec260"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4ec3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4ec570"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4ec6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4ec880"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4eca08"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4ecb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b2cda4e35b8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b2cda4e35b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4e3908"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4e3a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4e3c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4e3da0"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4e2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4e21a8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4e2330"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4e24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b2cda4e0a50" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b2cda4e0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4e0da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4df020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4df1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4df330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4df4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4df640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4df7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4df950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b2cda4ece18" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b2cda4ece18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4eb1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4eb330"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4eb4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4eb640"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4eb7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4eb950"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4ebad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4ebc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdaa496a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdaa496a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdaa499f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdaa49b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdaa49d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdaa6e020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaa6e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdaa6e330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaa6e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdaa6e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdaa6c710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdaa6c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdaa6ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdaa6cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdaa6cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdaa6b020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaa6b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdaa6b330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaa6b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdaa6b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdaa69710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdaa69710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdaa69a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdaa69be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdaa69d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdaa68020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaa681a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdaa68330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaa684b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdaa68640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdaa66710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdaa66710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdaa66a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdaa66be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdaa66d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdaa64020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaa641a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdaa64330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaa644b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdaa64640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdaa62710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdaa62710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdaa62a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdaa62be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdaa62d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdaa61020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaa611a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdaa61330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaa614b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdaa61640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdaa5f710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdaa5f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdaa5fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdaa5fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdaa5fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdaa5e020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaa5e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdaa5e330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaa5e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdaa5e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdaa5c710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdaa5c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdaa5ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdaa5cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdaa5cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdaa81020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaa811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdaa81330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaa814b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdaa81640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdaa7f710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdaa7f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdaa7fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdaa7fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdaa7fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdaa7e020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaa7e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdaa7e330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaa7e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdaa7e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b2cda4f3120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b2cda4f3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4f3470"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4f35f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4f3780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4f3908"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4f3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4f3c18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4f3da0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b2cda4ef5b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b2cda4ef5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4ef908"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4efa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4efc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4efda0"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4ee020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4ee1a8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4ee330"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4ee4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b2cda4e6e40" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b2cda4e6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4e51c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4e5348"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4e54d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4e5658"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4e57e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4e5968"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4e5af0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4e5c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b2cda4f12a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b2cda4f12a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4f15f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4f1780"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4f1908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4f1a90"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4f1c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4f1da0"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4f0020"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4f01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b2cda4ee740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b2cda4ee740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4eea90"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4eec18"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4eeda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4ed020"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4ed1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4ed330"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4ed4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4ed640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b2cda4f4020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b2cda4f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4f4370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4f44f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4f4680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4f4808"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4f4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4f4b18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4f4ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4f4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b2cda4f0430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b2cda4f0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4f0780"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4f0908"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4f0a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4f0c18"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4f0da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4ef020"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4ef1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4ef330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b2cda4ed8c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b2cda4ed8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4edc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4edda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4fc020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4fc1a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4fc330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4fc4b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4fc640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4fc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdaacd6a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdaacd6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdaacd9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdaacdb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdaacdd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdaacc020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaacc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdaacc330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaacc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdaacc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdaaca710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdaaca710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdaacaa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdaacabe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdaacad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdaac9020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaac91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdaac9330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaac94b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdaac9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdaac7710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdaac7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdaac7a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdaac7be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdaac7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdaac6020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaac61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdaac6330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaac64b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdaac6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdaac4710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdaac4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdaac4a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdaac4be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdaac4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdaac2020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaac21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdaac2330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaac24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdaac2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdaac0710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdaac0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdaac0a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdaac0be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdaac0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdaabf020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaabf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdaabf330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaabf4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdaabf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdaae5710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdaae5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdaae5a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdaae5be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdaae5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdaae4020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaae41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdaae4330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaae44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdaae4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdaae2710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdaae2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdaae2a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdaae2be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdaae2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdaae1020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaae11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdaae1330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaae14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdaae1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdaadf710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdaadf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdaadfa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdaadfbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdaadfd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdaade020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaade1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdaade330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaade4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdaade640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b2cda504bd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b2cda504bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda503020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda5031a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda503330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda5034b8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda503640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda5037c8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda503950"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda503ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b2cda500020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b2cda500020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda500370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda5004f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda500680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda500808"/>
        <function-ref name="get" scoped="" ref="0x2b2cda500990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda500b18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda500ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda500e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b2cda4f6930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b2cda4f6930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4f6c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4f6e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4f5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4f51a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4f5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4f54b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4f5640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4f57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b2cda503d60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b2cda503d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda5020d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda502260"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda5023e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda502570"/>
        <function-ref name="get" scoped="" ref="0x2b2cda5026f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda502880"/>
        <function-ref name="set" scoped="" ref="0x2b2cda502a08"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda502b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b2cda4ff120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b2cda4ff120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4ff470"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4ff5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4ff780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4ff908"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4ffa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4ffc18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4ffda0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b2cda4f5a50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b2cda4f5a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4f5da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda504020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda5041a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda504330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda5044b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda504640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda5047c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda504950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b2cda502e18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b2cda502e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda5011a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda501330"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda5014b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda501640"/>
        <function-ref name="get" scoped="" ref="0x2b2cda5017c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda501950"/>
        <function-ref name="set" scoped="" ref="0x2b2cda501ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda501c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b2cda4fe2a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b2cda4fe2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda4fe5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda4fe780"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda4fe908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda4fea90"/>
        <function-ref name="get" scoped="" ref="0x2b2cda4fec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda4feda0"/>
        <function-ref name="set" scoped="" ref="0x2b2cda4fd020"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda4fd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdab316a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdab316a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdab319f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdab31b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdab31d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdab30020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdab301a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdab30330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdab304b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdab30640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdab2e710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdab2e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdab2ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdab2ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdab2ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdab2d020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdab2d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdab2d330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdab2d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdab2d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdab2b710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdab2b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdab2ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdab2bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdab2bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdab2a020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdab2a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdab2a330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdab2a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdab2a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdab28710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdab28710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdab28a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdab28be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdab28d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdab27020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdab271a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdab27330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdab274b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdab27640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdab25710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdab25710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdab25a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdab25be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdab25d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdab23020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdab231a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdab23330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdab234b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdab23640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdab4b710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdab4b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdab4ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdab4bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdab4bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdab4a020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdab4a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdab4a330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdab4a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdab4a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdab48710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdab48710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdab48a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdab48be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdab48d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdab47020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdab471a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdab47330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdab474b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdab47640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdab45710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdab45710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdab45a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdab45be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdab45d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdab44020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdab441a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdab44330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdab444b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdab44640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b2cda506430" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b2cda506430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda506780"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda506908"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda506a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda506c18"/>
        <function-ref name="get" scoped="" ref="0x2b2cda506da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda505020"/>
        <function-ref name="set" scoped="" ref="0x2b2cda5051a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda505330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b2cda5158c8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b2cda5158c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda515c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda515da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda514020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda5141a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda514330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda5144b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda514640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda5147c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b2cda5081e8" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b2cda5081e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda508538"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda5086c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda508848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda5089d0"/>
        <function-ref name="get" scoped="" ref="0x2b2cda508b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda508ce0"/>
        <function-ref name="set" scoped="" ref="0x2b2cda508e68"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda507020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b2cda5055b8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b2cda5055b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda505908"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda505a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda505c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda505da0"/>
        <function-ref name="get" scoped="" ref="0x2b2cda516020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda5161a8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda516330"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda5164b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b2cda514a50" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b2cda514a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda514da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda513020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda5131a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda513330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda5134b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda513640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda5137c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda513950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b2cda5072a8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b2cda5072a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda5075f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda507780"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda507908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda507a90"/>
        <function-ref name="get" scoped="" ref="0x2b2cda507c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda507da0"/>
        <function-ref name="set" scoped="" ref="0x2b2cda506020"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda5061a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b2cda516740" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b2cda516740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda516a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda516c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda516da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda515020"/>
        <function-ref name="get" scoped="" ref="0x2b2cda5151a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda515330"/>
        <function-ref name="set" scoped="" ref="0x2b2cda5154b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda515640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b2cda513bd8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b2cda513bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda511020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda5111a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda511330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda5114b8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda511640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda5117c8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda511950"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda511ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdab9d6a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdab9d6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdab9d9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdab9db80"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdab9dd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdab9c020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdab9c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdab9c330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdab9c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdab9c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdab9a710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdab9a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdab9aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdab9abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdab9ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdab99020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdab991a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdab99330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdab994b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdab99640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdab97710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdab97710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdab97a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdab97be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdab97d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdab96020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdab961a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdab96330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdab964b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdab96640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdab94710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdab94710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdab94a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdab94be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdab94d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdab93020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdab931a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdab93330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdab934b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdab93640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdab91710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdab91710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdab91a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdab91be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdab91d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdab8f020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdab8f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdab8f330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdab8f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdab8f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdab8d710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdab8d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdab8da60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdab8dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdab8dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdab8c020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdab8c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdab8c330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdab8c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdab8c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdabb6710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdabb6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdabb6a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdabb6be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdabb6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdabb5020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdabb51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdabb5330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdabb54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdabb5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cdabb3710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cdabb3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cdabb3a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cdabb3be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cdabb3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cdabb2020"/>
        <function-ref name="get" scoped="" ref="0x2b2cdabb21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cdabb2330"/>
        <function-ref name="set" scoped="" ref="0x2b2cdabb24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cdabb2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda51dac0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda51dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda51de10"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda52b020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda52b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda52b330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda52b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda52b640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda52b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda52b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda53adb8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda53adb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda539170"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda5392f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda539480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda539608"/>
        <function-ref name="get" scoped="" ref="0x2b2cda539790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda539918"/>
        <function-ref name="set" scoped="" ref="0x2b2cda539aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda539c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda5343e0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda5343e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda534730"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda5348b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda534a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda534bc8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda534d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda533020"/>
        <function-ref name="set" scoped="" ref="0x2b2cda5331a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda533330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda5417e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda5417e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda541b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda541cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda541e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda540020"/>
        <function-ref name="get" scoped="" ref="0x2b2cda5401a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda540330"/>
        <function-ref name="set" scoped="" ref="0x2b2cda5404b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda540640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda53dc38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda53dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda53c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda53c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda53c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda53c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda53c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda53c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda53c950"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda53cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda549020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda549020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda549370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda5494f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda549680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda549808"/>
        <function-ref name="get" scoped="" ref="0x2b2cda549990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda549b18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda549ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda549e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda544480" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda544480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda5447d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda544958"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda544ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda544c68"/>
        <function-ref name="get" scoped="" ref="0x2b2cda544df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda555020"/>
        <function-ref name="set" scoped="" ref="0x2b2cda5551a8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda555330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda5527e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda5527e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda552b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda552cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda552e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda551020"/>
        <function-ref name="get" scoped="" ref="0x2b2cda5511a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda551330"/>
        <function-ref name="set" scoped="" ref="0x2b2cda5514b8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda551640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda54d970" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda54d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda54dcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda54de48"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda55e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda55e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda55e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda55e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda55e640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda55e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda55aab0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda55aab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda55ae00"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda559020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda5591a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda559330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda5594b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda559640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda5597c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda559950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda556c38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda556c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda567020"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda5671a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda567330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda5674b8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda567640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda5677c8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda567950"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda567ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda562020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda562020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda562370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda5624f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda562680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda562808"/>
        <function-ref name="get" scoped="" ref="0x2b2cda562990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda562b18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda562ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda562e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b2cda56f180" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b2cda56f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda56f4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda56f658"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda56f7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda56f968"/>
        <function-ref name="get" scoped="" ref="0x2b2cda56faf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda56fc78"/>
        <function-ref name="set" scoped="" ref="0x2b2cda56fe00"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda56e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2cda5aa2c0" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2cda5aa2c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b2cda31b128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b2cda31b128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cda5aa610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b2cda5aa8f0" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b2cda5aa8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b2cda5aac40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b2cda5aadc8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b2cda5a9020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b2cda5a91a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b2cda5a9330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b2cda5c7898" loc="60:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b2cda5c7898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cda5c7be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b2cda5c8198" loc="57:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b2cda5c8198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b2cda5c84e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b2cda5c71d0" loc="59:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b2cda5c71d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cda5c7520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b2cda5c87d0" loc="58:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b2cda5c87d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cda5c8b20"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b2cda5c8ca8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b2cda5c8e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b2cda3231c8" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b2cda3231c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2cda323518"/>
        <function-ref name="runTask" scoped="" ref="0x2b2cda3236a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b2cda320600" loc="47:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b2cda320600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cda320950"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b2cda320ad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b2cda320c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b2cda3d62b0" loc="56:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b2cda3d62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2cda3d6600"/>
        <function-ref name="runTask" scoped="" ref="0x2b2cda3d6788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b2cda3df758" loc="57:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b2cda3df758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b2cda3dfaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b2cda3d7448" loc="55:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b2cda3d7448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cda3d7798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b2cda3d7920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b2cda3d7aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b2cda3fc2b0" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b2cda3fc2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b2cda3fc600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b2cda3f6660" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b2cda3f6660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b2cda3f69b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b2cda3ffa80" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b2cda3ffa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b2cda3ffdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b2cda5d9ca0" loc="46:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b2cda5d9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b2cda5d0020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b2cda5d01a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b2cda5d0330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b2cda5d04b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b2cda5d0640"/>
        <function-ref name="get" scoped="" ref="0x2b2cda5d07c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b2cda5d0950"/>
        <function-ref name="setPort" scoped="" ref="0x2b2cda5d0c60"/>
        <function-ref name="led2Off" scoped="" ref="0x2b2cda5cf1a8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda5d0ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b2cda5d0de8"/>
        <function-ref name="led2On" scoped="" ref="0x2b2cda5cf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b2cda5d5e70" loc="50:/homes/mhartmann/baq/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b2cda5d5e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda5d41e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda5d4370"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda5d44f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda5d4680"/>
        <function-ref name="get" scoped="" ref="0x2b2cda5d4808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda5d4990"/>
        <function-ref name="set" scoped="" ref="0x2b2cda5d4b18"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda5d4ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2cda5d6080" loc="46:/homes/mhartmann/baq/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2cda5d6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cda5d63d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b2cda5d3020" loc="51:/homes/mhartmann/baq/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b2cda5d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda5d3370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda5d34f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda5d3680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda5d3808"/>
        <function-ref name="get" scoped="" ref="0x2b2cda5d3990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda5d3b18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda5d3ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda5d3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b2cda5d6648" loc="47:/homes/mhartmann/baq/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b2cda5d6648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b2cda5d6998"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b2cda5d6b20"/>
        <function-ref name="led1On" scoped="" ref="0x2b2cda5d6ca8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b2cda5d6e30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b2cda5d5020"/>
        <function-ref name="get" scoped="" ref="0x2b2cda5d51a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b2cda5d5330"/>
        <function-ref name="setPort" scoped="" ref="0x2b2cda5d5640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b2cda5d5ad8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda5d54b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b2cda5d57c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b2cda5d5950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b2cda5e5190" loc="52:/homes/mhartmann/baq/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b2cda5e5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda5e54e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda5e5668"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda5e57f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda5e5978"/>
        <function-ref name="get" scoped="" ref="0x2b2cda5e5b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda5e5c88"/>
        <function-ref name="set" scoped="" ref="0x2b2cda5e5e10"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda5e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA6" ref="0x2b2cda60a1b8" loc="54:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA6" scoped="" ref="0x2b2cda60a1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda60a508"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda60a690"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda60a818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda60a9a0"/>
        <function-ref name="get" scoped="" ref="0x2b2cda60ab28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda60acb0"/>
        <function-ref name="set" scoped="" ref="0x2b2cda60ae38"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda609020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB1" ref="0x2b2cda607818" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB1" scoped="" ref="0x2b2cda607818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda607c68"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda607df0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda606020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda6061a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda606330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda6064b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda606640"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda6067c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB6" ref="0x2b2cda617380" loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB6" scoped="" ref="0x2b2cda617380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda6176d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda617858"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda6179e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda617b68"/>
        <function-ref name="get" scoped="" ref="0x2b2cda617cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda617e78"/>
        <function-ref name="set" scoped="" ref="0x2b2cda616030"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda6161b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC3" ref="0x2b2cda611020" loc="69:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC3" scoped="" ref="0x2b2cda611020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda611370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda6114f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda611680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda611808"/>
        <function-ref name="get" scoped="" ref="0x2b2cda611990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda611b18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda611ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda611e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b2cda5d7dc8" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b2cda5d7dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda600170"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda6002f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda600480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda600608"/>
        <function-ref name="get" scoped="" ref="0x2b2cda600790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda600918"/>
        <function-ref name="set" scoped="" ref="0x2b2cda600aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda600c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD5" ref="0x2b2cda61b818" loc="80:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD5" scoped="" ref="0x2b2cda61b818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda61bb68"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda61bcf0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda61be78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda630030"/>
        <function-ref name="get" scoped="" ref="0x2b2cda6301b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda630340"/>
        <function-ref name="set" scoped="" ref="0x2b2cda6304c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda630650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA1" ref="0x2b2cda5fc518" loc="49:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA1" scoped="" ref="0x2b2cda5fc518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda5fc868"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda5fc9f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda5fcb78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda5fcd00"/>
        <function-ref name="get" scoped="" ref="0x2b2cda5fb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda5fb1a8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda5fb330"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda5fb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD0" ref="0x2b2cda622cb0" loc="75:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD0" scoped="" ref="0x2b2cda622cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda6210a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda621228"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda6213b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda621538"/>
        <function-ref name="get" scoped="" ref="0x2b2cda6216c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda621848"/>
        <function-ref name="set" scoped="" ref="0x2b2cda6219d0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda621b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE2" ref="0x2b2cda62b380" loc="86:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE2" scoped="" ref="0x2b2cda62b380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda62b6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda62b858"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda62b9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda62bb68"/>
        <function-ref name="get" scoped="" ref="0x2b2cda62bcf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda62be78"/>
        <function-ref name="set" scoped="" ref="0x2b2cda62a030"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda62a1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE7" ref="0x2b2cda63b020" loc="91:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE7" scoped="" ref="0x2b2cda63b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda63b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda63b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda63b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda63b808"/>
        <function-ref name="get" scoped="" ref="0x2b2cda63b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda63bb18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda63bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda63be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC1" ref="0x2b2cda6149b0" loc="67:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC1" scoped="" ref="0x2b2cda6149b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda614d00"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda613020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda6131a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda613330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda6134b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda613640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda6137c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda613950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA4" ref="0x2b2cda60dcb0" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA4" scoped="" ref="0x2b2cda60dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda60c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda60c228"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda60c3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda60c538"/>
        <function-ref name="get" scoped="" ref="0x2b2cda60c6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda60c848"/>
        <function-ref name="set" scoped="" ref="0x2b2cda60c9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda60cb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB4" ref="0x2b2cda619020" loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB4" scoped="" ref="0x2b2cda619020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda619370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda6194f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda619680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda619808"/>
        <function-ref name="get" scoped="" ref="0x2b2cda619990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda619b18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda619ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda619e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC6" ref="0x2b2cda624818" loc="72:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC6" scoped="" ref="0x2b2cda624818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda624b68"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda624cf0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda624e78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda623030"/>
        <function-ref name="get" scoped="" ref="0x2b2cda6231b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda623340"/>
        <function-ref name="set" scoped="" ref="0x2b2cda6234c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda623650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD3" ref="0x2b2cda61d380" loc="78:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD3" scoped="" ref="0x2b2cda61d380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda61d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda61d858"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda61d9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda61db68"/>
        <function-ref name="get" scoped="" ref="0x2b2cda61dcf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda61de78"/>
        <function-ref name="set" scoped="" ref="0x2b2cda61c030"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda61c1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE5" ref="0x2b2cda6289b0" loc="89:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE5" scoped="" ref="0x2b2cda6289b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda628d00"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda627020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda6271a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda627330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda6274b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda627640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda6277c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda627950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE0" ref="0x2b2cda62d020" loc="84:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE0" scoped="" ref="0x2b2cda62d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda62d370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda62d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda62d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda62d808"/>
        <function-ref name="get" scoped="" ref="0x2b2cda62d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda62db18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda62dca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda62de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA7" ref="0x2b2cda609380" loc="55:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA7" scoped="" ref="0x2b2cda609380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda6096d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda609858"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda6099e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda609b68"/>
        <function-ref name="get" scoped="" ref="0x2b2cda609cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda609e78"/>
        <function-ref name="set" scoped="" ref="0x2b2cda608030"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda6081b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB7" ref="0x2b2cda616518" loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB7" scoped="" ref="0x2b2cda616518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda616868"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda6169f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda616b78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda616d00"/>
        <function-ref name="get" scoped="" ref="0x2b2cda615020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda6151a8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda615330"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda6154b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b2cda63a110" loc="93:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2cda63a110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cda63a460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b2cda5ff020" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b2cda5ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda5ff370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda5ff4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda5ff680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda5ff808"/>
        <function-ref name="get" scoped="" ref="0x2b2cda5ff990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda5ffb18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda5ffca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda5ffe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD1" ref="0x2b2cda61f020" loc="76:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD1" scoped="" ref="0x2b2cda61f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda61f370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda61f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda61f680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda61f808"/>
        <function-ref name="get" scoped="" ref="0x2b2cda61f990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda61fb18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda61fca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda61fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA2" ref="0x2b2cda5fb818" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA2" scoped="" ref="0x2b2cda5fb818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda5fbb68"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda5fbcf0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda5fbe78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda60e030"/>
        <function-ref name="get" scoped="" ref="0x2b2cda60e1b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda60e340"/>
        <function-ref name="set" scoped="" ref="0x2b2cda60e4c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda60e650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB2" ref="0x2b2cda606b28" loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB2" scoped="" ref="0x2b2cda606b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda606e78"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda605030"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda6051b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda605340"/>
        <function-ref name="get" scoped="" ref="0x2b2cda6054c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda605650"/>
        <function-ref name="set" scoped="" ref="0x2b2cda6057d8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda605960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC4" ref="0x2b2cda6101b8" loc="70:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC4" scoped="" ref="0x2b2cda6101b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda610508"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda610690"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda610818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda6109a0"/>
        <function-ref name="get" scoped="" ref="0x2b2cda610b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda610cb0"/>
        <function-ref name="set" scoped="" ref="0x2b2cda610e38"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda625020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD6" ref="0x2b2cda6309b0" loc="81:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD6" scoped="" ref="0x2b2cda6309b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda630d00"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda62f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda62f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda62f330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda62f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda62f640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda62f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda62f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE3" ref="0x2b2cda62a518" loc="87:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE3" scoped="" ref="0x2b2cda62a518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda62a868"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda62a9f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda62ab78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda62ad00"/>
        <function-ref name="get" scoped="" ref="0x2b2cda629020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda6291a8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda629330"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda6294b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB0" ref="0x2b2cda608518" loc="57:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB0" scoped="" ref="0x2b2cda608518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda608868"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda6089f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda608b78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda608d00"/>
        <function-ref name="get" scoped="" ref="0x2b2cda607020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda6071a8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda607330"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda6074b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA5" ref="0x2b2cda60b020" loc="53:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA5" scoped="" ref="0x2b2cda60b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda60b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda60b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda60b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda60b808"/>
        <function-ref name="get" scoped="" ref="0x2b2cda60b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda60bb18"/>
        <function-ref name="set" scoped="" ref="0x2b2cda60bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda60be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB5" ref="0x2b2cda6181b8" loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB5" scoped="" ref="0x2b2cda6181b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda618508"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda618690"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda618818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda6189a0"/>
        <function-ref name="get" scoped="" ref="0x2b2cda618b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda618cb0"/>
        <function-ref name="set" scoped="" ref="0x2b2cda618e38"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda617020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC2" ref="0x2b2cda613cb0" loc="68:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC2" scoped="" ref="0x2b2cda613cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda6120a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda612228"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda6123b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda612538"/>
        <function-ref name="get" scoped="" ref="0x2b2cda6126c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda612848"/>
        <function-ref name="set" scoped="" ref="0x2b2cda6129d0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda612b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC7" ref="0x2b2cda6239b0" loc="73:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC7" scoped="" ref="0x2b2cda6239b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda623d00"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda622020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda6221a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda622330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda6224b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda622640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda6227c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda622950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD4" ref="0x2b2cda61c518" loc="79:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD4" scoped="" ref="0x2b2cda61c518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda61c868"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda61c9f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda61cb78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda61cd00"/>
        <function-ref name="get" scoped="" ref="0x2b2cda61b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda61b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda61b330"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda61b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE1" ref="0x2b2cda62c1b8" loc="85:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE1" scoped="" ref="0x2b2cda62c1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda62c508"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda62c690"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda62c818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda62c9a0"/>
        <function-ref name="get" scoped="" ref="0x2b2cda62cb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda62ccb0"/>
        <function-ref name="set" scoped="" ref="0x2b2cda62ce38"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda62b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b2cda5fe1b0" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b2cda5fe1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda5fe500"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda5fe688"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda5fe810"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda5fe998"/>
        <function-ref name="get" scoped="" ref="0x2b2cda5feb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda5feca8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda5fee30"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda5fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA0" ref="0x2b2cda5fd380" loc="48:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA0" scoped="" ref="0x2b2cda5fd380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda5fd6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda5fd858"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda5fd9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda5fdb68"/>
        <function-ref name="get" scoped="" ref="0x2b2cda5fdcf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda5fde78"/>
        <function-ref name="set" scoped="" ref="0x2b2cda5fc030"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda5fc1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE6" ref="0x2b2cda627cb0" loc="90:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE6" scoped="" ref="0x2b2cda627cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda6260a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda626228"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda6263b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda626538"/>
        <function-ref name="get" scoped="" ref="0x2b2cda6266c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda626848"/>
        <function-ref name="set" scoped="" ref="0x2b2cda6269d0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda626b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA3" ref="0x2b2cda60e9b0" loc="51:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA3" scoped="" ref="0x2b2cda60e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda60ed00"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda60d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda60d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda60d330"/>
        <function-ref name="get" scoped="" ref="0x2b2cda60d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda60d640"/>
        <function-ref name="set" scoped="" ref="0x2b2cda60d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda60d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB3" ref="0x2b2cda605cc0" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB3" scoped="" ref="0x2b2cda605cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda61a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda61a228"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda61a3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda61a538"/>
        <function-ref name="get" scoped="" ref="0x2b2cda61a6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda61a848"/>
        <function-ref name="set" scoped="" ref="0x2b2cda61a9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda61ab58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC0" ref="0x2b2cda615818" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC0" scoped="" ref="0x2b2cda615818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda615b68"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda615cf0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda615e78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda614030"/>
        <function-ref name="get" scoped="" ref="0x2b2cda6141b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda614340"/>
        <function-ref name="set" scoped="" ref="0x2b2cda6144c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda614650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC5" ref="0x2b2cda625380" loc="71:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC5" scoped="" ref="0x2b2cda625380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda6258d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda625a58"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda625be0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda625d68"/>
        <function-ref name="get" scoped="" ref="0x2b2cda624020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda6241a8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda624330"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda6244b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD2" ref="0x2b2cda61e1b8" loc="77:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD2" scoped="" ref="0x2b2cda61e1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda61e508"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda61e690"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda61e818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda61e9a0"/>
        <function-ref name="get" scoped="" ref="0x2b2cda61eb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda61ecb0"/>
        <function-ref name="set" scoped="" ref="0x2b2cda61ee38"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda61d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD7" ref="0x2b2cda62fcb0" loc="82:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD7" scoped="" ref="0x2b2cda62fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda62e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda62e228"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda62e3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda62e538"/>
        <function-ref name="get" scoped="" ref="0x2b2cda62e6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda62e848"/>
        <function-ref name="set" scoped="" ref="0x2b2cda62e9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda62eb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE4" ref="0x2b2cda629818" loc="88:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE4" scoped="" ref="0x2b2cda629818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b2cda629b68"/>
        <function-ref name="isInput" scoped="" ref="0x2b2cda629cf0"/>
        <function-ref name="toggle" scoped="" ref="0x2b2cda629e78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b2cda628030"/>
        <function-ref name="get" scoped="" ref="0x2b2cda6281b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b2cda628340"/>
        <function-ref name="set" scoped="" ref="0x2b2cda6284c8"/>
        <function-ref name="clr" scoped="" ref="0x2b2cda628650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b2cda666578" loc="69:SharedResourceDemoC.nc">
      <component-ref qname="SharedResourceDemoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b2cda666578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2cda6648f0"/>
        <function-ref name="fired" scoped="" ref="0x2b2cda665020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b2cda665d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b2cda6658c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b2cda6631c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b2cda664d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2cda665470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b2cda65a0f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b2cda664320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b2cda65a598"/>
        <function-ref name="stop" scoped="" ref="0x2b2cda65aa38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceOperations2" ref="0x2b2cda67bd90" loc="80:SharedResourceDemoC.nc">
      <component-ref qname="SharedResourceDemoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceOperations2" scoped="" ref="0x2b2cda67bd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceOperations"/>
      </instance>
      <interface-functions>
        <function-ref name="operationDone" scoped="" ref="0x2b2cda67a170"/>
        <function-ref name="operation" scoped="" ref="0x2b2cda67a2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b2cda65d0f0" loc="67:SharedResourceDemoC.nc">
      <component-ref qname="SharedResourceDemoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b2cda65d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b2cda65d440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource2" ref="0x2b2cda67b020" loc="79:SharedResourceDemoC.nc">
      <component-ref qname="SharedResourceDemoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource2" scoped="" ref="0x2b2cda67b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2cda67b370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b2cda67b4f8"/>
        <function-ref name="request" scoped="" ref="0x2b2cda67b680"/>
        <function-ref name="granted" scoped="" ref="0x2b2cda67b808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b2cda67b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceOperations0" ref="0x2b2cda66d120" loc="74:SharedResourceDemoC.nc">
      <component-ref qname="SharedResourceDemoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceOperations0" scoped="" ref="0x2b2cda66d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceOperations"/>
      </instance>
      <interface-functions>
        <function-ref name="operationDone" scoped="" ref="0x2b2cda66d470"/>
        <function-ref name="operation" scoped="" ref="0x2b2cda66d5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x2b2cda663798" loc="70:SharedResourceDemoC.nc">
      <component-ref qname="SharedResourceDemoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x2b2cda663798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2cda675a18"/>
        <function-ref name="fired" scoped="" ref="0x2b2cda676158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b2cda676e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b2cda6769f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b2cda6742e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b2cda675e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2cda6765a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b2cda662370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b2cda675448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b2cda662810"/>
        <function-ref name="stop" scoped="" ref="0x2b2cda662cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource0" ref="0x2b2cda67fc98" loc="73:SharedResourceDemoC.nc">
      <component-ref qname="SharedResourceDemoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource0" scoped="" ref="0x2b2cda67fc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2cda66e020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b2cda66e1a8"/>
        <function-ref name="request" scoped="" ref="0x2b2cda66e330"/>
        <function-ref name="granted" scoped="" ref="0x2b2cda66e4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b2cda66e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b2cda65d6b8" loc="68:SharedResourceDemoC.nc">
      <component-ref qname="SharedResourceDemoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b2cda65d6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b2cda65da08"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b2cda65db90"/>
        <function-ref name="led1On" scoped="" ref="0x2b2cda65dd18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b2cda65c020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b2cda65c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b2cda65c330"/>
        <function-ref name="led1Off" scoped="" ref="0x2b2cda65c4b8"/>
        <function-ref name="setPort" scoped="" ref="0x2b2cda65c7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b2cda65cc60"/>
        <function-ref name="set" scoped="" ref="0x2b2cda65c640"/>
        <function-ref name="led0On" scoped="" ref="0x2b2cda65c950"/>
        <function-ref name="led2On" scoped="" ref="0x2b2cda65cad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceOperations1" ref="0x2b2cda67c730" loc="77:SharedResourceDemoC.nc">
      <component-ref qname="SharedResourceDemoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceOperations1" scoped="" ref="0x2b2cda67c730"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceOperations"/>
      </instance>
      <interface-functions>
        <function-ref name="operationDone" scoped="" ref="0x2b2cda67ca80"/>
        <function-ref name="operation" scoped="" ref="0x2b2cda67cc08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x2b2cda6748c0" loc="71:SharedResourceDemoC.nc">
      <component-ref qname="SharedResourceDemoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer2" scoped="" ref="0x2b2cda6748c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2cda670bc0"/>
        <function-ref name="fired" scoped="" ref="0x2b2cda671238"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b2cda670020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b2cda671ad8"/>
        <function-ref name="getdt" scoped="" ref="0x2b2cda66f4d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b2cda66f088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2cda671688"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b2cda673458"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b2cda6705f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b2cda6738f8"/>
        <function-ref name="stop" scoped="" ref="0x2b2cda673d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource1" ref="0x2b2cda66d938" loc="76:SharedResourceDemoC.nc">
      <component-ref qname="SharedResourceDemoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource1" scoped="" ref="0x2b2cda66d938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2cda66dc88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b2cda66de10"/>
        <function-ref name="request" scoped="" ref="0x2b2cda67c020"/>
        <function-ref name="granted" scoped="" ref="0x2b2cda67c1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b2cda67c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b2cda695420" loc="45:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="SharedResourceDemoAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b2cda695420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2cda8436c8"/>
        <function-ref name="fired" scoped="" ref="0x2b2cda845db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b2cda844ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b2cda844688"/>
        <function-ref name="getdt" scoped="" ref="0x2b2cda85f020"/>
        <function-ref name="gett0" scoped="" ref="0x2b2cda843b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2cda844238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b2cda845020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b2cda8430f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b2cda8454c0"/>
        <function-ref name="stop" scoped="" ref="0x2b2cda845960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b2cda6a41c8" loc="49:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b2cda6a41c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2cda6a15f0"/>
        <function-ref name="fired" scoped="" ref="0x2b2cda6a3af0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b2cda6a28c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b2cda6a2470"/>
        <function-ref name="getdt" scoped="" ref="0x2b2cda69f020"/>
        <function-ref name="gett0" scoped="" ref="0x2b2cda6a1a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2cda6a2020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b2cda6a4d10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b2cda6a1020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b2cda6a3200"/>
        <function-ref name="stop" scoped="" ref="0x2b2cda6a36a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b2cda69cb18" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b2cda69cb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2cda6b0d98"/>
        <function-ref name="fired" scoped="" ref="0x2b2cda6b14d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b2cda6b01f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b2cda6b1d78"/>
        <function-ref name="getdt" scoped="" ref="0x2b2cda6af688"/>
        <function-ref name="gett0" scoped="" ref="0x2b2cda6af238"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2cda6b1928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b2cda69b6f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b2cda6b07c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b2cda69bb90"/>
        <function-ref name="stop" scoped="" ref="0x2b2cda6b1088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b2cda6ad108" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b2cda6ad108"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2cda6adc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2cda69fde0" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2cda69fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cda69c170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b2cda6ca150" loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b2cda6ca150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2cda6c9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b2cda6c9930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b2cda6c94a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b2cda6c9db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2cda6aa6f0" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2cda6aa6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cda6aaa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b2cda6be020" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b2cda6be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2cda6b5690"/>
        <function-ref name="fired" scoped="" ref="0x2b2cda6bd6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b2cda6b5088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2cda6bdb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b2cda6b5b18"/>
        <function-ref name="start" scoped="" ref="0x2b2cda6bed70"/>
        <function-ref name="stop" scoped="" ref="0x2b2cda6bd270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b2cda7be938" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b2cda7be938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2cda7ba020"/>
        <function-ref name="fired" scoped="" ref="0x2b2cda7bb088"/>
        <function-ref name="startAt" scoped="" ref="0x2b2cda7bb998"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2cda7bb510"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b2cda7ba4a8"/>
        <function-ref name="start" scoped="" ref="0x2b2cda7bd6b0"/>
        <function-ref name="stop" scoped="" ref="0x2b2cda7bdb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2cda7be190" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2cda7be190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b2cda31cd88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b2cda31cd88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cda7be4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b2cda7baa90" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b2cda7baa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2cda7b9828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b2cda7b8190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b2cda7b9cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b2cda7b8618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b2cdac774a0" loc="38:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b2cdac774a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b2cdac777f0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b2cdac77978"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b2cdac77b00"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b2cdac77c88"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b2cdac77e10"/>
        <function-ref name="setControl" scoped="" ref="0x2b2cdaca4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b2cdac82290" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b2cdac82290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2cdac7f918"/>
        <function-ref name="fired" scoped="" ref="0x2b2cdac81980"/>
        <function-ref name="startAt" scoped="" ref="0x2b2cdac7f310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2cdac81e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b2cdac7fda0"/>
        <function-ref name="start" scoped="" ref="0x2b2cdac81020"/>
        <function-ref name="stop" scoped="" ref="0x2b2cdac814f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2cdac83ab0" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2cdac83ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cdac83e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b2cdac7e3d0" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b2cdac7e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2cdac7d150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b2cdac7da60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b2cdac7d5d8"/>
        <function-ref name="overflow" scoped="" ref="0x2b2cdac7c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x2b2cdaca1510" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b2cdaca1510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b2cdaca0030"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b2cdaca19e8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b2cdaca1b70"/>
        <function-ref name="countBusy" scoped="" ref="0x2b2cdaca1cf8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b2cdaca1e80"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b2cdaca1860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b2cdaca43b0" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b2cdaca43b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b2cdaca2c20"/>
        <function-ref name="fired" scoped="" ref="0x2b2cdaca3980"/>
        <function-ref name="get" scoped="" ref="0x2b2cdaca3020"/>
        <function-ref name="reset" scoped="" ref="0x2b2cdaca3e08"/>
        <function-ref name="isOn" scoped="" ref="0x2b2cdaca10f8"/>
        <function-ref name="set" scoped="" ref="0x2b2cdaca34a8"/>
        <function-ref name="start" scoped="" ref="0x2b2cdaca2310"/>
        <function-ref name="stop" scoped="" ref="0x2b2cdaca2798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b2cdac7c5a0" loc="37:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b2cdac7c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b2cdac786f8"/>
        <function-ref name="test" scoped="" ref="0x2b2cdac79db8"/>
        <function-ref name="get" scoped="" ref="0x2b2cdac7a150"/>
        <function-ref name="setScale" scoped="" ref="0x2b2cdac78b80"/>
        <function-ref name="getScale" scoped="" ref="0x2b2cdac77088"/>
        <function-ref name="reset" scoped="" ref="0x2b2cdac79020"/>
        <function-ref name="overflow" scoped="" ref="0x2b2cdac7aab0"/>
        <function-ref name="isOn" scoped="" ref="0x2b2cdac78270"/>
        <function-ref name="set" scoped="" ref="0x2b2cdac7a5d8"/>
        <function-ref name="start" scoped="" ref="0x2b2cdac794a8"/>
        <function-ref name="stop" scoped="" ref="0x2b2cdac79930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b2cda73d020" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b2cda73d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b2cda73d370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b2cda73d4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b2cda73d680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b2cda73d808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b2cda73d990"/>
        <function-ref name="setControl" scoped="" ref="0x2b2cda73db18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b2cda752218" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b2cda752218"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b2cda752d10"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b2cda7526f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b2cda752878"/>
        <function-ref name="countBusy" scoped="" ref="0x2b2cda752a00"/>
        <function-ref name="getAssr" scoped="" ref="0x2b2cda752b88"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b2cda752568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b2cda73c020" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b2cda73c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b2cda7547a8"/>
        <function-ref name="fired" scoped="" ref="0x2b2cda73b560"/>
        <function-ref name="get" scoped="" ref="0x2b2cda73cba0"/>
        <function-ref name="reset" scoped="" ref="0x2b2cda73b9e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b2cda754c30"/>
        <function-ref name="set" scoped="" ref="0x2b2cda73b088"/>
        <function-ref name="start" scoped="" ref="0x2b2cda73be70"/>
        <function-ref name="stop" scoped="" ref="0x2b2cda754320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b2cda746e00" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b2cda746e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b2cda73f0f8"/>
        <function-ref name="test" scoped="" ref="0x2b2cda740798"/>
        <function-ref name="get" scoped="" ref="0x2b2cda742a18"/>
        <function-ref name="setScale" scoped="" ref="0x2b2cda73f580"/>
        <function-ref name="getScale" scoped="" ref="0x2b2cda73fa58"/>
        <function-ref name="reset" scoped="" ref="0x2b2cda741980"/>
        <function-ref name="overflow" scoped="" ref="0x2b2cda7414f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b2cda740c20"/>
        <function-ref name="set" scoped="" ref="0x2b2cda741020"/>
        <function-ref name="start" scoped="" ref="0x2b2cda741e08"/>
        <function-ref name="stop" scoped="" ref="0x2b2cda740310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b2cda749160" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b2cda749160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b2cda7494b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b2cda749638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b2cda7497c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b2cda749948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b2cda749ad0"/>
        <function-ref name="setControl" scoped="" ref="0x2b2cda749c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b2cda75e268" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b2cda75e268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b2cda75e5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b2cda75e958" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b2cda75e958"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b2cda75d4b8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b2cda75ee30"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b2cda75d020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b2cda75d1a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b2cda75d330"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b2cda75eca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b2cda748190" loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b2cda748190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b2cda760930"/>
        <function-ref name="fired" scoped="" ref="0x2b2cda7616d0"/>
        <function-ref name="get" scoped="" ref="0x2b2cda748d10"/>
        <function-ref name="reset" scoped="" ref="0x2b2cda761b58"/>
        <function-ref name="isOn" scoped="" ref="0x2b2cda760db8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda7611f8"/>
        <function-ref name="start" scoped="" ref="0x2b2cda760020"/>
        <function-ref name="stop" scoped="" ref="0x2b2cda7604a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b2cda74e180" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b2cda74e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b2cda74a270"/>
        <function-ref name="test" scoped="" ref="0x2b2cda74c930"/>
        <function-ref name="get" scoped="" ref="0x2b2cda74ed00"/>
        <function-ref name="setScale" scoped="" ref="0x2b2cda74a6f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b2cda74abd0"/>
        <function-ref name="reset" scoped="" ref="0x2b2cda74db58"/>
        <function-ref name="overflow" scoped="" ref="0x2b2cda74d6d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b2cda74cdb8"/>
        <function-ref name="set" scoped="" ref="0x2b2cda74d1f8"/>
        <function-ref name="start" scoped="" ref="0x2b2cda74c020"/>
        <function-ref name="stop" scoped="" ref="0x2b2cda74c4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b2cda7f8cf0" loc="74:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b2cda7f8cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2cda7f70a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b2cda7f7228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b2cda7e0c70" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b2cda7e0c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2cda7f8410"/>
        <function-ref name="fired" scoped="" ref="0x2b2cda7dd4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b2cda7dddb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2cda7dd930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b2cda7f8898"/>
        <function-ref name="start" scoped="" ref="0x2b2cda7df9f0"/>
        <function-ref name="stop" scoped="" ref="0x2b2cda7dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b2cda7e5ab0" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b2cda7e5ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2cda7e1d60"/>
        <function-ref name="fired" scoped="" ref="0x2b2cda7e3470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b2cda7e11c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b2cda7e3d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b2cda7e0648"/>
        <function-ref name="gett0" scoped="" ref="0x2b2cda7e01f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2cda7e38c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b2cda7e4620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b2cda7e1790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b2cda7e4ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b2cda7e3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b2cda83c618" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b2cda83c618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2cda83c968"/>
        <function-ref name="runTask" scoped="" ref="0x2b2cda83caf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b2cda8415a0" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b2cda8415a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2cda83d8f0"/>
        <function-ref name="fired" scoped="" ref="0x2b2cda83e020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b2cda83ed10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b2cda83e8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b2cda83c1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b2cda83dd40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2cda83e470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b2cda840118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b2cda83d320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b2cda8405b8"/>
        <function-ref name="stop" scoped="" ref="0x2b2cda840a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b2cda8290c8" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b2cda8290c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2cda842610"/>
        <function-ref name="fired" scoped="" ref="0x2b2cda828a48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b2cda826900"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b2cda826490"/>
        <function-ref name="getdt" scoped="" ref="0x2b2cda841020"/>
        <function-ref name="gett0" scoped="" ref="0x2b2cda842a80"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2cda826020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b2cda829c30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b2cda842020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b2cda828118"/>
        <function-ref name="stop" scoped="" ref="0x2b2cda8285d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b2cda838c38" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b2cda838c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2cda837820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b2cda837e48" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b2cda837e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b2cda84cbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b2cda84b548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b2cda84b0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b2cda84b9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b2cda85e8d8" loc="45:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="SharedResourceDemoAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b2cda85e8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2cda85bbc0"/>
        <function-ref name="fired" scoped="" ref="0x2b2cda85c238"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b2cda85b020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b2cda85cad8"/>
        <function-ref name="getdt" scoped="" ref="0x2b2cda8594d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b2cda859088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2cda85c688"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b2cda85d458"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b2cda85b5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b2cda85d8f8"/>
        <function-ref name="stop" scoped="" ref="0x2b2cda85dd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b2cda858da8" loc="45:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="SharedResourceDemoAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b2cda858da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b2cda39c530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b2cda39c888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b2cda853088"/>
        <function-ref name="fired" scoped="" ref="0x2b2cda856708"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b2cda855470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b2cda855020"/>
        <function-ref name="getdt" scoped="" ref="0x2b2cda853928"/>
        <function-ref name="gett0" scoped="" ref="0x2b2cda8534d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b2cda856b58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b2cda857930"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b2cda855a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b2cda857dd0"/>
        <function-ref name="stop" scoped="" ref="0x2b2cda8562b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b2cda94e2a8" loc="48:SharedResourceC.nc">
      <component-ref qname="SharedResourceDemoAppC.Resource0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b2cda94e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b2cda94e5f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b2cda94e780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b2cda94d2a8" loc="50:SharedResourceC.nc">
      <component-ref qname="SharedResourceDemoAppC.Resource0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2cda94d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b2cda94d5f8"/>
        <function-ref name="configure" scoped="" ref="0x2b2cda94d780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b2cda86d560" loc="47:SharedResourceC.nc">
      <component-ref qname="SharedResourceDemoAppC.Resource0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b2cda86d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2cda86d8b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b2cda86da38"/>
        <function-ref name="request" scoped="" ref="0x2b2cda86dbc0"/>
        <function-ref name="granted" scoped="" ref="0x2b2cda86dd48"/>
        <function-ref name="isOwner" scoped="" ref="0x2b2cda94e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceOperations" ref="0x2b2cda94ea08" loc="49:SharedResourceC.nc">
      <component-ref qname="SharedResourceDemoAppC.Resource0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceOperations" scoped="" ref="0x2b2cda94ea08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceOperations"/>
      </instance>
      <interface-functions>
        <function-ref name="operationDone" scoped="" ref="0x2b2cda94ed58"/>
        <function-ref name="operation" scoped="" ref="0x2b2cda94d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b2cda862848" loc="45:SharedResourceP.nc">
      <component-ref qname="SharedResourceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b2cda862848"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b2cda862b98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b2cda862d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b2cda87e300" loc="47:SharedResourceP.nc">
      <component-ref qname="SharedResourceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2cda87e300"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b2cda87e650"/>
        <function-ref name="configure" scoped="" ref="0x2b2cda87e7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b2cda8635b0" loc="44:SharedResourceP.nc">
      <component-ref qname="SharedResourceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b2cda8635b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2cda863900"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b2cda863a88"/>
        <function-ref name="request" scoped="" ref="0x2b2cda863c10"/>
        <function-ref name="granted" scoped="" ref="0x2b2cda863d98"/>
        <function-ref name="isOwner" scoped="" ref="0x2b2cda862020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceOperations" ref="0x2b2cda8615b0" loc="46:SharedResourceP.nc">
      <component-ref qname="SharedResourceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceOperations" scoped="" ref="0x2b2cda8615b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceOperations"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="operationDone" scoped="" ref="0x2b2cda861900"/>
        <function-ref name="operation" scoped="" ref="0x2b2cda861a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b2cda8e2510" loc="92:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="SharedResourceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b2cda8e2510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b2cda8e2880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b2cda8e2a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b2cda8e0140" loc="96:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="SharedResourceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2cda8e0140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b2cda8e04b0"/>
        <function-ref name="configure" scoped="" ref="0x2b2cda8e0638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b2cda8e2c50" loc="93:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="SharedResourceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b2cda8e2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2cda8e1020"/>
        <function-ref name="requested" scoped="" ref="0x2b2cda8e11a8"/>
        <function-ref name="granted" scoped="" ref="0x2b2cda8e1330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b2cda8e14b8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b2cda8e1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b2cda8e36b0" loc="91:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="SharedResourceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b2cda8e36b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2cda8e3a20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b2cda8e3ba8"/>
        <function-ref name="request" scoped="" ref="0x2b2cda8e3d30"/>
        <function-ref name="granted" scoped="" ref="0x2b2cda8e2020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b2cda8e21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b2cda8e1888" loc="94:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="SharedResourceP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b2cda8e1888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b2cda8e1bd8"/>
        <function-ref name="userId" scoped="" ref="0x2b2cda8e1d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b2cdacf8d90" loc="44:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="SharedResourceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b2cdacf8d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b2cdacf7170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b2cdacf73f8" loc="45:/homes/mhartmann/baq/tinyos/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="SharedResourceP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b2cdacf73f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b2cdacf7748"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b2cdacf78d0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b2cdacf7a58"/>
        <function-ref name="dequeue" scoped="" ref="0x2b2cdacf7be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b2cdacf4200" loc="55:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SharedResourceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b2cdacf4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b2cdacf4570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b2cdacf46f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b2cdacf3e18" loc="60:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SharedResourceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2cdacf3e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b2cdacf21c0"/>
        <function-ref name="configure" scoped="" ref="0x2b2cdacf2348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b2cdacf25d0" loc="61:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SharedResourceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b2cdacf25d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b2cdacf2920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b2cdacf2aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b2cdacf2c30"/>
        <function-ref name="dequeue" scoped="" ref="0x2b2cdacf2db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b2cdacf4940" loc="56:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SharedResourceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b2cdacf4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2cdacf4c90"/>
        <function-ref name="requested" scoped="" ref="0x2b2cdacf4e18"/>
        <function-ref name="granted" scoped="" ref="0x2b2cdacf3020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b2cdacf31a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b2cdacf3330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b2cdacf1060" loc="62:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SharedResourceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b2cdacf1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b2cdacf13b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b2cdacf1538"/>
        <function-ref name="led1On" scoped="" ref="0x2b2cdacf16c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b2cdacf1848"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b2cdacf19d0"/>
        <function-ref name="get" scoped="" ref="0x2b2cdacf1b58"/>
        <function-ref name="led1Off" scoped="" ref="0x2b2cdacf1ce0"/>
        <function-ref name="setPort" scoped="" ref="0x2b2cdacf1e68"/>
        <function-ref name="led0On" scoped="" ref="0x2b2cdacef4b8"/>
        <function-ref name="set" scoped="" ref="0x2b2cdacef1a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b2cdacef020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b2cdacef330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b2cdacf54b0" loc="54:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SharedResourceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b2cdacf54b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2cdacf5820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b2cdacf59a8"/>
        <function-ref name="request" scoped="" ref="0x2b2cdacf5b30"/>
        <function-ref name="granted" scoped="" ref="0x2b2cdacf5cb8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b2cdacf5e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b2cdacf3578" loc="57:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SharedResourceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b2cdacf3578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b2cdacf38c8"/>
        <function-ref name="userId" scoped="" ref="0x2b2cdacf3a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b2cdacef780" loc="75:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SharedResourceP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b2cdacef780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2cdacefad0"/>
        <function-ref name="runTask" scoped="" ref="0x2b2cdacefc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b2cda8fd6d8" loc="69:/homes/mhartmann/baq/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="SharedResourceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b2cda8fd6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b2cda8fda28"/>
        <function-ref name="stopDone" scoped="" ref="0x2b2cda8fdbb0"/>
        <function-ref name="start" scoped="" ref="0x2b2cda8fdd38"/>
        <function-ref name="stop" scoped="" ref="0x2b2cda931020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b2cda931268" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="SharedResourceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b2cda931268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b2cda9315b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b2cda931800" loc="72:/homes/mhartmann/baq/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="SharedResourceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b2cda931800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2cda931b50"/>
        <function-ref name="requested" scoped="" ref="0x2b2cda931cd8"/>
        <function-ref name="granted" scoped="" ref="0x2b2cda931e60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b2cda930020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b2cda9301a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b2cda9303f0" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="SharedResourceP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b2cda9303f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b2cda930740"/>
        <function-ref name="userId" scoped="" ref="0x2b2cda9308c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b2cdad21df0" loc="61:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="SharedResourceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b2cdad21df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b2cdad20170"/>
        <function-ref name="stopDone" scoped="" ref="0x2b2cdad202f8"/>
        <function-ref name="start" scoped="" ref="0x2b2cdad20480"/>
        <function-ref name="stop" scoped="" ref="0x2b2cdad20608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b2cdad20850" loc="63:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="SharedResourceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b2cdad20850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b2cdad20ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2b2cdad502e8" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="SharedResourceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2b2cdad502e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2cdad50638"/>
        <function-ref name="runTask" scoped="" ref="0x2b2cdad507c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b2cdad20de8" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="SharedResourceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b2cdad20de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2cdad1f170"/>
        <function-ref name="requested" scoped="" ref="0x2b2cdad1f2f8"/>
        <function-ref name="granted" scoped="" ref="0x2b2cdad1f480"/>
        <function-ref name="isOwner" scoped="" ref="0x2b2cdad1f608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b2cdad1f790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2b2cdad50a88" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="SharedResourceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2b2cdad50a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2cdad50dd8"/>
        <function-ref name="runTask" scoped="" ref="0x2b2cdad4f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2b2cdad216d0" loc="60:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="SharedResourceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b2cdad216d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b2cdad21a20"/>
        <function-ref name="stop" scoped="" ref="0x2b2cdad21ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b2cdad1f9d8" loc="65:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="SharedResourceP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b2cdad1f9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b2cdad1fd28"/>
        <function-ref name="userId" scoped="" ref="0x2b2cdad50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b2cda92fd50" loc="46:ResourceP.nc">
      <component-ref qname="ResourceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b2cda92fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b2cda92c0d8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b2cda92c260"/>
        <function-ref name="start" scoped="" ref="0x2b2cda92c3e8"/>
        <function-ref name="stop" scoped="" ref="0x2b2cda92c570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="operationDone" ref="0x2b2cda926830" loc="63:ResourceP.nc">
      <component-ref qname="ResourceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="operationDone" scoped="" ref="0x2b2cda926830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2cda926b80"/>
        <function-ref name="runTask" scoped="" ref="0x2b2cda926d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone" ref="0x2b2cda92bd98" loc="54:ResourceP.nc">
      <component-ref qname="ResourceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone" scoped="" ref="0x2b2cda92bd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2cda92a170"/>
        <function-ref name="runTask" scoped="" ref="0x2b2cda92a2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x2b2cda928c70" loc="59:ResourceP.nc">
      <component-ref qname="ResourceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x2b2cda928c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b2cda927020"/>
        <function-ref name="runTask" scoped="" ref="0x2b2cda9271a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceOperations" ref="0x2b2cda92c870" loc="47:ResourceP.nc">
      <component-ref qname="ResourceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceOperations" scoped="" ref="0x2b2cda92c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceOperations"/>
      </instance>
      <interface-functions>
        <function-ref name="operationDone" scoped="" ref="0x2b2cda92cbc0"/>
        <function-ref name="operation" scoped="" ref="0x2b2cda92cd48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceOperations" ref="0x2b2cda93a320" loc="50:SharedResourceImplP.nc">
      <component-ref qname="SharedResourceImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceOperations" scoped="" ref="0x2b2cda93a320"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceOperations"/>
      </instance>
      <interface-functions>
        <function-ref name="operationDone" scoped="" ref="0x2b2cda93a670"/>
        <function-ref name="operation" scoped="" ref="0x2b2cda93a7f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SharedResourceOperations" ref="0x2b2cda93b2b0" loc="46:SharedResourceImplP.nc">
      <component-ref qname="SharedResourceImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SharedResourceOperations" scoped="" ref="0x2b2cda93b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceOperations"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="operationDone" scoped="" ref="0x2b2cda93b600"/>
        <function-ref name="operation" scoped="" ref="0x2b2cda93b788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b2cda93bac0" loc="49:SharedResourceImplP.nc">
      <component-ref qname="SharedResourceImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b2cda93bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b2cda93be10"/>
        <function-ref name="userId" scoped="" ref="0x2b2cda93a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b2cda94bc18" loc="48:SharedResourceC.nc">
      <component-ref qname="SharedResourceDemoAppC.Resource1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b2cda94bc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b2cda94a020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b2cda94a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b2cda94ab90" loc="50:SharedResourceC.nc">
      <component-ref qname="SharedResourceDemoAppC.Resource1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2cda94ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b2cda949020"/>
        <function-ref name="configure" scoped="" ref="0x2b2cda9491a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b2cda94b020" loc="47:SharedResourceC.nc">
      <component-ref qname="SharedResourceDemoAppC.Resource1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b2cda94b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2cda94b370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b2cda94b4f8"/>
        <function-ref name="request" scoped="" ref="0x2b2cda94b680"/>
        <function-ref name="granted" scoped="" ref="0x2b2cda94b808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b2cda94b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceOperations" ref="0x2b2cda94a430" loc="49:SharedResourceC.nc">
      <component-ref qname="SharedResourceDemoAppC.Resource1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceOperations" scoped="" ref="0x2b2cda94a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceOperations"/>
      </instance>
      <interface-functions>
        <function-ref name="operationDone" scoped="" ref="0x2b2cda94a780"/>
        <function-ref name="operation" scoped="" ref="0x2b2cda94a908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b2cda9475b8" loc="48:SharedResourceC.nc">
      <component-ref qname="SharedResourceDemoAppC.Resource2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b2cda9475b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b2cda947908"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b2cda947a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b2cda9454b0" loc="50:SharedResourceC.nc">
      <component-ref qname="SharedResourceDemoAppC.Resource2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b2cda9454b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b2cda945800"/>
        <function-ref name="configure" scoped="" ref="0x2b2cda945988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b2cda948960" loc="47:SharedResourceC.nc">
      <component-ref qname="SharedResourceDemoAppC.Resource2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b2cda948960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b2cda948cb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b2cda948e38"/>
        <function-ref name="request" scoped="" ref="0x2b2cda947020"/>
        <function-ref name="granted" scoped="" ref="0x2b2cda9471a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b2cda947330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceOperations" ref="0x2b2cda947d18" loc="49:SharedResourceC.nc">
      <component-ref qname="SharedResourceDemoAppC.Resource2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceOperations" scoped="" ref="0x2b2cda947d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceOperations"/>
      </instance>
      <interface-functions>
        <function-ref name="operationDone" scoped="" ref="0x2b2cda9450a0"/>
        <function-ref name="operation" scoped="" ref="0x2b2cda945228"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b2cda419a70" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2cda326ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b2cda41a738" loc="60:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b2cda41db30" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2cda11e378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b2cda41d8c0" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b2cda420328" loc="31:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="27:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b2cda11e378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b2cda420d20" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b2cda420ab0" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b2cda41f7d0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b2cda41f560" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b2cda41d070" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b2cda434ab0" loc="44:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b2cda4331d8" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2cda31d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b2cda436d20" loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b2cda432020" loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2cda31d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b2cda434400" loc="43:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2cda31d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b2cda433890" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b2cda436020" loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b2cda436690" loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b2cda3223a0" loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b2cda320290" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b2cda322ab8" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2cda31d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b2cda32c070" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2cda326ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b2cda32c860" loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b2cda3df450" loc="76:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b2cda3f5d28" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b2cda37b1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b2cda3ff6d8" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b2cda5cb550" loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b2cda5cbc88" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b2cda5ca420" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b2cda5c92a8" loc="83:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b2cda5dc8b0" loc="100:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b2cda5da070" loc="117:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b2cda5cab38" loc="77:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b2cda5dab70" loc="134:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b2cda5da900" loc="134:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPort" ref="0x2b2cda5d9a08" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b2cda5d9468" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </variable>
          <variable name="pval" ref="0x2b2cda5d9788" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b2cda5ccdf8" loc="56:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b2cda5c9a18" loc="89:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b2cda5dc178" loc="94:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b2cda65b680" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b2cda65b680"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b2cda667020" loc="136:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b2cda66cb40" loc="83:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b2cda66a7c8" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b2cda66a230" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b2cda66a548" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b2cda66bac0" loc="98:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2cda31d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b2cda666020" loc="151:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b2cda667740" loc="144:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b2cda66b328" loc="92:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2cda31d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b2cda657290" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b2cda657020" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b2cda6686b8" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b2cda668120" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b2cda668438" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b2cda657cd0" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b2cda657a60" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b2cda66c4a0" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceOperations" loc="44:ResourceOperations.nc">
      <documentation loc="33:ResourceOperations.nc">
        <short>&#10; An EXAMPLE of an interface for performing operations on a resource.</short>
        <long>&#10; An EXAMPLE of an interface for performing operations on a resource.&#10; In this test application it is provided by the dedicated ResourceP component&#10; and passed through all of the proper components before being exposed by the&#10; shared resource at the topmost level.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.2 $&#10; @date $Date: 2010-06-29 22:07:40 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="operationDone" ref="0x2b2cda67dcd8" loc="46:ResourceOperations.nc">
        <interfacedef-ref qname="ResourceOperations"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2cda326ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b2cda67da68" loc="46:ResourceOperations.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2cda326ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="operation" ref="0x2b2cda67d3e0" loc="45:ResourceOperations.nc">
        <interfacedef-ref qname="ResourceOperations"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2cda326ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b2cda680c78" loc="120:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2cda326ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b2cda682d50" loc="97:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2cda326ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b2cda682460" loc="88:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2cda326ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b2cda680518" loc="102:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b2cda67f848" loc="128:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2cda31d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b2cda6ab340" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b2cda6ab340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b2cda6abbd0" loc="61:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b2cda11edb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b2cda6b37b8" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b2cda6b37b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b2cda6b39e8" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2cda6b39e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b2cda6c82a8" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2cda6b39e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b2cda6c7328" loc="76:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b2cda6c8ac0" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2cda31d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b2cda6c7a18" loc="82:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b2cda6bc528" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b2cda6bc528"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b2cda6bc758" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2cda6bc758"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b2cda6b6020" loc="109:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2cda6bc758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b2cda6b91d8" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b2cda6b86c0" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2cda6bc758"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2cda6bc758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b2cda6b8120" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2cda6bc758"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b2cda6b8440" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2cda6bc758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b2cda6b9948" loc="88:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2cda31d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b2cda6b67a0" loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2cda6bc758"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b2cda6ba290" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2cda6bc758"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b2cda6ba020" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2cda6bc758"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b2cda6baa60" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b2cda6e6020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2cda3a8a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b2cda3a8e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b2cda6e4360" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2cda3b5100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b2cda3b5508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b2cda6e51d8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2cda3ac980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b2cda3acd88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b2cda6e5b90" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2cda3ac980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b2cda3acd88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b2cda6e5920" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2cda3ac980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b2cda3acd88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b2cda6e4d18" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2cda3b5100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b2cda3b5508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b2cda6e4aa8" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2cda3b5100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b2cda3b5508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b2cda6e69f0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2cda3a8a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b2cda3a8e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b2cda6e6780" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2cda3a8a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b2cda3a8e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerSync" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer0Synchronous" ref="0x2b2cda7064e8" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBusy" ref="0x2b2cda706bf0" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b2cda7053e0" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b2cda705b90" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b2cda6f0328" loc="28:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="24:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2cda3af118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b2cda3af520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b2cda6f0cd8" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2cda3af118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b2cda3af520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b2cda6f0a68" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b2cda3af118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b2cda3af520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b2cda6e8420" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2cda6e8420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b2cda6f6a40" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2cda31d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b2cda6f8d88" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b2cda6e8cd8" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2cda6e8420"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b2cda6f74c0" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b2cda6f51d8" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2cda31d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b2cda6f8648" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2cda6e8420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b2cda6f83d8" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b2cda6e8420"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b2cda6f7bb8" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b2cda6f6328" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b2cda6de688" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b2cda6de688"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b2cda6d7cf0" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b2cda6d9e20" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2cda31d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b2cda6db020" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b2cda6de688"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b2cda6ee690" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b2cda6ee420" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b2cda6eee10" loc="110:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="106:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b2cda6da7f8" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b2cda6da0d8" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b2cda6d75c8" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2cda31d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b2cda6db958" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b2cda6de688"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b2cda6db6e8" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b2cda6de688"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b2cda6d9020" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b2cda6d9708" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b2cda86b9b0" loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b2cda8682a8" loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b2cda866bf0" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b2cda866440" loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b2cda874428" loc="56:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2cda326ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b2cda872440" loc="73:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b2cda877bb0" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b2cda874c28" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2cda31d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b2cda872d08" loc="81:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b2cda876a00" loc="90:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2cda31d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b2cda88d258" loc="98:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b2cda11c910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b2cda884768" loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2cda326ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b2cda88e9f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b2cda8844f8" loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b2cda88e9f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b2cda8888f8" loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2cda31d4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b2cda8853c8" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b2cda31d4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b2cda88e9f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b2cda885158" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b2cda88e9f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b2cda885c68" loc="70:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b2cda88e9f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/homes/mhartmann/baq/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b2cda8f7020" loc="113:/homes/mhartmann/baq/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/homes/mhartmann/baq/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2cda326ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b2cda8f9d58" loc="113:/homes/mhartmann/baq/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2cda326ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b2cda8f6430" loc="138:/homes/mhartmann/baq/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/homes/mhartmann/baq/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2cda326ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b2cda8f61c0" loc="138:/homes/mhartmann/baq/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b2cda326ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b2cda8f93e0" loc="104:/homes/mhartmann/baq/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/homes/mhartmann/baq/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2cda326ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b2cda8f7808" loc="130:/homes/mhartmann/baq/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/homes/mhartmann/baq/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2cda326ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2b2cda8f4020" loc="62:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/homes/mhartmann/baq/tinyos/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/homes/mhartmann/baq/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b2cda8f19e8" loc="95:/homes/mhartmann/baq/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/homes/mhartmann/baq/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2cda326ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b2cda90f1d8" loc="105:/homes/mhartmann/baq/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/homes/mhartmann/baq/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b2cda326ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
