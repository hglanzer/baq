<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:MyButtonsAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b68ad1cfa10"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b68ad1cc220"/></to>
    </wire>
    <wire loc="72:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b68ad1cc220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b68ad37c198"/></to>
    </wire>
    <wire loc="10:MyButtonsAppC.nc">
      <from><interface-ref name="LCD128x64" scoped="" ref="0x2b68ad3879d0"/></from>
      <to><interface-ref name="LCD128x64" scoped="" ref="0x2b68ad3af080"/></to>
    </wire>
    <wire loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <from><interface-ref name="LCD128x64" scoped="" ref="0x2b68ad3af080"/></from>
      <to><interface-ref name="LCD128x64" scoped="" ref="0x2b68ad3ec020"/></to>
    </wire>
    <wire loc="11:MyButtonsAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b68ad3a05c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b68ad495420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b68ad495420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b68ad4a7e30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="12:MyButtonsAppC.nc">
      <from><interface-ref name="Button1" scoped="" ref="0x2b68ad382c38"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x2b68ad1fc020"/></to>
    </wire>
    <wire loc="151:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b68ad1fc020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b68ad281020"/></to>
    </wire>
    <wire loc="13:MyButtonsAppC.nc">
      <from><interface-ref name="Button2" scoped="" ref="0x2b68ad39ae48"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x2b68ad1fb1a0"/></to>
    </wire>
    <wire loc="152:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b68ad1fb1a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b68ad290120"/></to>
    </wire>
    <wire loc="14:MyButtonsAppC.nc">
      <from><interface-ref name="Button3" scoped="" ref="0x2b68ad397020"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b68ad1fa348"/></to>
    </wire>
    <wire loc="153:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b68ad1fa348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b68ad28f2a8"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b68ad1cb620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b68ad49f768"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b68ad37c7d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b68ad0d4600"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b68ad0d4600"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b68ad18b448"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b68ad37b1d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b68ad1ce620"/></to>
    </wire>
    <wire loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b68ad1ce620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b68ad1dd600"/></to>
    </wire>
    <wire loc="71:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b68ad37b898"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b68ad1cb620"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b68ad1d1618"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b68ad35e8f0"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b68ad1dc398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b68ad35e2c0"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b68ad1ddca0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b68ad1d6b98"/></to>
    </wire>
    <wire loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b68ad1d6b98"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b68ad1e0698"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b68ad1e3360"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b68ad1c9380"/></to>
    </wire>
    <wire loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b68ad1dfb08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b68ad1e3360"/></to>
    </wire>
    <wire loc="191:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b68ad228af0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad301970"/></to>
    </wire>
    <wire loc="165:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b68ad20a658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b68ad2a8020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b68ad2a8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad7c3480"/></to>
    </wire>
    <wire loc="176:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b68ad21b658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b68ad2b7d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b68ad2b7d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad839480"/></to>
    </wire>
    <wire loc="185:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b68ad220348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b68ad2b95b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b68ad2b95b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad899480"/></to>
    </wire>
    <wire loc="143:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b68ad1f6348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b68ad27f740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b68ad27f740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad699480"/></to>
    </wire>
    <wire loc="183:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b68ad222020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b68ad2bb2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b68ad2bb2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad8a0480"/></to>
    </wire>
    <wire loc="146:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b68ad1f4658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b68ad287930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b68ad287930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad6ec3e0"/></to>
    </wire>
    <wire loc="157:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b68ad2057e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b68ad296740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b68ad296740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad771480"/></to>
    </wire>
    <wire loc="168:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b68ad215af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b68ad2a4430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b68ad2a4430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad7df480"/></to>
    </wire>
    <wire loc="179:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b68ad218af0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b68ad2b3120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b68ad2b3120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad830480"/></to>
    </wire>
    <wire loc="138:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b68ad1eeaf0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b68ad274020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b68ad274020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad688480"/></to>
    </wire>
    <wire loc="149:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b68ad1ffaf0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b68ad284d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b68ad284d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad704480"/></to>
    </wire>
    <wire loc="160:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b68ad202c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b68ad293bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b68ad293bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad768480"/></to>
    </wire>
    <wire loc="171:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b68ad211020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b68ad2a18c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b68ad2a18c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad7d6480"/></to>
    </wire>
    <wire loc="188:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b68ad21d7e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b68ad2c8a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b68ad2c8a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad8b8480"/></to>
    </wire>
    <wire loc="194:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b68ad2247e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad316020"/></to>
    </wire>
    <wire loc="174:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b68ad20f348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b68ad2a9a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b68ad2a9a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad840480"/></to>
    </wire>
    <wire loc="141:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b68ad1f8020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b68ad271430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b68ad271430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad69f480"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b68ad290120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad6fb480"/></to>
    </wire>
    <wire loc="192:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b68ad2264d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad30eab0"/></to>
    </wire>
    <wire loc="155:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b68ad2074d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b68ad298500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b68ad298500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad7543e0"/></to>
    </wire>
    <wire loc="166:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b68ad2097e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b68ad2a7120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b68ad2a7120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad7bf480"/></to>
    </wire>
    <wire loc="177:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b68ad21a7e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b68ad2b6e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b68ad2b6e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad836480"/></to>
    </wire>
    <wire loc="186:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b68ad21f4d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b68ad2ca740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b68ad2ca740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad896480"/></to>
    </wire>
    <wire loc="144:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b68ad1f54d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b68ad27e8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b68ad27e8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad696480"/></to>
    </wire>
    <wire loc="147:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b68ad1f37e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b68ad286a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b68ad286a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad70a480"/></to>
    </wire>
    <wire loc="158:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b68ad204968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b68ad2958c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b68ad2958c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad76e480"/></to>
    </wire>
    <wire loc="169:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b68ad214c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b68ad2a35b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b68ad2a35b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad7dc480"/></to>
    </wire>
    <wire loc="180:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b68ad217c78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b68ad2b22a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b68ad2b22a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad854480"/></to>
    </wire>
    <wire loc="139:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b68ad1edc78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b68ad273120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b68ad273120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad6a5480"/></to>
    </wire>
    <wire loc="150:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b68ad1fec78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b68ad283e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b68ad283e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad701480"/></to>
    </wire>
    <wire loc="161:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b68ad201e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b68ad291d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b68ad291d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad765480"/></to>
    </wire>
    <wire loc="189:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b68ad229968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b68ad2c7bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b68ad2c7bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad8b5480"/></to>
    </wire>
    <wire loc="164:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b68ad20b1a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b68ad29ae40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b68ad29ae40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad7c63e0"/></to>
    </wire>
    <wire loc="175:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b68ad21c4d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b68ad2b8bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b68ad2b8bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad83c480"/></to>
    </wire>
    <wire loc="184:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b68ad2211a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b68ad2ba430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b68ad2ba430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad89d480"/></to>
    </wire>
    <wire loc="195:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b68ad231968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad323180"/></to>
    </wire>
    <wire loc="142:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b68ad1f71a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b68ad2805b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b68ad2805b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad69c480"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b68ad28f2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad71a480"/></to>
    </wire>
    <wire loc="182:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b68ad216e00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b68ad2bc1e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b68ad2bc1e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad8a33e0"/></to>
    </wire>
    <wire loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b68ad206658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b68ad2975b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b68ad2975b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad750480"/></to>
    </wire>
    <wire loc="167:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b68ad208968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b68ad2a52a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b68ad2a52a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad7bc480"/></to>
    </wire>
    <wire loc="178:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b68ad219968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b68ad2b4020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b68ad2b4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad833480"/></to>
    </wire>
    <wire loc="187:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b68ad21e658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b68ad2c98c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b68ad2c98c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad893480"/></to>
    </wire>
    <wire loc="137:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b68ad1e1878"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b68ad276dc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b68ad276dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad68b4e0"/></to>
    </wire>
    <wire loc="148:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b68ad200968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b68ad285bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b68ad285bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad707480"/></to>
    </wire>
    <wire loc="159:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b68ad203af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b68ad294a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b68ad294a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad76b480"/></to>
    </wire>
    <wire loc="170:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b68ad213e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b68ad2a2740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b68ad2a2740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad7d9480"/></to>
    </wire>
    <wire loc="193:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b68ad225658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad30ac38"/></to>
    </wire>
    <wire loc="173:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b68ad2101a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b68ad2aa930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b68ad2aa930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad81d3e0"/></to>
    </wire>
    <wire loc="162:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b68ad20c020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b68ad2a0e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b68ad2a0e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad762480"/></to>
    </wire>
    <wire loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b68ad1ece00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b68ad2722a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b68ad2722a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad6a2480"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b68ad281020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b68ad6fe480"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b68ad0d71c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b68ad18a2b0"/></to>
    </wire>
    <wire loc="55:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b68ad193758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b68ad1aa660"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b68ad1b02b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b68ad557268"/></to>
    </wire>
    <wire loc="170:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeRectangle" scoped="" ref="0x2b68ad424368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b68ad0d71c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="219:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeString" scoped="" ref="0x2b68ad43a6c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b68ad0d71c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeCircle" scoped="" ref="0x2b68ad41d0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b68ad0d71c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="278:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeLine" scoped="" ref="0x2b68ad453190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b68ad0d71c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="wait4Controller" scoped="" ref="0x2b68ad3e67d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b68ad0d71c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="356:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeBar" scoped="" ref="0x2b68ad46bad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b68ad0d71c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="clearScreenNB" scoped="" ref="0x2b68ad4447d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b68ad0d71c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b68ad4a7e30"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b68ad4b34a0"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b68ad4b34a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b68ad635020"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b68ad49f768"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b68ad4c0020"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b68ad4ab980"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b68ad646c38"/></to>
    </wire>
    <wire loc="35:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b68ad4c0020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b68ad5bf190"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b68ad62f208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b68ad5ecab0"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b68ad5e7c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b68ad4b8838"/></to>
    </wire>
    <wire loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b68ad4b8838"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b68ad5bf938"/></to>
    </wire>
    <wire loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b68ad63ce48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b68ad4cbe40"/></to>
    </wire>
    <wire loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b68ad4cbe40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b68ad5bba90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b68ad5bba90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b68ad96ea90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b68ad5bf190"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b68ad972210"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b68ad5bf938"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b68ad9729b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b68ad96cb98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b68ad53be00"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b68ad53be00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b68ad545180"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b68ad966b60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b68ad54e020"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b68ad54e020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b68ad55c160"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2b68ad965b58"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b68ad54d020"/></to>
    </wire>
    <wire loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b68ad54d020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b68ad55b190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b68ad997bb0"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b68ad549218"/></to>
    </wire>
    <wire loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b68ad549218"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b68ad557958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2b68ad5e3cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b68ad0d71c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b68ad649478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b68ad0d71c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc" safe="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc" safe="">
      <documentation loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MyButtonsC" loc="1:MyButtonsC.nc">
      <module/>
    </component>
    <component qname="LCD128x64C" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <configuration/>
    </component>
    <component qname="LCD128x64P" loc="23:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <module/>
    </component>
    <component qname="MyButtonsAppC.Timer0" loc="44(MyButtonsAppC.Timer0):/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b68ad150530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b68ad150888"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b68ad4c9c68"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0SyncC" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0SyncP" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in SYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in SYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in SYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;--> CHANGED TO SYNC-Mode(CPL_CLK)&#9;hglanzer&#10;--> AS0=0 in ASSR&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b68ad150530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b68ad150888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b68ad150530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b68ad150888"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b68ad150530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b68ad150888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b68ad22eba0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b68ad238020" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b68ad238368" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b68ad23c610" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b68ad23c978" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b68ad23cce0" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b68ad239060" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b68ad2d0020" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b68ad2d0388" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b68ad2d06f0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b68ad2d0a20" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncC" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc" abstract="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b68ad4c9c68" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b68ad4c9c68"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b68ad4c6020" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncP" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b68ad4d5410" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b68ad4d5410"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b68ad4d5700" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b68ad4c1c68" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b68ad4c1c68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b68ad5ffcd0" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b68ad5ffcd0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b68ad5fb020" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b68ad644510" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b68ad644510"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b68ad1cb620" loc="58:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b68ad1cb620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b68ad1cb970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b68ad1cc220" loc="57:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b68ad1cc220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b68ad1cc570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b68ad1c9380" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b68ad1c9380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b68ad1c96d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b68ad1ce620" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b68ad1ce620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b68ad1ce970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b68ad1d1618" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b68ad1d1618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b68ad1d1968"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b68ad1d1af0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b68ad1d1c78"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b68ad1d1e00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b68ad1c9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b68ad1ddca0" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b68ad1ddca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b68ad1dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b68ad1dd600" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b68ad1dd600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b68ad1dd950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b68ad1dc398" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b68ad1dc398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b68ad1dc6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b68ad1e3360" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b68ad1e3360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b68ad1e36b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b68ad1d6b98" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b68ad1d6b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b68ad1e3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b68ad1dfb08" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b68ad1dfb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b68ad1dfe58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b68ad1e78d8" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b68ad1e78d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad1e7c28"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad1e7db0"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad1df020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad1df1a8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad1df330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad1df4b8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad1df640"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad1df7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b68ad1e0698" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b68ad1e0698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b68ad1e09e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b68ad228af0" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b68ad228af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2275e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad227770"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2278f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad227a80"/>
        <function-ref name="get" scoped="" ref="0x2b68ad227c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad227d90"/>
        <function-ref name="set" scoped="" ref="0x2b68ad226020"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2261a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b68ad20a658" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b68ad20a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad20a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad20ab30"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad20acb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad20ae40"/>
        <function-ref name="get" scoped="" ref="0x2b68ad209020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2091a8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad209330"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2094b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b68ad21b658" loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b68ad21b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad21b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad21bb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad21bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad21be40"/>
        <function-ref name="get" scoped="" ref="0x2b68ad21a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad21a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad21a330"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad21a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b68ad220348" loc="94:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b68ad220348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad220698"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad220820"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2209a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad220b30"/>
        <function-ref name="get" scoped="" ref="0x2b68ad220cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad220e40"/>
        <function-ref name="set" scoped="" ref="0x2b68ad21f020"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad21f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b68ad1f6348" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b68ad1f6348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad1f6698"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad1f6820"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad1f69a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad1f6b30"/>
        <function-ref name="get" scoped="" ref="0x2b68ad1f6cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad1f6e40"/>
        <function-ref name="set" scoped="" ref="0x2b68ad1f5020"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad1f51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b68ad222020" loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b68ad222020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad222370"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2224f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad222680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad222808"/>
        <function-ref name="get" scoped="" ref="0x2b68ad222990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad222b18"/>
        <function-ref name="set" scoped="" ref="0x2b68ad222ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad222e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b68ad1f4658" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b68ad1f4658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad1f49a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad1f4b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad1f4cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad1f4e40"/>
        <function-ref name="get" scoped="" ref="0x2b68ad1f3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad1f31a8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad1f3330"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad1f34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b68ad2057e0" loc="66:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b68ad2057e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad205b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad205cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad205e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad204020"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2041a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad204330"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2044b8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad204640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b68ad215af0" loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b68ad215af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad215e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad214020"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2141a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad214330"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2144b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad214640"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2147c8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad214950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b68ad218af0" loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b68ad218af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad218e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad217020"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2171a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad217330"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2174b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad217640"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2177c8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad217950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b68ad1eeaf0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b68ad1eeaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad1eee40"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad1ed020"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad1ed1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad1ed330"/>
        <function-ref name="get" scoped="" ref="0x2b68ad1ed4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad1ed640"/>
        <function-ref name="set" scoped="" ref="0x2b68ad1ed7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad1ed950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b68ad1ffaf0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b68ad1ffaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad1ffe40"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad1fe020"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad1fe1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad1fe330"/>
        <function-ref name="get" scoped="" ref="0x2b68ad1fe4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad1fe640"/>
        <function-ref name="set" scoped="" ref="0x2b68ad1fe7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad1fe950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b68ad202c78" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b68ad202c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad201020"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2011a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad201330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2014b8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad201640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2017c8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad201950"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad201ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b68ad211020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b68ad211020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad211370"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2114f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad211680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad211808"/>
        <function-ref name="get" scoped="" ref="0x2b68ad211990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad211b18"/>
        <function-ref name="set" scoped="" ref="0x2b68ad211ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad211e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b68ad21d7e0" loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b68ad21d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad21db30"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad21dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad21de40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad229020"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2291a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad229330"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2294b8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad229640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b68ad2247e0" loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b68ad2247e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad224b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad224cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad224e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad231020"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2311a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad231330"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2314b8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad231640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b68ad20f348" loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b68ad20f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad20f698"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad20f820"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad20f9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad20fb30"/>
        <function-ref name="get" scoped="" ref="0x2b68ad20fcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad20fe40"/>
        <function-ref name="set" scoped="" ref="0x2b68ad21c020"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad21c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b68ad1f8020" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b68ad1f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad1f8370"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad1f84f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad1f8680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad1f8808"/>
        <function-ref name="get" scoped="" ref="0x2b68ad1f8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad1f8b18"/>
        <function-ref name="set" scoped="" ref="0x2b68ad1f8ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad1f8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b68ad1fb1a0" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b68ad1fb1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad1fb4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad1fb678"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad1fb800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad1fb988"/>
        <function-ref name="get" scoped="" ref="0x2b68ad1fbb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad1fbc98"/>
        <function-ref name="set" scoped="" ref="0x2b68ad1fbe20"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad1fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b68ad2264d0" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b68ad2264d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad226820"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2269a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad226b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad226cb8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad226e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad225020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2251a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad225330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b68ad2074d0" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b68ad2074d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad207820"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2079a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad207b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad207cb8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad207e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad206020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2061a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad206330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b68ad2097e0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b68ad2097e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad209b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad209cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad209e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad208020"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2081a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad208330"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2084b8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad208640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b68ad21a7e0" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b68ad21a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad21ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad21acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad21ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad219020"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2191a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad219330"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2194b8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad219640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b68ad21f4d0" loc="95:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b68ad21f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad21f820"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad21f9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad21fb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad21fcb8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad21fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad21e020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad21e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad21e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b68ad1f54d0" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b68ad1f54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad1f5820"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad1f59a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad1f5b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad1f5cb8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad1f5e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad1f4020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad1f41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad1f4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b68ad1f37e0" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b68ad1f37e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad1f3b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad1f3cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad1f3e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad200020"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2001a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad200330"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2004b8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad200640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b68ad204968" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b68ad204968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad204cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad204e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad203020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2031a8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad203330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2034b8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad203640"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2037c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b68ad214c78" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b68ad214c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad213020"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2131a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad213330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2134b8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad213640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2137c8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad213950"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad213ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b68ad217c78" loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b68ad217c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad216020"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2161a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad216330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2164b8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad216640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2167c8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad216950"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad216ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b68ad1edc78" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b68ad1edc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad1ec020"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad1ec1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad1ec330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad1ec4b8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad1ec640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad1ec7c8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad1ec950"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad1ecad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b68ad1fec78" loc="59:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b68ad1fec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad1fd0f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad1fd278"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad1fd400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad1fd588"/>
        <function-ref name="get" scoped="" ref="0x2b68ad1fd710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad1fd898"/>
        <function-ref name="set" scoped="" ref="0x2b68ad1fda20"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad1fdba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b68ad201e00" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b68ad201e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad20e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad20e330"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad20e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad20e640"/>
        <function-ref name="get" scoped="" ref="0x2b68ad20e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad20e950"/>
        <function-ref name="set" scoped="" ref="0x2b68ad20ead8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad20ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b68ad229968" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b68ad229968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad229cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad229e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad228020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2281a8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad228330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2284b8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad228640"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2287c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b68ad20b1a0" loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b68ad20b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad20b6f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad20b878"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad20ba00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad20bb88"/>
        <function-ref name="get" scoped="" ref="0x2b68ad20bd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad20a020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad20a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad20a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b68ad21c4d0" loc="84:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b68ad21c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad21c820"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad21c9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad21cb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad21ccb8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad21ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad21b020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad21b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad21b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b68ad2211a0" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b68ad2211a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2214f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad221678"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad221800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad221988"/>
        <function-ref name="get" scoped="" ref="0x2b68ad221b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad221c98"/>
        <function-ref name="set" scoped="" ref="0x2b68ad221e20"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad220020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b68ad231968" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b68ad231968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad231cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad231e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad230020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2301a8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad230330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2304b8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad230640"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2307c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b68ad1f71a0" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b68ad1f71a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad1f74f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad1f7678"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad1f7800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad1f7988"/>
        <function-ref name="get" scoped="" ref="0x2b68ad1f7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad1f7c98"/>
        <function-ref name="set" scoped="" ref="0x2b68ad1f7e20"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad1f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b68ad1fa348" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b68ad1fa348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad1fa698"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad1fa820"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad1fa9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad1fab30"/>
        <function-ref name="get" scoped="" ref="0x2b68ad1facb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad1fae40"/>
        <function-ref name="set" scoped="" ref="0x2b68ad207020"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2071a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b68ad216e00" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b68ad216e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2231a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad223330"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2234b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad223640"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2237c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad223950"/>
        <function-ref name="set" scoped="" ref="0x2b68ad223ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad223c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b68ad206658" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b68ad206658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2069a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad206b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad206cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad206e40"/>
        <function-ref name="get" scoped="" ref="0x2b68ad205020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2051a8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad205330"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2054b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b68ad208968" loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b68ad208968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad208cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad208e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad215020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2151a8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad215330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2154b8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad215640"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2157c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b68ad219968" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b68ad219968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad219cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad219e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad218020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2181a8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad218330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2184b8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad218640"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2187c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b68ad21e658" loc="96:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b68ad21e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad21e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad21eb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad21ecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad21ee40"/>
        <function-ref name="get" scoped="" ref="0x2b68ad21d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad21d1a8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad21d330"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad21d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b68ad1e1878" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b68ad1e1878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad1e1bc8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad1e1d50"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad1ee020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad1ee1a8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad1ee330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad1ee4b8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad1ee640"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad1ee7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b68ad200968" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b68ad200968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad200cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad200e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad1ff020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad1ff1a8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad1ff330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad1ff4b8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad1ff640"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad1ff7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b68ad203af0" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b68ad203af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad203e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad202020"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2021a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad202330"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2024b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad202640"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2027c8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad202950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b68ad213e00" loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b68ad213e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2121a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad212330"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2124b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad212640"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2127c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad212950"/>
        <function-ref name="set" scoped="" ref="0x2b68ad212ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad212c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b68ad225658" loc="102:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b68ad225658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2259a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad225b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad225cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad225e40"/>
        <function-ref name="get" scoped="" ref="0x2b68ad224020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2241a8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad224330"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2244b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b68ad2101a0" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b68ad2101a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2104f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad210678"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad210800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad210988"/>
        <function-ref name="get" scoped="" ref="0x2b68ad210b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad210c98"/>
        <function-ref name="set" scoped="" ref="0x2b68ad210e20"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad20f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b68ad20c020" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b68ad20c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad20c370"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad20c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad20c680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad20c808"/>
        <function-ref name="get" scoped="" ref="0x2b68ad20c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad20cb18"/>
        <function-ref name="set" scoped="" ref="0x2b68ad20cca0"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad20ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b68ad1ece00" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b68ad1ece00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad1f91a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad1f9330"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad1f94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad1f9640"/>
        <function-ref name="get" scoped="" ref="0x2b68ad1f97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad1f9950"/>
        <function-ref name="set" scoped="" ref="0x2b68ad1f9ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad1f9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b68ad1fc020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b68ad1fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad1fc370"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad1fc4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad1fc680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad1fc808"/>
        <function-ref name="get" scoped="" ref="0x2b68ad1fc990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad1fcb18"/>
        <function-ref name="set" scoped="" ref="0x2b68ad1fcca0"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad1fce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b68ad273120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b68ad273120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad273470"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2735f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad273780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad273908"/>
        <function-ref name="get" scoped="" ref="0x2b68ad273a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad273c18"/>
        <function-ref name="set" scoped="" ref="0x2b68ad273da0"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad272020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b68ad2805b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b68ad2805b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad280908"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad280a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad280c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad280da0"/>
        <function-ref name="get" scoped="" ref="0x2b68ad27f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad27f1a8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad27f330"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad27f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b68ad276dc0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b68ad276dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad275170"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2752f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad275480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad275608"/>
        <function-ref name="get" scoped="" ref="0x2b68ad275790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad275918"/>
        <function-ref name="set" scoped="" ref="0x2b68ad275aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad275c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b68ad2722a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b68ad2722a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2725f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad272780"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad272908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad272a90"/>
        <function-ref name="get" scoped="" ref="0x2b68ad272c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad272da0"/>
        <function-ref name="set" scoped="" ref="0x2b68ad271020"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2711a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b68ad27f740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b68ad27f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad27fa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad27fc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad27fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad27e020"/>
        <function-ref name="get" scoped="" ref="0x2b68ad27e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad27e330"/>
        <function-ref name="set" scoped="" ref="0x2b68ad27e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad27e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b68ad274020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b68ad274020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad274370"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2744f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad274680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad274808"/>
        <function-ref name="get" scoped="" ref="0x2b68ad274990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad274b18"/>
        <function-ref name="set" scoped="" ref="0x2b68ad274ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad274e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b68ad271430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b68ad271430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad271780"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad271908"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad271a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad271c18"/>
        <function-ref name="get" scoped="" ref="0x2b68ad271da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad280020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2801a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad280330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b68ad27e8c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b68ad27e8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad27ec18"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad27eda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad27d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad27d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad27d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad27d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad27d640"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad27d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad68b4e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad68b4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad68b830"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad68b9b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad68bb40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad68bcc8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad68be50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad68a020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad68a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad68a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad688480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad688480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad6887d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad688958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad688ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad688c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad688df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad687020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad6871a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad687330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad6a5480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad6a5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad6a57d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad6a5958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad6a5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad6a5c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad6a5df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad6a4020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad6a41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad6a4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad6a2480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad6a2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad6a27d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad6a2958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad6a2ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad6a2c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad6a2df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad6a1020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad6a11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad6a1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad69f480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad69f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad69f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad69f958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad69fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad69fc68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad69fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad69e020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad69e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad69e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad69c480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad69c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad69c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad69c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad69cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad69cc68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad69cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad69b020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad69b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad69b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad699480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad699480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad6997d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad699958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad699ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad699c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad699df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad698020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad6981a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad698330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad696480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad696480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad6967d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad696958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad696ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad696c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad696df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad6b5020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad6b51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad6b5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b68ad285bd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b68ad285bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad284020"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2841a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad284330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2844b8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad284640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2847c8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad284950"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad284ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b68ad281020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b68ad281020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad281370"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2814f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad281680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad281808"/>
        <function-ref name="get" scoped="" ref="0x2b68ad281990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad281b18"/>
        <function-ref name="set" scoped="" ref="0x2b68ad281ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad281e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b68ad287930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b68ad287930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad287c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad287e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad286020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2861a8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad286330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2864b8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad286640"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2867c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b68ad284d60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b68ad284d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2830d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad283260"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2833e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad283570"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2836f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad283880"/>
        <function-ref name="set" scoped="" ref="0x2b68ad283a08"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad283b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b68ad290120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b68ad290120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad290470"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2905f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad290780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad290908"/>
        <function-ref name="get" scoped="" ref="0x2b68ad290a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad290c18"/>
        <function-ref name="set" scoped="" ref="0x2b68ad290da0"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad28f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b68ad286a50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b68ad286a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad286da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad285020"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2851a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad285330"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2854b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad285640"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2857c8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad285950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b68ad283e18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b68ad283e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2821a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad282330"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2824b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad282640"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2827c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad282950"/>
        <function-ref name="set" scoped="" ref="0x2b68ad282ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad282c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b68ad28f2a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b68ad28f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad28f5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad28f780"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad28f908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad28fa90"/>
        <function-ref name="get" scoped="" ref="0x2b68ad28fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad28fda0"/>
        <function-ref name="set" scoped="" ref="0x2b68ad28e020"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad28e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad6ec3e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad6ec3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad6ec730"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad6ec8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad6eca40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad6ecbc8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad6ecd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad6ea020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad6ea1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad6ea330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad70a480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad70a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad70a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad70a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad70aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad70ac68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad70adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad709020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad7091a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad709330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad707480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad707480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad7077d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad707958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad707ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad707c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad707df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad706020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad7061a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad706330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad704480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad704480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad7047d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad704958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad704ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad704c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad704df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad703020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad7031a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad703330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad701480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad701480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad7017d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad701958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad701ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad701c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad701df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad700020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad7001a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad700330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad6fe480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad6fe480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad6fe7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad6fe958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad6feae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad6fec68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad6fedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad6fd020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad6fd1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad6fd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad6fb480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad6fb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad6fb7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad6fb958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad6fbae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad6fbc68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad6fbdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad6fa020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad6fa1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad6fa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad71a480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad71a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad71a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad71a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad71aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad71ac68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad71adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad719020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad7191a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad719330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b68ad296740" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b68ad296740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad296a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad296c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad296da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad295020"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2951a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad295330"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2954b8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad295640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b68ad293bd8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b68ad293bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad291020"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2911a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad291330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2914b8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad291640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2917c8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad291950"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad291ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b68ad298500" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b68ad298500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad298850"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2989d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad298b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad298ce8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad298e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad297020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2971a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad297330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b68ad2958c8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b68ad2958c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad295c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad295da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad294020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2941a8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad294330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2944b8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad294640"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2947c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b68ad291d60" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b68ad291d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2a00d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2a0260"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2a03e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2a0570"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2a06f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2a0880"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2a0a08"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2a0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b68ad2975b8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b68ad2975b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad297908"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad297a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad297c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad297da0"/>
        <function-ref name="get" scoped="" ref="0x2b68ad296020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2961a8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad296330"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2964b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b68ad294a50" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b68ad294a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad294da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad293020"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2931a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad293330"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2934b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad293640"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2937c8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad293950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b68ad2a0e18" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b68ad2a0e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad29f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad29f330"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad29f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad29f640"/>
        <function-ref name="get" scoped="" ref="0x2b68ad29f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad29f950"/>
        <function-ref name="set" scoped="" ref="0x2b68ad29fad8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad29fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad7543e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad7543e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad754730"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad7548b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad754a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad754bc8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad754d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad752020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad7521a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad752330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad750480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad750480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad7507d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad750958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad750ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad750c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad750df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad773020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad7731a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad773330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad771480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad771480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad7717d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad771958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad771ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad771c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad771df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad770020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad7701a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad770330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad76e480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad76e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad76e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad76e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad76eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad76ec68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad76edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad76d020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad76d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad76d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad76b480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad76b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad76b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad76b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad76bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad76bc68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad76bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad76a020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad76a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad76a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad768480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad768480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad7687d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad768958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad768ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad768c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad768df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad767020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad7671a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad767330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad765480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad765480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad7657d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad765958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad765ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad765c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad765df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad764020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad7641a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad764330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad762480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad762480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad7627d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad762958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad762ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad762c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad762df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad785020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad7851a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad785330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b68ad2a7120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b68ad2a7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2a7470"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2a75f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2a7780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2a7908"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2a7a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2a7c18"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2a7da0"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b68ad2a35b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b68ad2a35b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2a3908"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2a3a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2a3c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2a3da0"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2a2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2a21a8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2a2330"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2a24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b68ad29ae40" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b68ad29ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2991c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad299348"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2994d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad299658"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2997e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad299968"/>
        <function-ref name="set" scoped="" ref="0x2b68ad299af0"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad299c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b68ad2a52a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b68ad2a52a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2a55f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2a5780"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2a5908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2a5a90"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2a5c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2a5da0"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2a4020"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2a41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b68ad2a2740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b68ad2a2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2a2a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2a2c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2a2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2a1020"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2a11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2a1330"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2a14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2a1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b68ad2a8020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b68ad2a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2a8370"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2a84f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2a8680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2a8808"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2a8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2a8b18"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2a8ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2a8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b68ad2a4430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b68ad2a4430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2a4780"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2a4908"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2a4a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2a4c18"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2a4da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2a3020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2a31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2a3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b68ad2a18c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b68ad2a18c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2a1c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2a1da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2b0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2b01a8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2b0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2b04b8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2b0640"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2b07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad7c63e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad7c63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad7c6730"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad7c68b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad7c6a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad7c6bc8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad7c6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad7c5020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad7c51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad7c5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad7c3480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad7c3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad7c37d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad7c3958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad7c3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad7c3c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad7c3df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad7c1020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad7c11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad7c1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad7bf480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad7bf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad7bf7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad7bf958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad7bfae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad7bfc68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad7bfdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad7be020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad7be1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad7be330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad7bc480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad7bc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad7bc7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad7bc958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad7bcae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad7bcc68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad7bcdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad7e1020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad7e11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad7e1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad7df480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad7df480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad7df7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad7df958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad7dfae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad7dfc68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad7dfdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad7de020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad7de1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad7de330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad7dc480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad7dc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad7dc7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad7dc958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad7dcae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad7dcc68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad7dcdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad7db020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad7db1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad7db330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad7d9480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad7d9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad7d97d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad7d9958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad7d9ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad7d9c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad7d9df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad7d8020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad7d81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad7d8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad7d6480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad7d6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad7d67d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad7d6958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad7d6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad7d6c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad7d6df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad7d5020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad7d51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad7d5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b68ad2b8bd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b68ad2b8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2b7020"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2b71a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2b7330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2b74b8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2b7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2b77c8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2b7950"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2b7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b68ad2b4020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b68ad2b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2b4370"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2b44f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2b4680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2b4808"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2b4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2b4b18"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2b4ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2b4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b68ad2aa930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b68ad2aa930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2aac80"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2aae08"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2a9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2a91a8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2a9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2a94b8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2a9640"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2a97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b68ad2b7d60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b68ad2b7d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2b60d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2b6260"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2b63e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2b6570"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2b66f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2b6880"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2b6a08"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2b6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b68ad2b3120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b68ad2b3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2b3470"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2b35f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2b3780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2b3908"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2b3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2b3c18"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2b3da0"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b68ad2a9a50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b68ad2a9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2a9da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2b8020"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2b81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2b8330"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2b84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2b8640"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2b87c8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2b8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b68ad2b6e18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b68ad2b6e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2b51a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2b5330"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2b54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2b5640"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2b57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2b5950"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2b5ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2b5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b68ad2b22a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b68ad2b22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2b25f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2b2780"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2b2908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2b2a90"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2b2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2b2da0"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2b1020"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2b11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad81d3e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad81d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad81d730"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad81d8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad81da40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad81dbc8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad81dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad81c020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad81c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad81c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad840480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad840480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad8407d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad840958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad840ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad840c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad840df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad83e020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad83e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad83e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad83c480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad83c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad83c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad83c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad83cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad83cc68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad83cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad83b020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad83b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad83b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad839480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad839480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad8397d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad839958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad839ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad839c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad839df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad838020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad8381a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad838330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad836480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad836480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad8367d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad836958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad836ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad836c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad836df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad835020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad8351a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad835330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad833480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad833480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad8337d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad833958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad833ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad833c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad833df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad832020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad8321a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad832330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad830480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad830480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad8307d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad830958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad830ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad830c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad830df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad82f020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad82f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad82f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad854480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad854480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad8547d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad854958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad854ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad854c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad854df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad853020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad8531a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad853330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b68ad2ba430" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b68ad2ba430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2ba780"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2ba908"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2baa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2bac18"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2bada0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2b9020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2b91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2b9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b68ad2c98c8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b68ad2c98c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2c9c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2c9da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2c8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2c81a8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2c8330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2c84b8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2c8640"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2c87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b68ad2bc1e8" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b68ad2bc1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2bc538"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2bc6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2bc848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2bc9d0"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2bcb58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2bcce0"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2bce68"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b68ad2b95b8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b68ad2b95b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2b9908"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2b9a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2b9c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2b9da0"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2ca020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2ca1a8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2ca330"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2ca4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b68ad2c8a50" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b68ad2c8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2c8da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2c7020"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2c71a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2c7330"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2c74b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2c7640"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2c77c8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2c7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b68ad2bb2a8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b68ad2bb2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2bb5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2bb780"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2bb908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2bba90"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2bbc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2bbda0"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2ba020"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2ba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b68ad2ca740" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b68ad2ca740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2caa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2cac18"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2cada0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2c9020"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2c91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2c9330"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2c94b8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2c9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b68ad2c7bd8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b68ad2c7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2c5020"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2c51a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2c5330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2c54b8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2c5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2c57c8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2c5950"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2c5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad8a33e0" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad8a33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad8a3730"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad8a38b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad8a3a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad8a3bc8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad8a3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad8a2020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad8a21a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad8a2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad8a0480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad8a0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad8a07d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad8a0958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad8a0ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad8a0c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad8a0df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad89f020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad89f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad89f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad89d480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad89d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad89d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad89d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad89dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad89dc68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad89ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad89b020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad89b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad89b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad899480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad899480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad8997d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad899958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad899ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad899c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad899df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad898020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad8981a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad898330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad896480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad896480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad8967d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad896958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad896ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad896c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad896df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad895020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad8951a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad895330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad893480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad893480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad8937d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad893958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad893ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad893c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad893df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad892020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad8921a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad892330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad8b8480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad8b8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad8b87d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad8b8958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad8b8ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad8b8c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad8b8df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad8b7020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad8b71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad8b7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad8b5480" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad8b5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad8b57d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad8b5958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad8b5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad8b5c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad8b5df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad8b4020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad8b41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad8b4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad2d1ac0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad2d1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2d1e10"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2df020"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2df1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2df330"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2df4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2df640"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2df7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2df950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad2eedb8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad2eedb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2ed170"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2ed2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2ed480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2ed608"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2ed790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2ed918"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2edaa0"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2edc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad2e83e0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad2e83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2e8730"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2e88b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2e8a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2e8bc8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2e8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2e7020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2e71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2e7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad2f57e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad2f57e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2f5b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2f5cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2f5e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2f4020"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2f41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2f4330"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2f44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2f4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad2f1c38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad2f1c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2f0020"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2f01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2f0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2f04b8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2f0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2f07c8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2f0950"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2f0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad2fd020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad2fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2fd370"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2fd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2fd680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2fd808"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2fd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad2fdb18"/>
        <function-ref name="set" scoped="" ref="0x2b68ad2fdca0"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad2fde28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad2f8480" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad2f8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad2f87d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad2f8958"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad2f8ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad2f8c68"/>
        <function-ref name="get" scoped="" ref="0x2b68ad2f8df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad309020"/>
        <function-ref name="set" scoped="" ref="0x2b68ad3091a8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad309330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad3067e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad3067e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad306b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad306cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad306e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad305020"/>
        <function-ref name="get" scoped="" ref="0x2b68ad3051a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad305330"/>
        <function-ref name="set" scoped="" ref="0x2b68ad3054b8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad305640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad301970" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad301970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad301cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad301e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad312020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad3121a8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad312330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad3124b8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad312640"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad3127c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad30eab0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad30eab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad30ee00"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad30d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad30d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad30d330"/>
        <function-ref name="get" scoped="" ref="0x2b68ad30d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad30d640"/>
        <function-ref name="set" scoped="" ref="0x2b68ad30d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad30d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad30ac38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad30ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad31b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad31b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad31b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad31b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad31b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad31b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad31b950"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad31bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad316020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad316020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad316370"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad3164f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad316680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad316808"/>
        <function-ref name="get" scoped="" ref="0x2b68ad316990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad316b18"/>
        <function-ref name="set" scoped="" ref="0x2b68ad316ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad316e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b68ad323180" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b68ad323180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad3234d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad323658"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad3237e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad323968"/>
        <function-ref name="get" scoped="" ref="0x2b68ad323af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad323c78"/>
        <function-ref name="set" scoped="" ref="0x2b68ad323e00"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad322020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b68ad35e2c0" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b68ad35e2c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b68ad0cf128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b68ad0cf128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b68ad35e610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b68ad35e8f0" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b68ad35e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b68ad35ec40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b68ad35edc8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b68ad35d020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b68ad35d1a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b68ad35d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b68ad37b898" loc="60:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b68ad37b898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b68ad37bbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b68ad37c198" loc="57:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b68ad37c198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b68ad37c4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b68ad37b1d0" loc="59:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b68ad37b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b68ad37b520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b68ad37c7d0" loc="58:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b68ad37c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b68ad37cb20"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b68ad37cca8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b68ad37ce30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b68ad0d71c8" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b68ad0d71c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b68ad0d7518"/>
        <function-ref name="runTask" scoped="" ref="0x2b68ad0d76a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b68ad0d4600" loc="47:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b68ad0d4600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b68ad0d4950"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b68ad0d4ad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b68ad0d4c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b68ad18a2b0" loc="56:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b68ad18a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b68ad18a600"/>
        <function-ref name="runTask" scoped="" ref="0x2b68ad18a788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b68ad193758" loc="57:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b68ad193758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b68ad193aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b68ad18b448" loc="55:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b68ad18b448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b68ad18b798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b68ad18b920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b68ad18baa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b68ad1b02b0" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b68ad1b02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b68ad1b0600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b68ad1aa660" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b68ad1aa660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b68ad1aa9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b68ad1b3a80" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b68ad1b3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b68ad1b3dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b68ad3a05c8" loc="8:MyButtonsC.nc">
      <component-ref qname="MyButtonsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b68ad3a05c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b68ad150530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b68ad150888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b68ad39e8f0"/>
        <function-ref name="fired" scoped="" ref="0x2b68ad39f020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b68ad39fd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b68ad39f8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b68ad39d1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b68ad39ed40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b68ad39f470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b68ad395158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b68ad39e320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b68ad3955f8"/>
        <function-ref name="stop" scoped="" ref="0x2b68ad395a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button2" ref="0x2b68ad39ae48" loc="6:MyButtonsC.nc">
      <component-ref qname="MyButtonsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button2" scoped="" ref="0x2b68ad39ae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad3991c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad399348"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad3994d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad399658"/>
        <function-ref name="get" scoped="" ref="0x2b68ad3997e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad399968"/>
        <function-ref name="set" scoped="" ref="0x2b68ad399af0"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad399c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b68ad1cfa10" loc="3:MyButtonsC.nc">
      <component-ref qname="MyButtonsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b68ad1cfa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b68ad1cfd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LCD128x64" ref="0x2b68ad3879d0" loc="4:MyButtonsC.nc">
      <component-ref qname="MyButtonsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b68ad3879d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b68ad387d20"/>
        <function-ref name="initDone" scoped="" ref="0x2b68ad383020"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b68ad3831a8"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b68ad383330"/>
        <function-ref name="barWritten" scoped="" ref="0x2b68ad3834b8"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b68ad383640"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b68ad3837c8"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b68ad383950"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b68ad383ad8"/>
        <function-ref name="writeByte" scoped="" ref="0x2b68ad383c60"/>
        <function-ref name="setPixel" scoped="" ref="0x2b68ad383de8"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b68ad382020"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b68ad3821a8"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b68ad382430"/>
        <function-ref name="writePixel" scoped="" ref="0x2b68ad3825b8"/>
        <function-ref name="initLCD" scoped="" ref="0x2b68ad382740"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b68ad3828c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button3" ref="0x2b68ad397020" loc="7:MyButtonsC.nc">
      <component-ref qname="MyButtonsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button3" scoped="" ref="0x2b68ad397020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad397370"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad3974f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad397680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad397808"/>
        <function-ref name="get" scoped="" ref="0x2b68ad397990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad397b18"/>
        <function-ref name="set" scoped="" ref="0x2b68ad397ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad397e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button1" ref="0x2b68ad382c38" loc="5:MyButtonsC.nc">
      <component-ref qname="MyButtonsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button1" scoped="" ref="0x2b68ad382c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b68ad39a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b68ad39a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b68ad39a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b68ad39a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad39a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b68ad39a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad39a950"/>
        <function-ref name="clr" scoped="" ref="0x2b68ad39aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCD128x64" ref="0x2b68ad3af080" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <component-ref qname="LCD128x64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b68ad3af080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b68ad3af3d0"/>
        <function-ref name="initDone" scoped="" ref="0x2b68ad3af558"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b68ad3af6e0"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b68ad3af868"/>
        <function-ref name="barWritten" scoped="" ref="0x2b68ad3af9f0"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b68ad3afb78"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b68ad3afd00"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b68ad3c3020"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b68ad3c31a8"/>
        <function-ref name="writeByte" scoped="" ref="0x2b68ad3c3330"/>
        <function-ref name="setPixel" scoped="" ref="0x2b68ad3c34b8"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b68ad3c3640"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b68ad3c37c8"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b68ad3c3a50"/>
        <function-ref name="writePixel" scoped="" ref="0x2b68ad3c3bd8"/>
        <function-ref name="initLCD" scoped="" ref="0x2b68ad3c3d60"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b68ad3c2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeRectangle" ref="0x2b68ad424368" loc="170:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeRectangle" scoped="" ref="0x2b68ad424368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b68ad4246b8"/>
        <function-ref name="runTask" scoped="" ref="0x2b68ad424840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCD128x64" ref="0x2b68ad3ec020" loc="25:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b68ad3ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b68ad3ec370"/>
        <function-ref name="initDone" scoped="" ref="0x2b68ad3ec4f8"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b68ad3ec680"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b68ad3ec808"/>
        <function-ref name="barWritten" scoped="" ref="0x2b68ad3ec990"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b68ad3ecb18"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b68ad3ecca0"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b68ad3ece28"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b68ad3eb020"/>
        <function-ref name="writeByte" scoped="" ref="0x2b68ad3eb1a8"/>
        <function-ref name="setPixel" scoped="" ref="0x2b68ad3eb330"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b68ad3eb4b8"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b68ad3eb640"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b68ad3eb8c8"/>
        <function-ref name="writePixel" scoped="" ref="0x2b68ad3eba50"/>
        <function-ref name="initLCD" scoped="" ref="0x2b68ad3ebbd8"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b68ad3ebd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeString" ref="0x2b68ad43a6c8" loc="219:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeString" scoped="" ref="0x2b68ad43a6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b68ad43aa18"/>
        <function-ref name="runTask" scoped="" ref="0x2b68ad43aba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeCircle" ref="0x2b68ad41d0c0" loc="186:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeCircle" scoped="" ref="0x2b68ad41d0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b68ad41d410"/>
        <function-ref name="runTask" scoped="" ref="0x2b68ad41d598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeLine" ref="0x2b68ad453190" loc="278:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeLine" scoped="" ref="0x2b68ad453190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b68ad4534e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b68ad453668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="wait4Controller" ref="0x2b68ad3e67d0" loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="wait4Controller" scoped="" ref="0x2b68ad3e67d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b68ad3e6b20"/>
        <function-ref name="runTask" scoped="" ref="0x2b68ad3e6ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeBar" ref="0x2b68ad46bad0" loc="356:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeBar" scoped="" ref="0x2b68ad46bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b68ad46be20"/>
        <function-ref name="runTask" scoped="" ref="0x2b68ad46a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="clearScreenNB" ref="0x2b68ad4447d0" loc="247:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="clearScreenNB" scoped="" ref="0x2b68ad4447d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b68ad444b20"/>
        <function-ref name="runTask" scoped="" ref="0x2b68ad444ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b68ad495420" loc="45:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="MyButtonsAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b68ad495420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b68ad150530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b68ad150888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b68ad6516c8"/>
        <function-ref name="fired" scoped="" ref="0x2b68ad654db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b68ad653ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b68ad653688"/>
        <function-ref name="getdt" scoped="" ref="0x2b68ad650020"/>
        <function-ref name="gett0" scoped="" ref="0x2b68ad651b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b68ad653238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b68ad654020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b68ad6510f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b68ad6544c0"/>
        <function-ref name="stop" scoped="" ref="0x2b68ad654960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b68ad4a7e30" loc="49:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b68ad4a7e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b68ad150530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b68ad150888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b68ad4a00c0"/>
        <function-ref name="fired" scoped="" ref="0x2b68ad4a3798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b68ad4a24d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b68ad4a2088"/>
        <function-ref name="getdt" scoped="" ref="0x2b68ad4a0960"/>
        <function-ref name="gett0" scoped="" ref="0x2b68ad4a0510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b68ad4a3be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b68ad4a49e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b68ad4a2aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b68ad4a4e80"/>
        <function-ref name="stop" scoped="" ref="0x2b68ad4a3348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b68ad4b34a0" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b68ad4b34a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b68ad150530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b68ad150888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b68ad4b06c8"/>
        <function-ref name="fired" scoped="" ref="0x2b68ad4b2db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b68ad4b1ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b68ad4b1688"/>
        <function-ref name="getdt" scoped="" ref="0x2b68ad4af020"/>
        <function-ref name="gett0" scoped="" ref="0x2b68ad4b0b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b68ad4b1238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b68ad4b2020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b68ad4b00f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b68ad4b24c0"/>
        <function-ref name="stop" scoped="" ref="0x2b68ad4b2960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b68ad4ab980" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b68ad4ab980"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b68ad150530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b68ad150888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b68ad4ad560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b68ad49f768" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b68ad49f768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b68ad49fab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b68ad4cbe40" loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b68ad4cbe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b68ad150530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b68ad150888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b68ad4cebe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b68ad4ca548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b68ad4ca0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b68ad4ca9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b68ad4c0020" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b68ad4c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b68ad4c0370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b68ad4b8838" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b68ad4b8838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b68ad150530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b68ad150888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b68ad4b6020"/>
        <function-ref name="fired" scoped="" ref="0x2b68ad4be020"/>
        <function-ref name="startAt" scoped="" ref="0x2b68ad4be930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b68ad4be4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b68ad4b64a8"/>
        <function-ref name="start" scoped="" ref="0x2b68ad4bf5e0"/>
        <function-ref name="stop" scoped="" ref="0x2b68ad4bfab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b68ad5bf938" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b68ad5bf938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b68ad150530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b68ad150888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b68ad5bb020"/>
        <function-ref name="fired" scoped="" ref="0x2b68ad5bc088"/>
        <function-ref name="startAt" scoped="" ref="0x2b68ad5bc998"/>
        <function-ref name="isRunning" scoped="" ref="0x2b68ad5bc510"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b68ad5bb4a8"/>
        <function-ref name="start" scoped="" ref="0x2b68ad5be6b0"/>
        <function-ref name="stop" scoped="" ref="0x2b68ad5beb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b68ad5bf190" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b68ad5bf190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b68ad0d0d88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b68ad0d0d88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b68ad5bf4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b68ad5bba90" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b68ad5bba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b68ad150530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b68ad150888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b68ad5ba828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b68ad5b9190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b68ad5bacb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b68ad5b9618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b68ad966b60" loc="38:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b68ad966b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b68ad965020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b68ad9651a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b68ad965330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b68ad9654b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b68ad965640"/>
        <function-ref name="setControl" scoped="" ref="0x2b68ad9657c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b68ad9729b8" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b68ad9729b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b68ad150530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b68ad150888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b68ad96e020"/>
        <function-ref name="fired" scoped="" ref="0x2b68ad96f0c0"/>
        <function-ref name="startAt" scoped="" ref="0x2b68ad96f9d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b68ad96f548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b68ad96e4a8"/>
        <function-ref name="start" scoped="" ref="0x2b68ad971730"/>
        <function-ref name="stop" scoped="" ref="0x2b68ad971c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b68ad972210" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b68ad972210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b68ad972560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b68ad96ea90" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b68ad96ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b68ad150530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b68ad150888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b68ad96d828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b68ad96c190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b68ad96dcb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b68ad96c618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x2b68ad997bb0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b68ad997bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b68ad9957c8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b68ad9951a8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b68ad995330"/>
        <function-ref name="countBusy" scoped="" ref="0x2b68ad9954b8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b68ad995640"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b68ad995020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b68ad965b58" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b68ad965b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b68ad997310"/>
        <function-ref name="fired" scoped="" ref="0x2b68ad9980c0"/>
        <function-ref name="get" scoped="" ref="0x2b68ad999728"/>
        <function-ref name="reset" scoped="" ref="0x2b68ad998548"/>
        <function-ref name="isOn" scoped="" ref="0x2b68ad997798"/>
        <function-ref name="set" scoped="" ref="0x2b68ad999bb0"/>
        <function-ref name="start" scoped="" ref="0x2b68ad9989d0"/>
        <function-ref name="stop" scoped="" ref="0x2b68ad998e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b68ad96cb98" loc="37:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b68ad96cb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b68ad968db8"/>
        <function-ref name="test" scoped="" ref="0x2b68ad9684a8"/>
        <function-ref name="get" scoped="" ref="0x2b68ad96a760"/>
        <function-ref name="setScale" scoped="" ref="0x2b68ad966270"/>
        <function-ref name="getScale" scoped="" ref="0x2b68ad966748"/>
        <function-ref name="reset" scoped="" ref="0x2b68ad969580"/>
        <function-ref name="overflow" scoped="" ref="0x2b68ad9690f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b68ad968930"/>
        <function-ref name="set" scoped="" ref="0x2b68ad96abe8"/>
        <function-ref name="start" scoped="" ref="0x2b68ad969a08"/>
        <function-ref name="stop" scoped="" ref="0x2b68ad968020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b68ad54e020" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b68ad54e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b68ad54e370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b68ad54e4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b68ad54e680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b68ad54e808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b68ad54e990"/>
        <function-ref name="setControl" scoped="" ref="0x2b68ad54eb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b68ad549218" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b68ad549218"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b68ad549d10"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b68ad5496f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b68ad549878"/>
        <function-ref name="countBusy" scoped="" ref="0x2b68ad549a00"/>
        <function-ref name="getAssr" scoped="" ref="0x2b68ad549b88"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b68ad549568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b68ad54d020" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b68ad54d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b68ad54b7a8"/>
        <function-ref name="fired" scoped="" ref="0x2b68ad54c560"/>
        <function-ref name="get" scoped="" ref="0x2b68ad54dba0"/>
        <function-ref name="reset" scoped="" ref="0x2b68ad54c9e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b68ad54bc30"/>
        <function-ref name="set" scoped="" ref="0x2b68ad54c088"/>
        <function-ref name="start" scoped="" ref="0x2b68ad54ce70"/>
        <function-ref name="stop" scoped="" ref="0x2b68ad54b320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b68ad53be00" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b68ad53be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b68ad5500f8"/>
        <function-ref name="test" scoped="" ref="0x2b68ad551798"/>
        <function-ref name="get" scoped="" ref="0x2b68ad537a18"/>
        <function-ref name="setScale" scoped="" ref="0x2b68ad550580"/>
        <function-ref name="getScale" scoped="" ref="0x2b68ad550a58"/>
        <function-ref name="reset" scoped="" ref="0x2b68ad552980"/>
        <function-ref name="overflow" scoped="" ref="0x2b68ad5524f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b68ad551c20"/>
        <function-ref name="set" scoped="" ref="0x2b68ad552020"/>
        <function-ref name="start" scoped="" ref="0x2b68ad552e08"/>
        <function-ref name="stop" scoped="" ref="0x2b68ad551310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b68ad55c160" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b68ad55c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b68ad55c4b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b68ad55c638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b68ad55c7c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b68ad55c948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b68ad55cad0"/>
        <function-ref name="setControl" scoped="" ref="0x2b68ad55cc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b68ad557268" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b68ad557268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b68ad5575b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b68ad557958" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b68ad557958"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b68ad5564b8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b68ad557e30"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b68ad556020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b68ad5561a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b68ad556330"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b68ad557ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b68ad55b190" loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b68ad55b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b68ad558930"/>
        <function-ref name="fired" scoped="" ref="0x2b68ad55a6d0"/>
        <function-ref name="get" scoped="" ref="0x2b68ad55bd10"/>
        <function-ref name="reset" scoped="" ref="0x2b68ad55ab58"/>
        <function-ref name="isOn" scoped="" ref="0x2b68ad558db8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad55a1f8"/>
        <function-ref name="start" scoped="" ref="0x2b68ad558020"/>
        <function-ref name="stop" scoped="" ref="0x2b68ad5584a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b68ad545180" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b68ad545180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b68ad55d270"/>
        <function-ref name="test" scoped="" ref="0x2b68ad55f930"/>
        <function-ref name="get" scoped="" ref="0x2b68ad545d00"/>
        <function-ref name="setScale" scoped="" ref="0x2b68ad55d6f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b68ad55dbd0"/>
        <function-ref name="reset" scoped="" ref="0x2b68ad560b58"/>
        <function-ref name="overflow" scoped="" ref="0x2b68ad5606d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b68ad55fdb8"/>
        <function-ref name="set" scoped="" ref="0x2b68ad5601f8"/>
        <function-ref name="start" scoped="" ref="0x2b68ad55f020"/>
        <function-ref name="stop" scoped="" ref="0x2b68ad55f4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b68ad5e3cf0" loc="74:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b68ad5e3cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b68ad5e20a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b68ad5e2228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b68ad5e7c70" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b68ad5e7c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b68ad150530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b68ad150888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b68ad5e3410"/>
        <function-ref name="fired" scoped="" ref="0x2b68ad5e44a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b68ad5e4db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b68ad5e4930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b68ad5e3898"/>
        <function-ref name="start" scoped="" ref="0x2b68ad5e59f0"/>
        <function-ref name="stop" scoped="" ref="0x2b68ad5e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b68ad5ecab0" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b68ad5ecab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b68ad150530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b68ad150888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b68ad5e8d60"/>
        <function-ref name="fired" scoped="" ref="0x2b68ad5e9470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b68ad5e81c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b68ad5e9d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b68ad5e7648"/>
        <function-ref name="gett0" scoped="" ref="0x2b68ad5e71f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b68ad5e98c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b68ad5eb620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b68ad5e8790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b68ad5ebac0"/>
        <function-ref name="stop" scoped="" ref="0x2b68ad5e9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b68ad649478" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b68ad649478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b68ad6497c8"/>
        <function-ref name="runTask" scoped="" ref="0x2b68ad649950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b68ad62f208" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b68ad62f208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b68ad150530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b68ad150888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b68ad64a5f0"/>
        <function-ref name="fired" scoped="" ref="0x2b68ad62db28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b68ad64b8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b68ad64b470"/>
        <function-ref name="getdt" scoped="" ref="0x2b68ad649020"/>
        <function-ref name="gett0" scoped="" ref="0x2b68ad64aa40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b68ad64b020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b68ad62fd50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b68ad64a020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b68ad62d238"/>
        <function-ref name="stop" scoped="" ref="0x2b68ad62d6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b68ad635020" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b68ad635020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b68ad150530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b68ad150888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b68ad630358"/>
        <function-ref name="fired" scoped="" ref="0x2b68ad6339b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b68ad632748"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b68ad6322d8"/>
        <function-ref name="getdt" scoped="" ref="0x2b68ad630c38"/>
        <function-ref name="gett0" scoped="" ref="0x2b68ad6307c8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b68ad633e28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b68ad635b88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b68ad632d38"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b68ad633088"/>
        <function-ref name="stop" scoped="" ref="0x2b68ad633548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b68ad646c38" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b68ad646c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b68ad150530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b68ad150888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b68ad63c820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b68ad63ce48" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b68ad63ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b68ad150530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b68ad150888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b68ad65bbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b68ad65a548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b68ad65a0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b68ad65a9d0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b68ad1cb178" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b68ad0daae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b68ad1c3e08" loc="60:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b68ad1d1290" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b68aced2378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b68ad1d1020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b68ad1d5940" loc="31:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="27:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b68aced2378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b68ad1d4378" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b68ad1d4108" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b68ad1d4e00" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b68ad1d4b90" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b68ad1d3698" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b68ad1e80d8" loc="44:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b68ad1e87a0" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b68ad0d14c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b68ad1e9328" loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b68ad1e7570" loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b68ad0d14c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b68ad1e99c8" loc="43:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b68ad0d14c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b68ad1e8e58" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b68ad1eb5a8" loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b68ad1ebc18" loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b68ad0d63a0" loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b68ad0d4290" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b68ad0d6ab8" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b68ad0d14c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b68ad0e0070" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b68ad0daae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b68ad0e0860" loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b68ad193450" loc="76:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b68ad1a9d28" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b68ad12f1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b68ad1b36d8" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b68ad396840" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b68ad396840"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b68ad3a1110" loc="136:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b68ad392ca0" loc="83:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b68ad3a48d0" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b68ad3a4338" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b68ad3a4650" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b68ad391bd8" loc="98:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b68ad0d14c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b68ad3a0070" loc="151:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b68ad3a1830" loc="144:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b68ad391440" loc="92:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b68ad0d14c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b68ad393338" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b68ad3930c8" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b68ad3a27c8" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b68ad3a2230" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b68ad3a2548" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b68ad393d78" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b68ad393b08" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b68ad392600" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LCD128x64" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
      <function command="" provided="0" name="startClearScreen" ref="0x2b68ad38b6f0" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b68ad38b480" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x2b68ad38bd60" loc="38:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteBar" ref="0x2b68ad37d918" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b68ad37fc20" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b68ad37d020" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b68ad37d350" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
          <variable name="width" ref="0x2b68ad37d678" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteLine" ref="0x2b68ad38cd78" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b68ad38c198" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b68ad38c498" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
          <variable name="xEnd" ref="0x2b68ad38c7b8" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
          <variable name="yEnd" ref="0x2b68ad38cad8" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="barWritten" ref="0x2b68ad387098" loc="48:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteRectangle" ref="0x2b68ad390bc0" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b68ad390020" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b68ad390320" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
          <variable name="a" ref="0x2b68ad390620" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
          <variable name="b" ref="0x2b68ad390920" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="screenCleared" ref="0x2b68ad387738" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="lineWritten" ref="0x2b68ad3889b0" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteString" ref="0x2b68ad38eaf0" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b68ad38e260" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x2b68ad38e560" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b68ad38e860" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="writeByte" ref="0x2b68ad381a48" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b68ad381198" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b68ad381498" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b68ad3817b8" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x2b68ad37f5a0" loc="20:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b68ad37f020" loc="20:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b68ad37f320" loc="20:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="circleWritten" ref="0x2b68ad38a468" loc="40:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteCircle" ref="0x2b68ad38fb98" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="xcenter" ref="0x2b68ad38f2a0" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
          <variable name="ycenter" ref="0x2b68ad38f5d8" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
          <variable name="radius" ref="0x2b68ad38f908" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rectangleWritten" ref="0x2b68ad388328" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writePixel" ref="0x2b68ad3809a0" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b68ad380108" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b68ad380408" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
          <variable name="on" ref="0x2b68ad380710" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initLCD" ref="0x2b68ad384ad8" loc="4:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b68ad384868" loc="4:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stringWritten" ref="0x2b68ad38ab08" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b68ad4afbf0" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b68ad4afbf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b68ad4ab4c8" loc="61:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b68aced2db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b68ad4cd3f8" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b68ad4cd3f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b68ad4cd628" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b68ad4cd628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b68ad4cc020" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b68ad4cd628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b68ad4cb070" loc="76:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b68ad4cc838" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b68ad0d14c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b68ad4cb760" loc="82:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b68ad4c0e18" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b68ad4c0e18"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b68ad4bd068" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b68ad4bd068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b68ad4b9958" loc="109:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b68ad4bd068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b68ad4bca78" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b68ad4b9020" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b68ad4bd068"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b68ad4bd068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b68ad4bba08" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b68ad4bd068"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b68ad4bbd28" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b68ad4bd068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b68ad4bb258" loc="88:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b68ad0d14c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b68ad4b8110" loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b68ad4bd068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b68ad4bdb28" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b68ad4bd068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b68ad4bd8b8" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b68ad4bd068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b68ad4bc328" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b68ad4f3a58" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b68ad15ca08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b68ad15ce10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b68ad4efe18" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b68ad169100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b68ad169508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b68ad4f0c70" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b68ad160980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b68ad160d88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b68ad4ef678" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b68ad160980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b68ad160d88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b68ad4ef408" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b68ad160980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b68ad160d88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b68ad4ee828" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b68ad169100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b68ad169508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b68ad4ee5b8" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b68ad169100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b68ad169508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b68ad4f04c8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b68ad15ca08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b68ad15ce10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b68ad4f0258" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b68ad15ca08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b68ad15ce10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerSync" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer0Synchronous" ref="0x2b68ad4fa328" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBusy" ref="0x2b68ad4faa30" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b68ad4f9258" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b68ad4f9a08" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b68ad4fb110" loc="28:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="24:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b68ad163118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b68ad163520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b68ad4fbac0" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b68ad163118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b68ad163520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b68ad4fb850" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b68ad163118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b68ad163520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b68ad4eb068" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b68ad4eb068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b68ad502738" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b68ad0d14c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b68ad4ea9d0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b68ad4eb920" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b68ad4eb068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b68ad4e9110" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b68ad500020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b68ad0d14c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b68ad4ea290" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b68ad4eb068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b68ad4ea020" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b68ad4eb068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b68ad4e9808" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b68ad502020" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b68ad4e4418" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b68ad4e4418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b68ad4df900" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b68ad4e0a40" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b68ad0d14c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b68ad4e4cb8" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b68ad4e4418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b68ad4de290" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b68ad4de020" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b68ad4dea10" loc="110:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="106:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b68aced0910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b68ad4e24c0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b68ad4e3d50" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b68ad4df1d8" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b68ad0d14c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b68ad4e3630" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b68ad4e4418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b68ad4e33c0" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b68ad4e4418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b68ad4e2bb8" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b68ad4e0328" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
