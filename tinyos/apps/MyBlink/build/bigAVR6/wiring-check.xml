<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="7:MyBlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b6c44d6c0c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b6c44baf220"/></to>
    </wire>
    <wire loc="72:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b6c44baf220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b6c44d5f198"/></to>
    </wire>
    <wire loc="8:MyBlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2b6c44d71578"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c44efa420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c44efa420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b6c44f0de30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="9:MyBlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6c44d75898"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6c44d68658"/></to>
    </wire>
    <wire loc="51:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b6c44d68658"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b6c44d9e020"/></to>
    </wire>
    <wire loc="10:MyBlinkAppC.nc">
      <from><interface-ref name="LCD128x64" scoped="" ref="0x2b6c44d8a330"/></from>
      <to><interface-ref name="LCD128x64" scoped="" ref="0x2b6c44e1c8c8"/></to>
    </wire>
    <wire loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <from><interface-ref name="LCD128x64" scoped="" ref="0x2b6c44e1c8c8"/></from>
      <to><interface-ref name="LCD128x64" scoped="" ref="0x2b6c44e4a690"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c44bae620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c44f1f768"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b6c44d5f7d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b6c44ab7600"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b6c44ab7600"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b6c44b6e448"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b6c44d5e1d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c44bb1620"/></to>
    </wire>
    <wire loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c44bb1620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c44bc0600"/></to>
    </wire>
    <wire loc="71:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c44d5e898"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c44bae620"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b6c44bb4618"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b6c44d418f0"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b6c44bbf398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c44d412c0"/></to>
    </wire>
    <wire loc="100:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b6c44bc0ca0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c44df6470"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b6c44bc0ca0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b6c44bb9b98"/></to>
    </wire>
    <wire loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b6c44bb9b98"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b6c44bc3698"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b6c44bc6360"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b6c44bac380"/></to>
    </wire>
    <wire loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b6c44bc2b08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b6c44bc6360"/></to>
    </wire>
    <wire loc="191:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b6c44c0baf0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c44ce4970"/></to>
    </wire>
    <wire loc="165:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b6c44bed658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6c44c8b020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6c44c8b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4523b710"/></to>
    </wire>
    <wire loc="176:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b6c44bfe658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6c44c9ad60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6c44c9ad60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45296710"/></to>
    </wire>
    <wire loc="185:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b6c44c03348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6c44c9c5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6c44c9c5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45300710"/></to>
    </wire>
    <wire loc="143:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b6c44bd9348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6c44c62740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6c44c62740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4510f710"/></to>
    </wire>
    <wire loc="183:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b6c44c05020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6c44c9e2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6c44c9e2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45306710"/></to>
    </wire>
    <wire loc="146:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b6c44bd7658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6c44c6a930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6c44c6a930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4516e6a8"/></to>
    </wire>
    <wire loc="157:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b6c44be87e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6c44c79740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6c44c79740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c451de710"/></to>
    </wire>
    <wire loc="168:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b6c44bf8af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6c44c87430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6c44c87430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45232710"/></to>
    </wire>
    <wire loc="179:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b6c44bfbaf0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6c44c96120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6c44c96120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c452b5710"/></to>
    </wire>
    <wire loc="138:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b6c44bd1af0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6c44c57020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6c44c57020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c450fd710"/></to>
    </wire>
    <wire loc="149:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b6c44be2af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6c44c67d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6c44c67d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45165710"/></to>
    </wire>
    <wire loc="160:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b6c44be5c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6c44c76bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6c44c76bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c451d4710"/></to>
    </wire>
    <wire loc="171:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b6c44bf4020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6c44c848c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6c44c848c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45250710"/></to>
    </wire>
    <wire loc="188:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b6c44c007e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6c44caba50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6c44caba50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45320710"/></to>
    </wire>
    <wire loc="194:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b6c44c077e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c44cf9020"/></to>
    </wire>
    <wire loc="174:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b6c44bf2348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6c44c8ca50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6c44c8ca50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4529c710"/></to>
    </wire>
    <wire loc="141:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b6c44bdb020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6c44c54430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6c44c54430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45115710"/></to>
    </wire>
    <wire loc="152:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b6c44bde1a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6c44c73120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6c44c73120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4517f710"/></to>
    </wire>
    <wire loc="192:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b6c44c094d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c44cf1ab0"/></to>
    </wire>
    <wire loc="155:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b6c44bea4d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6c44c7b500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6c44c7b500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c451be6a8"/></to>
    </wire>
    <wire loc="166:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b6c44bec7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6c44c8a120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6c44c8a120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45238710"/></to>
    </wire>
    <wire loc="177:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b6c44bfd7e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6c44c99e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6c44c99e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45293710"/></to>
    </wire>
    <wire loc="186:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b6c44c024d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6c44cad740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6c44cad740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c452fd710"/></to>
    </wire>
    <wire loc="144:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b6c44bd84d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6c44c618c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6c44c618c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4510c710"/></to>
    </wire>
    <wire loc="147:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b6c44bd67e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6c44c69a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6c44c69a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4516b710"/></to>
    </wire>
    <wire loc="158:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b6c44be7968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6c44c788c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6c44c788c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c451db710"/></to>
    </wire>
    <wire loc="169:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b6c44bf7c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6c44c865b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6c44c865b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4522e710"/></to>
    </wire>
    <wire loc="180:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b6c44bfac78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6c44c952a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6c44c952a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c452b2710"/></to>
    </wire>
    <wire loc="139:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b6c44bd0c78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6c44c56120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6c44c56120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c450fa710"/></to>
    </wire>
    <wire loc="150:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b6c44be1c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6c44c66e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6c44c66e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45161710"/></to>
    </wire>
    <wire loc="161:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b6c44be4e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6c44c74d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6c44c74d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c451d1710"/></to>
    </wire>
    <wire loc="189:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b6c44c0c968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6c44caabd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6c44caabd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4531d710"/></to>
    </wire>
    <wire loc="164:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b6c44bee1a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6c44c7de40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6c44c7de40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4523e6a8"/></to>
    </wire>
    <wire loc="175:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b6c44bff4d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6c44c9bbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6c44c9bbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45299710"/></to>
    </wire>
    <wire loc="184:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b6c44c041a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6c44c9d430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6c44c9d430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45303710"/></to>
    </wire>
    <wire loc="195:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b6c44c14968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c44d06180"/></to>
    </wire>
    <wire loc="142:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b6c44bda1a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6c44c635b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6c44c635b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45112710"/></to>
    </wire>
    <wire loc="153:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b6c44bdd348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6c44c722a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6c44c722a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4517c710"/></to>
    </wire>
    <wire loc="182:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b6c44bf9e00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6c44c9f1e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6c44c9f1e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c453096a8"/></to>
    </wire>
    <wire loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b6c44be9658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b6c44c7a5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2b6c44c7a5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c451bb710"/></to>
    </wire>
    <wire loc="167:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b6c44beb968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6c44c882a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6c44c882a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45235710"/></to>
    </wire>
    <wire loc="178:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b6c44bfc968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6c44c97020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6c44c97020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c452b9710"/></to>
    </wire>
    <wire loc="187:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b6c44c01658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6c44cac8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6c44cac8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c452fa710"/></to>
    </wire>
    <wire loc="137:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b6c44bc4878"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6c44c59dc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6c44c59dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c451006a8"/></to>
    </wire>
    <wire loc="148:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b6c44be3968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b6c44c68bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2b6c44c68bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45168710"/></to>
    </wire>
    <wire loc="159:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b6c44be6af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b6c44c77a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2b6c44c77a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c451d8710"/></to>
    </wire>
    <wire loc="170:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b6c44bf6e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b6c44c85740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2b6c44c85740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45253710"/></to>
    </wire>
    <wire loc="193:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b6c44c08658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c44cedc38"/></to>
    </wire>
    <wire loc="173:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b6c44bf31a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b6c44c8d930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2b6c44c8d930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c4529f6a8"/></to>
    </wire>
    <wire loc="162:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b6c44bef020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b6c44c83e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2b6c44c83e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c451ce710"/></to>
    </wire>
    <wire loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b6c44bcfe00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b6c44c552a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2b6c44c552a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c450f7710"/></to>
    </wire>
    <wire loc="151:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b6c44bdf020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b6c44c64020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2b6c44c64020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b6c45182710"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b6c44aba1c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c44b6d2b0"/></to>
    </wire>
    <wire loc="55:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b6c44b76758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b6c44b8d660"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6c44b932b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6c44fbd268"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c44df6470"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c44da19c0"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b6c44d9d850"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b6c44d9f488"/></to>
    </wire>
    <wire loc="102:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b6c44d9f488"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b6c44bc4878"/></to>
    </wire>
    <wire loc="55:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b6c44d9cae0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b6c44dd0688"/></to>
    </wire>
    <wire loc="103:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b6c44dd0688"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b6c44bd1af0"/></to>
    </wire>
    <wire loc="56:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b6c44db1c68"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b6c44dcf810"/></to>
    </wire>
    <wire loc="104:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b6c44dcf810"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b6c44bd0c78"/></to>
    </wire>
    <wire loc="112:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA6" scoped="" ref="0x2b6c44ddd518"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b6c44bd9348"/></to>
    </wire>
    <wire loc="116:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB1" scoped="" ref="0x2b6c44ddacb0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b6c44bd67e0"/></to>
    </wire>
    <wire loc="121:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB6" scoped="" ref="0x2b6c44dd3818"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x2b6c44bde1a0"/></to>
    </wire>
    <wire loc="127:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC3" scoped="" ref="0x2b6c44de3380"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x2b6c44be7968"/></to>
    </wire>
    <wire loc="138:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD5" scoped="" ref="0x2b6c44deecb0"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x2b6c44bf7c78"/></to>
    </wire>
    <wire loc="107:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA1" scoped="" ref="0x2b6c44dcdb38"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b6c44bd1af0"/></to>
    </wire>
    <wire loc="133:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD0" scoped="" ref="0x2b6c44df31b8"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x2b6c44bee1a0"/></to>
    </wire>
    <wire loc="144:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE2" scoped="" ref="0x2b6c44dfe818"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x2b6c44bff4d0"/></to>
    </wire>
    <wire loc="149:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE7" scoped="" ref="0x2b6c44df7380"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x2b6c44bfac78"/></to>
    </wire>
    <wire loc="125:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC1" scoped="" ref="0x2b6c44de5020"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x2b6c44be9658"/></to>
    </wire>
    <wire loc="110:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA4" scoped="" ref="0x2b6c44dc91b8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b6c44bdb020"/></to>
    </wire>
    <wire loc="119:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB4" scoped="" ref="0x2b6c44dd6380"/></from>
      <to><interface-ref name="PortB4" scoped="" ref="0x2b6c44be1c78"/></to>
    </wire>
    <wire loc="130:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC6" scoped="" ref="0x2b6c44de0cb0"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x2b6c44be4e00"/></to>
    </wire>
    <wire loc="136:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD3" scoped="" ref="0x2b6c44df0818"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x2b6c44beb968"/></to>
    </wire>
    <wire loc="147:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE5" scoped="" ref="0x2b6c44df9020"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x2b6c44bfc968"/></to>
    </wire>
    <wire loc="142:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE0" scoped="" ref="0x2b6c44dea380"/></from>
      <to><interface-ref name="PortE0" scoped="" ref="0x2b6c44bf31a0"/></to>
    </wire>
    <wire loc="113:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA7" scoped="" ref="0x2b6c44ddc818"/></from>
      <to><interface-ref name="PortA7" scoped="" ref="0x2b6c44bd84d0"/></to>
    </wire>
    <wire loc="122:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB7" scoped="" ref="0x2b6c44de89b0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b6c44bdd348"/></to>
    </wire>
    <wire loc="134:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD1" scoped="" ref="0x2b6c44df2380"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x2b6c44bed658"/></to>
    </wire>
    <wire loc="108:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA2" scoped="" ref="0x2b6c44dcce38"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b6c44bd0c78"/></to>
    </wire>
    <wire loc="117:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB2" scoped="" ref="0x2b6c44dd8020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b6c44be3968"/></to>
    </wire>
    <wire loc="128:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC4" scoped="" ref="0x2b6c44de2518"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x2b6c44be6af0"/></to>
    </wire>
    <wire loc="139:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD6" scoped="" ref="0x2b6c44dec020"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b6c44bf6e00"/></to>
    </wire>
    <wire loc="145:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE3" scoped="" ref="0x2b6c44dfd9b0"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x2b6c44bfe658"/></to>
    </wire>
    <wire loc="115:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB0" scoped="" ref="0x2b6c44ddb9b0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b6c44bd7658"/></to>
    </wire>
    <wire loc="111:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA5" scoped="" ref="0x2b6c44dc8380"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x2b6c44bda1a0"/></to>
    </wire>
    <wire loc="120:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB5" scoped="" ref="0x2b6c44dd5518"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x2b6c44bdf020"/></to>
    </wire>
    <wire loc="126:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC2" scoped="" ref="0x2b6c44de41b8"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x2b6c44be87e0"/></to>
    </wire>
    <wire loc="131:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC7" scoped="" ref="0x2b6c44dde020"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x2b6c44bef020"/></to>
    </wire>
    <wire loc="137:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD4" scoped="" ref="0x2b6c44def9b0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b6c44bf8af0"/></to>
    </wire>
    <wire loc="143:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE1" scoped="" ref="0x2b6c44de9518"/></from>
      <to><interface-ref name="PortE1" scoped="" ref="0x2b6c44bf2348"/></to>
    </wire>
    <wire loc="106:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA0" scoped="" ref="0x2b6c44dce9a0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b6c44bc4878"/></to>
    </wire>
    <wire loc="148:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE6" scoped="" ref="0x2b6c44df81b8"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x2b6c44bfbaf0"/></to>
    </wire>
    <wire loc="109:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedA3" scoped="" ref="0x2b6c44dca020"/></from>
      <to><interface-ref name="PortA3" scoped="" ref="0x2b6c44bcfe00"/></to>
    </wire>
    <wire loc="118:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedB3" scoped="" ref="0x2b6c44dd71b8"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b6c44be2af0"/></to>
    </wire>
    <wire loc="124:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC0" scoped="" ref="0x2b6c44de7cb0"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x2b6c44bea4d0"/></to>
    </wire>
    <wire loc="129:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedC5" scoped="" ref="0x2b6c44de1818"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x2b6c44be5c78"/></to>
    </wire>
    <wire loc="135:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD2" scoped="" ref="0x2b6c44df1518"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x2b6c44bec7e0"/></to>
    </wire>
    <wire loc="140:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedD7" scoped="" ref="0x2b6c44deb1b8"/></from>
      <to><interface-ref name="PortD7" scoped="" ref="0x2b6c44bf4020"/></to>
    </wire>
    <wire loc="146:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="LedE4" scoped="" ref="0x2b6c44dfccb0"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x2b6c44bfd7e0"/></to>
    </wire>
    <wire loc="170:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeRectangle" scoped="" ref="0x2b6c44e8d628"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c44aba1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="219:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeString" scoped="" ref="0x2b6c44ea7b68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c44aba1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeCircle" scoped="" ref="0x2b6c44e9d4d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c44aba1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="278:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeLine" scoped="" ref="0x2b6c44eab4d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c44aba1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="wait4Controller" scoped="" ref="0x2b6c44e5cd88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c44aba1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="356:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="writeBar" scoped="" ref="0x2b6c44ec7be0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c44aba1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <from><interface-ref name="clearScreenNB" scoped="" ref="0x2b6c44eb4d58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c44aba1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b6c44f0de30"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b6c44f1c4a0"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b6c44f1c4a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c4509c0c8"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c44f1f768"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c44f2b020"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b6c44f13980"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b6c450b0c38"/></to>
    </wire>
    <wire loc="35:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b6c44f2b020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c45035190"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b6c450965a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c4502cd88"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b6c45062020"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b6c44f23838"/></to>
    </wire>
    <wire loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b6c44f23838"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6c45035938"/></to>
    </wire>
    <wire loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b6c450afe48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b6c44f37e40"/></to>
    </wire>
    <wire loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b6c44f37e40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6c45031a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2b6c45031a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b6c453e1608"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2b6c45035190"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b6c453e6c70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2b6c45035938"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b6c453e5478"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c4540d710"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c44fbbe00"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b6c44fbbe00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b6c44fc7180"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c45408708"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c44fb3020"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c44fb3020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c44fc2160"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2b6c454076c0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6c44fb1020"/></to>
    </wire>
    <wire loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b6c44fb1020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b6c44fc1190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b6c454038c0"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b6c44fae218"/></to>
    </wire>
    <wire loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x2b6c44fae218"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2b6c44fbd958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2b6c4505e020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c44aba1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b6c450b3618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b6c44aba1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc" safe="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc" safe="">
      <documentation loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MyBlinkC" loc="1:MyBlinkC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/homes/mhartmann/baq/tinyos/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LCD128x64C" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <configuration/>
    </component>
    <component qname="LCD128x64P" loc="23:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <module/>
    </component>
    <component qname="MyBlinkAppC.Timer0" loc="44(MyBlinkAppC.Timer0):/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c44b33530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c44b33888"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b6c44f35c68"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0SyncC" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0SyncP" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in SYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in SYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in SYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;--> CHANGED TO SYNC-Mode(CPL_CLK)&#9;hglanzer&#10;--> AS0=0 in ASSR&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c44b33530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c44b33888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c44b33530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c44b33888"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c44b33530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c44b33888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b6c44c11ba0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b6c44c1b020" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b6c44c1b368" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b6c44c1f610" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b6c44c1f978" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b6c44c1fce0" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b6c44c1c060" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b6c44cb3020" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b6c44cb3388" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b6c44cb36f0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b6c44cb3a20" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncC" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc" abstract="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b6c44f35c68" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b6c44f35c68"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b6c44f32020" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncP" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b6c44f43410" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b6c44f43410"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b6c44f43700" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c4502b0a8" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c4502b0a8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c4505a020" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c4505a020"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b6c4505a330" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c450b1730" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c450b1730"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b6c44bae620" loc="58:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c44bae620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44bae970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b6c44baf220" loc="57:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b6c44baf220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b6c44baf570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b6c44bac380" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b6c44bac380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44bac6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c44bb1620" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c44bb1620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44bb1970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b6c44bb4618" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b6c44bb4618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b6c44bb4968"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b6c44bb4af0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b6c44bb4c78"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b6c44bb4e00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b6c44bac020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b6c44bc0ca0" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b6c44bc0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44bbf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c44bc0600" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c44bc0600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44bc0950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b6c44bbf398" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b6c44bbf398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44bbf6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b6c44bc6360" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b6c44bc6360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44bc66b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b6c44bb9b98" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b6c44bb9b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44bc6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b6c44bc2b08" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b6c44bc2b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44bc2e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b6c44bca8d8" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b6c44bca8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bcac28"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bcadb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bc2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bc21a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bc2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bc24b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bc2640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bc27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b6c44bc3698" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b6c44bc3698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44bc39e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b6c44c0baf0" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b6c44c0baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c0a5e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c0a770"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c0a8f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c0aa80"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c0ac08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c0ad90"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c09020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b6c44bed658" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b6c44bed658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bed9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bedb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bedcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bede40"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bec020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bec1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bec330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bec4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b6c44bfe658" loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b6c44bfe658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bfe9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bfeb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bfecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bfee40"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bfd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bfd1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bfd330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bfd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b6c44c03348" loc="94:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b6c44c03348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c03698"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c03820"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c039a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c03b30"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c03cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c03e40"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c02020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c021a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b6c44bd9348" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b6c44bd9348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bd9698"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bd9820"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bd99a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bd9b30"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bd9cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bd9e40"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bd8020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bd81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b6c44c05020" loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b6c44c05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c05370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c054f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c05680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c05808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c05990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c05b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c05ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c05e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b6c44bd7658" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b6c44bd7658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bd79a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bd7b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bd7cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bd7e40"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bd6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bd61a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bd6330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bd64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b6c44be87e0" loc="66:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b6c44be87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44be8b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44be8cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44be8e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44be7020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44be71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44be7330"/>
        <function-ref name="set" scoped="" ref="0x2b6c44be74b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44be7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b6c44bf8af0" loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b6c44bf8af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bf8e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bf7020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bf71a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bf7330"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bf74b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bf7640"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bf77c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bf7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b6c44bfbaf0" loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b6c44bfbaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bfbe40"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bfa020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bfa1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bfa330"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bfa4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bfa640"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bfa7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bfa950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b6c44bd1af0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b6c44bd1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bd1e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bd0020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bd01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bd0330"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bd04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bd0640"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bd07c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bd0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b6c44be2af0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b6c44be2af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44be2e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44be1020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44be11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44be1330"/>
        <function-ref name="get" scoped="" ref="0x2b6c44be14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44be1640"/>
        <function-ref name="set" scoped="" ref="0x2b6c44be17c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44be1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b6c44be5c78" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b6c44be5c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44be4020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44be41a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44be4330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44be44b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44be4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44be47c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44be4950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44be4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b6c44bf4020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b6c44bf4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bf4370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bf44f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bf4680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bf4808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bf4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bf4b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bf4ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bf4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b6c44c007e0" loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b6c44c007e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c00b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c00cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c00e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c0c020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c0c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c0c330"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c0c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c0c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b6c44c077e0" loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b6c44c077e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c07b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c07cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c07e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c14020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c141a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c14330"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c144b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c14640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b6c44bf2348" loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b6c44bf2348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bf2698"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bf2820"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bf29a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bf2b30"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bf2cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bf2e40"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bff020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bff1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b6c44bdb020" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b6c44bdb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bdb370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bdb4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bdb680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bdb808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bdb990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bdbb18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bdbca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bdbe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b6c44bde1a0" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b6c44bde1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bde4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bde678"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bde800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bde988"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bdeb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bdec98"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bdee20"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bdd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b6c44c094d0" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b6c44c094d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c09820"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c099a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c09b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c09cb8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c09e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c08020"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c081a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c08330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b6c44bea4d0" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b6c44bea4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bea820"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bea9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44beab30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44beacb8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44beae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44be9020"/>
        <function-ref name="set" scoped="" ref="0x2b6c44be91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44be9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b6c44bec7e0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b6c44bec7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44becb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44beccb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bece40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44beb020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44beb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44beb330"/>
        <function-ref name="set" scoped="" ref="0x2b6c44beb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44beb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b6c44bfd7e0" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b6c44bfd7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bfdb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bfdcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bfde40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bfc020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bfc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bfc330"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bfc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bfc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b6c44c024d0" loc="95:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b6c44c024d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c02820"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c029a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c02b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c02cb8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c02e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c01020"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c011a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c01330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b6c44bd84d0" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b6c44bd84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bd8820"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bd89a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bd8b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bd8cb8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bd8e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bd7020"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bd71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bd7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b6c44bd67e0" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b6c44bd67e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bd6b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bd6cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bd6e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44be3020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44be31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44be3330"/>
        <function-ref name="set" scoped="" ref="0x2b6c44be34b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44be3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b6c44be7968" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b6c44be7968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44be7cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44be7e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44be6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44be61a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44be6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44be64b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44be6640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44be67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b6c44bf7c78" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b6c44bf7c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bf6020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bf61a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bf6330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bf64b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bf6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bf67c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bf6950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bf6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b6c44bfac78" loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b6c44bfac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bf9020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bf91a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bf9330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bf94b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bf9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bf97c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bf9950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bf9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b6c44bd0c78" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b6c44bd0c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bcf020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bcf1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bcf330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bcf4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bcf640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bcf7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bcf950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bcfad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b6c44be1c78" loc="59:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b6c44be1c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44be00f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44be0278"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44be0400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44be0588"/>
        <function-ref name="get" scoped="" ref="0x2b6c44be0710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44be0898"/>
        <function-ref name="set" scoped="" ref="0x2b6c44be0a20"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44be0ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b6c44be4e00" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b6c44be4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bf11a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bf1330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bf14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bf1640"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bf17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bf1950"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bf1ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bf1c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b6c44c0c968" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b6c44c0c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c0ccb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c0ce40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c0b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c0b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c0b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c0b4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c0b640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c0b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b6c44bee1a0" loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b6c44bee1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bee6f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bee878"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44beea00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44beeb88"/>
        <function-ref name="get" scoped="" ref="0x2b6c44beed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bed020"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bed1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bed330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b6c44bff4d0" loc="84:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b6c44bff4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bff820"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bff9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bffb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bffcb8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bffe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bfe020"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bfe1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bfe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b6c44c041a0" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b6c44c041a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c044f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c04678"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c04800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c04988"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c04b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c04c98"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c04e20"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c03020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b6c44c14968" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b6c44c14968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c14cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c14e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c13020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c131a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c13330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c134b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c13640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c137c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b6c44bda1a0" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b6c44bda1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bda4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bda678"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bda800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bda988"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bdab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bdac98"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bdae20"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bd9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b6c44bdd348" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b6c44bdd348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bdd698"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bdd820"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bdd9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bddb30"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bddcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bdde40"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bea020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b6c44bf9e00" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b6c44bf9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c061a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c06330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c064b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c06640"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c067c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c06950"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c06ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c06c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b6c44be9658" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b6c44be9658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44be99a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44be9b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44be9cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44be9e40"/>
        <function-ref name="get" scoped="" ref="0x2b6c44be8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44be81a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44be8330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44be84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b6c44beb968" loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b6c44beb968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bebcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bebe40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bf8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bf81a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bf8330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bf84b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bf8640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bf87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b6c44bfc968" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b6c44bfc968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bfccb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bfce40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bfb020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bfb1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bfb330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bfb4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bfb640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bfb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b6c44c01658" loc="96:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b6c44c01658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c019a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c01b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c01cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c01e40"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c00020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c001a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c00330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c004b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b6c44bc4878" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b6c44bc4878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bc4bc8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bc4d50"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bd1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bd11a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bd1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bd14b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bd1640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bd17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b6c44be3968" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b6c44be3968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44be3cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44be3e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44be2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44be21a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44be2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44be24b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44be2640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44be27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b6c44be6af0" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b6c44be6af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44be6e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44be5020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44be51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44be5330"/>
        <function-ref name="get" scoped="" ref="0x2b6c44be54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44be5640"/>
        <function-ref name="set" scoped="" ref="0x2b6c44be57c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44be5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b6c44bf6e00" loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b6c44bf6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bf51a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bf5330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bf54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bf5640"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bf57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bf5950"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bf5ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bf5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b6c44c08658" loc="102:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b6c44c08658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c089a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c08b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c08cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c08e40"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c07020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c071a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c07330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c074b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b6c44bf31a0" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b6c44bf31a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bf34f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bf3678"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bf3800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bf3988"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bf3b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bf3c98"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bf3e20"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bf2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b6c44bef020" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b6c44bef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bef370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bef4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bef680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bef808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bef990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44befb18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44befca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44befe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b6c44bcfe00" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b6c44bcfe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bdc1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bdc330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bdc4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bdc640"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bdc7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bdc950"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bdcad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bdcc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b6c44bdf020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b6c44bdf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44bdf370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44bdf4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44bdf680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44bdf808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44bdf990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44bdfb18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44bdfca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44bdfe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6c44c56120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6c44c56120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c56470"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c565f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c56780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c56908"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c56a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c56c18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c56da0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6c44c635b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6c44c635b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c63908"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c63a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c63c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c63da0"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c62020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c621a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c62330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c624b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6c44c59dc0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6c44c59dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c58170"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c582f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c58480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c58608"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c58790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c58918"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c58aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c58c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6c44c552a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6c44c552a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c555f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c55780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c55908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c55a90"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c55c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c55da0"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c54020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6c44c62740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6c44c62740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c62a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c62c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c62da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c61020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c611a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c61330"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c614b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c61640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6c44c57020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6c44c57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c57370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c574f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c57680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c57808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c57990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c57b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c57ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c57e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6c44c54430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6c44c54430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c54780"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c54908"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c54a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c54c18"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c54da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c63020"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c631a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c63330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6c44c618c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6c44c618c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c61c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c61da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c60020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c601a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c60330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c604b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c60640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c607c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c451006a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c451006a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c451009f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45100b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45100d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c450ff020"/>
        <function-ref name="get" scoped="" ref="0x2b6c450ff1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c450ff330"/>
        <function-ref name="set" scoped="" ref="0x2b6c450ff4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c450ff640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c450fd710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c450fd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c450fda60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c450fdbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c450fdd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c450fc020"/>
        <function-ref name="get" scoped="" ref="0x2b6c450fc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c450fc330"/>
        <function-ref name="set" scoped="" ref="0x2b6c450fc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c450fc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c450fa710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c450fa710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c450faa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c450fabe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c450fad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c450f9020"/>
        <function-ref name="get" scoped="" ref="0x2b6c450f91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c450f9330"/>
        <function-ref name="set" scoped="" ref="0x2b6c450f94b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c450f9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c450f7710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c450f7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c450f7a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c450f7be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c450f7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c450f5020"/>
        <function-ref name="get" scoped="" ref="0x2b6c450f51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c450f5330"/>
        <function-ref name="set" scoped="" ref="0x2b6c450f54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c450f5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45115710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45115710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c45115a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45115be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45115d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45114020"/>
        <function-ref name="get" scoped="" ref="0x2b6c451141a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45114330"/>
        <function-ref name="set" scoped="" ref="0x2b6c451144b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45114640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45112710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45112710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c45112a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45112be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45112d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45111020"/>
        <function-ref name="get" scoped="" ref="0x2b6c451111a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45111330"/>
        <function-ref name="set" scoped="" ref="0x2b6c451114b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45111640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4510f710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4510f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4510fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4510fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4510fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4510e020"/>
        <function-ref name="get" scoped="" ref="0x2b6c4510e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4510e330"/>
        <function-ref name="set" scoped="" ref="0x2b6c4510e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4510e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4510c710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4510c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4510ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4510cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4510cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4510b020"/>
        <function-ref name="get" scoped="" ref="0x2b6c4510b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4510b330"/>
        <function-ref name="set" scoped="" ref="0x2b6c4510b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4510b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6c44c68bd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6c44c68bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c67020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c671a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c67330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c674b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c67640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c677c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c67950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c67ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6c44c64020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6c44c64020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c64370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c644f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c64680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c64808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c64990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c64b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c64ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c64e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6c44c6a930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6c44c6a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c6ac80"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c6ae08"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c69020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c691a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c69330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c694b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c69640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c697c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6c44c67d60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6c44c67d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c660d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c66260"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c663e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c66570"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c666f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c66880"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c66a08"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c66b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6c44c73120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6c44c73120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c73470"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c735f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c73780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c73908"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c73a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c73c18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c73da0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6c44c69a50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6c44c69a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c69da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c68020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c681a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c68330"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c684b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c68640"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c687c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c68950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6c44c66e18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6c44c66e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c651a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c65330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c654b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c65640"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c657c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c65950"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c65ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c65c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6c44c722a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6c44c722a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c725f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c72780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c72908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c72a90"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c72c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c72da0"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c71020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c711a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4516e6a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4516e6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4516e9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4516eb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4516ed08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4516d020"/>
        <function-ref name="get" scoped="" ref="0x2b6c4516d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4516d330"/>
        <function-ref name="set" scoped="" ref="0x2b6c4516d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4516d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4516b710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4516b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4516ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4516bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4516bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4516a020"/>
        <function-ref name="get" scoped="" ref="0x2b6c4516a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4516a330"/>
        <function-ref name="set" scoped="" ref="0x2b6c4516a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4516a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45168710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45168710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c45168a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45168be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45168d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45167020"/>
        <function-ref name="get" scoped="" ref="0x2b6c451671a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45167330"/>
        <function-ref name="set" scoped="" ref="0x2b6c451674b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45167640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45165710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45165710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c45165a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45165be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45165d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45163020"/>
        <function-ref name="get" scoped="" ref="0x2b6c451631a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45163330"/>
        <function-ref name="set" scoped="" ref="0x2b6c451634b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45163640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45161710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45161710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c45161a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45161be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45161d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45160020"/>
        <function-ref name="get" scoped="" ref="0x2b6c451601a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45160330"/>
        <function-ref name="set" scoped="" ref="0x2b6c451604b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45160640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45182710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45182710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c45182a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45182be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45182d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45181020"/>
        <function-ref name="get" scoped="" ref="0x2b6c451811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45181330"/>
        <function-ref name="set" scoped="" ref="0x2b6c451814b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45181640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4517f710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4517f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4517fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4517fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4517fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4517e020"/>
        <function-ref name="get" scoped="" ref="0x2b6c4517e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4517e330"/>
        <function-ref name="set" scoped="" ref="0x2b6c4517e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4517e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4517c710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4517c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4517ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4517cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4517cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4517b020"/>
        <function-ref name="get" scoped="" ref="0x2b6c4517b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4517b330"/>
        <function-ref name="set" scoped="" ref="0x2b6c4517b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4517b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6c44c79740" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6c44c79740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c79a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c79c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c79da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c78020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c781a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c78330"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c784b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c78640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6c44c76bd8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6c44c76bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c74020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c741a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c74330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c744b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c74640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c747c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c74950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c74ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6c44c7b500" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6c44c7b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c7b850"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c7b9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c7bb60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c7bce8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c7be70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c7a020"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c7a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c7a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6c44c788c8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6c44c788c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c78c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c78da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c77020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c771a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c77330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c774b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c77640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c777c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6c44c74d60" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6c44c74d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c830d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c83260"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c833e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c83570"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c836f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c83880"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c83a08"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c83b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6c44c7a5b8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6c44c7a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c7a908"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c7aa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c7ac18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c7ada0"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c79020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c791a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c79330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c794b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6c44c77a50" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6c44c77a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c77da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c76020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c761a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c76330"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c764b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c76640"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c767c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c76950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6c44c83e18" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6c44c83e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c821a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c82330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c824b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c82640"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c827c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c82950"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c82ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c82c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c451be6a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c451be6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c451be9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c451beb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c451bed08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c451bd020"/>
        <function-ref name="get" scoped="" ref="0x2b6c451bd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c451bd330"/>
        <function-ref name="set" scoped="" ref="0x2b6c451bd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c451bd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c451bb710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c451bb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c451bba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c451bbbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c451bbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c451ba020"/>
        <function-ref name="get" scoped="" ref="0x2b6c451ba1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c451ba330"/>
        <function-ref name="set" scoped="" ref="0x2b6c451ba4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c451ba640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c451de710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c451de710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c451dea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c451debe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c451ded70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c451dd020"/>
        <function-ref name="get" scoped="" ref="0x2b6c451dd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c451dd330"/>
        <function-ref name="set" scoped="" ref="0x2b6c451dd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c451dd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c451db710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c451db710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c451dba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c451dbbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c451dbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c451da020"/>
        <function-ref name="get" scoped="" ref="0x2b6c451da1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c451da330"/>
        <function-ref name="set" scoped="" ref="0x2b6c451da4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c451da640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c451d8710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c451d8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c451d8a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c451d8be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c451d8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c451d6020"/>
        <function-ref name="get" scoped="" ref="0x2b6c451d61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c451d6330"/>
        <function-ref name="set" scoped="" ref="0x2b6c451d64b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c451d6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c451d4710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c451d4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c451d4a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c451d4be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c451d4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c451d3020"/>
        <function-ref name="get" scoped="" ref="0x2b6c451d31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c451d3330"/>
        <function-ref name="set" scoped="" ref="0x2b6c451d34b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c451d3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c451d1710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c451d1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c451d1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c451d1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c451d1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c451d0020"/>
        <function-ref name="get" scoped="" ref="0x2b6c451d01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c451d0330"/>
        <function-ref name="set" scoped="" ref="0x2b6c451d04b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c451d0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c451ce710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c451ce710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c451cea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c451cebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c451ced70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c451cd020"/>
        <function-ref name="get" scoped="" ref="0x2b6c451cd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c451cd330"/>
        <function-ref name="set" scoped="" ref="0x2b6c451cd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c451cd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6c44c8a120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6c44c8a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c8a470"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c8a5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c8a780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c8a908"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c8aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c8ac18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c8ada0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c88020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6c44c865b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6c44c865b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c86908"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c86a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c86c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c86da0"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c85020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c851a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c85330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c854b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6c44c7de40" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6c44c7de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c7c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c7c348"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c7c4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c7c658"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c7c7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c7c968"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c7caf0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c7cc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6c44c882a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6c44c882a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c885f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c88780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c88908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c88a90"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c88c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c88da0"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c87020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c871a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6c44c85740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6c44c85740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c85a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c85c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c85da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c84020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c841a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c84330"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c844b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c84640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6c44c8b020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6c44c8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c8b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c8b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c8b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c8b808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c8b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c8bb18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c8bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c8be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6c44c87430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6c44c87430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c87780"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c87908"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c87a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c87c18"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c87da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c86020"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c861a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c86330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6c44c848c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6c44c848c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c84c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c84da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c93020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c931a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c93330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c934b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c93640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c937c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4523e6a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4523e6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4523e9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4523eb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4523ed08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4523d020"/>
        <function-ref name="get" scoped="" ref="0x2b6c4523d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4523d330"/>
        <function-ref name="set" scoped="" ref="0x2b6c4523d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4523d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4523b710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4523b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4523ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4523bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4523bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4523a020"/>
        <function-ref name="get" scoped="" ref="0x2b6c4523a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4523a330"/>
        <function-ref name="set" scoped="" ref="0x2b6c4523a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4523a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45238710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45238710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c45238a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45238be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45238d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45237020"/>
        <function-ref name="get" scoped="" ref="0x2b6c452371a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45237330"/>
        <function-ref name="set" scoped="" ref="0x2b6c452374b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45237640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45235710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45235710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c45235a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45235be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45235d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45234020"/>
        <function-ref name="get" scoped="" ref="0x2b6c452341a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45234330"/>
        <function-ref name="set" scoped="" ref="0x2b6c452344b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45234640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45232710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45232710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c45232a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45232be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45232d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45230020"/>
        <function-ref name="get" scoped="" ref="0x2b6c452301a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45230330"/>
        <function-ref name="set" scoped="" ref="0x2b6c452304b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45230640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4522e710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4522e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4522ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4522ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4522ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4522d020"/>
        <function-ref name="get" scoped="" ref="0x2b6c4522d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4522d330"/>
        <function-ref name="set" scoped="" ref="0x2b6c4522d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4522d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45253710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45253710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c45253a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45253be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45253d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45252020"/>
        <function-ref name="get" scoped="" ref="0x2b6c452521a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45252330"/>
        <function-ref name="set" scoped="" ref="0x2b6c452524b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45252640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45250710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45250710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c45250a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45250be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45250d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4524f020"/>
        <function-ref name="get" scoped="" ref="0x2b6c4524f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4524f330"/>
        <function-ref name="set" scoped="" ref="0x2b6c4524f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4524f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6c44c9bbd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6c44c9bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c9a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c9a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c9a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c9a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c9a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c9a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c9a950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c9aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6c44c97020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6c44c97020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c97370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c974f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c97680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c97808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c97990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c97b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c97ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c97e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6c44c8d930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6c44c8d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c8dc80"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c8de08"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c8c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c8c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c8c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c8c4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c8c640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c8c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6c44c9ad60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6c44c9ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c990d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c99260"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c993e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c99570"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c996f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c99880"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c99a08"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c99b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6c44c96120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6c44c96120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c96470"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c965f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c96780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c96908"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c96a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c96c18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c96da0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c95020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6c44c8ca50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6c44c8ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c8cda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c9b020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c9b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c9b330"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c9b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c9b640"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c9b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c9b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6c44c99e18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6c44c99e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c981a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c98330"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c984b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c98640"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c987c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c98950"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c98ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c98c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6c44c952a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6c44c952a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c955f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c95780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c95908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c95a90"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c95c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c95da0"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c94020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4529f6a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4529f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4529f9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4529fb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4529fd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4529e020"/>
        <function-ref name="get" scoped="" ref="0x2b6c4529e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4529e330"/>
        <function-ref name="set" scoped="" ref="0x2b6c4529e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4529e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4529c710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4529c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4529ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4529cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4529cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4529b020"/>
        <function-ref name="get" scoped="" ref="0x2b6c4529b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4529b330"/>
        <function-ref name="set" scoped="" ref="0x2b6c4529b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4529b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45299710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45299710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c45299a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45299be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45299d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45298020"/>
        <function-ref name="get" scoped="" ref="0x2b6c452981a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45298330"/>
        <function-ref name="set" scoped="" ref="0x2b6c452984b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45298640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45296710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45296710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c45296a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45296be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45296d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45295020"/>
        <function-ref name="get" scoped="" ref="0x2b6c452951a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45295330"/>
        <function-ref name="set" scoped="" ref="0x2b6c452954b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45295640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45293710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45293710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c45293a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45293be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45293d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45292020"/>
        <function-ref name="get" scoped="" ref="0x2b6c452921a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45292330"/>
        <function-ref name="set" scoped="" ref="0x2b6c452924b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45292640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c452b9710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c452b9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c452b9a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c452b9be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c452b9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c452b7020"/>
        <function-ref name="get" scoped="" ref="0x2b6c452b71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c452b7330"/>
        <function-ref name="set" scoped="" ref="0x2b6c452b74b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c452b7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c452b5710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c452b5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c452b5a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c452b5be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c452b5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c452b4020"/>
        <function-ref name="get" scoped="" ref="0x2b6c452b41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c452b4330"/>
        <function-ref name="set" scoped="" ref="0x2b6c452b44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c452b4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c452b2710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c452b2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c452b2a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c452b2be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c452b2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c452b1020"/>
        <function-ref name="get" scoped="" ref="0x2b6c452b11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c452b1330"/>
        <function-ref name="set" scoped="" ref="0x2b6c452b14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c452b1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b6c44c9d430" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b6c44c9d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c9d780"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c9d908"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c9da90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c9dc18"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c9dda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c9c020"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c9c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c9c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b6c44cac8c8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b6c44cac8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44cacc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44cacda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44cab020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44cab1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44cab330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44cab4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44cab640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44cab7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b6c44c9f1e8" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b6c44c9f1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c9f538"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c9f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c9f848"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c9f9d0"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c9fb58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c9fce0"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c9fe68"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c9e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b6c44c9c5b8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b6c44c9c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c9c908"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c9ca90"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c9cc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c9cda0"/>
        <function-ref name="get" scoped="" ref="0x2b6c44cad020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44cad1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44cad330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44cad4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b6c44caba50" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b6c44caba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44cabda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44caa020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44caa1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44caa330"/>
        <function-ref name="get" scoped="" ref="0x2b6c44caa4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44caa640"/>
        <function-ref name="set" scoped="" ref="0x2b6c44caa7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44caa950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b6c44c9e2a8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b6c44c9e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44c9e5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44c9e780"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44c9e908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44c9ea90"/>
        <function-ref name="get" scoped="" ref="0x2b6c44c9ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44c9eda0"/>
        <function-ref name="set" scoped="" ref="0x2b6c44c9d020"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44c9d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b6c44cad740" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b6c44cad740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44cada90"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44cadc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44cadda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44cac020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44cac1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44cac330"/>
        <function-ref name="set" scoped="" ref="0x2b6c44cac4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44cac640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b6c44caabd8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b6c44caabd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44ca8020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44ca81a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44ca8330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44ca84b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44ca8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44ca87c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44ca8950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44ca8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c453096a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c453096a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c453099f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45309b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45309d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45308020"/>
        <function-ref name="get" scoped="" ref="0x2b6c453081a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45308330"/>
        <function-ref name="set" scoped="" ref="0x2b6c453084b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45308640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45306710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45306710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c45306a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45306be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45306d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45305020"/>
        <function-ref name="get" scoped="" ref="0x2b6c453051a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45305330"/>
        <function-ref name="set" scoped="" ref="0x2b6c453054b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45305640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45303710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45303710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c45303a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45303be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45303d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45302020"/>
        <function-ref name="get" scoped="" ref="0x2b6c453021a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45302330"/>
        <function-ref name="set" scoped="" ref="0x2b6c453024b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45302640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45300710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45300710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c45300a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45300be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45300d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c452ff020"/>
        <function-ref name="get" scoped="" ref="0x2b6c452ff1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c452ff330"/>
        <function-ref name="set" scoped="" ref="0x2b6c452ff4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c452ff640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c452fd710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c452fd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c452fda60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c452fdbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c452fdd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c452fc020"/>
        <function-ref name="get" scoped="" ref="0x2b6c452fc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c452fc330"/>
        <function-ref name="set" scoped="" ref="0x2b6c452fc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c452fc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c452fa710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c452fa710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c452faa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c452fabe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c452fad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c45322020"/>
        <function-ref name="get" scoped="" ref="0x2b6c453221a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c45322330"/>
        <function-ref name="set" scoped="" ref="0x2b6c453224b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c45322640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c45320710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c45320710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c45320a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c45320be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c45320d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4531f020"/>
        <function-ref name="get" scoped="" ref="0x2b6c4531f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4531f330"/>
        <function-ref name="set" scoped="" ref="0x2b6c4531f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4531f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c4531d710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c4531d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c4531da60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c4531dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c4531dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c4531c020"/>
        <function-ref name="get" scoped="" ref="0x2b6c4531c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c4531c330"/>
        <function-ref name="set" scoped="" ref="0x2b6c4531c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c4531c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c44cb4ac0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c44cb4ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44cb4e10"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44cc2020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44cc21a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44cc2330"/>
        <function-ref name="get" scoped="" ref="0x2b6c44cc24b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44cc2640"/>
        <function-ref name="set" scoped="" ref="0x2b6c44cc27c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44cc2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c44cd1db8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c44cd1db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44cd0170"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44cd02f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44cd0480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44cd0608"/>
        <function-ref name="get" scoped="" ref="0x2b6c44cd0790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44cd0918"/>
        <function-ref name="set" scoped="" ref="0x2b6c44cd0aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44cd0c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c44ccb3e0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c44ccb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44ccb730"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44ccb8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44ccba40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44ccbbc8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44ccbd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44cca020"/>
        <function-ref name="set" scoped="" ref="0x2b6c44cca1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44cca330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c44cd87e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c44cd87e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44cd8b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44cd8cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44cd8e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44cd7020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44cd71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44cd7330"/>
        <function-ref name="set" scoped="" ref="0x2b6c44cd74b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44cd7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c44cd4c38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c44cd4c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44cd3020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44cd31a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44cd3330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44cd34b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44cd3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44cd37c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44cd3950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44cd3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c44ce0020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c44ce0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44ce0370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44ce04f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44ce0680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44ce0808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44ce0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44ce0b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44ce0ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44ce0e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c44cdb480" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c44cdb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44cdb7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44cdb958"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44cdbae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44cdbc68"/>
        <function-ref name="get" scoped="" ref="0x2b6c44cdbdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44cec020"/>
        <function-ref name="set" scoped="" ref="0x2b6c44cec1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44cec330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c44ce97e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c44ce97e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44ce9b38"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44ce9cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44ce9e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44ce8020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44ce81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44ce8330"/>
        <function-ref name="set" scoped="" ref="0x2b6c44ce84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44ce8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c44ce4970" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c44ce4970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44ce4cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44ce4e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44cf5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44cf51a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44cf5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44cf54b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44cf5640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44cf57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c44cf1ab0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c44cf1ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44cf1e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44cf0020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44cf01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44cf0330"/>
        <function-ref name="get" scoped="" ref="0x2b6c44cf04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44cf0640"/>
        <function-ref name="set" scoped="" ref="0x2b6c44cf07c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44cf0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c44cedc38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c44cedc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44cfe020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44cfe1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44cfe330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44cfe4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44cfe640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44cfe7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44cfe950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44cfead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c44cf9020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c44cf9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44cf9370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44cf94f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44cf9680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44cf9808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44cf9990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44cf9b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44cf9ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44cf9e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b6c44d06180" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b6c44d06180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44d064d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44d06658"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44d067e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44d06968"/>
        <function-ref name="get" scoped="" ref="0x2b6c44d06af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44d06c78"/>
        <function-ref name="set" scoped="" ref="0x2b6c44d06e00"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44d05020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c44d412c0" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c44d412c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b6c44ab2128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b6c44ab2128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44d41610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b6c44d418f0" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b6c44d418f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b6c44d41c40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b6c44d41dc8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b6c44d40020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b6c44d401a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b6c44d40330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b6c44d5e898" loc="60:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b6c44d5e898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44d5ebe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b6c44d5f198" loc="57:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b6c44d5f198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b6c44d5f4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b6c44d5e1d0" loc="59:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b6c44d5e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44d5e520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b6c44d5f7d0" loc="58:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b6c44d5f7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44d5fb20"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b6c44d5fca8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b6c44d5fe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b6c44aba1c8" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b6c44aba1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c44aba518"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c44aba6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b6c44ab7600" loc="47:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b6c44ab7600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44ab7950"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b6c44ab7ad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b6c44ab7c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b6c44b6d2b0" loc="56:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b6c44b6d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c44b6d600"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c44b6d788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b6c44b76758" loc="57:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b6c44b76758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b6c44b76aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b6c44b6e448" loc="55:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b6c44b6e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44b6e798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b6c44b6e920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b6c44b6eaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b6c44b932b0" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6c44b932b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b6c44b93600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b6c44b8d660" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b6c44b8d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b6c44b8d9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b6c44b96a80" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b6c44b96a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b6c44b96dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2b6c44d71578" loc="2:MyBlinkC.nc">
      <component-ref qname="MyBlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2b6c44d71578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c44b33530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c44b33888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44d6f8f0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44d70020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c44d70d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c44d708c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c44d6e1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c44d6fd40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c44d70470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c44d670f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c44d6f320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c44d67598"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44d67a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b6c44d6c0c0" loc="4:MyBlinkC.nc">
      <component-ref qname="MyBlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b6c44d6c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b6c44d6c410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LCD128x64" ref="0x2b6c44d8a330" loc="5:MyBlinkC.nc">
      <component-ref qname="MyBlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b6c44d8a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b6c44d8a680"/>
        <function-ref name="initDone" scoped="" ref="0x2b6c44d8a808"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b6c44d8a990"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b6c44d8ab18"/>
        <function-ref name="barWritten" scoped="" ref="0x2b6c44d8aca0"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b6c44d8ae28"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b6c44d74020"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b6c44d741a8"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b6c44d74330"/>
        <function-ref name="writeByte" scoped="" ref="0x2b6c44d744b8"/>
        <function-ref name="setPixel" scoped="" ref="0x2b6c44d74640"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b6c44d747c8"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b6c44d74950"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b6c44d74bd8"/>
        <function-ref name="writePixel" scoped="" ref="0x2b6c44d74d60"/>
        <function-ref name="initLCD" scoped="" ref="0x2b6c44d87020"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b6c44d871a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b6c44d75898" loc="3:MyBlinkC.nc">
      <component-ref qname="MyBlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c44d75898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c44d75be8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c44d75d70"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c44d6d020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c44d6d1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c44d6d330"/>
        <function-ref name="get" scoped="" ref="0x2b6c44d6d4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c44d6d640"/>
        <function-ref name="setPort" scoped="" ref="0x2b6c44d6d950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c44d6dde8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44d6d7c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c44d6dad8"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c44d6dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b6c44d68658" loc="46:/homes/mhartmann/baq/tinyos/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c44d68658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c44d689a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c44d68b30"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c44d68cb8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c44d68e40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c44da2020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44da21a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c44da2330"/>
        <function-ref name="setPort" scoped="" ref="0x2b6c44da2640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c44da2ad8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44da24b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c44da27c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c44da2950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b6c44d9d850" loc="50:/homes/mhartmann/baq/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b6c44d9d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44d9dba0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44d9dd28"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44d9c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44d9c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44d9c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44d9c4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44d9c640"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44d9c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c44da19c0" loc="46:/homes/mhartmann/baq/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c44da19c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44da1d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b6c44d9cae0" loc="51:/homes/mhartmann/baq/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b6c44d9cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44d9ce30"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44db1020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44db11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44db1330"/>
        <function-ref name="get" scoped="" ref="0x2b6c44db14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44db1640"/>
        <function-ref name="set" scoped="" ref="0x2b6c44db17c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44db1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b6c44d9e020" loc="47:/homes/mhartmann/baq/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b6c44d9e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b6c44d9e370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b6c44d9e4f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b6c44d9e680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b6c44d9e808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b6c44d9e990"/>
        <function-ref name="get" scoped="" ref="0x2b6c44d9eb18"/>
        <function-ref name="led1Off" scoped="" ref="0x2b6c44d9eca0"/>
        <function-ref name="setPort" scoped="" ref="0x2b6c44d9d020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b6c44d9d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44d9ee28"/>
        <function-ref name="led0On" scoped="" ref="0x2b6c44d9d1a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b6c44d9d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b6c44db1c68" loc="52:/homes/mhartmann/baq/tinyos/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b6c44db1c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44db0020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44db01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44db0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44db04b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44db0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44db07c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44db0950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44db0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA6" ref="0x2b6c44ddd518" loc="54:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA6" scoped="" ref="0x2b6c44ddd518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44ddd868"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44ddd9f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dddb78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44dddd00"/>
        <function-ref name="get" scoped="" ref="0x2b6c44ddc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44ddc1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44ddc330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44ddc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB1" ref="0x2b6c44ddacb0" loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB1" scoped="" ref="0x2b6c44ddacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44dd9170"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dd92f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dd9480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44dd9608"/>
        <function-ref name="get" scoped="" ref="0x2b6c44dd9790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44dd9918"/>
        <function-ref name="set" scoped="" ref="0x2b6c44dd9aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dd9c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB6" ref="0x2b6c44dd3818" loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB6" scoped="" ref="0x2b6c44dd3818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44dd3b68"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dd3cf0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dd3e78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44de8030"/>
        <function-ref name="get" scoped="" ref="0x2b6c44de81b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44de8340"/>
        <function-ref name="set" scoped="" ref="0x2b6c44de84c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44de8650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC3" ref="0x2b6c44de3380" loc="69:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC3" scoped="" ref="0x2b6c44de3380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44de36d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44de3858"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44de39e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44de3b68"/>
        <function-ref name="get" scoped="" ref="0x2b6c44de3cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44de3e78"/>
        <function-ref name="set" scoped="" ref="0x2b6c44de2030"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44de21b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b6c44d9f488" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b6c44d9f488"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44d9f7d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44d9f960"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44d9fae8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44d9fc70"/>
        <function-ref name="get" scoped="" ref="0x2b6c44d9fdf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44dd0020"/>
        <function-ref name="set" scoped="" ref="0x2b6c44dd01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dd0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD5" ref="0x2b6c44deecb0" loc="80:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD5" scoped="" ref="0x2b6c44deecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44ded0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44ded228"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44ded3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44ded538"/>
        <function-ref name="get" scoped="" ref="0x2b6c44ded6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44ded848"/>
        <function-ref name="set" scoped="" ref="0x2b6c44ded9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dedb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA1" ref="0x2b6c44dcdb38" loc="49:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA1" scoped="" ref="0x2b6c44dcdb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44dcc020"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dcc1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dcc330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44dcc4b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44dcc640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44dcc7c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44dcc950"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dccad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD0" ref="0x2b6c44df31b8" loc="75:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD0" scoped="" ref="0x2b6c44df31b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44df3508"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44df3690"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44df3818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44df39a0"/>
        <function-ref name="get" scoped="" ref="0x2b6c44df3b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44df3cb0"/>
        <function-ref name="set" scoped="" ref="0x2b6c44df3e38"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44df2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE2" ref="0x2b6c44dfe818" loc="86:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE2" scoped="" ref="0x2b6c44dfe818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44dfeb68"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dfecf0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dfee78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44dfd030"/>
        <function-ref name="get" scoped="" ref="0x2b6c44dfd1b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44dfd340"/>
        <function-ref name="set" scoped="" ref="0x2b6c44dfd4c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dfd650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE7" ref="0x2b6c44df7380" loc="91:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE7" scoped="" ref="0x2b6c44df7380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44df76d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44df7858"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44df79e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44df7b68"/>
        <function-ref name="get" scoped="" ref="0x2b6c44df7cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44df7e78"/>
        <function-ref name="set" scoped="" ref="0x2b6c44df6030"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44df61b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC1" ref="0x2b6c44de5020" loc="67:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC1" scoped="" ref="0x2b6c44de5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44de5370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44de54f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44de5680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44de5808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44de5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44de5b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44de5ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44de5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA4" ref="0x2b6c44dc91b8" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA4" scoped="" ref="0x2b6c44dc91b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44dc9508"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dc9690"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dc9818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44dc99a0"/>
        <function-ref name="get" scoped="" ref="0x2b6c44dc9b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44dc9cb0"/>
        <function-ref name="set" scoped="" ref="0x2b6c44dc9e38"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dc8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB4" ref="0x2b6c44dd6380" loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB4" scoped="" ref="0x2b6c44dd6380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44dd66d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dd6858"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dd69e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44dd6b68"/>
        <function-ref name="get" scoped="" ref="0x2b6c44dd6cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44dd6e78"/>
        <function-ref name="set" scoped="" ref="0x2b6c44dd5030"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dd51b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC6" ref="0x2b6c44de0cb0" loc="72:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC6" scoped="" ref="0x2b6c44de0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44ddf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44ddf228"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44ddf3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44ddf538"/>
        <function-ref name="get" scoped="" ref="0x2b6c44ddf6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44ddf848"/>
        <function-ref name="set" scoped="" ref="0x2b6c44ddf9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44ddfb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD3" ref="0x2b6c44df0818" loc="78:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD3" scoped="" ref="0x2b6c44df0818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44df0b68"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44df0cf0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44df0e78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44def030"/>
        <function-ref name="get" scoped="" ref="0x2b6c44def1b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44def340"/>
        <function-ref name="set" scoped="" ref="0x2b6c44def4c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44def650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE5" ref="0x2b6c44df9020" loc="89:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE5" scoped="" ref="0x2b6c44df9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44df9370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44df94f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44df9680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44df9808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44df9990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44df9b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44df9ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44df9e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE0" ref="0x2b6c44dea380" loc="84:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE0" scoped="" ref="0x2b6c44dea380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44dea6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dea858"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dea9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44deab68"/>
        <function-ref name="get" scoped="" ref="0x2b6c44deacf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44deae78"/>
        <function-ref name="set" scoped="" ref="0x2b6c44de9030"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44de91b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA7" ref="0x2b6c44ddc818" loc="55:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA7" scoped="" ref="0x2b6c44ddc818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44ddcb68"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44ddccf0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44ddce78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44ddb030"/>
        <function-ref name="get" scoped="" ref="0x2b6c44ddb1b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44ddb340"/>
        <function-ref name="set" scoped="" ref="0x2b6c44ddb4c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44ddb650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB7" ref="0x2b6c44de89b0" loc="64:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB7" scoped="" ref="0x2b6c44de89b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44de8d00"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44de7020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44de71a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44de7330"/>
        <function-ref name="get" scoped="" ref="0x2b6c44de74b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44de7640"/>
        <function-ref name="set" scoped="" ref="0x2b6c44de77c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44de7950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b6c44df6470" loc="93:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c44df6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44df67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b6c44dd0688" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b6c44dd0688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44dd09d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dd0b60"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dd0ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44dd0e70"/>
        <function-ref name="get" scoped="" ref="0x2b6c44dcf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44dcf1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44dcf330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dcf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD1" ref="0x2b6c44df2380" loc="76:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD1" scoped="" ref="0x2b6c44df2380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44df26d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44df2858"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44df29e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44df2b68"/>
        <function-ref name="get" scoped="" ref="0x2b6c44df2cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44df2e78"/>
        <function-ref name="set" scoped="" ref="0x2b6c44df1030"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44df11b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA2" ref="0x2b6c44dcce38" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA2" scoped="" ref="0x2b6c44dcce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44dcb1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dcb348"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dcb4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44dcb658"/>
        <function-ref name="get" scoped="" ref="0x2b6c44dcb7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44dcb968"/>
        <function-ref name="set" scoped="" ref="0x2b6c44dcbaf0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dcbc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB2" ref="0x2b6c44dd8020" loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB2" scoped="" ref="0x2b6c44dd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44dd8370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dd84f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dd8680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44dd8808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44dd8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44dd8b18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44dd8ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dd8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC4" ref="0x2b6c44de2518" loc="70:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC4" scoped="" ref="0x2b6c44de2518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44de2868"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44de29f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44de2b78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44de2d00"/>
        <function-ref name="get" scoped="" ref="0x2b6c44de1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44de11a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44de1330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44de14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD6" ref="0x2b6c44dec020" loc="81:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD6" scoped="" ref="0x2b6c44dec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44dec370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dec4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dec680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44dec808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44dec990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44decb18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44decca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dece28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE3" ref="0x2b6c44dfd9b0" loc="87:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE3" scoped="" ref="0x2b6c44dfd9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44dfdd00"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dfc020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dfc1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44dfc330"/>
        <function-ref name="get" scoped="" ref="0x2b6c44dfc4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44dfc640"/>
        <function-ref name="set" scoped="" ref="0x2b6c44dfc7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dfc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB0" ref="0x2b6c44ddb9b0" loc="57:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB0" scoped="" ref="0x2b6c44ddb9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44ddbd00"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dda020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dda1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44dda330"/>
        <function-ref name="get" scoped="" ref="0x2b6c44dda4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44dda640"/>
        <function-ref name="set" scoped="" ref="0x2b6c44dda7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dda950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA5" ref="0x2b6c44dc8380" loc="53:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA5" scoped="" ref="0x2b6c44dc8380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44dc86d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dc8858"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dc89e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44dc8b68"/>
        <function-ref name="get" scoped="" ref="0x2b6c44dc8cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44dc8e78"/>
        <function-ref name="set" scoped="" ref="0x2b6c44ddd030"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44ddd1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB5" ref="0x2b6c44dd5518" loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB5" scoped="" ref="0x2b6c44dd5518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44dd5868"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dd59f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dd5b78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44dd5d00"/>
        <function-ref name="get" scoped="" ref="0x2b6c44dd3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44dd31a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44dd3330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dd34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC2" ref="0x2b6c44de41b8" loc="68:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC2" scoped="" ref="0x2b6c44de41b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44de4508"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44de4690"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44de4818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44de49a0"/>
        <function-ref name="get" scoped="" ref="0x2b6c44de4b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44de4cb0"/>
        <function-ref name="set" scoped="" ref="0x2b6c44de4e38"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44de3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC7" ref="0x2b6c44dde020" loc="73:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC7" scoped="" ref="0x2b6c44dde020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44dde370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dde4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dde680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44dde808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44dde990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44ddeb18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44ddeca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44ddee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD4" ref="0x2b6c44def9b0" loc="79:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD4" scoped="" ref="0x2b6c44def9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44defd00"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dee020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dee1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44dee330"/>
        <function-ref name="get" scoped="" ref="0x2b6c44dee4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44dee640"/>
        <function-ref name="set" scoped="" ref="0x2b6c44dee7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dee950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE1" ref="0x2b6c44de9518" loc="85:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE1" scoped="" ref="0x2b6c44de9518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44de9868"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44de99f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44de9b78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44de9d00"/>
        <function-ref name="get" scoped="" ref="0x2b6c44dfe020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44dfe1a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44dfe330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dfe4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b6c44dcf810" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b6c44dcf810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44dcfb60"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dcfce8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dcfe70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44dce020"/>
        <function-ref name="get" scoped="" ref="0x2b6c44dce1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44dce330"/>
        <function-ref name="set" scoped="" ref="0x2b6c44dce4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dce640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA0" ref="0x2b6c44dce9a0" loc="48:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA0" scoped="" ref="0x2b6c44dce9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44dcecf0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dcee78"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dcd030"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44dcd1b8"/>
        <function-ref name="get" scoped="" ref="0x2b6c44dcd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44dcd4c8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44dcd650"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dcd7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE6" ref="0x2b6c44df81b8" loc="90:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE6" scoped="" ref="0x2b6c44df81b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44df8508"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44df8690"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44df8818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44df89a0"/>
        <function-ref name="get" scoped="" ref="0x2b6c44df8b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44df8cb0"/>
        <function-ref name="set" scoped="" ref="0x2b6c44df8e38"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44df7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedA3" ref="0x2b6c44dca020" loc="51:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedA3" scoped="" ref="0x2b6c44dca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44dca370"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dca4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dca680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44dca808"/>
        <function-ref name="get" scoped="" ref="0x2b6c44dca990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44dcab18"/>
        <function-ref name="set" scoped="" ref="0x2b6c44dcaca0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dcae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedB3" ref="0x2b6c44dd71b8" loc="60:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedB3" scoped="" ref="0x2b6c44dd71b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44dd7508"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dd7690"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dd7818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44dd79a0"/>
        <function-ref name="get" scoped="" ref="0x2b6c44dd7b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44dd7cb0"/>
        <function-ref name="set" scoped="" ref="0x2b6c44dd7e38"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dd6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC0" ref="0x2b6c44de7cb0" loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC0" scoped="" ref="0x2b6c44de7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44de60a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44de6228"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44de63b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44de6538"/>
        <function-ref name="get" scoped="" ref="0x2b6c44de66c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44de6848"/>
        <function-ref name="set" scoped="" ref="0x2b6c44de69d0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44de6b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedC5" ref="0x2b6c44de1818" loc="71:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedC5" scoped="" ref="0x2b6c44de1818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44de1d68"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44de0020"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44de01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44de0330"/>
        <function-ref name="get" scoped="" ref="0x2b6c44de04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44de0640"/>
        <function-ref name="set" scoped="" ref="0x2b6c44de07c8"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44de0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD2" ref="0x2b6c44df1518" loc="77:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD2" scoped="" ref="0x2b6c44df1518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44df1868"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44df19f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44df1b78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44df1d00"/>
        <function-ref name="get" scoped="" ref="0x2b6c44df0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44df01a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44df0330"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44df04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedD7" ref="0x2b6c44deb1b8" loc="82:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedD7" scoped="" ref="0x2b6c44deb1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44deb508"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44deb690"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44deb818"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44deb9a0"/>
        <function-ref name="get" scoped="" ref="0x2b6c44debb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44debcb0"/>
        <function-ref name="set" scoped="" ref="0x2b6c44debe38"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LedE4" ref="0x2b6c44dfccb0" loc="88:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedE4" scoped="" ref="0x2b6c44dfccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b6c44dfa0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b6c44dfa228"/>
        <function-ref name="toggle" scoped="" ref="0x2b6c44dfa3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b6c44dfa538"/>
        <function-ref name="get" scoped="" ref="0x2b6c44dfa6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b6c44dfa848"/>
        <function-ref name="set" scoped="" ref="0x2b6c44dfa9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b6c44dfab58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCD128x64" ref="0x2b6c44e1c8c8" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64C.nc">
      <component-ref qname="LCD128x64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b6c44e1c8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b6c44e1cc18"/>
        <function-ref name="initDone" scoped="" ref="0x2b6c44e1cda0"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b6c44e31020"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b6c44e311a8"/>
        <function-ref name="barWritten" scoped="" ref="0x2b6c44e31330"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b6c44e314b8"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b6c44e31640"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b6c44e317c8"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b6c44e31950"/>
        <function-ref name="writeByte" scoped="" ref="0x2b6c44e31ad8"/>
        <function-ref name="setPixel" scoped="" ref="0x2b6c44e31c60"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b6c44e31de8"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b6c44e30020"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b6c44e302a8"/>
        <function-ref name="writePixel" scoped="" ref="0x2b6c44e30430"/>
        <function-ref name="initLCD" scoped="" ref="0x2b6c44e305b8"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b6c44e30740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeRectangle" ref="0x2b6c44e8d628" loc="170:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeRectangle" scoped="" ref="0x2b6c44e8d628"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c44e8d978"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c44e8db00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LCD128x64" ref="0x2b6c44e4a690" loc="25:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LCD128x64" scoped="" ref="0x2b6c44e4a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="LCD128x64"/>
      </instance>
      <interface-functions>
        <function-ref name="startClearScreen" scoped="" ref="0x2b6c44e4a9e0"/>
        <function-ref name="initDone" scoped="" ref="0x2b6c44e4ab68"/>
        <function-ref name="startWriteBar" scoped="" ref="0x2b6c44e4acf0"/>
        <function-ref name="startWriteLine" scoped="" ref="0x2b6c44e4ae78"/>
        <function-ref name="barWritten" scoped="" ref="0x2b6c44e61030"/>
        <function-ref name="startWriteRectangle" scoped="" ref="0x2b6c44e611b8"/>
        <function-ref name="screenCleared" scoped="" ref="0x2b6c44e61340"/>
        <function-ref name="lineWritten" scoped="" ref="0x2b6c44e614c8"/>
        <function-ref name="startWriteString" scoped="" ref="0x2b6c44e61650"/>
        <function-ref name="writeByte" scoped="" ref="0x2b6c44e617d8"/>
        <function-ref name="setPixel" scoped="" ref="0x2b6c44e61960"/>
        <function-ref name="circleWritten" scoped="" ref="0x2b6c44e61ae8"/>
        <function-ref name="startWriteCircle" scoped="" ref="0x2b6c44e61c70"/>
        <function-ref name="rectangleWritten" scoped="" ref="0x2b6c44e60020"/>
        <function-ref name="writePixel" scoped="" ref="0x2b6c44e601a8"/>
        <function-ref name="initLCD" scoped="" ref="0x2b6c44e60330"/>
        <function-ref name="stringWritten" scoped="" ref="0x2b6c44e604b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeString" ref="0x2b6c44ea7b68" loc="219:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeString" scoped="" ref="0x2b6c44ea7b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c44ea6020"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c44ea61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeCircle" ref="0x2b6c44e9d4d8" loc="186:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeCircle" scoped="" ref="0x2b6c44e9d4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c44e9d828"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c44e9d9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeLine" ref="0x2b6c44eab4d8" loc="278:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeLine" scoped="" ref="0x2b6c44eab4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c44eab828"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c44eab9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="wait4Controller" ref="0x2b6c44e5cd88" loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="wait4Controller" scoped="" ref="0x2b6c44e5cd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c44e5b170"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c44e5b2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeBar" ref="0x2b6c44ec7be0" loc="356:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeBar" scoped="" ref="0x2b6c44ec7be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c44ec6020"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c44ec61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="clearScreenNB" ref="0x2b6c44eb4d58" loc="247:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64P.nc">
      <component-ref qname="LCD128x64P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="clearScreenNB" scoped="" ref="0x2b6c44eb4d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c44eb30d8"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c44eb3260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c44efa420" loc="45:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="MyBlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44efa420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c44b33530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c44b33888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c450be6c8"/>
        <function-ref name="fired" scoped="" ref="0x2b6c450c0db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c450bfad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c450bf688"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c450bc020"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c450beb18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c450bf238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c450c0020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c450be0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c450c04c0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c450c0960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b6c44f0de30" loc="49:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b6c44f0de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c44b33530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c44b33888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44f070c0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44f09798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c44f084d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c44f08088"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c44f07960"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c44f07510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c44f09be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c44f0a9e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c44f08aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c44f0ae80"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44f09348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b6c44f1c4a0" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b6c44f1c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c44b33530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c44b33888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44f186c8"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44f1bdb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c44f19ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c44f19688"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c44f17020"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c44f18b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c44f19238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c44f1b020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c44f180f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c44f1b4c0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44f1b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b6c44f13980" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b6c44f13980"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c44b33530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c44b33888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c44f15560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c44f1f768" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c44f1f768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44f1fab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b6c44f37e40" loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b6c44f37e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c44b33530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c44b33888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c44f3bbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c44f3a548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c44f3a0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c44f3a9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c44f2b020" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c44f2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c44f2b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b6c44f23838" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b6c44f23838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c44b33530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c44b33888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c44f21020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44f22020"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c44f22930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c44f224a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c44f214a8"/>
        <function-ref name="start" scoped="" ref="0x2b6c44f295e0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44f29ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6c45035938" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b6c45035938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c44b33530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c44b33888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c45031020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c45033088"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c45033998"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c45033510"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c450314a8"/>
        <function-ref name="start" scoped="" ref="0x2b6c450346b0"/>
        <function-ref name="stop" scoped="" ref="0x2b6c45034b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c45035190" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c45035190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b6c44ab3d88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b6c44ab3d88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c450354e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6c45031a90" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6c45031a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c44b33530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c44b33888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c45030828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c4502f190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c45030cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c4502f618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b6c45408708" loc="38:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c45408708"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b6c45408a58"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b6c45408be0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b6c45408d68"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b6c45407020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b6c454071a8"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c45407330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b6c453e5478" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b6c453e5478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c44b33530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c44b33888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c453e3b18"/>
        <function-ref name="fired" scoped="" ref="0x2b6c453e4b80"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c453e3510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c453e3088"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c453e1020"/>
        <function-ref name="start" scoped="" ref="0x2b6c453e4220"/>
        <function-ref name="stop" scoped="" ref="0x2b6c453e46f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b6c453e6c70" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b6c453e6c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b6c453e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b6c453e1608" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6c453e1608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c44b33530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c44b33888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c453e03a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c453e0cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c453e0830"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c4540d190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x2b6c454038c0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b6c454038c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b6c454024b8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b6c45403d98"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b6c45402020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b6c454021a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b6c45402330"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b6c45403c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b6c454076c0" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b6c454076c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b6c45403020"/>
        <function-ref name="fired" scoped="" ref="0x2b6c45405d08"/>
        <function-ref name="get" scoped="" ref="0x2b6c454053a8"/>
        <function-ref name="reset" scoped="" ref="0x2b6c454041f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c454034a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c45405830"/>
        <function-ref name="start" scoped="" ref="0x2b6c45404680"/>
        <function-ref name="stop" scoped="" ref="0x2b6c45404b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b6c4540d710" loc="37:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c4540d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b6c45409930"/>
        <function-ref name="test" scoped="" ref="0x2b6c45409020"/>
        <function-ref name="get" scoped="" ref="0x2b6c4540c3a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b6c45409db8"/>
        <function-ref name="getScale" scoped="" ref="0x2b6c454082f0"/>
        <function-ref name="reset" scoped="" ref="0x2b6c4540a1f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c4540cd08"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c454094a8"/>
        <function-ref name="set" scoped="" ref="0x2b6c4540c830"/>
        <function-ref name="start" scoped="" ref="0x2b6c4540a680"/>
        <function-ref name="stop" scoped="" ref="0x2b6c4540ab08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b6c44fb3020" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c44fb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b6c44fb3370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b6c44fb34f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b6c44fb3680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b6c44fb3808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b6c44fb3990"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c44fb3b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b6c44fae218" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b6c44fae218"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b6c44faed10"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b6c44fae6f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b6c44fae878"/>
        <function-ref name="countBusy" scoped="" ref="0x2b6c44faea00"/>
        <function-ref name="getAssr" scoped="" ref="0x2b6c44faeb88"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b6c44fae568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6c44fb1020" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b6c44fb1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b6c44faf7a8"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44fb0560"/>
        <function-ref name="get" scoped="" ref="0x2b6c44fb1ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b6c44fb09e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c44fafc30"/>
        <function-ref name="set" scoped="" ref="0x2b6c44fb0088"/>
        <function-ref name="start" scoped="" ref="0x2b6c44fb0e70"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44faf320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c44fbbe00" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44fbbe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b6c44fb40f8"/>
        <function-ref name="test" scoped="" ref="0x2b6c44fb5798"/>
        <function-ref name="get" scoped="" ref="0x2b6c44fb8a18"/>
        <function-ref name="setScale" scoped="" ref="0x2b6c44fb4580"/>
        <function-ref name="getScale" scoped="" ref="0x2b6c44fb4a58"/>
        <function-ref name="reset" scoped="" ref="0x2b6c44fb6980"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c44fb64f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c44fb5c20"/>
        <function-ref name="set" scoped="" ref="0x2b6c44fb6020"/>
        <function-ref name="start" scoped="" ref="0x2b6c44fb6e08"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44fb5310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b6c44fc2160" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b6c44fc2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b6c44fc24b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b6c44fc2638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b6c44fc27c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b6c44fc2948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b6c44fc2ad0"/>
        <function-ref name="setControl" scoped="" ref="0x2b6c44fc2c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b6c44fbd268" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b6c44fbd268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b6c44fbd5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2b6c44fbd958" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2b6c44fbd958"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2b6c44fbc4b8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2b6c44fbde30"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b6c44fbc020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b6c44fbc1a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b6c44fbc330"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2b6c44fbdca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b6c44fc1190" loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b6c44fc1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b6c44fbf930"/>
        <function-ref name="fired" scoped="" ref="0x2b6c44fc06d0"/>
        <function-ref name="get" scoped="" ref="0x2b6c44fc1d10"/>
        <function-ref name="reset" scoped="" ref="0x2b6c44fc0b58"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c44fbfdb8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44fc01f8"/>
        <function-ref name="start" scoped="" ref="0x2b6c44fbf020"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44fbf4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c44fc7180" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c44fc7180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b6c44fc4270"/>
        <function-ref name="test" scoped="" ref="0x2b6c44fc5930"/>
        <function-ref name="get" scoped="" ref="0x2b6c44fc7d00"/>
        <function-ref name="setScale" scoped="" ref="0x2b6c44fc46f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b6c44fc4bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b6c44fc6b58"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c44fc66d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b6c44fc5db8"/>
        <function-ref name="set" scoped="" ref="0x2b6c44fc61f8"/>
        <function-ref name="start" scoped="" ref="0x2b6c44fc5020"/>
        <function-ref name="stop" scoped="" ref="0x2b6c44fc54a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b6c4505e020" loc="74:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b6c4505e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c4505e370"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c4505e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b6c45062020" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b6c45062020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c44b33530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c44b33888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c4505f690"/>
        <function-ref name="fired" scoped="" ref="0x2b6c450616f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b6c4505f088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c45061b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b6c4505fb18"/>
        <function-ref name="start" scoped="" ref="0x2b6c45062d70"/>
        <function-ref name="stop" scoped="" ref="0x2b6c45061270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c4502cd88" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c4502cd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c44b33530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c44b33888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c45063088"/>
        <function-ref name="fired" scoped="" ref="0x2b6c450466c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c45064470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c45064020"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c45063928"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c450634d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c45046b18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c45047908"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c45064a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c45047da8"/>
        <function-ref name="stop" scoped="" ref="0x2b6c45046278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b6c450b3618" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b6c450b3618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b6c450b3968"/>
        <function-ref name="runTask" scoped="" ref="0x2b6c450b3af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b6c450965a0" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b6c450965a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c44b33530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c44b33888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c450b48f0"/>
        <function-ref name="fired" scoped="" ref="0x2b6c450b5020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c450b5d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c450b58c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c450b31c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c450b4d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c450b5470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c450b7118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c450b4320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c450b75b8"/>
        <function-ref name="stop" scoped="" ref="0x2b6c450b7a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b6c4509c0c8" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b6c4509c0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c44b33530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c44b33888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b6c45098610"/>
        <function-ref name="fired" scoped="" ref="0x2b6c4509ba48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b6c45099900"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b6c45099490"/>
        <function-ref name="getdt" scoped="" ref="0x2b6c45096020"/>
        <function-ref name="gett0" scoped="" ref="0x2b6c45098a80"/>
        <function-ref name="isRunning" scoped="" ref="0x2b6c45099020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b6c4509cc30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b6c45098020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b6c4509b118"/>
        <function-ref name="stop" scoped="" ref="0x2b6c4509b5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b6c450b0c38" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b6c450b0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c44b33530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c44b33888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c450af820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b6c450afe48" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b6c450afe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b6c44b33530"/>
            <typename><typedef-ref name="TMilli" ref="0x2b6c44b33888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b6c450c7be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b6c450c6548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b6c450c60c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b6c450c69d0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b6c44bae178" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c44abdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b6c44ba6e08" loc="60:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b6c44bb4290" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c448b5378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b6c44bb4020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b6c44bb8940" loc="31:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="27:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b6c448b5378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b6c44bb7378" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b6c44bb7108" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b6c44bb7e00" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b6c44bb7b90" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b6c44bb6698" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b6c44bcb0d8" loc="44:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b6c44bcb7a0" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c44ab44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b6c44bcc328" loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b6c44bca570" loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c44ab44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6c44bcc9c8" loc="43:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c44ab44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b6c44bcbe58" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6c44bce5a8" loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b6c44bcec18" loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b6c44ab93a0" loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b6c44ab7290" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b6c44ab9ab8" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c44ab44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b6c44ac3070" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b6c44abdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b6c44ac3860" loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b6c44b76450" loc="76:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b6c44b8cd28" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b6c44b121a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b6c44b966d8" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c44d65338" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c44d65338"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b6c44d72020" loc="136:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b6c44d63710" loc="83:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b6c44d605b8" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b6c44d60020" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b6c44d60338" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b6c44d627b8" loc="98:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c44ab44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b6c44d71020" loc="151:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b6c44d72740" loc="144:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b6c44d62020" loc="92:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c44ab44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b6c44d65e08" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b6c44d65b98" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b6c44d735b8" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b6c44d73020" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b6c44d73338" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b6c44d648a0" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b6c44d64630" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c44d63070" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LCD128x64" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
      <function command="" provided="0" name="startClearScreen" ref="0x2b6c44d8e020" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b6c44d90c98" loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x2b6c44d8e690" loc="38:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteBar" ref="0x2b6c44d81148" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b6c44d82528" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b6c44d82828" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b6c44d82b58" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
          <variable name="width" ref="0x2b6c44d82e80" loc="26:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteLine" ref="0x2b6c44d905e0" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b6c44d91958" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b6c44d91c58" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
          <variable name="xEnd" ref="0x2b6c44d90020" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
          <variable name="yEnd" ref="0x2b6c44d90340" loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="barWritten" ref="0x2b6c44d8c9a8" loc="48:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteRectangle" ref="0x2b6c44d7f3a8" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b6c44d817e0" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b6c44d81ae0" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
          <variable name="a" ref="0x2b6c44d81de0" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
          <variable name="b" ref="0x2b6c44d7f108" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="screenCleared" ref="0x2b6c44d8a098" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="lineWritten" ref="0x2b6c44d8c328" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteString" ref="0x2b6c44d912f0" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b6c44d7ea28" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x2b6c44d7ed28" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b6c44d91060" loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="writeByte" ref="0x2b6c44d852b0" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b6c44d868e8" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b6c44d86be8" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b6c44d85020" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x2b6c44d83e80" loc="20:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b6c44d83900" loc="20:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b6c44d83c00" loc="20:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="circleWritten" ref="0x2b6c44d8ed30" loc="40:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startWriteCircle" ref="0x2b6c44d7e398" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="xcenter" ref="0x2b6c44d7fa60" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
          <variable name="ycenter" ref="0x2b6c44d7fd98" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
          <variable name="radius" ref="0x2b6c44d7e108" loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rectangleWritten" ref="0x2b6c44d8dc28" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writePixel" ref="0x2b6c44d832b0" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b6c44d85910" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
          <variable name="y" ref="0x2b6c44d85c10" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
          <variable name="on" ref="0x2b6c44d83020" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initLCD" ref="0x2b6c44d86290" loc="4:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x2b6c44d86020" loc="4:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stringWritten" ref="0x2b6c44d8d468" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/lcd128x64/LCD128x64.nc">
        <interfacedef-ref qname="LCD128x64"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b6c44d7b070" loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b6c44d7b7a8" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b6c44d7a020" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b6c44d7ae70" loc="83:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b6c44d78480" loc="100:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6c44d78c18" loc="117:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b6c44d7a738" loc="77:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6c44d76768" loc="134:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b6c44d764f8" loc="134:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPort" ref="0x2b6c44d75600" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b6c44d75060" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
          <variable name="pval" ref="0x2b6c44d75380" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b6c44d7d900" loc="56:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b6c44d79608" loc="89:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b6c44d79d20" loc="94:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c44f17bf0" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c44f17bf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b6c44f134c8" loc="61:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b6c448b5db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c44f393f8" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c44f393f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b6c44f39628" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44f39628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b6c44f38020" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44f39628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b6c44f37070" loc="76:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b6c44f38838" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c44ab44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b6c44f37760" loc="82:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b6c44f2be18" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b6c44f2be18"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b6c44f28068" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44f28068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b6c44f24958" loc="109:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44f28068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b6c44f26a78" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b6c44f24020" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44f28068"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44f28068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b6c44f25a08" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44f28068"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b6c44f25d28" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44f28068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b6c44f25258" loc="88:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c44ab44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b6c44f23110" loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44f28068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b6c44f28b28" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44f28068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b6c44f288b8" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44f28068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c44f26328" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b6c44f4aa58" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44b3fa08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b6c44b3fe10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b6c44f60e18" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44b4c100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b6c44b4c508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b6c44f62c70" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44b43980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b6c44b43d88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b6c44f60678" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44b43980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b6c44b43d88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b6c44f60408" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44b43980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b6c44b43d88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b6c44f5f828" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44b4c100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b6c44b4c508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b6c44f5f5b8" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44b4c100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b6c44b4c508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b6c44f624c8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44b3fa08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b6c44b3fe10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b6c44f62258" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44b3fa08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b6c44b3fe10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerSync" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer0Synchronous" ref="0x2b6c44f6d328" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBusy" ref="0x2b6c44f6da30" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b6c44f6c258" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b6c44f6ca08" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b6c44f6f110" loc="28:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="24:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44b46118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b6c44b46520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b6c44f6fac0" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44b46118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b6c44b46520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b6c44f6f850" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b6c44b46118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b6c44b46520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b6c44f5d068" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44f5d068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b6c44f59738" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c44ab44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b6c44f5c9d0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6c44f5d920" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44f5d068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b6c44f5a110" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b6c44f58020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c44ab44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6c44f5c290" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44f5d068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b6c44f5c020" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b6c44f5d068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b6c44f5a808" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c44f59020" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b6c44f54418" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b6c44f54418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b6c44f4f900" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b6c44f51a40" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c44ab44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b6c44f54cb8" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b6c44f54418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b6c44f4e290" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b6c44f4e020" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b6c44f4ea10" loc="110:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="106:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b6c448b3910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b6c44f524c0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b6c44f53d50" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b6c44f4f1d8" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b6c44ab44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b6c44f53630" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b6c44f54418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b6c44f533c0" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b6c44f54418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b6c44f52bb8" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b6c44f51328" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
