<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="13:SPITestAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ab3855b2a10"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ab3855af220"/></to>
    </wire>
    <wire loc="72:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ab3855af220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ab38575f198"/></to>
    </wire>
    <wire loc="14:SPITestAppC.nc">
      <from><interface-ref name="Button0" scoped="" ref="0x2ab385767108"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x2ab3855df020"/></to>
    </wire>
    <wire loc="151:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2ab3855df020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ab385664020"/></to>
    </wire>
    <wire loc="15:SPITestAppC.nc">
      <from><interface-ref name="Button1" scoped="" ref="0x2ab385766390"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x2ab3855de1a0"/></to>
    </wire>
    <wire loc="152:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2ab3855de1a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ab385673120"/></to>
    </wire>
    <wire loc="16:SPITestAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2ab38576fc08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab385781420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2ab385781420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ab38578d7d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:SPITestAppC.nc">
      <from><interface-ref name="Resource0" scoped="" ref="0x2ab38577ae58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab38594ed78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2ab38594ed78"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab385944ac8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:SPITestAppC.nc">
      <from><interface-ref name="SoftSPI0" scoped="" ref="0x2ab385777458"/></from>
      <to><interface-ref name="SoftSPI" scoped="" ref="0x2ab38594e618"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftSPI" scoped="" ref="0x2ab38594e618"/></from>
      <to><interface-ref name="SoftSPI" scoped="" ref="0x2ab38594adb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:SPITestAppC.nc">
      <from><interface-ref name="Resource1" scoped="" ref="0x2ab385777cb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab385a07580"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2ab385a07580"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab385944ac8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:SPITestAppC.nc">
      <from><interface-ref name="SoftSPI1" scoped="" ref="0x2ab38577da28"/></from>
      <to><interface-ref name="SoftSPI" scoped="" ref="0x2ab385a08d80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftSPI" scoped="" ref="0x2ab385a08d80"/></from>
      <to><interface-ref name="SoftSPI" scoped="" ref="0x2ab38594adb8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab3855ae620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab385da19f0"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab3855ae620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab3857980f0"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ab38575f7d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ab3854b7600"/></to>
    </wire>
    <wire loc="53:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ab3854b7600"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ab38556e448"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ab38575e1d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab3855b1620"/></to>
    </wire>
    <wire loc="58:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ab3855b1620"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab3855c0600"/></to>
    </wire>
    <wire loc="71:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab38575e898"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2ab3855ae620"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ab3855b4618"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ab3857418f0"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2ab3855bf398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab3857412c0"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2ab3855c0ca0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2ab3855b9b98"/></to>
    </wire>
    <wire loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ab3855b9b98"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2ab3855c3698"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2ab3855c6360"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2ab3855ac380"/></to>
    </wire>
    <wire loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2ab3855c2b08"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2ab3855c6360"/></to>
    </wire>
    <wire loc="191:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2ab38560baf0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab3856e4970"/></to>
    </wire>
    <wire loc="165:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2ab3855ed658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ab38568b020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2ab38568b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385b69710"/></to>
    </wire>
    <wire loc="176:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2ab3855fe658"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ab38569ad60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2ab38569ad60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385bdb710"/></to>
    </wire>
    <wire loc="185:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2ab385603348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ab38569c5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2ab38569c5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385c5d710"/></to>
    </wire>
    <wire loc="143:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2ab3855d9348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ab385662740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2ab385662740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385a4c710"/></to>
    </wire>
    <wire loc="183:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2ab385605020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ab38569e2a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2ab38569e2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385c3b710"/></to>
    </wire>
    <wire loc="146:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2ab3855d7658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ab38566a930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2ab38566a930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385a996a8"/></to>
    </wire>
    <wire loc="157:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2ab3855e87e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ab385679740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2ab385679740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385b1a710"/></to>
    </wire>
    <wire loc="168:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2ab3855f8af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ab385687430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2ab385687430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385b83710"/></to>
    </wire>
    <wire loc="179:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2ab3855fbaf0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ab385696120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2ab385696120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385bf7710"/></to>
    </wire>
    <wire loc="138:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2ab3855d1af0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ab385657020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2ab385657020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385a3c710"/></to>
    </wire>
    <wire loc="149:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2ab3855e2af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ab385667d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2ab385667d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385ab1710"/></to>
    </wire>
    <wire loc="160:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2ab3855e5c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ab385676bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2ab385676bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385b10710"/></to>
    </wire>
    <wire loc="171:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2ab3855f4020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ab3856848c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2ab3856848c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385b9e710"/></to>
    </wire>
    <wire loc="188:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2ab3856007e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ab3856aba50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2ab3856aba50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385c53710"/></to>
    </wire>
    <wire loc="194:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2ab3856077e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab3856f9020"/></to>
    </wire>
    <wire loc="174:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2ab3855f2348"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ab38568ca50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2ab38568ca50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385be1710"/></to>
    </wire>
    <wire loc="141:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2ab3855db020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ab385654430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2ab385654430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385a52710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2ab385673120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385aca710"/></to>
    </wire>
    <wire loc="192:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2ab3856094d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab3856f1ab0"/></to>
    </wire>
    <wire loc="155:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2ab3855ea4d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ab38567b500"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2ab38567b500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385b206a8"/></to>
    </wire>
    <wire loc="166:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2ab3855ec7e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ab38568a120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2ab38568a120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385b8a710"/></to>
    </wire>
    <wire loc="177:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2ab3855fd7e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ab385699e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2ab385699e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385bfd710"/></to>
    </wire>
    <wire loc="186:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2ab3856024d0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ab3856ad740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2ab3856ad740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385c5a710"/></to>
    </wire>
    <wire loc="144:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2ab3855d84d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ab3856618c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2ab3856618c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385a49710"/></to>
    </wire>
    <wire loc="147:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2ab3855d67e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ab385669a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2ab385669a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385ab8710"/></to>
    </wire>
    <wire loc="158:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2ab3855e7968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ab3856788c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2ab3856788c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385b16710"/></to>
    </wire>
    <wire loc="169:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2ab3855f7c78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ab3856865b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2ab3856865b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385b80710"/></to>
    </wire>
    <wire loc="180:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2ab3855fac78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ab3856952a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2ab3856952a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385bf4710"/></to>
    </wire>
    <wire loc="139:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2ab3855d0c78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ab385656120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2ab385656120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385a58710"/></to>
    </wire>
    <wire loc="150:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2ab3855e1c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ab385666e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2ab385666e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385aae710"/></to>
    </wire>
    <wire loc="161:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2ab3855e4e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ab385674d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2ab385674d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385b30710"/></to>
    </wire>
    <wire loc="189:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2ab38560c968"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ab3856aabd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2ab3856aabd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385c50710"/></to>
    </wire>
    <wire loc="164:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2ab3855ee1a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ab38567de40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2ab38567de40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385b6c6a8"/></to>
    </wire>
    <wire loc="175:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2ab3855ff4d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ab38569bbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2ab38569bbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385bde710"/></to>
    </wire>
    <wire loc="184:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2ab3856041a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ab38569d430"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2ab38569d430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385c38710"/></to>
    </wire>
    <wire loc="195:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2ab385614968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385706180"/></to>
    </wire>
    <wire loc="142:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2ab3855da1a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ab3856635b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2ab3856635b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385a4f710"/></to>
    </wire>
    <wire loc="153:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2ab3855dd348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ab3856722a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2ab3856722a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385ac7710"/></to>
    </wire>
    <wire loc="182:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2ab3855f9e00"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ab38569f1e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2ab38569f1e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385c3e6a8"/></to>
    </wire>
    <wire loc="156:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2ab3855e9658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ab38567a5b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x2ab38567a5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385b1d710"/></to>
    </wire>
    <wire loc="167:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2ab3855eb968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ab3856882a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2ab3856882a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385b87710"/></to>
    </wire>
    <wire loc="178:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2ab3855fc968"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ab385697020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2ab385697020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385bfa710"/></to>
    </wire>
    <wire loc="187:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2ab385601658"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ab3856ac8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2ab3856ac8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385c56710"/></to>
    </wire>
    <wire loc="137:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2ab3855c4878"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ab385659dc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2ab385659dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385a3f710"/></to>
    </wire>
    <wire loc="148:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2ab3855e3968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ab385668bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x2ab385668bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385ab5710"/></to>
    </wire>
    <wire loc="159:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2ab3855e6af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ab385677a50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x2ab385677a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385b13710"/></to>
    </wire>
    <wire loc="170:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2ab3855f6e00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ab385685740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x2ab385685740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385b7d710"/></to>
    </wire>
    <wire loc="193:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2ab385608658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab3856edc38"/></to>
    </wire>
    <wire loc="173:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2ab3855f31a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ab38568d930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x2ab38568d930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385be46a8"/></to>
    </wire>
    <wire loc="162:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2ab3855ef020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ab385683e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x2ab385683e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385b2d710"/></to>
    </wire>
    <wire loc="140:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2ab3855cfe00"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ab3856552a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x2ab3856552a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385a55710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x2ab385664020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab385aab710"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2ab3854ba1c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab38556d2b0"/></to>
    </wire>
    <wire loc="55:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2ab385576758"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2ab38558d660"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2ab3855932b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2ab38584b268"/></to>
    </wire>
    <wire loc="54:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2ab38578d7d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ab385798de8"/></to>
    </wire>
    <wire loc="61:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2ab385798de8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab385921020"/></to>
    </wire>
    <wire loc="59:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ab3857980f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab3857a4b90"/></to>
    </wire>
    <wire loc="65:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2ab3857a3338"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ab385930c38"/></to>
    </wire>
    <wire loc="35:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ab3857a4b90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab3858b0190"/></to>
    </wire>
    <wire loc="62:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2ab38591b208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab3858d1ab0"/></to>
    </wire>
    <wire loc="63:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ab3858ccc70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2ab3857ae748"/></to>
    </wire>
    <wire loc="36:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2ab3857ae748"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ab3858b0938"/></to>
    </wire>
    <wire loc="66:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ab38592fe48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2ab3857bce40"/></to>
    </wire>
    <wire loc="37:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2ab3857bce40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ab3858ada90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x2ab3858ada90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ab385d2bce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x2ab3858b0190"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab385d2f438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x2ab3858b0938"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ab385d2fbe0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x2ab385d28020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab385836e00"/></to>
    </wire>
    <wire loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ab385836e00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab38583d180"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2ab385d24e70"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ab38582e020"/></to>
    </wire>
    <wire loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2ab38582e020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ab385838160"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x2ab385d22d20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ab38582d020"/></to>
    </wire>
    <wire loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ab38582d020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ab38584e190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerSync" scoped="" ref="0x2ab385d1fdb0"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2ab385841218"/></to>
    </wire>
    <wire loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x2ab385841218"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x2ab38584b958"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x2ab3858e2cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab3854ba1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2ab385932478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab3854ba1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ab385a0a998"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ab38595fce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ab38595da50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ab385a09120"/></to>
    </wire>
    <wire loc="24:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ab38595fce0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ab3859d6398"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ab3859d6398"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ab385d9dd58"/></to>
    </wire>
    <wire loc="22:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <from><interface-ref name="SoftSPI" scoped="" ref="0x2ab38594adb8"/></from>
      <to><interface-ref name="SoftSPIMaster" scoped="" ref="0x2ab385959050"/></to>
    </wire>
    <wire loc="23:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ab385944ac8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab3859d7670"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x2ab3859d7670"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab385d9d060"/></to>
    </wire>
    <wire loc="25:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ab3859d4020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ab38595da50"/></to>
    </wire>
    <wire loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ab385955798"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ab3859d5700"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ab3859d5700"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ab385d9b0e0"/></to>
    </wire>
    <wire loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <from><interface-ref name="SoftSPI" scoped="" ref="0x2ab3859597f8"/></from>
      <to><interface-ref name="SoftSPI" scoped="" ref="0x2ab3859ea128"/></to>
    </wire>
    <wire loc="30:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <from><interface-ref name="spiSCK" scoped="" ref="0x2ab3859f1ad0"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x2ab3855eb968"/></to>
    </wire>
    <wire loc="31:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <from><interface-ref name="spiMISO" scoped="" ref="0x2ab3859ec020"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2ab3855f8af0"/></to>
    </wire>
    <wire loc="32:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <from><interface-ref name="spiMOSI" scoped="" ref="0x2ab3859eecc0"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x2ab3855f7c78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ab3859d6ad8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ab385d9c4c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ab385d9b980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ab3859d4020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x2ab385d9a130"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2ab385da0020"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x2ab385d98470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab3854ba1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ab385a052a8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ab38595fce0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ab38595da50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ab385a05a08"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <documentation loc="45:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc" safe="">
      <documentation loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc" safe="">
      <documentation loc="14:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SPITestC" loc="5:SPITestC.nc">
      <module/>
    </component>
    <component qname="SPITestAppC.Timer0" loc="44(SPITestAppC.Timer0):/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab385533530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab385533888"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP" loc="30(AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP):/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ab3857bac68"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0SyncC" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0SyncP" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in SYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in SYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in SYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;--> CHANGED TO SYNC-Mode(CPL_CLK)&#9;hglanzer&#10;--> AS0=0 in ASSR&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab385533530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab385533888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab385533530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab385533888"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab385533530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab385533888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SPITestAppC.Resource0" loc="7(SPITestAppC.Resource0):/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterC.nc">
      <instance number="0">
        <component-ref qname="SoftSPIMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SoftSPIMasterP" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <configuration/>
    </component>
    <component qname="SoftSPIImplP" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIImplP.nc">
      <module/>
    </component>
    <component qname="SoftSPIMasterP.Arbiter" loc="89(SoftSPIMasterP.Arbiter):/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:SoftSPIMaster.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SoftSPIMasterP.Arbiter.Queue" loc="42(SoftSPIMasterP.Arbiter.Queue):/homes/mhartmann/baq/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SoftSPIMasterP.Arbiter.Arbiter" loc="52(SoftSPIMasterP.Arbiter.Arbiter):/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SoftSPIP" loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIP.nc">
      <documentation loc="4:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPI.h">
        <short>****************************************&#10; Check SoftSPIC.nc for correct PIN/PORT *&#10;*****************************************</short>
      </documentation>
      <module/>
    </component>
    <component qname="SPITestAppC.Resource1" loc="7(SPITestAppC.Resource1):/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterC.nc">
      <instance number="1">
        <component-ref qname="SoftSPIMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ab385611ba0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ab38561b020" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ab38561b368" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ab38561f610" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ab38561f978" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ab38561fce0" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2ab38561c060" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ab3856b3020" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ab3856b3388" loc="43:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ab3856b36f0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2ab3856b3a20" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncC" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc" abstract="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2ab3857bac68" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ab3857bac68"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2ab3857b7020" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
          <component-ref qname="Atm128AlarmSyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmSyncP" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2ab3857c3410" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ab3857c3410"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2ab3857c3700" loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
          <component-ref qname="Atm128AlarmSyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ab3857a1c68" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab3857a1c68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ab3858e0cd0" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab3858e0cd0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2ab3858dd020" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ab38592e510" loc="46:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab38592e510"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SoftSPIMasterC" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2ab38595bb48" loc="89:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/homes/mhartmann/baq/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2ab385978510" loc="42:/homes/mhartmann/baq/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2ab38597ca90" loc="52:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2ab3855ae620" loc="58:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2ab3855ae620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab3855ae970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ab3855af220" loc="57:/homes/mhartmann/baq/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ab3855af220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ab3855af570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ab3855ac380" loc="52:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2ab3855ac380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab3855ac6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab3855b1620" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab3855b1620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab3855b1970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2ab3855b4618" loc="50:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ab3855b4618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2ab3855b4968"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2ab3855b4af0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2ab3855b4c78"/>
        <function-ref name="actualMicro" scoped="" ref="0x2ab3855b4e00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2ab3855ac020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2ab3855c0ca0" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2ab3855c0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab3855bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab3855c0600" loc="44:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab3855c0600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab3855c0950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2ab3855bf398" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2ab3855bf398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab3855bf6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ab3855c6360" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2ab3855c6360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab3855c66b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2ab3855b9b98" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ab3855b9b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab3855c6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ab3855c2b08" loc="19:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2ab3855c2b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab3855c2e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2ab3855ca8d8" loc="18:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2ab3855ca8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855cac28"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855cadb0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855c2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855c21a8"/>
        <function-ref name="get" scoped="" ref="0x2ab3855c2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855c24b8"/>
        <function-ref name="set" scoped="" ref="0x2ab3855c2640"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855c27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2ab3855c3698" loc="17:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ab3855c3698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab3855c39e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2ab38560baf0" loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2ab38560baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab38560a5e8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab38560a770"/>
        <function-ref name="toggle" scoped="" ref="0x2ab38560a8f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab38560aa80"/>
        <function-ref name="get" scoped="" ref="0x2ab38560ac08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab38560ad90"/>
        <function-ref name="set" scoped="" ref="0x2ab385609020"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2ab3855ed658" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2ab3855ed658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855ed9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855edb30"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855edcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855ede40"/>
        <function-ref name="get" scoped="" ref="0x2ab3855ec020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855ec1a8"/>
        <function-ref name="set" scoped="" ref="0x2ab3855ec330"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855ec4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2ab3855fe658" loc="85:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2ab3855fe658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855fe9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855feb30"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855fecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855fee40"/>
        <function-ref name="get" scoped="" ref="0x2ab3855fd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855fd1a8"/>
        <function-ref name="set" scoped="" ref="0x2ab3855fd330"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855fd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2ab385603348" loc="94:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2ab385603348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385603698"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385603820"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856039a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385603b30"/>
        <function-ref name="get" scoped="" ref="0x2ab385603cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385603e40"/>
        <function-ref name="set" scoped="" ref="0x2ab385602020"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856021a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2ab3855d9348" loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2ab3855d9348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855d9698"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855d9820"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855d99a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855d9b30"/>
        <function-ref name="get" scoped="" ref="0x2ab3855d9cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855d9e40"/>
        <function-ref name="set" scoped="" ref="0x2ab3855d8020"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855d81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2ab385605020" loc="92:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2ab385605020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385605370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856054f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385605680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385605808"/>
        <function-ref name="get" scoped="" ref="0x2ab385605990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385605b18"/>
        <function-ref name="set" scoped="" ref="0x2ab385605ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab385605e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2ab3855d7658" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2ab3855d7658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855d79a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855d7b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855d7cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855d7e40"/>
        <function-ref name="get" scoped="" ref="0x2ab3855d6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855d61a8"/>
        <function-ref name="set" scoped="" ref="0x2ab3855d6330"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855d64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2ab3855e87e0" loc="66:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2ab3855e87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855e8b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855e8cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855e8e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855e7020"/>
        <function-ref name="get" scoped="" ref="0x2ab3855e71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855e7330"/>
        <function-ref name="set" scoped="" ref="0x2ab3855e74b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855e7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2ab3855f8af0" loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2ab3855f8af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855f8e40"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855f7020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855f71a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855f7330"/>
        <function-ref name="get" scoped="" ref="0x2ab3855f74b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855f7640"/>
        <function-ref name="set" scoped="" ref="0x2ab3855f77c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855f7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2ab3855fbaf0" loc="88:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2ab3855fbaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855fbe40"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855fa020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855fa1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855fa330"/>
        <function-ref name="get" scoped="" ref="0x2ab3855fa4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855fa640"/>
        <function-ref name="set" scoped="" ref="0x2ab3855fa7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855fa950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2ab3855d1af0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2ab3855d1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855d1e40"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855d0020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855d01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855d0330"/>
        <function-ref name="get" scoped="" ref="0x2ab3855d04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855d0640"/>
        <function-ref name="set" scoped="" ref="0x2ab3855d07c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855d0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2ab3855e2af0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2ab3855e2af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855e2e40"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855e1020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855e11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855e1330"/>
        <function-ref name="get" scoped="" ref="0x2ab3855e14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855e1640"/>
        <function-ref name="set" scoped="" ref="0x2ab3855e17c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855e1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2ab3855e5c78" loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2ab3855e5c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855e4020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855e41a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855e4330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855e44b8"/>
        <function-ref name="get" scoped="" ref="0x2ab3855e4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855e47c8"/>
        <function-ref name="set" scoped="" ref="0x2ab3855e4950"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855e4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2ab3855f4020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2ab3855f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855f4370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855f44f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855f4680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855f4808"/>
        <function-ref name="get" scoped="" ref="0x2ab3855f4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855f4b18"/>
        <function-ref name="set" scoped="" ref="0x2ab3855f4ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855f4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2ab3856007e0" loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2ab3856007e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385600b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385600cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385600e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab38560c020"/>
        <function-ref name="get" scoped="" ref="0x2ab38560c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab38560c330"/>
        <function-ref name="set" scoped="" ref="0x2ab38560c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab38560c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2ab3856077e0" loc="103:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2ab3856077e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385607b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385607cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385607e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385614020"/>
        <function-ref name="get" scoped="" ref="0x2ab3856141a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385614330"/>
        <function-ref name="set" scoped="" ref="0x2ab3856144b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385614640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2ab3855f2348" loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2ab3855f2348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855f2698"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855f2820"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855f29a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855f2b30"/>
        <function-ref name="get" scoped="" ref="0x2ab3855f2cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855f2e40"/>
        <function-ref name="set" scoped="" ref="0x2ab3855ff020"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855ff1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2ab3855db020" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2ab3855db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855db370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855db4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855db680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855db808"/>
        <function-ref name="get" scoped="" ref="0x2ab3855db990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855dbb18"/>
        <function-ref name="set" scoped="" ref="0x2ab3855dbca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855dbe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2ab3855de1a0" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2ab3855de1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855de4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855de678"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855de800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855de988"/>
        <function-ref name="get" scoped="" ref="0x2ab3855deb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855dec98"/>
        <function-ref name="set" scoped="" ref="0x2ab3855dee20"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2ab3856094d0" loc="101:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2ab3856094d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385609820"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856099a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385609b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385609cb8"/>
        <function-ref name="get" scoped="" ref="0x2ab385609e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385608020"/>
        <function-ref name="set" scoped="" ref="0x2ab3856081a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385608330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2ab3855ea4d0" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2ab3855ea4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855ea820"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855ea9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855eab30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855eacb8"/>
        <function-ref name="get" scoped="" ref="0x2ab3855eae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855e9020"/>
        <function-ref name="set" scoped="" ref="0x2ab3855e91a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855e9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2ab3855ec7e0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2ab3855ec7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855ecb30"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855eccb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855ece40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855eb020"/>
        <function-ref name="get" scoped="" ref="0x2ab3855eb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855eb330"/>
        <function-ref name="set" scoped="" ref="0x2ab3855eb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855eb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2ab3855fd7e0" loc="86:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2ab3855fd7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855fdb30"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855fdcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855fde40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855fc020"/>
        <function-ref name="get" scoped="" ref="0x2ab3855fc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855fc330"/>
        <function-ref name="set" scoped="" ref="0x2ab3855fc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855fc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2ab3856024d0" loc="95:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2ab3856024d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385602820"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856029a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385602b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385602cb8"/>
        <function-ref name="get" scoped="" ref="0x2ab385602e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385601020"/>
        <function-ref name="set" scoped="" ref="0x2ab3856011a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385601330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2ab3855d84d0" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2ab3855d84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855d8820"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855d89a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855d8b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855d8cb8"/>
        <function-ref name="get" scoped="" ref="0x2ab3855d8e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855d7020"/>
        <function-ref name="set" scoped="" ref="0x2ab3855d71a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855d7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2ab3855d67e0" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2ab3855d67e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855d6b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855d6cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855d6e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855e3020"/>
        <function-ref name="get" scoped="" ref="0x2ab3855e31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855e3330"/>
        <function-ref name="set" scoped="" ref="0x2ab3855e34b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855e3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2ab3855e7968" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2ab3855e7968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855e7cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855e7e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855e6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855e61a8"/>
        <function-ref name="get" scoped="" ref="0x2ab3855e6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855e64b8"/>
        <function-ref name="set" scoped="" ref="0x2ab3855e6640"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855e67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2ab3855f7c78" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2ab3855f7c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855f6020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855f61a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855f6330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855f64b8"/>
        <function-ref name="get" scoped="" ref="0x2ab3855f6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855f67c8"/>
        <function-ref name="set" scoped="" ref="0x2ab3855f6950"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855f6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2ab3855fac78" loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2ab3855fac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855f9020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855f91a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855f9330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855f94b8"/>
        <function-ref name="get" scoped="" ref="0x2ab3855f9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855f97c8"/>
        <function-ref name="set" scoped="" ref="0x2ab3855f9950"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855f9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2ab3855d0c78" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2ab3855d0c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855cf020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855cf1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855cf330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855cf4b8"/>
        <function-ref name="get" scoped="" ref="0x2ab3855cf640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855cf7c8"/>
        <function-ref name="set" scoped="" ref="0x2ab3855cf950"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855cfad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2ab3855e1c78" loc="59:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2ab3855e1c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855e00f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855e0278"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855e0400"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855e0588"/>
        <function-ref name="get" scoped="" ref="0x2ab3855e0710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855e0898"/>
        <function-ref name="set" scoped="" ref="0x2ab3855e0a20"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855e0ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2ab3855e4e00" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2ab3855e4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855f11a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855f1330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855f14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855f1640"/>
        <function-ref name="get" scoped="" ref="0x2ab3855f17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855f1950"/>
        <function-ref name="set" scoped="" ref="0x2ab3855f1ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855f1c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2ab38560c968" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2ab38560c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab38560ccb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab38560ce40"/>
        <function-ref name="toggle" scoped="" ref="0x2ab38560b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab38560b1a8"/>
        <function-ref name="get" scoped="" ref="0x2ab38560b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab38560b4b8"/>
        <function-ref name="set" scoped="" ref="0x2ab38560b640"/>
        <function-ref name="clr" scoped="" ref="0x2ab38560b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2ab3855ee1a0" loc="73:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2ab3855ee1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855ee6f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855ee878"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855eea00"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855eeb88"/>
        <function-ref name="get" scoped="" ref="0x2ab3855eed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855ed020"/>
        <function-ref name="set" scoped="" ref="0x2ab3855ed1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855ed330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2ab3855ff4d0" loc="84:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2ab3855ff4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855ff820"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855ff9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855ffb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855ffcb8"/>
        <function-ref name="get" scoped="" ref="0x2ab3855ffe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855fe020"/>
        <function-ref name="set" scoped="" ref="0x2ab3855fe1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855fe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2ab3856041a0" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2ab3856041a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856044f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385604678"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385604800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385604988"/>
        <function-ref name="get" scoped="" ref="0x2ab385604b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385604c98"/>
        <function-ref name="set" scoped="" ref="0x2ab385604e20"/>
        <function-ref name="clr" scoped="" ref="0x2ab385603020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2ab385614968" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2ab385614968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385614cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385614e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385613020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856131a8"/>
        <function-ref name="get" scoped="" ref="0x2ab385613330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856134b8"/>
        <function-ref name="set" scoped="" ref="0x2ab385613640"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856137c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2ab3855da1a0" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2ab3855da1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855da4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855da678"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855da800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855da988"/>
        <function-ref name="get" scoped="" ref="0x2ab3855dab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855dac98"/>
        <function-ref name="set" scoped="" ref="0x2ab3855dae20"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2ab3855dd348" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2ab3855dd348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855dd698"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855dd820"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855dd9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855ddb30"/>
        <function-ref name="get" scoped="" ref="0x2ab3855ddcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855dde40"/>
        <function-ref name="set" scoped="" ref="0x2ab3855ea020"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855ea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2ab3855f9e00" loc="91:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2ab3855f9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856061a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385606330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856064b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385606640"/>
        <function-ref name="get" scoped="" ref="0x2ab3856067c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385606950"/>
        <function-ref name="set" scoped="" ref="0x2ab385606ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385606c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2ab3855e9658" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2ab3855e9658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855e99a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855e9b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855e9cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855e9e40"/>
        <function-ref name="get" scoped="" ref="0x2ab3855e8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855e81a8"/>
        <function-ref name="set" scoped="" ref="0x2ab3855e8330"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855e84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2ab3855eb968" loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2ab3855eb968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855ebcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855ebe40"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855f8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855f81a8"/>
        <function-ref name="get" scoped="" ref="0x2ab3855f8330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855f84b8"/>
        <function-ref name="set" scoped="" ref="0x2ab3855f8640"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855f87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2ab3855fc968" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2ab3855fc968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855fccb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855fce40"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855fb020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855fb1a8"/>
        <function-ref name="get" scoped="" ref="0x2ab3855fb330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855fb4b8"/>
        <function-ref name="set" scoped="" ref="0x2ab3855fb640"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855fb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2ab385601658" loc="96:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2ab385601658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856019a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385601b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385601cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385601e40"/>
        <function-ref name="get" scoped="" ref="0x2ab385600020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856001a8"/>
        <function-ref name="set" scoped="" ref="0x2ab385600330"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856004b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2ab3855c4878" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2ab3855c4878"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855c4bc8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855c4d50"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855d1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855d11a8"/>
        <function-ref name="get" scoped="" ref="0x2ab3855d1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855d14b8"/>
        <function-ref name="set" scoped="" ref="0x2ab3855d1640"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855d17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2ab3855e3968" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2ab3855e3968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855e3cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855e3e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855e2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855e21a8"/>
        <function-ref name="get" scoped="" ref="0x2ab3855e2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855e24b8"/>
        <function-ref name="set" scoped="" ref="0x2ab3855e2640"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855e27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2ab3855e6af0" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2ab3855e6af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855e6e40"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855e5020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855e51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855e5330"/>
        <function-ref name="get" scoped="" ref="0x2ab3855e54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855e5640"/>
        <function-ref name="set" scoped="" ref="0x2ab3855e57c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855e5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2ab3855f6e00" loc="79:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2ab3855f6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855f51a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855f5330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855f54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855f5640"/>
        <function-ref name="get" scoped="" ref="0x2ab3855f57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855f5950"/>
        <function-ref name="set" scoped="" ref="0x2ab3855f5ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855f5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2ab385608658" loc="102:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2ab385608658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856089a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385608b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385608cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385608e40"/>
        <function-ref name="get" scoped="" ref="0x2ab385607020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856071a8"/>
        <function-ref name="set" scoped="" ref="0x2ab385607330"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856074b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2ab3855f31a0" loc="82:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2ab3855f31a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855f34f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855f3678"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855f3800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855f3988"/>
        <function-ref name="get" scoped="" ref="0x2ab3855f3b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855f3c98"/>
        <function-ref name="set" scoped="" ref="0x2ab3855f3e20"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2ab3855ef020" loc="71:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2ab3855ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855ef370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855ef4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855ef680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855ef808"/>
        <function-ref name="get" scoped="" ref="0x2ab3855ef990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855efb18"/>
        <function-ref name="set" scoped="" ref="0x2ab3855efca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855efe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2ab3855cfe00" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2ab3855cfe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855dc1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855dc330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855dc4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855dc640"/>
        <function-ref name="get" scoped="" ref="0x2ab3855dc7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855dc950"/>
        <function-ref name="set" scoped="" ref="0x2ab3855dcad8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855dcc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2ab3855df020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2ab3855df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3855df370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3855df4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3855df680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3855df808"/>
        <function-ref name="get" scoped="" ref="0x2ab3855df990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3855dfb18"/>
        <function-ref name="set" scoped="" ref="0x2ab3855dfca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab3855dfe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ab385656120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ab385656120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385656470"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856565f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385656780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385656908"/>
        <function-ref name="get" scoped="" ref="0x2ab385656a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385656c18"/>
        <function-ref name="set" scoped="" ref="0x2ab385656da0"/>
        <function-ref name="clr" scoped="" ref="0x2ab385655020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ab3856635b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ab3856635b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385663908"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385663a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385663c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385663da0"/>
        <function-ref name="get" scoped="" ref="0x2ab385662020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856621a8"/>
        <function-ref name="set" scoped="" ref="0x2ab385662330"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856624b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ab385659dc0" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ab385659dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385658170"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856582f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385658480"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385658608"/>
        <function-ref name="get" scoped="" ref="0x2ab385658790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385658918"/>
        <function-ref name="set" scoped="" ref="0x2ab385658aa0"/>
        <function-ref name="clr" scoped="" ref="0x2ab385658c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ab3856552a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ab3856552a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856555f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385655780"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385655908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385655a90"/>
        <function-ref name="get" scoped="" ref="0x2ab385655c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385655da0"/>
        <function-ref name="set" scoped="" ref="0x2ab385654020"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ab385662740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ab385662740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385662a90"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385662c18"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385662da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385661020"/>
        <function-ref name="get" scoped="" ref="0x2ab3856611a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385661330"/>
        <function-ref name="set" scoped="" ref="0x2ab3856614b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385661640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ab385657020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ab385657020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385657370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856574f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385657680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385657808"/>
        <function-ref name="get" scoped="" ref="0x2ab385657990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385657b18"/>
        <function-ref name="set" scoped="" ref="0x2ab385657ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab385657e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ab385654430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ab385654430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385654780"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385654908"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385654a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385654c18"/>
        <function-ref name="get" scoped="" ref="0x2ab385654da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385663020"/>
        <function-ref name="set" scoped="" ref="0x2ab3856631a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385663330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ab3856618c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ab3856618c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385661c18"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385661da0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385660020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856601a8"/>
        <function-ref name="get" scoped="" ref="0x2ab385660330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856604b8"/>
        <function-ref name="set" scoped="" ref="0x2ab385660640"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856607c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385a3f710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385a3f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385a3fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385a3fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385a3fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385a3e020"/>
        <function-ref name="get" scoped="" ref="0x2ab385a3e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385a3e330"/>
        <function-ref name="set" scoped="" ref="0x2ab385a3e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385a3e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385a3c710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385a3c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385a3ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385a3cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385a3cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385a3a020"/>
        <function-ref name="get" scoped="" ref="0x2ab385a3a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385a3a330"/>
        <function-ref name="set" scoped="" ref="0x2ab385a3a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385a3a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385a58710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385a58710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385a58a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385a58be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385a58d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385a57020"/>
        <function-ref name="get" scoped="" ref="0x2ab385a571a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385a57330"/>
        <function-ref name="set" scoped="" ref="0x2ab385a574b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385a57640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385a55710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385a55710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385a55a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385a55be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385a55d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385a54020"/>
        <function-ref name="get" scoped="" ref="0x2ab385a541a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385a54330"/>
        <function-ref name="set" scoped="" ref="0x2ab385a544b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385a54640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385a52710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385a52710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385a52a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385a52be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385a52d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385a51020"/>
        <function-ref name="get" scoped="" ref="0x2ab385a511a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385a51330"/>
        <function-ref name="set" scoped="" ref="0x2ab385a514b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385a51640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385a4f710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385a4f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385a4fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385a4fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385a4fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385a4e020"/>
        <function-ref name="get" scoped="" ref="0x2ab385a4e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385a4e330"/>
        <function-ref name="set" scoped="" ref="0x2ab385a4e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385a4e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385a4c710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385a4c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385a4ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385a4cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385a4cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385a4b020"/>
        <function-ref name="get" scoped="" ref="0x2ab385a4b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385a4b330"/>
        <function-ref name="set" scoped="" ref="0x2ab385a4b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385a4b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385a49710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385a49710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385a49a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385a49be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385a49d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385a68020"/>
        <function-ref name="get" scoped="" ref="0x2ab385a681a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385a68330"/>
        <function-ref name="set" scoped="" ref="0x2ab385a684b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385a68640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ab385668bd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ab385668bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385667020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856671a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385667330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856674b8"/>
        <function-ref name="get" scoped="" ref="0x2ab385667640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856677c8"/>
        <function-ref name="set" scoped="" ref="0x2ab385667950"/>
        <function-ref name="clr" scoped="" ref="0x2ab385667ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ab385664020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ab385664020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385664370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856644f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385664680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385664808"/>
        <function-ref name="get" scoped="" ref="0x2ab385664990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385664b18"/>
        <function-ref name="set" scoped="" ref="0x2ab385664ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab385664e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ab38566a930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ab38566a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab38566ac80"/>
        <function-ref name="isInput" scoped="" ref="0x2ab38566ae08"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385669020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856691a8"/>
        <function-ref name="get" scoped="" ref="0x2ab385669330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856694b8"/>
        <function-ref name="set" scoped="" ref="0x2ab385669640"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856697c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ab385667d60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ab385667d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856660d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385666260"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856663e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385666570"/>
        <function-ref name="get" scoped="" ref="0x2ab3856666f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385666880"/>
        <function-ref name="set" scoped="" ref="0x2ab385666a08"/>
        <function-ref name="clr" scoped="" ref="0x2ab385666b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ab385673120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ab385673120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385673470"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856735f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385673780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385673908"/>
        <function-ref name="get" scoped="" ref="0x2ab385673a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385673c18"/>
        <function-ref name="set" scoped="" ref="0x2ab385673da0"/>
        <function-ref name="clr" scoped="" ref="0x2ab385672020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ab385669a50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ab385669a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385669da0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385668020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856681a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385668330"/>
        <function-ref name="get" scoped="" ref="0x2ab3856684b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385668640"/>
        <function-ref name="set" scoped="" ref="0x2ab3856687c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385668950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ab385666e18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ab385666e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856651a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385665330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856654b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385665640"/>
        <function-ref name="get" scoped="" ref="0x2ab3856657c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385665950"/>
        <function-ref name="set" scoped="" ref="0x2ab385665ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385665c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ab3856722a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ab3856722a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856725f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385672780"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385672908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385672a90"/>
        <function-ref name="get" scoped="" ref="0x2ab385672c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385672da0"/>
        <function-ref name="set" scoped="" ref="0x2ab385671020"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856711a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385a996a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385a996a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385a999f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385a99b80"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385a99d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385aba020"/>
        <function-ref name="get" scoped="" ref="0x2ab385aba1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385aba330"/>
        <function-ref name="set" scoped="" ref="0x2ab385aba4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385aba640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385ab8710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385ab8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385ab8a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385ab8be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385ab8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385ab7020"/>
        <function-ref name="get" scoped="" ref="0x2ab385ab71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385ab7330"/>
        <function-ref name="set" scoped="" ref="0x2ab385ab74b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385ab7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385ab5710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385ab5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385ab5a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385ab5be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385ab5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385ab3020"/>
        <function-ref name="get" scoped="" ref="0x2ab385ab31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385ab3330"/>
        <function-ref name="set" scoped="" ref="0x2ab385ab34b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385ab3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385ab1710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385ab1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385ab1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385ab1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385ab1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385ab0020"/>
        <function-ref name="get" scoped="" ref="0x2ab385ab01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385ab0330"/>
        <function-ref name="set" scoped="" ref="0x2ab385ab04b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385ab0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385aae710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385aae710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385aaea60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385aaebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385aaed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385aad020"/>
        <function-ref name="get" scoped="" ref="0x2ab385aad1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385aad330"/>
        <function-ref name="set" scoped="" ref="0x2ab385aad4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385aad640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385aab710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385aab710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385aaba60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385aabbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385aabd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385aaa020"/>
        <function-ref name="get" scoped="" ref="0x2ab385aaa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385aaa330"/>
        <function-ref name="set" scoped="" ref="0x2ab385aaa4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385aaa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385aca710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385aca710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385acaa60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385acabe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385acad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385ac9020"/>
        <function-ref name="get" scoped="" ref="0x2ab385ac91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385ac9330"/>
        <function-ref name="set" scoped="" ref="0x2ab385ac94b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385ac9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385ac7710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385ac7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385ac7a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385ac7be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385ac7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385ac6020"/>
        <function-ref name="get" scoped="" ref="0x2ab385ac61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385ac6330"/>
        <function-ref name="set" scoped="" ref="0x2ab385ac64b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385ac6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ab385679740" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ab385679740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385679a90"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385679c18"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385679da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385678020"/>
        <function-ref name="get" scoped="" ref="0x2ab3856781a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385678330"/>
        <function-ref name="set" scoped="" ref="0x2ab3856784b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385678640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ab385676bd8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ab385676bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385674020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856741a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385674330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856744b8"/>
        <function-ref name="get" scoped="" ref="0x2ab385674640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856747c8"/>
        <function-ref name="set" scoped="" ref="0x2ab385674950"/>
        <function-ref name="clr" scoped="" ref="0x2ab385674ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ab38567b500" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ab38567b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab38567b850"/>
        <function-ref name="isInput" scoped="" ref="0x2ab38567b9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab38567bb60"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab38567bce8"/>
        <function-ref name="get" scoped="" ref="0x2ab38567be70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab38567a020"/>
        <function-ref name="set" scoped="" ref="0x2ab38567a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab38567a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ab3856788c8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ab3856788c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385678c18"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385678da0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385677020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856771a8"/>
        <function-ref name="get" scoped="" ref="0x2ab385677330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856774b8"/>
        <function-ref name="set" scoped="" ref="0x2ab385677640"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856777c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ab385674d60" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ab385674d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856830d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385683260"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856833e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385683570"/>
        <function-ref name="get" scoped="" ref="0x2ab3856836f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385683880"/>
        <function-ref name="set" scoped="" ref="0x2ab385683a08"/>
        <function-ref name="clr" scoped="" ref="0x2ab385683b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ab38567a5b8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ab38567a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab38567a908"/>
        <function-ref name="isInput" scoped="" ref="0x2ab38567aa90"/>
        <function-ref name="toggle" scoped="" ref="0x2ab38567ac18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab38567ada0"/>
        <function-ref name="get" scoped="" ref="0x2ab385679020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856791a8"/>
        <function-ref name="set" scoped="" ref="0x2ab385679330"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856794b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ab385677a50" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ab385677a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385677da0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385676020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856761a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385676330"/>
        <function-ref name="get" scoped="" ref="0x2ab3856764b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385676640"/>
        <function-ref name="set" scoped="" ref="0x2ab3856767c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385676950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ab385683e18" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ab385683e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856821a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385682330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856824b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385682640"/>
        <function-ref name="get" scoped="" ref="0x2ab3856827c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385682950"/>
        <function-ref name="set" scoped="" ref="0x2ab385682ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385682c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385b206a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385b206a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385b209f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385b20b80"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385b20d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385b1f020"/>
        <function-ref name="get" scoped="" ref="0x2ab385b1f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385b1f330"/>
        <function-ref name="set" scoped="" ref="0x2ab385b1f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385b1f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385b1d710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385b1d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385b1da60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385b1dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385b1dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385b1c020"/>
        <function-ref name="get" scoped="" ref="0x2ab385b1c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385b1c330"/>
        <function-ref name="set" scoped="" ref="0x2ab385b1c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385b1c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385b1a710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385b1a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385b1aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385b1abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385b1ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385b18020"/>
        <function-ref name="get" scoped="" ref="0x2ab385b181a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385b18330"/>
        <function-ref name="set" scoped="" ref="0x2ab385b184b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385b18640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385b16710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385b16710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385b16a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385b16be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385b16d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385b15020"/>
        <function-ref name="get" scoped="" ref="0x2ab385b151a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385b15330"/>
        <function-ref name="set" scoped="" ref="0x2ab385b154b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385b15640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385b13710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385b13710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385b13a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385b13be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385b13d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385b12020"/>
        <function-ref name="get" scoped="" ref="0x2ab385b121a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385b12330"/>
        <function-ref name="set" scoped="" ref="0x2ab385b124b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385b12640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385b10710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385b10710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385b10a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385b10be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385b10d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385b32020"/>
        <function-ref name="get" scoped="" ref="0x2ab385b321a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385b32330"/>
        <function-ref name="set" scoped="" ref="0x2ab385b324b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385b32640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385b30710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385b30710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385b30a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385b30be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385b30d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385b2f020"/>
        <function-ref name="get" scoped="" ref="0x2ab385b2f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385b2f330"/>
        <function-ref name="set" scoped="" ref="0x2ab385b2f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385b2f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385b2d710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385b2d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385b2da60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385b2dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385b2dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385b2c020"/>
        <function-ref name="get" scoped="" ref="0x2ab385b2c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385b2c330"/>
        <function-ref name="set" scoped="" ref="0x2ab385b2c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385b2c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ab38568a120" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ab38568a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab38568a470"/>
        <function-ref name="isInput" scoped="" ref="0x2ab38568a5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab38568a780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab38568a908"/>
        <function-ref name="get" scoped="" ref="0x2ab38568aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab38568ac18"/>
        <function-ref name="set" scoped="" ref="0x2ab38568ada0"/>
        <function-ref name="clr" scoped="" ref="0x2ab385688020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ab3856865b8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ab3856865b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385686908"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385686a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385686c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385686da0"/>
        <function-ref name="get" scoped="" ref="0x2ab385685020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856851a8"/>
        <function-ref name="set" scoped="" ref="0x2ab385685330"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856854b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ab38567de40" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ab38567de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab38567c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab38567c348"/>
        <function-ref name="toggle" scoped="" ref="0x2ab38567c4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab38567c658"/>
        <function-ref name="get" scoped="" ref="0x2ab38567c7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab38567c968"/>
        <function-ref name="set" scoped="" ref="0x2ab38567caf0"/>
        <function-ref name="clr" scoped="" ref="0x2ab38567cc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ab3856882a8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ab3856882a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856885f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385688780"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385688908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385688a90"/>
        <function-ref name="get" scoped="" ref="0x2ab385688c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385688da0"/>
        <function-ref name="set" scoped="" ref="0x2ab385687020"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856871a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ab385685740" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ab385685740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385685a90"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385685c18"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385685da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385684020"/>
        <function-ref name="get" scoped="" ref="0x2ab3856841a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385684330"/>
        <function-ref name="set" scoped="" ref="0x2ab3856844b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385684640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ab38568b020" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ab38568b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab38568b370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab38568b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab38568b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab38568b808"/>
        <function-ref name="get" scoped="" ref="0x2ab38568b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab38568bb18"/>
        <function-ref name="set" scoped="" ref="0x2ab38568bca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab38568be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ab385687430" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ab385687430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385687780"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385687908"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385687a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385687c18"/>
        <function-ref name="get" scoped="" ref="0x2ab385687da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385686020"/>
        <function-ref name="set" scoped="" ref="0x2ab3856861a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385686330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ab3856848c8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ab3856848c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385684c18"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385684da0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385693020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856931a8"/>
        <function-ref name="get" scoped="" ref="0x2ab385693330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856934b8"/>
        <function-ref name="set" scoped="" ref="0x2ab385693640"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856937c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385b6c6a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385b6c6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385b6c9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385b6cb80"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385b6cd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385b6b020"/>
        <function-ref name="get" scoped="" ref="0x2ab385b6b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385b6b330"/>
        <function-ref name="set" scoped="" ref="0x2ab385b6b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385b6b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385b69710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385b69710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385b69a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385b69be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385b69d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385b8c020"/>
        <function-ref name="get" scoped="" ref="0x2ab385b8c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385b8c330"/>
        <function-ref name="set" scoped="" ref="0x2ab385b8c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385b8c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385b8a710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385b8a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385b8aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385b8abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385b8ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385b89020"/>
        <function-ref name="get" scoped="" ref="0x2ab385b891a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385b89330"/>
        <function-ref name="set" scoped="" ref="0x2ab385b894b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385b89640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385b87710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385b87710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385b87a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385b87be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385b87d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385b85020"/>
        <function-ref name="get" scoped="" ref="0x2ab385b851a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385b85330"/>
        <function-ref name="set" scoped="" ref="0x2ab385b854b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385b85640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385b83710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385b83710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385b83a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385b83be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385b83d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385b82020"/>
        <function-ref name="get" scoped="" ref="0x2ab385b821a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385b82330"/>
        <function-ref name="set" scoped="" ref="0x2ab385b824b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385b82640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385b80710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385b80710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385b80a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385b80be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385b80d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385b7f020"/>
        <function-ref name="get" scoped="" ref="0x2ab385b7f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385b7f330"/>
        <function-ref name="set" scoped="" ref="0x2ab385b7f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385b7f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385b7d710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385b7d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385b7da60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385b7dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385b7dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385b7c020"/>
        <function-ref name="get" scoped="" ref="0x2ab385b7c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385b7c330"/>
        <function-ref name="set" scoped="" ref="0x2ab385b7c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385b7c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385b9e710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385b9e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385b9ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385b9ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385b9ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385b9d020"/>
        <function-ref name="get" scoped="" ref="0x2ab385b9d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385b9d330"/>
        <function-ref name="set" scoped="" ref="0x2ab385b9d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385b9d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ab38569bbd8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ab38569bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab38569a020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab38569a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab38569a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab38569a4b8"/>
        <function-ref name="get" scoped="" ref="0x2ab38569a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab38569a7c8"/>
        <function-ref name="set" scoped="" ref="0x2ab38569a950"/>
        <function-ref name="clr" scoped="" ref="0x2ab38569aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ab385697020" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ab385697020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385697370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856974f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385697680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385697808"/>
        <function-ref name="get" scoped="" ref="0x2ab385697990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385697b18"/>
        <function-ref name="set" scoped="" ref="0x2ab385697ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab385697e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ab38568d930" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ab38568d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab38568dc80"/>
        <function-ref name="isInput" scoped="" ref="0x2ab38568de08"/>
        <function-ref name="toggle" scoped="" ref="0x2ab38568c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab38568c1a8"/>
        <function-ref name="get" scoped="" ref="0x2ab38568c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab38568c4b8"/>
        <function-ref name="set" scoped="" ref="0x2ab38568c640"/>
        <function-ref name="clr" scoped="" ref="0x2ab38568c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ab38569ad60" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ab38569ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856990d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385699260"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856993e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385699570"/>
        <function-ref name="get" scoped="" ref="0x2ab3856996f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385699880"/>
        <function-ref name="set" scoped="" ref="0x2ab385699a08"/>
        <function-ref name="clr" scoped="" ref="0x2ab385699b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ab385696120" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ab385696120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385696470"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856965f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385696780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385696908"/>
        <function-ref name="get" scoped="" ref="0x2ab385696a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385696c18"/>
        <function-ref name="set" scoped="" ref="0x2ab385696da0"/>
        <function-ref name="clr" scoped="" ref="0x2ab385695020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ab38568ca50" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ab38568ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab38568cda0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab38569b020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab38569b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab38569b330"/>
        <function-ref name="get" scoped="" ref="0x2ab38569b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab38569b640"/>
        <function-ref name="set" scoped="" ref="0x2ab38569b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab38569b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ab385699e18" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ab385699e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856981a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385698330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856984b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385698640"/>
        <function-ref name="get" scoped="" ref="0x2ab3856987c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385698950"/>
        <function-ref name="set" scoped="" ref="0x2ab385698ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385698c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ab3856952a8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ab3856952a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856955f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385695780"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385695908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385695a90"/>
        <function-ref name="get" scoped="" ref="0x2ab385695c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385695da0"/>
        <function-ref name="set" scoped="" ref="0x2ab385694020"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385be46a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385be46a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385be49f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385be4b80"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385be4d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385be3020"/>
        <function-ref name="get" scoped="" ref="0x2ab385be31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385be3330"/>
        <function-ref name="set" scoped="" ref="0x2ab385be34b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385be3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385be1710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385be1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385be1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385be1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385be1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385be0020"/>
        <function-ref name="get" scoped="" ref="0x2ab385be01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385be0330"/>
        <function-ref name="set" scoped="" ref="0x2ab385be04b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385be0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385bde710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385bde710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385bdea60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385bdebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385bded70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385bdd020"/>
        <function-ref name="get" scoped="" ref="0x2ab385bdd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385bdd330"/>
        <function-ref name="set" scoped="" ref="0x2ab385bdd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385bdd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385bdb710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385bdb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385bdba60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385bdbbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385bdbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385bd9020"/>
        <function-ref name="get" scoped="" ref="0x2ab385bd91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385bd9330"/>
        <function-ref name="set" scoped="" ref="0x2ab385bd94b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385bd9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385bfd710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385bfd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385bfda60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385bfdbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385bfdd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385bfc020"/>
        <function-ref name="get" scoped="" ref="0x2ab385bfc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385bfc330"/>
        <function-ref name="set" scoped="" ref="0x2ab385bfc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385bfc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385bfa710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385bfa710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385bfaa60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385bfabe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385bfad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385bf9020"/>
        <function-ref name="get" scoped="" ref="0x2ab385bf91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385bf9330"/>
        <function-ref name="set" scoped="" ref="0x2ab385bf94b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385bf9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385bf7710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385bf7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385bf7a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385bf7be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385bf7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385bf6020"/>
        <function-ref name="get" scoped="" ref="0x2ab385bf61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385bf6330"/>
        <function-ref name="set" scoped="" ref="0x2ab385bf64b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385bf6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385bf4710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385bf4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385bf4a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385bf4be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385bf4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385bf3020"/>
        <function-ref name="get" scoped="" ref="0x2ab385bf31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385bf3330"/>
        <function-ref name="set" scoped="" ref="0x2ab385bf34b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385bf3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ab38569d430" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ab38569d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab38569d780"/>
        <function-ref name="isInput" scoped="" ref="0x2ab38569d908"/>
        <function-ref name="toggle" scoped="" ref="0x2ab38569da90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab38569dc18"/>
        <function-ref name="get" scoped="" ref="0x2ab38569dda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab38569c020"/>
        <function-ref name="set" scoped="" ref="0x2ab38569c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab38569c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ab3856ac8c8" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ab3856ac8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856acc18"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856acda0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856ab020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856ab1a8"/>
        <function-ref name="get" scoped="" ref="0x2ab3856ab330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856ab4b8"/>
        <function-ref name="set" scoped="" ref="0x2ab3856ab640"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856ab7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ab38569f1e8" loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ab38569f1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab38569f538"/>
        <function-ref name="isInput" scoped="" ref="0x2ab38569f6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab38569f848"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab38569f9d0"/>
        <function-ref name="get" scoped="" ref="0x2ab38569fb58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab38569fce0"/>
        <function-ref name="set" scoped="" ref="0x2ab38569fe68"/>
        <function-ref name="clr" scoped="" ref="0x2ab38569e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ab38569c5b8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ab38569c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab38569c908"/>
        <function-ref name="isInput" scoped="" ref="0x2ab38569ca90"/>
        <function-ref name="toggle" scoped="" ref="0x2ab38569cc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab38569cda0"/>
        <function-ref name="get" scoped="" ref="0x2ab3856ad020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856ad1a8"/>
        <function-ref name="set" scoped="" ref="0x2ab3856ad330"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856ad4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ab3856aba50" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ab3856aba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856abda0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856aa020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856aa1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856aa330"/>
        <function-ref name="get" scoped="" ref="0x2ab3856aa4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856aa640"/>
        <function-ref name="set" scoped="" ref="0x2ab3856aa7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856aa950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ab38569e2a8" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ab38569e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab38569e5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab38569e780"/>
        <function-ref name="toggle" scoped="" ref="0x2ab38569e908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab38569ea90"/>
        <function-ref name="get" scoped="" ref="0x2ab38569ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab38569eda0"/>
        <function-ref name="set" scoped="" ref="0x2ab38569d020"/>
        <function-ref name="clr" scoped="" ref="0x2ab38569d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ab3856ad740" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ab3856ad740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856ada90"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856adc18"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856adda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856ac020"/>
        <function-ref name="get" scoped="" ref="0x2ab3856ac1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856ac330"/>
        <function-ref name="set" scoped="" ref="0x2ab3856ac4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856ac640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ab3856aabd8" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ab3856aabd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856a8020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856a81a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856a8330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856a84b8"/>
        <function-ref name="get" scoped="" ref="0x2ab3856a8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856a87c8"/>
        <function-ref name="set" scoped="" ref="0x2ab3856a8950"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856a8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385c3e6a8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385c3e6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385c3e9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385c3eb80"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385c3ed08"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385c3d020"/>
        <function-ref name="get" scoped="" ref="0x2ab385c3d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385c3d330"/>
        <function-ref name="set" scoped="" ref="0x2ab385c3d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385c3d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385c3b710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385c3b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385c3ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385c3bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385c3bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385c3a020"/>
        <function-ref name="get" scoped="" ref="0x2ab385c3a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385c3a330"/>
        <function-ref name="set" scoped="" ref="0x2ab385c3a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385c3a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385c38710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385c38710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385c38a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385c38be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385c38d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385c5f020"/>
        <function-ref name="get" scoped="" ref="0x2ab385c5f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385c5f330"/>
        <function-ref name="set" scoped="" ref="0x2ab385c5f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385c5f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385c5d710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385c5d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385c5da60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385c5dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385c5dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385c5c020"/>
        <function-ref name="get" scoped="" ref="0x2ab385c5c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385c5c330"/>
        <function-ref name="set" scoped="" ref="0x2ab385c5c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385c5c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385c5a710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385c5a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385c5aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385c5abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385c5ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385c58020"/>
        <function-ref name="get" scoped="" ref="0x2ab385c581a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385c58330"/>
        <function-ref name="set" scoped="" ref="0x2ab385c584b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385c58640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385c56710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385c56710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385c56a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385c56be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385c56d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385c55020"/>
        <function-ref name="get" scoped="" ref="0x2ab385c551a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385c55330"/>
        <function-ref name="set" scoped="" ref="0x2ab385c554b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385c55640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385c53710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385c53710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385c53a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385c53be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385c53d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385c52020"/>
        <function-ref name="get" scoped="" ref="0x2ab385c521a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385c52330"/>
        <function-ref name="set" scoped="" ref="0x2ab385c524b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385c52640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385c50710" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385c50710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385c50a60"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385c50be8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385c50d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385c4f020"/>
        <function-ref name="get" scoped="" ref="0x2ab385c4f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385c4f330"/>
        <function-ref name="set" scoped="" ref="0x2ab385c4f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385c4f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab3856b4ac0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab3856b4ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856b4e10"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856c2020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856c21a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856c2330"/>
        <function-ref name="get" scoped="" ref="0x2ab3856c24b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856c2640"/>
        <function-ref name="set" scoped="" ref="0x2ab3856c27c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856c2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab3856d1db8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab3856d1db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856d0170"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856d02f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856d0480"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856d0608"/>
        <function-ref name="get" scoped="" ref="0x2ab3856d0790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856d0918"/>
        <function-ref name="set" scoped="" ref="0x2ab3856d0aa0"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856d0c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab3856cb3e0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab3856cb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856cb730"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856cb8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856cba40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856cbbc8"/>
        <function-ref name="get" scoped="" ref="0x2ab3856cbd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856ca020"/>
        <function-ref name="set" scoped="" ref="0x2ab3856ca1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856ca330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab3856d87e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab3856d87e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856d8b38"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856d8cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856d8e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856d7020"/>
        <function-ref name="get" scoped="" ref="0x2ab3856d71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856d7330"/>
        <function-ref name="set" scoped="" ref="0x2ab3856d74b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856d7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab3856d4c38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab3856d4c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856d3020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856d31a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856d3330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856d34b8"/>
        <function-ref name="get" scoped="" ref="0x2ab3856d3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856d37c8"/>
        <function-ref name="set" scoped="" ref="0x2ab3856d3950"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856d3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab3856e0020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab3856e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856e0370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856e04f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856e0680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856e0808"/>
        <function-ref name="get" scoped="" ref="0x2ab3856e0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856e0b18"/>
        <function-ref name="set" scoped="" ref="0x2ab3856e0ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856e0e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab3856db480" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab3856db480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856db7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856db958"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856dbae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856dbc68"/>
        <function-ref name="get" scoped="" ref="0x2ab3856dbdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856ec020"/>
        <function-ref name="set" scoped="" ref="0x2ab3856ec1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856ec330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab3856e97e8" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab3856e97e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856e9b38"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856e9cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856e9e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856e8020"/>
        <function-ref name="get" scoped="" ref="0x2ab3856e81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856e8330"/>
        <function-ref name="set" scoped="" ref="0x2ab3856e84b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856e8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab3856e4970" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab3856e4970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856e4cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856e4e48"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856f5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856f51a8"/>
        <function-ref name="get" scoped="" ref="0x2ab3856f5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856f54b8"/>
        <function-ref name="set" scoped="" ref="0x2ab3856f5640"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856f57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab3856f1ab0" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab3856f1ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856f1e00"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856f0020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856f01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856f0330"/>
        <function-ref name="get" scoped="" ref="0x2ab3856f04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856f0640"/>
        <function-ref name="set" scoped="" ref="0x2ab3856f07c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856f0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab3856edc38" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab3856edc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856fe020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856fe1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856fe330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856fe4b8"/>
        <function-ref name="get" scoped="" ref="0x2ab3856fe640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856fe7c8"/>
        <function-ref name="set" scoped="" ref="0x2ab3856fe950"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856fead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab3856f9020" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab3856f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3856f9370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3856f94f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3856f9680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3856f9808"/>
        <function-ref name="get" scoped="" ref="0x2ab3856f9990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3856f9b18"/>
        <function-ref name="set" scoped="" ref="0x2ab3856f9ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab3856f9e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab385706180" loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab385706180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3857064d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385706658"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3857067e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385706968"/>
        <function-ref name="get" scoped="" ref="0x2ab385706af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385706c78"/>
        <function-ref name="set" scoped="" ref="0x2ab385706e00"/>
        <function-ref name="clr" scoped="" ref="0x2ab385705020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab3857412c0" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab3857412c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2ab3854b2128"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2ab3854b2128"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab385741610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2ab3857418f0" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ab3857418f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2ab385741c40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2ab385741dc8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2ab385740020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2ab3857401a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2ab385740330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2ab38575e898" loc="60:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2ab38575e898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab38575ebe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ab38575f198" loc="57:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ab38575f198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ab38575f4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2ab38575e1d0" loc="59:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ab38575e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab38575e520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2ab38575f7d0" loc="58:/homes/mhartmann/baq/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ab38575f7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab38575fb20"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ab38575fca8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ab38575fe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ab3854ba1c8" loc="48:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2ab3854ba1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab3854ba518"/>
        <function-ref name="runTask" scoped="" ref="0x2ab3854ba6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ab3854b7600" loc="47:/homes/mhartmann/baq/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ab3854b7600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab3854b7950"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ab3854b7ad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ab3854b7c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ab38556d2b0" loc="56:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2ab38556d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab38556d600"/>
        <function-ref name="runTask" scoped="" ref="0x2ab38556d788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2ab385576758" loc="57:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2ab385576758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ab385576aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ab38556e448" loc="55:/homes/mhartmann/baq/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ab38556e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab38556e798"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ab38556e920"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ab38556eaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2ab3855932b0" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ab3855932b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ab385593600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2ab38558d660" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2ab38558d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ab38558d9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2ab385596a80" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2ab385596a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ab385596dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2ab38576fc08" loc="10:SPITestC.nc">
      <component-ref qname="SPITestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2ab38576fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab385533530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab385533888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab38576de78"/>
        <function-ref name="fired" scoped="" ref="0x2ab38576e5a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab38576d2d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab38576ee48"/>
        <function-ref name="getdt" scoped="" ref="0x2ab38576c748"/>
        <function-ref name="gett0" scoped="" ref="0x2ab38576c2f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab38576e9f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab3857647e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab38576d8a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab385764c88"/>
        <function-ref name="stop" scoped="" ref="0x2ab38576e158"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2ab3855b2a10" loc="6:SPITestC.nc">
      <component-ref qname="SPITestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ab3855b2a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ab3855b2d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button0" ref="0x2ab385767108" loc="8:SPITestC.nc">
      <component-ref qname="SPITestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button0" scoped="" ref="0x2ab385767108"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab385767458"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3857675e0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab385767768"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3857678f0"/>
        <function-ref name="get" scoped="" ref="0x2ab385767a78"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385767c00"/>
        <function-ref name="set" scoped="" ref="0x2ab385767d88"/>
        <function-ref name="clr" scoped="" ref="0x2ab385766020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource0" ref="0x2ab38577ae58" loc="12:SPITestC.nc">
      <component-ref qname="SPITestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource0" scoped="" ref="0x2ab38577ae58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab38576a1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab38576a370"/>
        <function-ref name="request" scoped="" ref="0x2ab38576a4f8"/>
        <function-ref name="granted" scoped="" ref="0x2ab38576a680"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab38576a808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftSPI0" ref="0x2ab385777458" loc="13:SPITestC.nc">
      <component-ref qname="SPITestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftSPI0" scoped="" ref="0x2ab385777458"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftSPI"/>
      </instance>
      <interface-functions>
        <function-ref name="receiveByte" scoped="" ref="0x2ab3857777a8"/>
        <function-ref name="sendByte" scoped="" ref="0x2ab385777930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Button1" ref="0x2ab385766390" loc="9:SPITestC.nc">
      <component-ref qname="SPITestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Button1" scoped="" ref="0x2ab385766390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3857666e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab385766868"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3857669f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab385766b78"/>
        <function-ref name="get" scoped="" ref="0x2ab385766d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab385765020"/>
        <function-ref name="set" scoped="" ref="0x2ab3857651a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab385765330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource1" ref="0x2ab385777cb0" loc="14:SPITestC.nc">
      <component-ref qname="SPITestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource1" scoped="" ref="0x2ab385777cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab38577d0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab38577d228"/>
        <function-ref name="request" scoped="" ref="0x2ab38577d3b0"/>
        <function-ref name="granted" scoped="" ref="0x2ab38577d538"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab38577d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftSPI1" ref="0x2ab38577da28" loc="15:SPITestC.nc">
      <component-ref qname="SPITestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftSPI1" scoped="" ref="0x2ab38577da28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftSPI"/>
      </instance>
      <interface-functions>
        <function-ref name="receiveByte" scoped="" ref="0x2ab38577dd78"/>
        <function-ref name="sendByte" scoped="" ref="0x2ab385779020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab385781420" loc="45:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="SPITestAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab385781420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab385533530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab385533888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab3859376c8"/>
        <function-ref name="fired" scoped="" ref="0x2ab38593adb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab385938ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab385938688"/>
        <function-ref name="getdt" scoped="" ref="0x2ab385936020"/>
        <function-ref name="gett0" scoped="" ref="0x2ab385937b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab385938238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab38593a020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab3859370f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab38593a4c0"/>
        <function-ref name="stop" scoped="" ref="0x2ab38593a960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2ab38578d7d8" loc="49:/homes/mhartmann/baq/tinyos/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2ab38578d7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab385533530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab385533888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab385789a18"/>
        <function-ref name="fired" scoped="" ref="0x2ab38578a158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab38578ae48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab38578a9f8"/>
        <function-ref name="getdt" scoped="" ref="0x2ab3857882e8"/>
        <function-ref name="gett0" scoped="" ref="0x2ab385789e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab38578a5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab38578c370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab385789448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab38578c810"/>
        <function-ref name="stop" scoped="" ref="0x2ab38578ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2ab385798de8" loc="46:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2ab385798de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab385533530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab385533888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab3857930c0"/>
        <function-ref name="fired" scoped="" ref="0x2ab385796798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab3857944d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab385794088"/>
        <function-ref name="getdt" scoped="" ref="0x2ab385793960"/>
        <function-ref name="gett0" scoped="" ref="0x2ab385793510"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab385796be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab3857979e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab385794aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab385797e80"/>
        <function-ref name="stop" scoped="" ref="0x2ab385796348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ab3857a3338" loc="47:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ab3857a3338"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab385533530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab385533888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab3857a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab3857980f0" loc="45:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab3857980f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab385798440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2ab3857bce40" loc="29:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2ab3857bce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab385533530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab385533888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab3857abbe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ab3857aa548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ab3857aa0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2ab3857aa9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab3857a4b90" loc="27:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab3857a4b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab3857a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2ab3857ae748" loc="28:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2ab3857ae748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab385533530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab385533888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab3857ac020"/>
        <function-ref name="fired" scoped="" ref="0x2ab3857ad020"/>
        <function-ref name="startAt" scoped="" ref="0x2ab3857ad930"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab3857ad4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ab3857ac4a8"/>
        <function-ref name="start" scoped="" ref="0x2ab38579f578"/>
        <function-ref name="stop" scoped="" ref="0x2ab38579fa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ab3858b0938" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ab3858b0938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab385533530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab385533888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab3858ad020"/>
        <function-ref name="fired" scoped="" ref="0x2ab3858ae088"/>
        <function-ref name="startAt" scoped="" ref="0x2ab3858ae998"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab3858ae510"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ab3858ad4a8"/>
        <function-ref name="start" scoped="" ref="0x2ab3858af6b0"/>
        <function-ref name="stop" scoped="" ref="0x2ab3858afb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab3858b0190" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab3858b0190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2ab3854b3d88"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2ab3854b3d88"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab3858b04e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ab3858ada90" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ab3858ada90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab385533530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab385533888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab3858ab828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ab3858aa190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ab3858abcb0"/>
        <function-ref name="overflow" scoped="" ref="0x2ab3858aa618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2ab385d24e70" loc="38:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ab385d24e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2ab385d221e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ab385d22370"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ab385d224f8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ab385d22680"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ab385d22808"/>
        <function-ref name="setControl" scoped="" ref="0x2ab385d22990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ab385d2fbe0" loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ab385d2fbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab385533530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab385533888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab385d2b270"/>
        <function-ref name="fired" scoped="" ref="0x2ab385d2d310"/>
        <function-ref name="startAt" scoped="" ref="0x2ab385d2dc20"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab385d2d798"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ab385d2b6f8"/>
        <function-ref name="start" scoped="" ref="0x2ab385d2e970"/>
        <function-ref name="stop" scoped="" ref="0x2ab385d2ee48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab385d2f438" loc="32:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab385d2f438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab385d2f788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ab385d2bce0" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ab385d2bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab385533530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab385533888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab385d2aac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ab385d294a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ab385d29020"/>
        <function-ref name="overflow" scoped="" ref="0x2ab385d29930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x2ab385d1fdb0" loc="40:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2ab385d1fdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2ab385d1e918"/>
        <function-ref name="controlBusy" scoped="" ref="0x2ab385d1e2f8"/>
        <function-ref name="compareBusy" scoped="" ref="0x2ab385d1e480"/>
        <function-ref name="countBusy" scoped="" ref="0x2ab385d1e608"/>
        <function-ref name="getAssr" scoped="" ref="0x2ab385d1e790"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2ab385d1e170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2ab385d22d20" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ab385d22d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ab385d1f510"/>
        <function-ref name="fired" scoped="" ref="0x2ab385d202b0"/>
        <function-ref name="get" scoped="" ref="0x2ab385d218f0"/>
        <function-ref name="reset" scoped="" ref="0x2ab385d20738"/>
        <function-ref name="isOn" scoped="" ref="0x2ab385d1f998"/>
        <function-ref name="set" scoped="" ref="0x2ab385d21d78"/>
        <function-ref name="start" scoped="" ref="0x2ab385d20bc0"/>
        <function-ref name="stop" scoped="" ref="0x2ab385d1f088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ab385d28020" loc="37:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmSyncC.Atm128AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab385d28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ab385d240f8"/>
        <function-ref name="test" scoped="" ref="0x2ab385d257a8"/>
        <function-ref name="get" scoped="" ref="0x2ab385d28ba0"/>
        <function-ref name="setScale" scoped="" ref="0x2ab385d24580"/>
        <function-ref name="getScale" scoped="" ref="0x2ab385d24a58"/>
        <function-ref name="reset" scoped="" ref="0x2ab385d269e8"/>
        <function-ref name="overflow" scoped="" ref="0x2ab385d26560"/>
        <function-ref name="isOn" scoped="" ref="0x2ab385d25c30"/>
        <function-ref name="set" scoped="" ref="0x2ab385d26088"/>
        <function-ref name="start" scoped="" ref="0x2ab385d26e70"/>
        <function-ref name="stop" scoped="" ref="0x2ab385d25320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ab38582e020" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ab38582e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2ab38582e370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ab38582e4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ab38582e680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ab38582e808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ab38582e990"/>
        <function-ref name="setControl" scoped="" ref="0x2ab38582eb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2ab385841218" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2ab385841218"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2ab385841d10"/>
        <function-ref name="controlBusy" scoped="" ref="0x2ab3858416f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2ab385841878"/>
        <function-ref name="countBusy" scoped="" ref="0x2ab385841a00"/>
        <function-ref name="getAssr" scoped="" ref="0x2ab385841b88"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2ab385841568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ab38582d020" loc="56:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ab38582d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ab3858427a8"/>
        <function-ref name="fired" scoped="" ref="0x2ab385843560"/>
        <function-ref name="get" scoped="" ref="0x2ab38582dba0"/>
        <function-ref name="reset" scoped="" ref="0x2ab3858439e8"/>
        <function-ref name="isOn" scoped="" ref="0x2ab385842c30"/>
        <function-ref name="set" scoped="" ref="0x2ab385843088"/>
        <function-ref name="start" scoped="" ref="0x2ab385843e70"/>
        <function-ref name="stop" scoped="" ref="0x2ab385842320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab385836e00" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncC.nc">
      <component-ref qname="HplAtm128Timer0SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab385836e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ab38582f0f8"/>
        <function-ref name="test" scoped="" ref="0x2ab385830798"/>
        <function-ref name="get" scoped="" ref="0x2ab385833a18"/>
        <function-ref name="setScale" scoped="" ref="0x2ab38582f580"/>
        <function-ref name="getScale" scoped="" ref="0x2ab38582fa58"/>
        <function-ref name="reset" scoped="" ref="0x2ab385832980"/>
        <function-ref name="overflow" scoped="" ref="0x2ab3858324f8"/>
        <function-ref name="isOn" scoped="" ref="0x2ab385830c20"/>
        <function-ref name="set" scoped="" ref="0x2ab385832020"/>
        <function-ref name="start" scoped="" ref="0x2ab385832e08"/>
        <function-ref name="stop" scoped="" ref="0x2ab385830310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ab385838160" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ab385838160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2ab3858384b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ab385838638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ab3858387c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ab385838948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ab385838ad0"/>
        <function-ref name="setControl" scoped="" ref="0x2ab385838c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2ab38584b268" loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ab38584b268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ab38584b5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x2ab38584b958" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x2ab38584b958"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setAssr" scoped="" ref="0x2ab38584a4b8"/>
        <function-ref name="controlBusy" scoped="" ref="0x2ab38584be30"/>
        <function-ref name="compareBusy" scoped="" ref="0x2ab38584a020"/>
        <function-ref name="countBusy" scoped="" ref="0x2ab38584a1a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2ab38584a330"/>
        <function-ref name="setTimer0Synchronous" scoped="" ref="0x2ab38584bca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ab38584e190" loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ab38584e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ab38584c930"/>
        <function-ref name="fired" scoped="" ref="0x2ab38584d6d0"/>
        <function-ref name="get" scoped="" ref="0x2ab38584ed10"/>
        <function-ref name="reset" scoped="" ref="0x2ab38584db58"/>
        <function-ref name="isOn" scoped="" ref="0x2ab38584cdb8"/>
        <function-ref name="set" scoped="" ref="0x2ab38584d1f8"/>
        <function-ref name="start" scoped="" ref="0x2ab38584c020"/>
        <function-ref name="stop" scoped="" ref="0x2ab38584c4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab38583d180" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer0SyncP.nc">
      <component-ref qname="HplAtm128Timer0SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab38583d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ab385839270"/>
        <function-ref name="test" scoped="" ref="0x2ab38583a930"/>
        <function-ref name="get" scoped="" ref="0x2ab38583dd00"/>
        <function-ref name="setScale" scoped="" ref="0x2ab3858396f8"/>
        <function-ref name="getScale" scoped="" ref="0x2ab385839bd0"/>
        <function-ref name="reset" scoped="" ref="0x2ab38583bb58"/>
        <function-ref name="overflow" scoped="" ref="0x2ab38583b6d0"/>
        <function-ref name="isOn" scoped="" ref="0x2ab38583adb8"/>
        <function-ref name="set" scoped="" ref="0x2ab38583b1f8"/>
        <function-ref name="start" scoped="" ref="0x2ab38583a020"/>
        <function-ref name="stop" scoped="" ref="0x2ab38583a4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2ab3858e2cf0" loc="74:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2ab3858e2cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab3858e10a0"/>
        <function-ref name="runTask" scoped="" ref="0x2ab3858e1228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2ab3858ccc70" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ab3858ccc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab385533530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab385533888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab3858e2410"/>
        <function-ref name="fired" scoped="" ref="0x2ab3858e44a8"/>
        <function-ref name="startAt" scoped="" ref="0x2ab3858e4db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab3858e4930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ab3858e2898"/>
        <function-ref name="start" scoped="" ref="0x2ab3858e59f0"/>
        <function-ref name="stop" scoped="" ref="0x2ab3858e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab3858d1ab0" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab3858d1ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab385533530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab385533888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab3858ced60"/>
        <function-ref name="fired" scoped="" ref="0x2ab3858cf470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab3858ce1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab3858cfd10"/>
        <function-ref name="getdt" scoped="" ref="0x2ab3858cc648"/>
        <function-ref name="gett0" scoped="" ref="0x2ab3858cc1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab3858cf8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab3858d0620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab3858ce790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab3858d0ac0"/>
        <function-ref name="stop" scoped="" ref="0x2ab3858cf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2ab385932478" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2ab385932478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab3859327c8"/>
        <function-ref name="runTask" scoped="" ref="0x2ab385932950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2ab38591b208" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2ab38591b208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab385533530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab385533888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab3859335f0"/>
        <function-ref name="fired" scoped="" ref="0x2ab38591ab28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab3859358c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab385935470"/>
        <function-ref name="getdt" scoped="" ref="0x2ab385932020"/>
        <function-ref name="gett0" scoped="" ref="0x2ab385933a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab385935020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab38591bd50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab385933020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab38591a238"/>
        <function-ref name="stop" scoped="" ref="0x2ab38591a6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab385921020" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab385921020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab385533530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab385533888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab38591d358"/>
        <function-ref name="fired" scoped="" ref="0x2ab3859209b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab38591e748"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab38591e2d8"/>
        <function-ref name="getdt" scoped="" ref="0x2ab38591dc38"/>
        <function-ref name="gett0" scoped="" ref="0x2ab38591d7c8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab385920e28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab385921b88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab38591ed38"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab385920088"/>
        <function-ref name="stop" scoped="" ref="0x2ab385920548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ab385930c38" loc="48:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ab385930c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab385533530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab385533888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab38592f820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ab38592fe48" loc="49:/homes/mhartmann/baq/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ab38592fe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab385533530"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab385533888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab385941be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ab385940548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ab3859400c0"/>
        <function-ref name="overflow" scoped="" ref="0x2ab3859409d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ab385a0a998" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterC.nc">
      <component-ref qname="SPITestAppC.Resource0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ab385a0a998"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ab385a0ace8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ab385a0ae70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ab385a09120" loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterC.nc">
      <component-ref qname="SPITestAppC.Resource0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ab385a09120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ab385a09470"/>
        <function-ref name="configure" scoped="" ref="0x2ab385a095f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftSPI" ref="0x2ab38594e618" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterC.nc">
      <component-ref qname="SPITestAppC.Resource0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftSPI" scoped="" ref="0x2ab38594e618"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftSPI"/>
      </instance>
      <interface-functions>
        <function-ref name="receiveByte" scoped="" ref="0x2ab38594e968"/>
        <function-ref name="sendByte" scoped="" ref="0x2ab38594eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab38594ed78" loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterC.nc">
      <component-ref qname="SPITestAppC.Resource0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab38594ed78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab385a0a0f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab385a0a278"/>
        <function-ref name="request" scoped="" ref="0x2ab385a0a400"/>
        <function-ref name="granted" scoped="" ref="0x2ab385a0a588"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab385a0a710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ab38595fce0" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <component-ref qname="SoftSPIMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ab38595fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ab38595d0a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ab38595d228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ab38595da50" loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <component-ref qname="SoftSPIMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ab38595da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ab38595dda0"/>
        <function-ref name="configure" scoped="" ref="0x2ab38595c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftSPI" ref="0x2ab38594adb8" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <component-ref qname="SoftSPIMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftSPI" scoped="" ref="0x2ab38594adb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftSPI"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receiveByte" scoped="" ref="0x2ab385944170"/>
        <function-ref name="sendByte" scoped="" ref="0x2ab3859442f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab385944ac8" loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterP.nc">
      <component-ref qname="SoftSPIMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab385944ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab385944e18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab38595f020"/>
        <function-ref name="request" scoped="" ref="0x2ab38595f1a8"/>
        <function-ref name="granted" scoped="" ref="0x2ab38595f330"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab38595f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftSPIMaster" ref="0x2ab385959050" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIImplP.nc">
      <component-ref qname="SoftSPIImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftSPIMaster" scoped="" ref="0x2ab385959050"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftSPI"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receiveByte" scoped="" ref="0x2ab3859593a0"/>
        <function-ref name="sendByte" scoped="" ref="0x2ab385959528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftSPI" ref="0x2ab3859597f8" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIImplP.nc">
      <component-ref qname="SoftSPIImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftSPI" scoped="" ref="0x2ab3859597f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftSPI"/>
      </instance>
      <interface-functions>
        <function-ref name="receiveByte" scoped="" ref="0x2ab385959b48"/>
        <function-ref name="sendByte" scoped="" ref="0x2ab385959cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ab385955798" loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIImplP.nc">
      <component-ref qname="SoftSPIImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ab385955798"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ab385955ae8"/>
        <function-ref name="userId" scoped="" ref="0x2ab385955c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ab3859d6398" loc="92:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ab3859d6398"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ab3859d6708"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ab3859d6890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ab3859d4020" loc="96:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ab3859d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ab3859d4390"/>
        <function-ref name="configure" scoped="" ref="0x2ab3859d4518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ab3859d6ad8" loc="93:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ab3859d6ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab3859d6e28"/>
        <function-ref name="requested" scoped="" ref="0x2ab3859d5020"/>
        <function-ref name="granted" scoped="" ref="0x2ab3859d51a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab3859d5330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ab3859d54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab3859d7670" loc="91:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab3859d7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab3859d79e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab3859d7b68"/>
        <function-ref name="request" scoped="" ref="0x2ab3859d7cf0"/>
        <function-ref name="granted" scoped="" ref="0x2ab3859d7e78"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab3859d6030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ab3859d5700" loc="94:/homes/mhartmann/baq/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ab3859d5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ab3859d5a50"/>
        <function-ref name="userId" scoped="" ref="0x2ab3859d5bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab385da19f0" loc="44:/homes/mhartmann/baq/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab385da19f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab385da1d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2ab385da0020" loc="45:/homes/mhartmann/baq/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2ab385da0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ab385da0370"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ab385da04f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ab385da0680"/>
        <function-ref name="dequeue" scoped="" ref="0x2ab385da0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ab385d9dd58" loc="55:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ab385d9dd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ab385d9c0f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ab385d9c278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ab385d9b980" loc="60:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ab385d9b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ab385d9bcf0"/>
        <function-ref name="configure" scoped="" ref="0x2ab385d9be78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ab385d9a130" loc="61:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2ab385d9a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ab385d9a480"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ab385d9a608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ab385d9a790"/>
        <function-ref name="dequeue" scoped="" ref="0x2ab385d9a918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2ab385d9c4c0" loc="56:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2ab385d9c4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab385d9c810"/>
        <function-ref name="requested" scoped="" ref="0x2ab385d9c998"/>
        <function-ref name="granted" scoped="" ref="0x2ab385d9cb20"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab385d9cca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ab385d9ce30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ab385d9ab60" loc="62:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ab385d9ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ab385d99020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ab385d991a8"/>
        <function-ref name="led1On" scoped="" ref="0x2ab385d99330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ab385d994b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ab385d99640"/>
        <function-ref name="get" scoped="" ref="0x2ab385d997c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ab385d99950"/>
        <function-ref name="setPort" scoped="" ref="0x2ab385d99ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2ab385d981a8"/>
        <function-ref name="set" scoped="" ref="0x2ab385d99de8"/>
        <function-ref name="led2On" scoped="" ref="0x2ab385d99c60"/>
        <function-ref name="led2Off" scoped="" ref="0x2ab385d98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab385d9d060" loc="54:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab385d9d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab385d9d3d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab385d9d558"/>
        <function-ref name="request" scoped="" ref="0x2ab385d9d6e0"/>
        <function-ref name="granted" scoped="" ref="0x2ab385d9d868"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab385d9d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ab385d9b0e0" loc="57:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ab385d9b0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ab385d9b430"/>
        <function-ref name="userId" scoped="" ref="0x2ab385d9b5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2ab385d98470" loc="75:/homes/mhartmann/baq/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="SoftSPIMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2ab385d98470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab385d987c0"/>
        <function-ref name="runTask" scoped="" ref="0x2ab385d98948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="spiMISO" ref="0x2ab3859ec020" loc="7:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIP.nc">
      <component-ref qname="SoftSPIP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="spiMISO" scoped="" ref="0x2ab3859ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3859ec370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3859ec4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3859ec680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3859ec808"/>
        <function-ref name="get" scoped="" ref="0x2ab3859ec990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3859ecb18"/>
        <function-ref name="set" scoped="" ref="0x2ab3859ecca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab3859ece28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="spiMOSI" ref="0x2ab3859eecc0" loc="6:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIP.nc">
      <component-ref qname="SoftSPIP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="spiMOSI" scoped="" ref="0x2ab3859eecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3859ed0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3859ed228"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3859ed3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3859ed538"/>
        <function-ref name="get" scoped="" ref="0x2ab3859ed6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3859ed848"/>
        <function-ref name="set" scoped="" ref="0x2ab3859ed9d0"/>
        <function-ref name="clr" scoped="" ref="0x2ab3859edb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftSPI" ref="0x2ab3859ea128" loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIP.nc">
      <component-ref qname="SoftSPIP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftSPI" scoped="" ref="0x2ab3859ea128"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftSPI"/>
      </instance>
      <interface-functions>
        <function-ref name="receiveByte" scoped="" ref="0x2ab3859ea478"/>
        <function-ref name="sendByte" scoped="" ref="0x2ab3859ea600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="spiSCK" ref="0x2ab3859f1ad0" loc="5:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIP.nc">
      <component-ref qname="SoftSPIP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="spiSCK" scoped="" ref="0x2ab3859f1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab3859f1e20"/>
        <function-ref name="isInput" scoped="" ref="0x2ab3859ee020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab3859ee1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab3859ee330"/>
        <function-ref name="get" scoped="" ref="0x2ab3859ee4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab3859ee640"/>
        <function-ref name="set" scoped="" ref="0x2ab3859ee7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab3859ee950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ab385a052a8" loc="10:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterC.nc">
      <component-ref qname="SPITestAppC.Resource1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ab385a052a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ab385a055f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ab385a05780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ab385a05a08" loc="11:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterC.nc">
      <component-ref qname="SPITestAppC.Resource1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ab385a05a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ab385a05d58"/>
        <function-ref name="configure" scoped="" ref="0x2ab385a04020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftSPI" ref="0x2ab385a08d80" loc="8:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterC.nc">
      <component-ref qname="SPITestAppC.Resource1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftSPI" scoped="" ref="0x2ab385a08d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftSPI"/>
      </instance>
      <interface-functions>
        <function-ref name="receiveByte" scoped="" ref="0x2ab385a07170"/>
        <function-ref name="sendByte" scoped="" ref="0x2ab385a072f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab385a07580" loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPIMasterC.nc">
      <component-ref qname="SPITestAppC.Resource1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab385a07580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab385a078d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab385a07a58"/>
        <function-ref name="request" scoped="" ref="0x2ab385a07be0"/>
        <function-ref name="granted" scoped="" ref="0x2ab385a07d68"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab385a05020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ab3855ae178" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab3854bdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2ab3855a6e08" loc="60:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2ab3855b4290" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab3852b5378"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2ab3855b4020" loc="60:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2ab3855b8940" loc="31:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="27:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab3852b5378"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2ab3855b7378" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ab3855b7108" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2ab3855b7e00" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ab3855b7b90" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2ab3855b6698" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2ab3855cb0d8" loc="44:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2ab3855cb7a0" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab3854b44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2ab3855cc328" loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2ab3855ca570" loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab3854b44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ab3855cc9c8" loc="43:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab3854b44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2ab3855cbe58" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ab3855ce5a8" loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2ab3855cec18" loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ab3854b93a0" loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2ab3854b7290" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2ab3854b9ab8" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab3854b44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2ab3854c3070" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab3854bdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2ab3854c3860" loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2ab385576450" loc="76:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2ab38558cd28" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2ab3855121a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2ab3855966d8" loc="52:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ab385765d18" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab385765d18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ab385770760" loc="136:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ab385760110" loc="83:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2ab385772d40" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ab3857727a8" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ab385772ac0" loc="114:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2ab385772070" loc="98:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab3854b44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2ab38576f6b0" loc="151:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2ab385770e80" loc="144:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ab385760888" loc="92:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab3854b44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2ab385762820" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ab3857625b0" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2ab385771d28" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ab385771790" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ab385771aa8" loc="129:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2ab385761290" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ab385761020" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ab385761a38" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2ab38577a020" loc="120:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab3854bdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2ab38577b020" loc="97:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab3854bdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2ab38577c700" loc="88:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab3854bdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2ab38577b7a8" loc="102:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2ab38577aa08" loc="128:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/homes/mhartmann/baq/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab3854b44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftSPI" loc="1:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPI.nc">
      <function command="" provided="0" name="receiveByte" ref="0x2ab385777108" loc="12:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPI.nc">
        <interfacedef-ref qname="SoftSPI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab3854bdae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ab385778e48" loc="12:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendByte" ref="0x2ab385778620" loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPI.nc">
        <documentation loc="3:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPI.nc">
          <short>******************************************&#10; values are read/written on rising edge   *&#10; see SoftSPI.h for pin/port configuration *&#10;*******************************************</short>
        </documentation>
        <interfacedef-ref qname="SoftSPI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab3854bdae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab3857783b0" loc="9:/homes/mhartmann/baq/tinyos/tos/platforms/bigAVR6/SoftSPI/SoftSPI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ab3857a6560" loc="53:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab3857a6560"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ab3857a6df0" loc="61:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab3852b5db0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ab3857a93f8" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab3857a93f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ab3857a9628" loc="57:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab3857a9628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ab3857a7020" loc="64:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab3857a9628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2ab3857bc070" loc="76:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2ab3857a7838" loc="71:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab3854b44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ab3857bc760" loc="82:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ab3857a0ac8" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab3857a0ac8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ab3857a0cf8" loc="56:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab3857a0cf8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ab3857af7a0" loc="109:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab3857a0cf8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ab3857b1770" loc="78:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2ab3857b0d70" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab3857a0cf8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab3857a0cf8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ab3857b07d0" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab3857a0cf8"/></type-var>
          </variable>
          <variable name="dt" ref="0x2ab3857b0af0" loc="103:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab3857a0cf8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ab3857b0020" loc="88:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab3854b44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2ab3857ae020" loc="116:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab3857a0cf8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ab38579d810" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab3857a0cf8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ab38579d5a0" loc="66:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab3857a0cf8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ab3857b1020" loc="73:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/homes/mhartmann/baq/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2ab3857d9a58" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab38553fa08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ab38553fe10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2ab3857d3e18" loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab38554c100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ab38554c508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2ab3857d5c70" loc="49:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab385543980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ab385543d88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2ab3857d3678" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab385543980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ab385543d88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2ab3857d3408" loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab385543980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ab385543d88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2ab3857e8828" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab38554c100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ab38554c508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2ab3857e85b8" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab38554c100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ab38554c508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2ab3857d54c8" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab38553fa08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ab38553fe10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ab3857d5258" loc="46:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab38553fa08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ab38553fe10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerSync" loc="22:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
      <documentation loc="11:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer0Synchronous" ref="0x2ab3857f1328" loc="39:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="36:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBusy" ref="0x2ab3857f1a30" loc="45:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2ab3857ef258" loc="51:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2ab3857efa08" loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2ab3857f2110" loc="28:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="24:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab385546118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2ab385546520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2ab3857f2ac0" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
        <documentation loc="30:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab385546118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2ab385546520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2ab3857f2850" loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab385546118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2ab385546520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2ab3857e6068" loc="41:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab3857e6068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2ab3857e2738" loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab3854b44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ab3857e59d0" loc="58:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ab3857e6920" loc="48:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="44:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab3857e6068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ab3857e3110" loc="62:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ab3857e1020" loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="76:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab3854b44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ab3857e5290" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="50:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab3857e6068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ab3857e5020" loc="54:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab3857e6068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ab3857e3808" loc="65:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="64:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ab3857e2020" loc="68:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
      <documentation loc="34:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2ab3857ce418" loc="55:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ab3857ce418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2ab3857c9900" loc="98:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="97:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2ab3857caa40" loc="87:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab3854b44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ab3857cecb8" loc="61:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="57:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ab3857ce418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2ab3857dd290" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="100:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2ab3857dd020" loc="104:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2ab3857dda10" loc="110:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="106:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ab3857cb4c0" loc="75:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ab3857ccd50" loc="70:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ab3857c91d8" loc="93:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="89:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab3854b44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ab3857cc630" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ab3857ce418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ab3857cc3c0" loc="67:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ab3857ce418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ab3857cbbb8" loc="78:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="77:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ab3857ca328" loc="81:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
        <documentation loc="80:/homes/mhartmann/baq/tinyos/tos/chips/atm128/timerSync/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2ab3859494e8" loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2ab385949db0" loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2ab385946600" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2ab38594bdb8" loc="59:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2ab385958bf8" loc="90:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab3854b44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2ab385955420" loc="98:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/homes/mhartmann/baq/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2ab385963110" loc="56:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab3854bdae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2ab385962110" loc="73:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2ab3859668c0" loc="46:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2ab385963910" loc="65:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab3854b44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2ab3859629d8" loc="81:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2ab385972c80" loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab3854bdae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ab385978020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ab385972a10" loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ab385978020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2ab385977e18" loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab3854b44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2ab3859748f0" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab3854b44c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ab385978020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ab385974680" loc="62:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ab385978020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2ab3859721d8" loc="70:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/homes/mhartmann/baq/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2ab385978020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
      <documentation loc="33:/homes/mhartmann/baq/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2ab38598a970" loc="61:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="58:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2ab3859a60d8" loc="67:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="63:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2ab3859a6848" loc="72:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="69:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2ab3859a4758" loc="83:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="79:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2ab3859a3e70" loc="100:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="96:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ab3859a2630" loc="117:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="103:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2ab3859a4020" loc="77:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="74:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ab3859a1290" loc="134:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="120:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2ab3859a1020" loc="134:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPort" ref="0x2ab38599f118" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2ab3859a1b30" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </variable>
          <variable name="pval" ref="0x2ab3859a1e50" loc="137:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab3852b3910"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2ab38598a258" loc="56:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="53:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2ab3859a3020" loc="89:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="86:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2ab3859a3738" loc="94:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
        <documentation loc="91:/homes/mhartmann/baq/tinyos/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
